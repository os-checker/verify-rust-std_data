[
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/line.rs",
    "func": "line::LazyLines::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::checksum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::from_checksum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::AArch64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::Arm as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::LoongArch as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::MIPS as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::PowerPc64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::RiscV as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86_64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::AArch64::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::Arm::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::LoongArch::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::MIPS::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::PowerPc64::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::RiscV::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86_64::register_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::initial_length_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::word_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::dwo_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::is_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::xcoff_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAccess::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAddr::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAt::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAte::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCc::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCfa::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwChildren::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDefaulted::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDs::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDsc::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::application",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::format",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_absent",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_indirect",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_valid_encoding",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEnd::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwForm::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwId::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwIdx::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwInl::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::default_lower_bound",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLle::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLnct::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLne::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLns::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacinfo::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacro::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOp::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOrd::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwRle::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSect::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSectV2::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwTag::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwUt::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVirtuality::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVis::static_string",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as endianity::Endianity>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as endianity::Endianity>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as endianity::Endianity>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_byte",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Abbreviations::empty",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AbbreviationsCache::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::form",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::implicit_const_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Attributes::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::get_attribute_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::length",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::range",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame_hdr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_got",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_text",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::direct",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::pointer",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::dwo_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::section_id",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::apply_line_advance",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::basic_block",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::column",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::discriminator",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::end_sequence",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::epilogue_begin",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::file_index",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::is_stmt",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::isa",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::line",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::op_index",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::prologue_end",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size_for_encoding",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::<impl common::Register>::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::description",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_i16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::into_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::add_sized",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::ones_sized",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::wrapping_add_sized",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_i16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::into_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_i16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::into_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::Range::add_base_address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_base_address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_end",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/unit.rs",
    "func": "read::unit::allow_section_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/util.rs",
    "func": "<read::util::sealed::CapacityFull as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::add",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::and",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::convert",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::div",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f32",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ge",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::gt",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::le",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::lt",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::mul",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ne",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::neg",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::not",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::or",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::reinterpret",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::rem",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shift_length",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shl",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shra",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::to_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::value_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::xor",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::bit_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::from_encoding",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::mask_bit_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::sign_extend",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::iter::IntoIterator>::into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::iter::Iterator>::next",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::any_bit_set",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::invert",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::lowest_set_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::nonzero_trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::remove_lowest_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "<control::group::sse2::Group as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty_or_deleted",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_full",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_tag",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::static_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::full",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_full",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_special",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::special_is_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/map.rs",
    "func": "map::assert_covariance",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::Fallibility as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::ProbeSeq as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::TableLayout as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::alloc_err",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::capacity_overflow",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::ProbeSeq::move_next",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::RawTableInner::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::TableLayout::calculate_layout_for",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::bucket_mask_to_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::capacity_to_buckets",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::h1",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/set.rs",
    "func": "set::assert_covariance",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_j1939 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::__c_anonymous_sockaddr_can_tp as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::can_filter as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::can_frame as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::canfd_frame as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::canxl_frame as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<new::linux_uapi::linux::can::j1939::j1939_filter as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::in6_addr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::ipv6_mreq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::itimerval as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linger as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arphdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arpreq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::arpreq_old as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::epoll_event as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::fd_set as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::file_clone_range as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in6_rtmsg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in_addr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::in_pktinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq_source as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::ip_mreqn as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Ehdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Phdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Shdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Sym as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Ehdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Phdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Shdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Sym as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous__kernel_fsid_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rel as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rela as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rel as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rela as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_ifru_map as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::af_alg_iv as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::arch::generic::termios2 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::arpd_request as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::cpu_set_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_cmsg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_token as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::dqblk as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::epoll_params as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_fid as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_header as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_metadata as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_response as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fanout_args as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_condition_effect as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_constant_effect as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_effect as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_envelope as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_ramp_effect as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_replay as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_rumble_effect as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_trigger as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::fsid_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::genlmsghdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf32_Chdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf64_Chdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__exit_status as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__timeval as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::msqid_ds as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::semid_ds as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sigset_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sysinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::timex as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::clone_args as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ipc_perm as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::max_align_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::shmid_ds as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::siginfo_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statvfs64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::cmsghdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_error as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_pidfd as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos64_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::iocb as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo2 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mbstate_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_hdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_req as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_pktinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ntptimeval as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_peeksiginfo_args as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_sud_config as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::sem_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::seminfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::tcp_info as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::termios as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::timespec as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::utmpx as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::hwtstamp_config as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_ifreq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_pktinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::inotify_event as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_absinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_event as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_id as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_keymap_entry as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::input_mask as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::itimerspec as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_discarded as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_encode_ext as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_freq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_michaelmicfailure as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_missed as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_mlme as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_param as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmkid_cand as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmksa as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_priv_args as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_quality as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_statistics as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_thrspy as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mnt_ns_info as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mount_attr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::mq_attr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::msginfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlattr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsgerr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsghdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::open_how as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::packet_mreq as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pidfd_info as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::posix_spawnattr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrier_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrierattr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_cond_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_condattr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutex_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutexattr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlock_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlockattr_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_caps as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_time as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_event as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_request as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_pin_desc as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_sys_offset_precise as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::regmatch_t as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::rlimit64 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sched_attr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_authinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_initmsg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_nxtinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_prinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_rcvinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndrcvinfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_data as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_addfd as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_resp as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_sizes as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sembuf as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::signalfd_siginfo as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_extended_err as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_txtime as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_alg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_nl as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_pkt as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_vm as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_xdp as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_ccm_128 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_128 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_128 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_chacha20_poly1305 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_ccm as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_gcm as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tls_crypto_info as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket2_hdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket3_hdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_auxdata as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_bd_ts as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_v1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_variant1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req3 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_rollover_stats as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats_v3 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_versions as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::ucred as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_abs_setup as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_erase as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_upload as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_setup as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_user_dev as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_desc as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets_v1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_options as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset_v1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics_v1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg_v1 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_completion as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_request as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sched_param as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sock_filter as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in6 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_ll as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_storage as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_un as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::statx as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::statx_timestamp as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::linux_like::utsname as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::pollfd as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::rlimit as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::rusage as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::timeval as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::tms as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::utimbuf as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "<unix::winsize as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::htonl",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::htons",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_ALIGN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_LEN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::CMSG_SPACE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_CLASS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_COPIED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPOPT_NUMBER",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::IPTOS_ECN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::KERNEL_VERSION",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::QCMD",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::SIGRTMAX",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::SIGRTMIN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WCOREDUMP",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WEXITSTATUS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFCONTINUED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFEXITED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFSIGNALED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WIFSTOPPED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WSTOPSIG",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::WTERMSIG",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::W_EXITCODE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::W_STOPCODE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_CLASS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_JUMP",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MISCOP",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MODE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_OP",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_RVAL",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SIZE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SRC",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_STMT",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ALLOC_SIZE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_CLR",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT_S",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_EQUAL",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ISSET",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_SET",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ZERO",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_INFO",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_SYM",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_TYPE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_INFO",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_SYM",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_TYPE",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_PREC",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_TOS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::NLA_ALIGN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_ADDRCLASS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_LOCALADDR",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::RT_TOS",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_INDEX",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_POLICY",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_RTX_ENABLED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_SET_POLICY",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_TTL_ENABLED",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::TPACKET_ALIGN",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::major",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::makedev",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::linux_like::linux::minor",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::ntohl",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/macros.rs",
    "func": "unix::ntohs",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "<unix::linux_like::linux::gnu::sifields_sigchld as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_pid",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_status",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_stime",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_uid",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_utime",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::FUTEX_OP",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::issecure_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IO",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.175/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IOC",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::One as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::confirm",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::has_needle",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::confirm",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::has_needle",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::confirm",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::has_needle",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::has_zero_byte",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::DefaultFrequencyRank as arch::all::packedpair::HeuristicFrequencyRank>::rank",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Pair as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Finder::pair",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index1",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index2",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Finder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::FinderRev as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::add",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::del",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::roll",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::ApproximateByteSet as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Finder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::FinderRev as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Shift as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixOrdering as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::TwoWay as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::ApproximateByteSet::contains",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::SuffixKind::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "<arch::x86_64::avx2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::min_haystack_len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::pair",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "<arch::x86_64::sse2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::min_haystack_len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::pair",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::prefilter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterState as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRev as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRevKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterConfig::is_none",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_effective",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_inert",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::skips",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::update",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::and",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::clear_least_significant_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::count_ones",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::first_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::has_non_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::last_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::or",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::SensibleMoveMask::get_for_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::and",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::cmpeq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::movemask",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::or",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::and",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::cmpeq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::movemask",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::or",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::DecompressorOxide::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::fast_lookup",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::lookup",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::tree_lookup",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::State::begin",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::end_of_input",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::num_extra_bits_for_distance_code",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::reverse_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::undo_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::validate_zlib_header",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "inflate::TINFLStatus::from_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "MZFlush::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixFileHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::AixMemberOffset as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/archive.rs",
    "func": "<archive::Header as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::AddressSize::bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::Architecture::address_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::BinaryFormat::native_object",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/common.rs",
    "func": "common::SectionKind::is_bss",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "<elf::Ident as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "elf::ef_e2k_flag_to_mach",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/elf.rs",
    "func": "elf::ef_e2k_mach_to_flag",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::from_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::from_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::from_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::is_big_endian",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer3 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer5 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatArch32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatArch64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::FatHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::RelocationInfo as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "<macho::ScatteredRelocationInfo as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::addr_div",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::diversity",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::high8",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::is_auth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::key",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::next",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::runtime_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::target",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::addr_div",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::diversity",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::high8",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::is_auth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::key_is_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::next",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::runtime_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel_family",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/macho.rs",
    "func": "macho::cpu_subtype_intel_model",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeaderBigobj as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::AnonObjectHeaderV2 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAlpha64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAlphaRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArchitectureEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArchiveMemberHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArm64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageArmRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolCrc as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunction as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunctionBeginEnd as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolSection as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolTokenDef as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageAuxSymbolWeak as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBaseRelocation as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBoundForwarderRef as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageBoundImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageCoffSymbolsHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageCor20Header as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDataDirectory as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDebugDirectory as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDebugMisc as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDelayloadDescriptor as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32V2 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64V2 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageDynamicRelocationTable as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEnclaveImport as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageEpilogueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageExportDirectory as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFileHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageFunctionEntry64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchBase as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchHashes as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageHotPatchInfo as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageImportByName as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLinenumber as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigCodeIntegrity as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageNtHeaders32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageNtHeaders64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOptionalHeader32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOptionalHeader64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageOs2Header as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImagePrologueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageRelocation as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDataEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirStringU as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectory as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryString as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbol as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolBytes as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolEx as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageSymbolExBytes as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageThunkData32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageThunkData64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageTlsDirectory32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageTlsDirectory64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImageVxdHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::ImportObjectHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::MaskedRichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "<pe::NonPagedDebugInfo as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data1",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data2",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data3",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::Guid::data4",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::ImageDelayloadDescriptor::is_null",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/pe.rs",
    "func": "pe::ImageImportDescriptor::is_null",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/archive.rs",
    "func": "<read::archive::ArchiveOffset as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::characteristics",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::machine",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_sections",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_symbols",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::pointer_to_symbol_table",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::characteristics",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::machine",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_sections",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_symbols",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::pointer_to_symbol_table",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::import_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::name_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/relocation.rs",
    "func": "read::coff::relocation::<impl pe::ImageRelocation>::symbol",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_alignment",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_file_range",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::kind",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::name_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::raw_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::number_of_aux_symbols",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::raw_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::section_number",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::storage_class",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::typ",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::number_of_aux_symbols",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::raw_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::section_number",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::storage_class",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::typ",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/coff/symbol.rs",
    "func": "read::coff::symbol::<impl pe::ImageAuxSymbolWeak>::default_symbol",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::Crel as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorHeader as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/relocation.rs",
    "func": "read::elf::relocation::Crel::symbol",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::index",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_global",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_hidden",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_local",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::align",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cpusubtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cputype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::align",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cpusubtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cputype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::CompressedFileRange::none",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::addend",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::encoding",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::has_implicit_addend",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::kind",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::set_addend",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::Relocation::target",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/mod.rs",
    "func": "read::SymbolSection::index",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/data_directory.rs",
    "func": "read::pe::data_directory::<impl pe::ImageDataDirectory>::address_range",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::file_header",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_type_64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::optional_header",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::signature",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::file_header",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_type_64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::optional_header",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::signature",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::address_of_entry_point",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_code",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::check_sum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::dll_characteristics",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::file_alignment",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::image_base",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::loader_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_image_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_linker_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_operating_system_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_subsystem_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_image_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_linker_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::section_alignment",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_code",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_headers",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_image",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::subsystem",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::win32_version_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::address_of_entry_point",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_code",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::check_sum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::dll_characteristics",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::file_alignment",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::image_base",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::loader_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_image_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_linker_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_operating_system_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_subsystem_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_image_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_linker_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::section_alignment",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_code",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_headers",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_image",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::subsystem",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::win32_version_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::is_ordinal",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::ordinal",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::raw",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::address",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::is_ordinal",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::ordinal",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::raw",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "<read::pe::resource::ResourceName as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::data_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::has_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::id",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::is_table",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name_or_id",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::id",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/rich.rs",
    "func": "<read::pe::rich::RichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::contains_rva",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_address_range",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range_at",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/traits.rs",
    "func": "<read::traits::NoDynamicRelocationIterator as rustc_std_workspace_core::iter::Iterator>::next",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/util.rs",
    "func": "read::util::align",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algndata",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algntext",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_bsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cpuflag",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cputype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_data_start",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_datapsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_debugger",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_dsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_entry",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxdata",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxstack",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_mflag",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_modtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snbss",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sndata",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snentry",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snloader",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntbss",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntdata",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntext",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntoc",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_stackpsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_text_start",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_textpsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_toc",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_tsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_vstamp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_x64flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nscns",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nsyms",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_opthdr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_symptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_timdat",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::is_type_64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_magic",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nscns",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nsyms",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_opthdr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_symptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_timdat",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::is_type_64",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_symndx",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_vaddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rsize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_symndx",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_vaddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_lnnoptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nlnno",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nreloc",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_paddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_relptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_scnptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_vaddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_lnnoptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_name",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nlnno",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nreloc",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_paddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_relptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_scnptr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_size",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_vaddr",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_auxtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_parmhash",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_scnlen",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smclas",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smtyp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snhash",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snstab",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_stab",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_auxtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_parmhash",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_scnlen",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smclas",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smtyp",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snhash",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snstab",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_stab",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_auxtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_fname",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_ftype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_auxtype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_fname",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_ftype",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_numaux",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_sclass",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_scnum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::name_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_numaux",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_sclass",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_scnum",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_value",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::name_offset",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::AuxHeader32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::BlockAux32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::BlockAux64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::CsectAux32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::CsectAux64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::DwarfAux32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::DwarfAux64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::ExpAux as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileAux32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileAux64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileHeader32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FileHeader64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FunAux32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::FunAux64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Rel32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Rel64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SectionHeader32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SectionHeader64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::StatAux as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Symbol32 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::Symbol64 as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.3/src/xcoff.rs",
    "func": "<xcoff::SymbolBytes as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<SizeLimitExhausted as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<TryDemangleError as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_alphanumeric",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_punctuation",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::ParseError::message",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::basic_type",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<char>>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<u8>>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<char>>::try_from",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<u8>>::try_from",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as CheckRaw>::char2raw_unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::char2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::hex2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::nonzero_byte2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::unicode2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as CheckRaw>::char2raw_unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::char2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::hex2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::nonzero_byte2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::unicode2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as CheckRaw>::char2raw_unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::char2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::hex2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::nonzero_byte2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::unicode2unit",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "EscapeError::is_fatal",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::in_double_quotes",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::prefix_noraw",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "char2byte",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "simple_escape",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i128> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i16> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i32> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i64> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<i8> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<isize> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u128> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u16> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u32> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u64> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<u8> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIntoIter>::kani_into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::assumption",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::first",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::len",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/iter.rs",
    "func": "<ops::range::Range<usize> as kani::KaniIter>::nth",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/mem_init.rs",
    "func": "kani::mem_init::MemoryInitializationState::new",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<isize as kani::rustc_intrinsics::ToISize>::to_isize",
    "proof_kind": "Auto"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<usize as kani::rustc_intrinsics::ToISize>::to_isize",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/backtrace/libunwind.rs",
    "func": "<backtrace_rs::backtrace::libunwind::Bomb as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::Cache::new",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::clear_symbol_cache",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli/elf.rs",
    "func": "backtrace_rs::symbolize::gimli::elf::debug_path_exists",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "func": "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli/mmap_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::mmap::Mmap::map",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps",
    "proof_kind": "Auto"
  },
  {
    "file": "backtrace/src/symbolize/gimli/stash.rs",
    "func": "backtrace_rs::symbolize::gimli::stash::Stash::new",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "<float::cmp::Result as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_ge_abi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_le_abi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f128_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f32_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f64_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f128_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f32_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f64_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f128_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f32_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f64_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_parts",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::imp_frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_subnormal",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits_signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_parts",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::imp_frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_subnormal",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits_signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_parts",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::imp_frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_subnormal",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits_signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_parts",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::imp_frac",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_subnormal",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits_signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Not>::not",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Shl<u32>>::shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Not>::not",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shl<u32>>::shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shr<u32>>::shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::i256::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::u256::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i128_overflowing_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i32_overflowing_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i64_overflowing_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
    "func": "int::specialized_div_rem::u128_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u32_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u64_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
    "func": "int::specialized_div_rem::delegate::u128_divide_sparc",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u128_by_u64_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u32_by_u32_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u64_by_u64_div_rem",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::zero_div_fn",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u32_normalization_shift",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u64_normalization_shift",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3::__adddf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addhf3::__addhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3::__addsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3::__addtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2::__eqdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqhf2::__eqhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2::__eqsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2::__eqtf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2::__gedf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gehf2::__gehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2::__gesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2::__getf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2::__gtdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gthf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gthf2::__gthf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2::__gtsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2::__gttf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2::__ledf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lehf2::__lehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2::__lesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2::__letf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2::__ltdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lthf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lthf2::__lthf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2::__ltsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2::__lttf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2::__nedf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nehf2::__nehf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2::__nesf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2::__netf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2::__unorddf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordhf2::__unordhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2::__unordsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2::__unordtf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi::__fixdfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi::__fixdfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti::__fixdfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi::__fixsfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi::__fixsfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti::__fixsfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi::__fixtfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi::__fixtfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti::__fixtfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi::__fixunsdfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi::__fixunsdfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti::__fixunsdfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi::__fixunssfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi::__fixunssfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti::__fixunssfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi::__fixunstfdi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi::__fixunstfsi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti::__fixunstfti",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf::__floatdidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf::__floatdisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf::__floatditf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf::__floatsidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf::__floatsisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf::__floatsitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf::__floattidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf::__floattisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf::__floattitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf::__floatundidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf::__floatundisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf::__floatunditf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf::__floatunsidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf::__floatunsisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf::__floatunsitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf::__floatuntidf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf::__floatuntisf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf::__floatuntitf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3::__divdf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3::__divsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3::__divtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2::__extenddftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2::__extendhfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2::__extendhfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2::__extendhftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2::__extendsfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2::__extendsftf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3::__muldf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulhf3::__mulhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3::__mulsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3::__multf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2::__powidf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2::__powisf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2::__powitf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3::__subdf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subhf3::__subhf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3::__subsf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3::__subtf3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2::__truncdfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2::__truncdfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2::__truncsfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2::__trunctfdf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2::__trunctfhf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2::__trunctfsf2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add::__rust_i128_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo::__rust_i128_addo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub::__rust_i128_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo::__rust_i128_subo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add::__rust_u128_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo::__rust_u128_addo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub::__rust_u128_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo::__rust_u128_subo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2::__bswapdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2::__bswapsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2::__bswapti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2::__clzdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2::__clzsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2::__clzti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3::__muldi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4::__mulodi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4::__mulosi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4::__muloti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3::__multi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo::__rust_i128_mulo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo::__rust_u128_mulo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3::__divdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4::__divmoddi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4::__divmodsi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4::__divmodti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3::__divsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3::__divti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3::__moddi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3::__modsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3::__modti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3::__ashldi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3::__ashlsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3::__ashlti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3::__ashrdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3::__ashrsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3::__ashrti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3::__lshrdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3::__lshrsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3::__lshrti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2::__ctzdi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2::__ctzsi2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2::__ctzti2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3::__udivdi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4::__udivmoddi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4::__udivmodsi4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4::__udivmodti4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3::__udivsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3::__udivti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3::__umoddi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3::__umodsi3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3::__umodti3",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf::cbrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil::ceil",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128::ceilf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16::ceilf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf::ceilf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128::copysignf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16::copysignf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf::copysignf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs::fabs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128::fabsf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16::fabsf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf::fabsf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim::fdim",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128::fdimf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16::fdimf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf::fdimf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128::floorf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16::floorf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf::floorf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128::fmaf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf::fmaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax::fmax",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128::fmaxf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16::fmaxf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf::fmaxf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum::fmaximum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128::fmaximumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16::fmaximumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf::fmaximumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin::fmin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128::fminf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16::fminf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf::fminf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum::fminimum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128::fminimumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16::fminimumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf::fminimumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod::fmod",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128::fmodf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16::fmodf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf::fmodf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint::rint",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128::rintf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16::rintf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf::rintf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round::round",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven::roundeven",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128::roundevenf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16::roundevenf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf::roundevenf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128::roundf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16::roundf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf::roundf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128::sqrtf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16::sqrtf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf::sqrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc::trunc",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128::truncf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16::truncf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf::truncf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/probestack.rs",
    "func": "probestack::__rust_probestack",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::acos",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::acosf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosh.rs",
    "func": "math::libm_math::acosh::acosh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/acoshf.rs",
    "func": "math::libm_math::acoshf::acoshf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::get_cpu_features",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::load_x86_features",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_fallback",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_fallback",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma4",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::asin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::comp_r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::asinf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinh.rs",
    "func": "math::libm_math::asinh::asinh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinhf.rs",
    "func": "math::libm_math::asinhf::asinhf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan.rs",
    "func": "math::libm_math::atan::atan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2.rs",
    "func": "math::libm_math::atan2::atan2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2f.rs",
    "func": "math::libm_math::atan2f::atan2f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanf.rs",
    "func": "math::libm_math::atanf::atanf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanh.rs",
    "func": "math::libm_math::atanh::atanh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanhf.rs",
    "func": "math::libm_math::atanhf::atanhf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt_round",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrtf.rs",
    "func": "math::libm_math::cbrtf::cbrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceil",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cos.rs",
    "func": "math::libm_math::cos::cos",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosf.rs",
    "func": "math::libm_math::cosf::cosf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosh.rs",
    "func": "math::libm_math::cosh::cosh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/coshf.rs",
    "func": "math::libm_math::coshf::coshf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc1",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc1",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfcf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp.rs",
    "func": "math::libm_math::exp::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10.rs",
    "func": "math::libm_math::exp10::exp10",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10f.rs",
    "func": "math::libm_math::exp10f::exp10f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2.rs",
    "func": "math::libm_math::exp2::exp2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2f.rs",
    "func": "math::libm_math::exp2f::exp2f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/expf.rs",
    "func": "math::libm_math::expf::expf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1.rs",
    "func": "math::libm_math::expm1::expm1",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1f.rs",
    "func": "math::libm_math::expm1f::expm1f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/expo2.rs",
    "func": "math::libm_math::expo2::expo2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdim",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmax",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimum",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_num",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_num",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmod",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexp.rs",
    "func": "math::libm_math::frexp::frexp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexpf.rs",
    "func": "math::libm_math::frexpf::frexpf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::hypot",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::sq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypotf.rs",
    "func": "math::libm_math::hypotf::hypotf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogb.rs",
    "func": "math::libm_math::ilogb::ilogb",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogbf.rs",
    "func": "math::libm_math::ilogbf::ilogbf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::common",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::j0",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::pzero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::qzero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::y0",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::common",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::j0f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::pzerof",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::qzerof",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::y0f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::common",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::j1",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::pone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::qone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::y1",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::common",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::j1f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::ponef",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::qonef",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::y1f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::jn",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::yn",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::jnf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::ynf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cos.rs",
    "func": "math::libm_math::k_cos::k_cos",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cosf.rs",
    "func": "math::libm_math::k_cosf::k_cosf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2.rs",
    "func": "math::libm_math::k_expo2::k_expo2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2f.rs",
    "func": "math::libm_math::k_expo2f::k_expo2f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sin.rs",
    "func": "math::libm_math::k_sin::k_sin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sinf.rs",
    "func": "math::libm_math::k_sinf::k_sinf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::k_tan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::zero_low_word",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tanf.rs",
    "func": "math::libm_math::k_tanf::k_tanf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma.rs",
    "func": "math::libm_math::lgamma::lgamma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::lgamma_r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::sin_pi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf.rs",
    "func": "math::libm_math::lgammaf::lgammaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::lgammaf_r",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::sin_pi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log.rs",
    "func": "math::libm_math::log::log",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10.rs",
    "func": "math::libm_math::log10::log10",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10f.rs",
    "func": "math::libm_math::log10f::log10f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1p.rs",
    "func": "math::libm_math::log1p::log1p",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1pf.rs",
    "func": "math::libm_math::log1pf::log1pf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2.rs",
    "func": "math::libm_math::log2::log2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2f.rs",
    "func": "math::libm_math::log2f::log2f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/logf.rs",
    "func": "math::libm_math::logf::logf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::combine_words",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_high_word",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_low_word",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_high_word",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_low_word",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/modf.rs",
    "func": "math::libm_math::modf::modf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/modff.rs",
    "func": "math::libm_math::modff::modff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafter.rs",
    "func": "math::libm_math::nextafter::nextafter",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafterf.rs",
    "func": "math::libm_math::nextafterf::nextafterf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/pow.rs",
    "func": "math::libm_math::pow::pow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/powf.rs",
    "func": "math::libm_math::powf::powf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2::medium",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2_large.rs",
    "func": "math::libm_math::rem_pio2_large::rem_pio2_large::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2f.rs",
    "func": "math::libm_math::rem_pio2f::rem_pio2f",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainder.rs",
    "func": "math::libm_math::remainder::remainder",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainderf.rs",
    "func": "math::libm_math::remainderf::remainderf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquo.rs",
    "func": "math::libm_math::remquo::remquo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquof.rs",
    "func": "math::libm_math::remquof::remquof",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rint",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::round",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundeven",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbn",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sin.rs",
    "func": "math::libm_math::sin::sin",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincos.rs",
    "func": "math::libm_math::sincos::sincos",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincosf.rs",
    "func": "math::libm_math::sincosf::sincosf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinf.rs",
    "func": "math::libm_math::sinf::sinf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinh.rs",
    "func": "math::libm_math::sinh::sinh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinhf.rs",
    "func": "math::libm_math::sinhf::sinhf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf16",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Add>::add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Not>::not",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shl<u32>>::shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shr<u32>>::shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Sub>::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Add>::add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Not>::not",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shl<u32>>::shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shr<u32>>::shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Sub>::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::u256::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::inexact",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::overflow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_flag",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_inexact",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_underflow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::underflow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::with",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fma::initializer",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf::initializer",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::contains",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::empty",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::insert",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::test_nth",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::DFloat>::narrow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_infinite",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_infinite",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::HFloat>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::DFloat>::narrow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_infinite",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::HFloat>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::DFloat>::narrow",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::copysign",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_infinite",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_nan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::normalize",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::HFloat>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::dec_digit",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::hex_digit",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr2_round",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr_odd_rounding",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::u128_ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::lo",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs_diff",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::borrowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::carrying_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_bool",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::ilog2",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::leading_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::logical_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::rotate_left",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::signed",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::trailing_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_add",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/mod.rs",
    "func": "math::libm_math::support::cold_path",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tan.rs",
    "func": "math::libm_math::tan::tan",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanf.rs",
    "func": "math::libm_math::tanf::tanf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanh.rs",
    "func": "math::libm_math::tanh::tanh",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanhf.rs",
    "func": "math::libm_math::tanhf::tanhf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::s",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::sinpi",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::tgamma",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgammaf.rs",
    "func": "math::libm_math::tgammaf::tgammaf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::trunc",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf128",
    "proof_kind": "Auto"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf16",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#2}::{closure#1}::mod_inv",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#3}::{closure#0}::mod_inv",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#2}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#3}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#2}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "func": "core_simd::swizzle_dyn::avx2_pshufb",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/arena.rs",
    "func": "bridge::arena::Arena::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "<bridge::buffer::Buffer as std::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "bridge::buffer::Buffer::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::FreeFunctions as std::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::FreeFunctions::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::byte_range",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::call_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::column",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::debug",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::def_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::end",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::file",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::join",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::line",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::local_file",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::mixed_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::parent",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::recover_proc_macro_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::resolved_at",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::save_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source_text",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::start",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::subspan",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::expand_expr",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::from_token_tree",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::into_trees",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::is_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::to_string",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::maybe_install_panic_hook",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::finish",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "bridge::fxhash::FxHasher::add_to_hash",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Mark>::mark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Unmark>::unmark",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol::invalidate_all",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<Span as diagnostic::MultiSpan>::into_spans",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<diagnostic::Level as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/escape.rs",
    "func": "<escape::EscapeOptions as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Group as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Ident as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Literal as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::cmp::PartialEq<char>>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Span as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::convert::From<TokenTree>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Group>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Ident>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Literal>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Punct>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<impl std::cmp::PartialEq<Punct> for char>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatStreamsHelper::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatTreesHelper::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::delimiter",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::set_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_close",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_open",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::stream",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::set_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_character",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_str_value",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::character",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::cstr_value",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::set_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::str_value",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_suffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_unsuffixed",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::with_stringify_parts::get_hashes_str",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::as_char",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::set_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::spacing",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::byte_range",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::call_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::column",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::def_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::end",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::file",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::join",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::line",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::local_file",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::located_at",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::mixed_site",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::parent",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::recover_proc_macro_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::resolved_at",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::save_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source_text",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::start",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::expand_expr",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::is_empty",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::new",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::set_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "is_available",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "tree_to_bridge_tree",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr<quote::ThereIsNoIteratorInRepetition>>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr<quote::HasIterator>>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr>::bitor",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::collect_meta_vars",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote_span",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Group as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Ident as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Literal as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Punct as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::into_token_stream",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::into_token_stream",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<bool as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<char as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f32 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f64 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i128 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i16 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i32 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i64 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i8 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<isize as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u128 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u16 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u32 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u64 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u8 as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<usize as to_tokens::ToTokens>::to_tokens",
    "proof_kind": "Auto"
  },
  {
    "file": "src/lib.rs",
    "func": "dummy",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate_zeroed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::deallocate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow_zeroed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::shrink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::alloc_impl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::grow_impl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::_::__rg_oom",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc_zeroed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::default_alloc_error_hook",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::rust_oom",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::take_alloc_error_hook",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::eq_ignore_ascii_case",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::is_ascii",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_lowercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_uppercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_lowercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_uppercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::eq_ignore_ascii_case",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::is_ascii",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_lowercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_uppercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_lowercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_uppercase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::capture",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::create",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::disabled",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::enabled",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::force_capture",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::_assert_send_sync",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::assert_covariance",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::map_try_reserve_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/collections/hash/set.rs",
    "func": "collections::hash::set::assert_covariance",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "<env::JoinPathsError as core::error::Error>::description",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args_os",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_exe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::home_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::temp_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars_os",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<&ffi::os_str::OsStr as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<ffi::os_str::OsString as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::seek",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_len",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_position",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::DirBuilder as sys_common::AsInnerMut<sys::fs::unix::DirBuilder>>::as_inner_mut",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::seek",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_len",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_position",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::AsInner<sys::fs::unix::File>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::FromInner<sys::fs::unix::File>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::IntoInner<sys::fs::unix::File>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as sys_common::AsInnerMut<sys::fs::unix::FileTimes>>::as_inner_mut",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as sys_common::AsInner<sys::fs::unix::FileType>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::AsInner<sys::fs::unix::FileAttr>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::FromInner<sys::fs::unix::FileAttr>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInner<sys::fs::unix::OpenOptions>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInnerMut<sys::fs::unix::OpenOptions>>::as_inner_mut",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::AsInner<sys::fs::unix::FilePermissions>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::FromInner<sys::fs::unix::FilePermissions>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::recursive",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock_shared",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::metadata",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::options",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_len",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_modified",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_permissions",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_times",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_all",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_data",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock_shared",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::unlock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_accessed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_modified",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_file",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_symlink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::accessed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::created",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::file_type",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_file",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_symlink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::len",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::modified",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::permissions",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::append",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create_new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::read",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::truncate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::write",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::readonly",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::set_readonly",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::buffer_capacity_required",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::hash::Hasher>::finish",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::hash::BuildHasher>::build_hasher",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::DefaultHasher::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::RandomState::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::try_with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<alloc_crate::collections::TryReserveError>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<io::error::ErrorKind>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::from_raw_os_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::last_os_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::ErrorKind::as_str",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::_assert_error_is_sync_send",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_os",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_simple",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::kind_from_prim",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeReader as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeReader::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeWriter::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::pipe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<fs::File as io::stdio::IsTerminal>::is_terminal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::stdio::IsTerminal>::is_terminal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdinRaw as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::Stderr::lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::cleanup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::consume",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::fill_buf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::has_data_left",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::skip_until",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::seek",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_len",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_position",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::SizeHint>::upper_bound",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::lower_bound",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::upper_bound",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::empty",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::repeat",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::sink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddr as net::socket_addr::ToSocketAddrs>::to_socket_addrs",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV4 as net::socket_addr::ToSocketAddrs>::to_socket_addrs",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV6 as net::socket_addr::ToSocketAddrs>::to_socket_addrs",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::IntoIncoming as core::iter::Iterator>::next",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::AsInner<sys::net::connection::socket::TcpListener>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::FromInner<sys::net::connection::socket::TcpListener>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::IntoInner<sys::net::connection::socket::TcpListener>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::AsInner<sys::net::connection::socket::TcpStream>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::FromInner<sys::net::connection::socket::TcpStream>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::IntoInner<sys::net::connection::socket::TcpStream>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::accept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::incoming",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::into_incoming",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::only_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_only_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::connect_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::shutdown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::AsInner<sys::net::connection::socket::UdpSocket>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::FromInner<sys::net::connection::socket::UdpSocket>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::IntoInner<sys::net::connection::socket::UdpSocket>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::broadcast",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_ttl_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_broadcast",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_ttl_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erfc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp_m1",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::hypot",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_1p",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log10",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::powf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin_cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erfc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp_m1",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::hypot",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_1p",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log10",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::powf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin_cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::abs_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ceil",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::div_euclid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erfc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp_m1",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::fract",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::hypot",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_1p",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log10",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::mul_add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powi",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::rem_euclid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round_ties_even",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin_cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::trunc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::abs_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cbrt",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ceil",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cosh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::div_euclid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erfc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp_m1",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::floor",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::fract",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::hypot",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_1p",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_gamma",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log10",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log2",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::mul_add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powf",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powi",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::rem_euclid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round_ties_even",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin_cos",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sinh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sqrt",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tan",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tanh",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::trunc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpListener>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpStream>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::udp::UdpSocket>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpListener>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpStream>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::udp::UdpSocket>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<fs::File as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeReader as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeWriter as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::stdio::Stderr as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpListener as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpStream as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::udp::UdpSocket as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<fs::File>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeReader>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeWriter>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpListener>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpStream>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::udp::UdpSocket>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as io::stdio::IsTerminal>::is_terminal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for fs::File>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeReader>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeWriter>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpListener>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpStream>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::udp::UdpSocket>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::BorrowedFd::<'_>::borrow_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::OwnedFd::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::stdio::Stderr as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::as_raw_stat",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blksize",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blocks",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_dev",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_gid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ino",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_nlink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_rdev",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_uid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as core::convert::From<os::fd::owned::OwnedFd>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::AsInner<sys::pal::unix::linux::pidfd::PidFd>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::FromInner<sys::pal::unix::linux::pidfd::PidFd>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::IntoInner<sys::pal::unix::linux::pidfd::PidFd>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::<impl core::convert::From<os::linux::process::PidFd> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::kill",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::try_wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/linux/raw.rs",
    "func": "<os::linux::raw::arch::stat as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::set_passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::set_passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::deferaccept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::quickack",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_deferaccept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_quickack",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::DirBuilder as os::unix::fs::DirBuilderExt>::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_block_device",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_char_device",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_fifo",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blksize",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blocks",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::dev",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::gid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ino",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime_nsec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::nlink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::rdev",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::uid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::custom_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::set_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as os::net::linux_ext::addr::SocketAddrExt>::as_abstract_name",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::address",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::as_pathname",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::from_parts",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::is_unnamed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "<os::unix::net::ancillary::SocketCred as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::AncillaryData::<'_>::try_from_cmsghdr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_gid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_pid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_uid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_gid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_pid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_uid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as core::convert::From<os::fd::owned::OwnedFd>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::<impl core::convert::From<os::unix::net::datagram::UnixDatagram> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::bind_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::connect_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::pair",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_mark",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::shutdown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::unbound",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<&os::unix::net::listener::UnixListener as core::iter::IntoIterator>::into_iter",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as core::convert::From<os::fd::owned::OwnedFd>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::<impl core::convert::From<os::unix::net::listener::UnixListener> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::accept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::bind_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::incoming",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as core::convert::From<os::fd::owned::OwnedFd>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::<impl core::convert::From<os::unix::net::stream::UnixStream> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::connect_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::local_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::pair",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_cred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_mark",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::shutdown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "os::unix::net::ucred::impl_linux::peer_cred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::Child as os::unix::process::ChildExt>::send_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::continued",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::core_dumped",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::into_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::stopped_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::continued",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::core_dumped",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::into_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::stopped_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStderr>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdin>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdout>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::Stdio>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStderr> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdin> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdout> for os::fd::owned::OwnedFd>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStderr>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdin>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdout>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStderr>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdin>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdout>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStderr>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdin>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdout>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::parent_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::as_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::from_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::full",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::always_abort",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::get_backtrace_style",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::set_backtrace_style",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "<panicking::Hook as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_drop_panic",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_foreign_exception",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::count_is_zero",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::decrease",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::finished_panic_hook",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::get_count",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::increase",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::is_zero_slow_path",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::set_always_abort",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panicking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::take_hook",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::NormalizeError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::PathBuf as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::is_separator",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<() as process::Termination>::report",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::AsInner<sys::process::unix::unix::Process>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::IntoInner<sys::process::unix::unix::Process>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::convert::From<u8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as process::Termination>::report",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::AsInner<sys::process::unix::common::ExitCode>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::FromInner<sys::process::unix::common::ExitCode>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::convert::From<process::ExitStatusError>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::AsInner<sys::process::unix::unix::ExitStatus>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::FromInner<sys::process::unix::unix::ExitStatus>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<fs::File>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeReader>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeWriter>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::stdio::Stderr>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStderr>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdin>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdout>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::kill",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::try_wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait_with_output",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::exit_process",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::to_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::code",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::exit_ok",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::success",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code_nonzero",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::into_status",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::inherit",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::null",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::piped",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::abort",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::exit",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::__rust_abort",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::cleanup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::thread_cleanup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::BarrierWaitResult::is_leader",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/lazy_lock.rs",
    "func": "sync::lazy_lock::panic_poisoned",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "<sync::WaitTimeoutResult as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mod.rs",
    "func": "sync::WaitTimeoutResult::timed_out",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/array.rs",
    "func": "<sync::mpmc::array::ArrayToken as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/context.rs",
    "func": "sync::mpmc::context::Context::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/list.rs",
    "func": "<sync::mpmc::list::ListToken as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::From<usize>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::Into<usize>>::into",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Token as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_heavy",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_light",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::SyncWaker::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::Waker::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::current_thread_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpmc/zero.rs",
    "func": "<sync::mpmc::zero::ZeroToken as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::convert::From<sync::mpsc::RecvError>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::convert::From<sync::mpsc::RecvError>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "<sync::nonpoison::condvar::Condvar as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::notify_all",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/nonpoison/condvar.rs",
    "func": "sync::nonpoison::condvar::Condvar::notify_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "<sync::poison::Guard as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::borrow",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::clear",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::done",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::get",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::guard",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::Condvar as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_all",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::is_completed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::set_state",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::state",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait_force",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::is_poisoned",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::poison",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::contains",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::set",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc_zeroed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::aligned_malloc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/anonymous_pipe/unix.rs",
    "func": "sys::anonymous_pipe::unix::pipe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::args",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::imp::argc_argv",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::lock::<'_>",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::set_image_base",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env_read_lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::environ",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/exit_guard.rs",
    "func": "sys::exit_guard::unique_thread_exit",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<&sys::fd::unix::FileDesc as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::AsInner<os::fd::owned::OwnedFd>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::FromInner<os::fd::owned::OwnedFd>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::IntoInner<os::fd::owned::OwnedFd>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_cloexec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::max_iov",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInnerMut<sys::fd::unix::FileDesc>>::as_inner_mut",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as sys_common::AsInner<libc::stat64>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::Mode as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::OpenOptions as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::StatxExtraFields as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::set_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync::os_datasync",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::file_attr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync::os_fsync",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock_shared",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::seek",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_permissions",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_times",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::tell",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::truncate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock_shared",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::unlock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::accessed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::created",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::file_type",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::from_stat64",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::modified",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::perm",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::readonly",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::set_readonly",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_accessed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_modified",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_file",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_symlink",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::masked",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::append",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create_new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::custom_flags",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_access_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_creation_mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::mode",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::read",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::truncate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::write",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::debug_assert_fd_is_open",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::fchown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::remove_dir_impl::fdreaddir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpListener as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::UdpSocket as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::accept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::into_socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::only_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_only_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::connect_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::into_socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::shutdown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::broadcast",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::into_socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_ttl_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::peer_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_broadcast",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v6",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_ttl_v4",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_read_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket_addr",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::ttl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::write_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_from_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_to_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_from_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_to_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_to_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_from_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_to_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_from_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_to_c",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::to_ipv6mr_interface",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::as_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::deferaccept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::duplicate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_pair",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::quickack",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_deferaccept",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_linger",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_mark",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nodelay",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nonblocking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_passcred",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_quickack",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::shutdown",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::take_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::cvt_gai",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::init",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::on_resolver_failure",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Buf::with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Slice::empty_box",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake_all",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStderr as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdin as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdout as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyRead>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyWrite>::properties",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::FdHandle as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::SpliceMode as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::copy_file_range_candidate",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::maybe_fifo",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::potential_sendfile_source",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::safe_kernel_copy",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::sendfile_splice",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::kill",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::send_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::try_wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i16 as sys::pal::unix::IsMinusOne>::is_minus_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i32 as sys::pal::unix::IsMinusOne>::is_minus_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i64 as sys::pal::unix::IsMinusOne>::is_minus_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i8 as sys::pal::unix::IsMinusOne>::is_minus_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<isize as sys::pal::unix::IsMinusOne>::is_minus_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::abort_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cleanup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cvt_nz",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::decode_error_kind",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::reset_sigpipe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::sanitize_standard_fds",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::is_interrupted",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::on_broken_pipe_flag_used",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::current_exe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::errno",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::error_string",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::exit",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getcwd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getpid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getppid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::glibc_version",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir::fallback",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::page_size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::set_errno",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::split_paths::is_separator",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::temp_dir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::owned::AsFd>::as_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::AsRawFd>::as_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::IntoRawFd>::into_raw_fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::as_file_desc",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::try_clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::anon_pipe",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::null",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::cleanup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::current_guard",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack_start",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::init",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::sigstack_size",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::stack_start_aligned",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "<sys::pal::unix::stack_overflow::thread_info::UnlockOnDrop as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::delete_current_info",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::Thread as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::cgroups::Cgroup as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::into_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::join",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep_until",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::yield_now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::available_parallelism",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::cgroups::quota",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::current_os_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_add_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_instant",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::into_timespec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_add_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_sub_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::sub_time",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_add_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_sub_duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new_unchecked",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::sub_timespec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::to_timespec",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::zero",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/pal/unix/weak.rs",
    "func": "sys::pal::unix::thread::current_os_id::gettid",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_sep_byte",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_verbatim_sep",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/personality/dwarf/eh.rs",
    "func": "sys::personality::dwarf::eh::round_up",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/env.rs",
    "func": "<sys::process::env::CommandEnv as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<io::stdio::Stderr>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fd::unix::FileDesc>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fs::unix::File>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::pal::unix::pipe::AnonPipe>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ChildStdio::fd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ExitCode::as_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/common/cstring_array.rs",
    "func": "sys::process::unix::common::cstring_array::CStringArray::with_capacity",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::convert::Into<sys::process::unix::unix::ExitStatus>>::into",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::code",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::continued",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::core_dumped",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exit_ok",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exited",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::from_waitid_siginfo",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::into_raw",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::stopped_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatusError::code",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::kill",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::send_signal",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::try_wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::into_pidfd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::pidfd",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::signal_string",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/random/linux.rs",
    "func": "sys::random::linux::hashmap_random_keys",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdin as io::Read>::is_read_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::flush",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::is_write_vectored",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stderr::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdin::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdout::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::panic_output",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_all",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_one",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_optional_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock_contended",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::spin",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::try_lock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::unlock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::wake",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::is_completed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::set_state",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::state",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::wait",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::is_poisoned",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::poison",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::downgrade",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_contended",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_unlock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_read",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_write",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_read",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_write",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer_or_readers",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_contended",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_unlock",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_reached_max_readers",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_readers_waiting",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_writers_waiting",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable_after_wakeup",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_unlocked",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_write_locked",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::unpark",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/destructors/list.rs",
    "func": "sys::thread_local::destructors::list::run",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/guard/key.rs",
    "func": "sys::thread_local::guard::key::enable",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/key/unix.rs",
    "func": "sys::thread_local::key::unix::destroy",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/mod.rs",
    "func": "<sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/native/eager.rs",
    "func": "<sys::thread_local::native::eager::State as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "hash::random::RandomState::new::KEYS::__init",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sync::mpmc::context::Context::with::CONTEXT::__init",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sys::thread_local::native::LocalPointer::__new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/sys_common/mod.rs",
    "func": "sys_common::mul_div_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_or_unnamed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_os_id",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::drop_current",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get_or_init",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::set",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "thread::local::panic_access_error",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::PanicGuard as core::ops::Drop>::drop",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::Builder::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::as_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::from_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new::exhausted",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::_assert_sync_and_send",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::available_parallelism",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::get",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::set",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::panicking",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout_ms",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_ms",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_until",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::yield_now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::SpawnHooks as core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Add<core::time::Duration>>::add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::AddAssign<core::time::Duration>>::add_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub<core::time::Duration>>::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub>::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::SubAssign<core::time::Duration>>::sub_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Add<core::time::Duration>>::add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::AddAssign<core::time::Duration>>::add_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Sub<core::time::Duration>>::sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::SubAssign<core::time::Duration>>::sub_assign",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::FromInner<sys::pal::unix::time::SystemTime>>::from_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::IntoInner<sys::pal::unix::time::SystemTime>>::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_duration_since",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::duration_since",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::elapsed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::into_inner",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::saturating_duration_since",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_add",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_sub",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::duration_since",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::elapsed",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::now",
    "proof_kind": "Auto"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTimeError::duration",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/bit.rs",
    "func": "detect::bit::test",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as rustc_std_workspace_core::default::Default>::default",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::initialize",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::test",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::uninitialized",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::set",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::test",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::unset",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::detect_and_initialize",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::do_initialize",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::initialize",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::set_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::unset_bit",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "<detect::arch::x86::Feature as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::Feature::to_str",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::adx",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::aes",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_avx512",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_bf16",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_complex",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp16",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp8",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_int8",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_movrs",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tf32",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tile",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_transpose",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::apxf",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx10_1",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx10_2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bf16",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bitalg",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bw",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512cd",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512dq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512er",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512f",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512fp16",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512ifma",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512pf",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vl",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vnni",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vp2intersect",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vpopcntdq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxifma",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxneconvert",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnni",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint16",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint8",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi1",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::cmpxchg16b",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ermsb",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::f16c",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fma",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fxsr",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::gfni",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::kl",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::lzcnt",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::mmx",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movbe",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movrs",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::pclmulqdq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::popcnt",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdrand",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdseed",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rtm",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha512",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm3",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm4",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse3",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_1",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_2",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4a",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ssse3",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tbm",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tsc",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vaes",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vpclmulqdq",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::widekl",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xop",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsave",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsavec",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaveopt",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaves",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::check_for",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::features",
    "proof_kind": "Auto"
  },
  {
    "file": "std_detect/src/detect/os/x86.rs",
    "func": "detect::os::detect_features",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_mut_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::bool_to_internal",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::as_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::extract",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::from_array",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::new",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_lzcnt_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_popcnt32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarry_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarryx_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_subborrow_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdec_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdeclast_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenc_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenclast_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesimc_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd128_pd256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd256_pd128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps128_ps256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps256_ps128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi128_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsd_f64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsi256_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtss_f32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rcp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rsqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128d",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128d",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroall",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroupper",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextpd128_pd256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextps128_ps256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextsi128_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_broadcast_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_alignr_epi8::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_and_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_andnot_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_blendv_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsi128_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bslli_epi128::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bsrli_epi128::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_movemask_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_or_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sad_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_xor_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsi128_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtness_sbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtsbh_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtmask32_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtu32_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask32_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask64_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask32_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask64_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask32_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask64_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask32_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask64_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_alignr_epi8::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bsrli_epi128::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackw",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sad_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutex2var_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutexvar_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_sllv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srav_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srlv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi16_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi8_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmb_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmw_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtmask8_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtu32_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kand_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kandn_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_knot_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kor_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestc_mask8_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestz_mask8_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask16_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask8_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask16_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask8_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxnor_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxor_mask8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mullo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtmask16_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtu32_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kand_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kandn_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_knot_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kor_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestc_mask16_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestz_mask16_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxnor_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxor_mask16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd128_pd512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd256_pd512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps128_ps512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps256_ps512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi128_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi256_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32lo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32lo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_pslo",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpslo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsd_f64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsi512_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtss_f32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_int2mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kand",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kandn",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kmov",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_knot",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kor",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestc",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestz",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kunpackb",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxnor",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxor",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2int",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullox_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullox_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd128_pd512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd256_pd512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps128_ps512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps256_ps512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi128_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi256_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtss_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastss_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtss_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_sra_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_srav_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi32_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi64_mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_abs_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph128_ph256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph256_ph128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_si256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castsi256_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtsh_h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_blend_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutex2var_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutexvar_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set1_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setr_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setzero_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_undefined_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_zextph128_ph256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_abs_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph128_ph512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph256_ph512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_si512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castsi512_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtsh_h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_blend_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutex2var_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutexvar_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set1_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setr_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setzero_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_undefined_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph128_ph512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph256_ph512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_abs_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castsi128_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comieq_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comige_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comigt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comile_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comilt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comineq_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvti32_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi128_si16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi16_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtss_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_i32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtu32_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_blend_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtss_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_move_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_conj_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_move_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_move_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_pch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sch",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutex2var_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutexvar_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_add_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_max_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_min_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_mul_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set1_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setr_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setzero_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomieq_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomige_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomigt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomile_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomilt_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomineq_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_undefined_ph",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutex2var_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutexvar_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuud_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuuds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_andn_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr2_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsi_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsmsk_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsr_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_mm_tzcnt_32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_bzhi_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_mulx_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pdep_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pext_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bswap.rs",
    "func": "core_arch::x86::bswap::_bswap",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid_count",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__get_cpuid_max",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__readeflags",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__writeeflags",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm256_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm_cvtph_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/kl.rs",
    "func": "core_arch::x86::kl::_mm_loadiwkey",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "<core_arch::x86::bf16 as clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x16>::as_m256h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x32>::as_m512h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x8>::as_m128h",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x16>::as_m512",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x4>::as_m128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x8>::as_m256",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x2>::as_m128d",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x4>::as_m256d",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x8>::as_m512d",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x2>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x4>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x8>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x16>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x32>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x64>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256bh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x2>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x4>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x8>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x16>::as_m128i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x32>::as_m256i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x64>::as_m512i",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128::as_f32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i16x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u16x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128d::as_f64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128h::as_f16x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i16x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i8x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u16x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u32x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u64x2",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u8x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256::as_f32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i16x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u16x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256d::as_f64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256h::as_f16x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i16x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i8x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u16x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u32x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u64x4",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u8x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512::as_f32x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i16x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i32x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u16x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u32x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512d::as_f64x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512h::as_f16x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i16x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i32x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i64x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i8x64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u16x32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u32x16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u64x8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u8x64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::from_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::to_bits",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand16_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand32_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed16_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed32_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "func": "core_arch::x86::rdtsc::_rdtsc",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xabort_code",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xbegin",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xend",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xtest",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg1_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg2_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512rnds2_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4key4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4rnds4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg1_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg2_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1nexte_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg1_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg2_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256rnds2_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg2_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4key4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4rnds4_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_ROUNDING_MODE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_ROUNDING_MODE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SHUFFLE",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_TRANSPOSE4_PS",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_and_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_andnot_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comieq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comige_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comigt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comile_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comilt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comineq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_si2ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_ss2si",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtsi32_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_f32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtt_ss2si",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvttss_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_getcsr",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_move_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movehl_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movelh_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movemask_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_or_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set1_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps1",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setcsr",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setr_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setzero_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sfence",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomieq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomige_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomigt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomile_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomilt_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomineq_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_undefined_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpackhi_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpacklo_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_xor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comieq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comige_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comigt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comile_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comilt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comineq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_f64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi128_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtss_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttpd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttps_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttsd_si32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_lfence",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_madd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mfence",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mullo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packus_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_pause",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sad_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd1",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_slli_si128_impl::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srli_si128_impl::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomieq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomige_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomigt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomile_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomilt_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomineq_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movedup_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movehdup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_moveldup_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cmpeq_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu32_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_pd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ps",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_minpos_epu16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mul_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mullo_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_packus_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_ones",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_mix_ones_zeros",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testc_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testnzc_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testz_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_cmpgt_epi64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_extract_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_insert_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_alignr_epi8::mask",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadds_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_maddubs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_mulhrs_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_shuffle_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi16",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi8",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcfill_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blci_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcic_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcmsk_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcs_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsfill_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsic_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_t1mskc_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_tzmsk_u32",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdec_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdeclast_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenc_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenclast_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdec_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdeclast_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenc_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenclast_epi128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xgetbv",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xsetbv",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_lzcnt_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_popcnt64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarry_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarryx_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_subborrow_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/amx.rs",
    "func": "core_arch::x86_64::amx::_tile_release",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtmask64_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtu64_mask64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvti64_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_i64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtu64_sh",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_andn_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr2_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsi_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsmsk_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsr_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_mm_tzcnt_64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_tzcnt_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_bzhi_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_mulx_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pdep_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pext_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "func": "core_arch::x86_64::bswap::_bswap64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdrand64_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdseed64_step",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtsi64_ss",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtss_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvttss_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_sd",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_si128",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64x",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "func": "core_arch::x86_64::sse42::_mm_crc32_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcfill_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blci_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcic_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcmsk_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcs_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsfill_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsic_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_t1mskc_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_tzmsk_u64",
    "proof_kind": "Auto"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::clone::Clone>::clone",
    "proof_kind": "Auto"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::cmp::PartialEq>::eq",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate",
    "hash": "1141955903753897517014625167327847791907",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate_zeroed",
    "hash": "96540308768482821532855729325539541075",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::deallocate",
    "hash": "394899740451847047017644777761427403196",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow",
    "hash": "183385740162978933735838171806857490722",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow_zeroed",
    "hash": "98555105626412743394279311694953355852",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::shrink",
    "hash": "110433040245139208246837374147373263385",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::clone::Clone>::clone",
    "hash": "188618813038227315415644954775386001916",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::default::Default>::default",
    "hash": "176696082822432675782692881376305731226",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::alloc_impl",
    "hash": "1170796756882490861817329164502952420199",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::grow_impl",
    "hash": "36090434155209641941876869971244512501",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::__alloc_error_handler::__rdl_oom",
    "hash": "119686926066039788537908791044774602879",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc",
    "hash": "1376541346679052968213576567834425860228",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc_zeroed",
    "hash": "1549398485481521168517137548698896520595",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::exchange_malloc",
    "hash": "841727848950026221418209734852812942061",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error",
    "hash": "593523720810475000712660203952371323969",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::ct_error",
    "hash": "852884122469291582314748938350048483548",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::rt_error",
    "hash": "140493508095315886339161612115402293715",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed.rs",
    "func": "<boxed::Box<str> as core::default::Default>::default",
    "hash": "14856800887710591993357915319728027847",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithHeader::<H>::new_unsize_zst::max",
    "hash": "1214283294772387410513656322816772160048",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/bstr.rs",
    "func": "<bstr::ByteString as core::default::Default>::default",
    "hash": "45358225003190044658397087633477427533",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/binary_heap/mod.rs",
    "func": "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast",
    "hash": "973288194206144225813674435885172480395",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::clone::Clone>::clone",
    "hash": "1150860557635224211118086471311025313226",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "526025963936043764214926126682659565302",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::PartialEq>::eq",
    "hash": "86210571617703808639506184036730667764",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/mem.rs",
    "func": "<collections::btree::mem::replace::PanicGuard as core::ops::Drop>::drop",
    "hash": "106041551097258177951361565161842063386",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::splitpoint",
    "hash": "164319979920894964069791300187578496271",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val",
    "hash": "79761222458285267608190469009755843990",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::clone::Clone>::clone",
    "hash": "15352058463492922652170278573860929499",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "147055796735940565482009025302173003778",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Ord>::cmp",
    "hash": "605984565890044805716043055540444426650",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialEq>::eq",
    "hash": "47118706139193443235635944773369221202",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialOrd>::partial_cmp",
    "hash": "96307004548983503186372644330605262617",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::default::Default>::default",
    "hash": "883878486470611769410893299160888045942",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/linked_list.rs",
    "func": "collections::linked_list::assert_covariance",
    "hash": "139024699871569484909137643028803113908",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::clone::Clone>::clone",
    "hash": "67307081462067458518228659530353215819",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "601246688718493786517705802297950835630",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::PartialEq>::eq",
    "hash": "416107742932593270512206529348530756443",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::convert::From<collections::TryReserveErrorKind>>::from",
    "hash": "1806196275982253069117281718696114376262",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::clone::Clone>::clone",
    "hash": "1029563312923393900611914925131263606627",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "30843355880797103155581040730416039276",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::PartialEq>::eq",
    "hash": "18085859003630016463445829560899280373",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::convert::From<core::alloc::LayoutError>>::from",
    "hash": "9903892076387741271622226004455942430",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/mod.rs",
    "func": "collections::TryReserveError::kind",
    "hash": "418064438806156603612250954936421482396",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::verify::check_vecdeque_swap",
    "hash": "1841908379712658003418228926600004877256",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::wrap_index",
    "hash": "173042205768032610075203172605839594717",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::CString as core::default::Default>::default",
    "hash": "178375333781861797206826629855667520301",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::clone::Clone>::clone",
    "hash": "178916550743863733364659761274070969968",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "169134587720057382264356999721097941718",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::PartialEq>::eq",
    "hash": "10053784383016880137131169174929694455",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default",
    "hash": "1632608364671833216516642930962458691794",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default",
    "hash": "93232556978174290487033203880618952922",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::RawVecInner::with_capacity",
    "hash": "89781441075718094386292867941370836547",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::capacity_overflow",
    "hash": "1608126128991884205014632356534797510306",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::handle_error",
    "hash": "47317165689800636576984679401220719271",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::layout_array",
    "hash": "1301600478604173610110150370747749629376",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::min_non_zero_cap",
    "hash": "65055801994553461588615672273314638017",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "<rc::Rc<str> as core::default::Default>::default",
    "hash": "70792368269376082914790080871020785676",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::data_offset_align",
    "hash": "65137094886431951939666500093529085346",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/rc.rs",
    "func": "rc::rc_inner_layout_for_value_layout",
    "hash": "8939741403760947825700058206734530615",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<bool as string::SpecToString>::spec_to_string",
    "hash": "1645589389444576871015067097211586172634",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<char as string::SpecToString>::spec_to_string",
    "hash": "173781023494189668278734830418004090563",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<core::ascii::Char as string::SpecToString>::spec_to_string",
    "hash": "149873809826874907011397370343161175763",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i128 as string::SpecToString>::spec_to_string",
    "hash": "157213866371951876637114511646884307663",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i16 as string::SpecToString>::spec_to_string",
    "hash": "1608232007695914091516348704220340967210",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i32 as string::SpecToString>::spec_to_string",
    "hash": "47345978995684619206825509802957946866",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i64 as string::SpecToString>::spec_to_string",
    "hash": "43132541370971683186804929929634164236",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<i8 as string::SpecToString>::spec_to_string",
    "hash": "1470312736449078509813015740803020118195",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<isize as string::SpecToString>::spec_to_string",
    "hash": "99914732760347493162133093258865495712",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::convert::From<char>>::from",
    "hash": "1807264024046476711213804577270416744966",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::default::Default>::default",
    "hash": "79887214921369405519503094514328680621",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u128 as string::SpecToString>::spec_to_string",
    "hash": "16334807951043107624139109167797555383",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u16 as string::SpecToString>::spec_to_string",
    "hash": "273105074636522537317237234018111139061",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u32 as string::SpecToString>::spec_to_string",
    "hash": "181557502388070329391102675755025724282",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u64 as string::SpecToString>::spec_to_string",
    "hash": "1811061049676737698918356850409966922529",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<u8 as string::SpecToString>::spec_to_string",
    "hash": "754546002910397633415743108127012368809",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "<usize as string::SpecToString>::spec_to_string",
    "hash": "233342052803262649812522942420344376618",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::new",
    "hash": "79046669545943228287709651508410318336",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::try_with_capacity",
    "hash": "959084811659686713314704151168052304683",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/string.rs",
    "func": "string::String::with_capacity",
    "hash": "79328219952495146973990751351834358086",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<core::ffi::CStr> as core::default::Default>::default",
    "hash": "111402536007881510778864744036107660289",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<str> as core::default::Default>::default",
    "hash": "913681814652052813218071957356831036261",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::Weak::<T, A>::upgrade::checked_increment",
    "hash": "589034854336482534511210889767826203028",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::arcinner_layout_for_value_layout",
    "hash": "5956133239451100234097684400064761471",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/sync.rs",
    "func": "sync::data_offset_align",
    "hash": "1425461345240592869212184024118401800139",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<bool as vec::is_zero::IsZero>::is_zero",
    "hash": "226416230687556135918222008708823951921",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<char as vec::is_zero::IsZero>::is_zero",
    "hash": "562314824199671126613140265516381100367",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<bool> as vec::is_zero::IsZero>::is_zero",
    "hash": "55282550973537819389606379550037173229",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1720506251788833383214486689275353377544",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "152814392829046064067273226362518217329",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "49591647048648773565875025356167778818",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "181168594773930497234735536558990251740",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "11312161407294301361122131310521174807",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<isize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1633361032576782756818298118979809316936",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u128>> as vec::is_zero::IsZero>::is_zero",
    "hash": "103330843235056718911750599906013025116",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u16>> as vec::is_zero::IsZero>::is_zero",
    "hash": "738598021930773736916905903201866490109",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u32>> as vec::is_zero::IsZero>::is_zero",
    "hash": "45050772754737871232386659509215520366",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u64>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1004802711197926163113375030305559180195",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u8>> as vec::is_zero::IsZero>::is_zero",
    "hash": "5381240029021907034562309991152013397",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<usize>> as vec::is_zero::IsZero>::is_zero",
    "hash": "1324187291799467001913286431910294421734",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<bool>> as vec::is_zero::IsZero>::is_zero",
    "hash": "115955547454937142876777049727034594294",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<core::option::Option<bool>>> as vec::is_zero::IsZero>::is_zero",
    "hash": "92137497129509717051590096164373128749",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i128> as vec::is_zero::IsZero>::is_zero",
    "hash": "97332826814045571384137483073632908543",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i16> as vec::is_zero::IsZero>::is_zero",
    "hash": "1551952214378580472514669949821112486326",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i32> as vec::is_zero::IsZero>::is_zero",
    "hash": "1232498275400767262010507917826339615857",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i64> as vec::is_zero::IsZero>::is_zero",
    "hash": "448950398955720190318331283893953130196",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i8> as vec::is_zero::IsZero>::is_zero",
    "hash": "599325279796641059612601345387635232422",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<isize> as vec::is_zero::IsZero>::is_zero",
    "hash": "100366899955246869607292645471452608098",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u128> as vec::is_zero::IsZero>::is_zero",
    "hash": "14651758730421022746999724313290374327",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u16> as vec::is_zero::IsZero>::is_zero",
    "hash": "44116722611049818993587026624303100749",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u32> as vec::is_zero::IsZero>::is_zero",
    "hash": "609127693595867082813990810118846537744",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u64> as vec::is_zero::IsZero>::is_zero",
    "hash": "8304810152053103455671241760436064192",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u8> as vec::is_zero::IsZero>::is_zero",
    "hash": "1424402656469086792513759609376913500182",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<usize> as vec::is_zero::IsZero>::is_zero",
    "hash": "32118125568587543451952746026173474568",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f32 as vec::is_zero::IsZero>::is_zero",
    "hash": "27000259865368408846759765825619365521",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f64 as vec::is_zero::IsZero>::is_zero",
    "hash": "97891402136562632024558210899456801827",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i128 as vec::is_zero::IsZero>::is_zero",
    "hash": "18698055566249928431115470227260948467",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i16 as vec::is_zero::IsZero>::is_zero",
    "hash": "783609287002888126610410795212579015124",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i32 as vec::is_zero::IsZero>::is_zero",
    "hash": "42504595435692469042818110472115630694",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i64 as vec::is_zero::IsZero>::is_zero",
    "hash": "34536797668754468426060086630998615149",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i8 as vec::is_zero::IsZero>::is_zero",
    "hash": "36403096420846141552085050188458478890",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<isize as vec::is_zero::IsZero>::is_zero",
    "hash": "57874779018659763082518018364462195589",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u128 as vec::is_zero::IsZero>::is_zero",
    "hash": "100185064925734285171322188388819940861",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u16 as vec::is_zero::IsZero>::is_zero",
    "hash": "321897002648580578013483930964447877009",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u32 as vec::is_zero::IsZero>::is_zero",
    "hash": "109155081470732314482131273701303262215",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u64 as vec::is_zero::IsZero>::is_zero",
    "hash": "9374950131075819485898869668128418073",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u8 as vec::is_zero::IsZero>::is_zero",
    "hash": "319076220170936590611797679790761320848",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<usize as vec::is_zero::IsZero>::is_zero",
    "hash": "1138662363907580924915852346025134890085",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::insert_mut::assert_failed",
    "hash": "1143515800431780189118076416620885048053",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::remove::assert_failed",
    "hash": "27309153139307746943965174982922342888",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::split_off::assert_failed",
    "hash": "134578382410127514276000482174391220201",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::swap_remove::assert_failed",
    "hash": "29220447254863957435854392270839684817",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::verify::verify_swap_remove",
    "hash": "123749228861437378379202950059517359640",
    "proof_kind": "Standard"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/vec/set_len_on_drop.rs",
    "func": "vec::set_len_on_drop::SetLenOnDrop::<'_>::new",
    "hash": "163653868419212898167354017395545872918",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::<impl core::wtf8::Wtf8>::empty_box",
    "hash": "163266330557922844636839818819529905739",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::Wtf8Buf::new",
    "hash": "131865942320882256441464814802533623656",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::Wtf8Buf::with_capacity",
    "hash": "1492680249300003640016783833148387898103",
    "proof_kind": "Auto"
  },
  {
    "crate": "alloc",
    "file": "alloc/src/wtf8/mod.rs",
    "func": "wtf8::decode_surrogate_pair",
    "hash": "54475871677414605206166338237539928123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as clone::Clone>::clone",
    "hash": "138669527279575425473478508059426767195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1839720404400470606512354253475767504568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::PartialEq>::eq",
    "hash": "1237561809776419274303954737725761997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as ub_checks::Invariant>::is_safe",
    "hash": "74832120848682808746781179739132876020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as clone::Clone>::clone",
    "hash": "252359930733652908913448491214756495000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "13369606727933910233948994621658670641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::PartialEq>::eq",
    "hash": "53188263659268734449859429785139644385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align",
    "hash": "1644571781544438741211241059160657573132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align_to",
    "hash": "121060995074298627175153592299283347999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::alignment",
    "hash": "113731111070523917451251479783537796058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::inner",
    "hash": "714305564529374077718431988982110330312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::dangling",
    "hash": "1725774325508012088012908468224349910631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend",
    "hash": "1835818261999260622914736513936396583107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend_packed",
    "hash": "98067059012061316655876652044881984883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align",
    "hash": "1193380013036401699916295395184494393095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked",
    "hash": "144673661539519055195865692774889120235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_alignment",
    "hash": "608664848234302571713593688644672913516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::is_size_align_valid",
    "hash": "242109529850616688314394414608629035073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::max_size_for_align",
    "hash": "113777446734612017643296714849006136962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::pad_to_align",
    "hash": "875716916960860788614221417403306114565",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::padding_needed_for",
    "hash": "1663095068427536875813465438750474356616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat",
    "hash": "102689236636605331504368322709407006380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat_packed",
    "hash": "856924213499442835211428881601699012019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size",
    "hash": "1765656156889523721816376187426903869163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size_rounded_up_to_custom_align",
    "hash": "1333568670384673713210225900017299121386",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align",
    "hash": "141973255182482483648983106196138637516",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align_to",
    "hash": "727347953444405475116014951614679022832",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_array_i32",
    "hash": "147860258232204113257331207180409662317",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_dangling",
    "hash": "500270562905367672010412223090188761579",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend",
    "hash": "894776831860536941617519267711785279479",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend_packed",
    "hash": "38756969909732126957694185180642271132",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_i32",
    "hash": "1044582669008276937013999107886701116361",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_raw_i32",
    "hash": "61912439673163405672324982719079126238",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_new_i32",
    "hash": "176419161553410462444635667704895406120",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_pad_to_align",
    "hash": "163397595823346368888244283396711303336",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_padding_needed_for",
    "hash": "982407975882441846711893984711112481425",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat",
    "hash": "913147007655341586017230952664386095840",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat_packed",
    "hash": "1755064403037764277513118822644092181607",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_size",
    "hash": "162782319977263599028829619583311763665",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as clone::Clone>::clone",
    "hash": "1029666806849078043410114883872574058051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "65317846572373040011151543001521417398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::PartialEq>::eq",
    "hash": "1722171256993590572613700931741706537866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/arch.rs",
    "func": "arch::breakpoint",
    "hash": "179452278719966693811388490069887534994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/array/ascii.rs",
    "func": "array::ascii::verify::proof_for_as_ascii_unchecked",
    "hash": "1657544741694495226610155062482073437010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as clone::Clone>::clone",
    "hash": "4562367331050962429942001666599523782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::empty",
    "hash": "1075184796020957421713220210555524853953",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::new",
    "hash": "89749163509979118331397359653281917899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii.rs",
    "func": "ascii::escape_default",
    "hash": "1005377300191788699812763229026995308153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as clone::Clone>::clone",
    "hash": "111035433870535333634453815696196257193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1827754337174872640910365780085592186283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp",
    "hash": "112814026645935245953583575330164277885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq",
    "hash": "81344484586276681666638199233416620893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp",
    "hash": "947449175792168431313243954235902122161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash",
    "hash": "142798683471519151818717049339459591202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from",
    "hash": "303887510259205112610660316864342870755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from",
    "hash": "65707825664910605716608872743472675484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from",
    "hash": "1335913507497624961216515700936720096178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from",
    "hash": "731495334679788004117150596004542126535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from",
    "hash": "177071828250677630551547742795886109553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from",
    "hash": "104037872697180391921661665056186269557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::as_str",
    "hash": "954282711880464085816738983663444254636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit",
    "hash": "71882443932159862756445459400502194923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked",
    "hash": "179860433403042176855665351379215783172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::eq_ignore_case",
    "hash": "1692231325908148864914871934470188610020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::escape_ascii",
    "hash": "56432858114212035737992099245451454428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8",
    "hash": "1263943423012824645318408613777809385475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8_unchecked",
    "hash": "15551977551413036531158252289522839939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphabetic",
    "hash": "141374037431582204228901002596648892899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphanumeric",
    "hash": "1769212299635255199312158151321151748593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_control",
    "hash": "379452128669671562516307381127183737866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_digit",
    "hash": "47687222988252838765032272607818926730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_graphic",
    "hash": "121801181038273201848591136906946929115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_hexdigit",
    "hash": "755968284434454300011982005433871110650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_lowercase",
    "hash": "479597666294039129017994040791777849054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_octdigit",
    "hash": "852271594176458070316316655434844405899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_punctuation",
    "hash": "58202831194809294617820784981134761942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_uppercase",
    "hash": "32667457186840015303783944020138794434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_whitespace",
    "hash": "143531101920779919634861260905095796459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_lowercase",
    "hash": "3645664363023451936488916420063270654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_uppercase",
    "hash": "125362895133152657728316806023898963720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_char",
    "hash": "1033313609966481997416353699173200356182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_lowercase",
    "hash": "95711545036868145599383432957873473452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_u8",
    "hash": "211389067699639933614636457746408448112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_uppercase",
    "hash": "3812153823289254213385533447377729036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&bstr::ByteStr as default::Default>::default",
    "hash": "105049302570042062333178608955128012525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/bstr/mod.rs",
    "func": "<&mut bstr::ByteStr as default::Default>::default",
    "hash": "1244790236992922242613687391779415760805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRef::<'_>::new",
    "hash": "1715253761165901342218369474626570669010",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRefMut::<'_>::new",
    "hash": "26804602359776193861030797062949761013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::assert_coerce_unsized",
    "hash": "179837230025838637622005642652165013263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_reading",
    "hash": "958841610888801412131177007951313161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::is_writing",
    "hash": "150987103519159030195100325775074116971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_borrowed",
    "hash": "145099840531258849837183349588874807930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_mutably_borrowed",
    "hash": "108982126199667582896180982396774691617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cell/lazy.rs",
    "func": "cell::lazy::panic_poisoned",
    "hash": "74377589116583307095361716428989041861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as clone::Clone>::clone",
    "hash": "14590919632670077107703886866540995297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "62239645015476868415283761933330297157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::PartialEq>::eq",
    "hash": "71315430593433594444746674294927717904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as clone::Clone>::clone",
    "hash": "135415912958453448667931995784336552872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "158412052472748889385095255687738530311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::PartialEq>::eq",
    "hash": "39772555954801153589957516226447287910",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as clone::Clone>::clone",
    "hash": "171425005789328490072817929714838253054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1385259908027616954410045035542382325618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::PartialEq>::eq",
    "hash": "1337142893895784579613426553132365774701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u128>::from",
    "hash": "5486281828026669298383869045537591502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u32>::from",
    "hash": "113949204995067962305733038591445280689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u64>::from",
    "hash": "176189015992262389841612077595509152686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<u8> for char>::from",
    "hash": "511962504776047044912646038885098500692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u16>::try_from",
    "hash": "343774867495221431512789963432378882435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u8>::try_from",
    "hash": "59866743598207174535473747461717659701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<u32> for char>::try_from",
    "hash": "6143775290127151413941595898127313456",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::char_try_from_u32",
    "hash": "125895754419976834712369234308535121418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_digit",
    "hash": "21288568817902661899163244752640729668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32",
    "hash": "128974011851584301084276742985471198788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32_unchecked",
    "hash": "97974469250681533633362941246048906040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as clone::Clone>::clone",
    "hash": "106015577261429054398488907325860436168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35536810418520555035725241150857337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq",
    "hash": "215534779372337113413718916190493460975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/decode.rs",
    "func": "char::decode::DecodeUtf16Error::unpaired_surrogate",
    "hash": "249399312778873392118202183617190031782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii",
    "hash": "171978863025298498526653523685058692868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked",
    "hash": "1040263324564224765614544706129707762903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::eq_ignore_ascii_case",
    "hash": "347500002211181882111002928277433837828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug",
    "hash": "1796298231582012866015301804313284717666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug_ext",
    "hash": "578131839941784179317108559838421351406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_default",
    "hash": "156024025025714879372729938876459179075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_unicode",
    "hash": "114191532428667968105943711282289882799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_digit",
    "hash": "36634764220413573822676746106347514165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32",
    "hash": "134155172736845441354909341801842248059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32_unchecked",
    "hash": "56316359647357795184792913202425867352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphabetic",
    "hash": "971873176002647187515796831305929484810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphanumeric",
    "hash": "68915328684452507875130239827762742154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii",
    "hash": "121872163624966698483225952656434249831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphabetic",
    "hash": "867510478015560372217127018194584589133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphanumeric",
    "hash": "1835845409301008492015376142636202002099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_control",
    "hash": "78320279285770796329737311134415044128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_digit",
    "hash": "776791319150463290314684492981233965229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_graphic",
    "hash": "160905160783373154336394295742045723480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_hexdigit",
    "hash": "1735324140395205190410672666854869582449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_lowercase",
    "hash": "40029628481153286834917534605165395923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_octdigit",
    "hash": "5813026921425823168402167983853199852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_punctuation",
    "hash": "660443504320725929514711155381355735548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_uppercase",
    "hash": "162761847482439689109896374123862067977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_whitespace",
    "hash": "141456026617067928877849983863287040673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_case_ignorable",
    "hash": "426940716380875666216797886595183658983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_cased",
    "hash": "6798937497228328191300641822971851862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_control",
    "hash": "100152346448650025919357157074383610137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_digit",
    "hash": "113662284102173393318437946945244787743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_grapheme_extended",
    "hash": "1181858898296758562215493550459455800103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_lowercase",
    "hash": "633638000276733035911620059470405632080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_numeric",
    "hash": "20155016640982193599464286350199623268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_uppercase",
    "hash": "71995185867122346909857098428528188726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_whitespace",
    "hash": "183702634530756494073025673838836651007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf16",
    "hash": "30964728033535107675893575966530351964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf8",
    "hash": "1358253101884662637512268933829053514469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_lowercase",
    "hash": "63056492727050690364391917141093345859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_uppercase",
    "hash": "1040510828091348835114571511070917382442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_lowercase",
    "hash": "1545000998026875087513078667640787051548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_uppercase",
    "hash": "1561154161655045390118413777525597123812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_digit",
    "hash": "85573708867003773503727706164971877350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_lowercase",
    "hash": "1104559947394696496615400786288502576470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_uppercase",
    "hash": "780687893923308142414832568868230613467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf16",
    "hash": "566961004407742453510032069701258364292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf8",
    "hash": "1026760530544148215311440132616070242899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::as_ascii_clone",
    "hash": "96678382642319974613340859699268617277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_ascii_char",
    "hash": "668189711377745973810709712772532492005",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_non_ascii_char",
    "hash": "9876316453686709356538409161397548204",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as clone::Clone>::clone",
    "hash": "177844217203071567222637992898171179626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "99487482049585193885655827107297531931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "1196959804431613738212078289361438782428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "153664854716816481503446288175180637492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "65938875803396913552242942886366437729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "949792096248023971711514731404863324947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by",
    "hash": "68048161387437530317726651129761000290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::count",
    "hash": "16442009387475745783617092712059147964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::last",
    "hash": "1299805700910076953196440502548781851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::next",
    "hash": "794086998538567710314418011209738915989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint",
    "hash": "90283732661933715659640819128273353718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as clone::Clone>::clone",
    "hash": "29657351719947956463998943008119478259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "1016092817313860423212558279092008167680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "467775943942087673013107349722840096747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "131989059948085093073852150892833968976",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "138146750292933418208000627705911670750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "169461752388621164842822206058426452127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "166632256594311274013091798956489037591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::count",
    "hash": "744001393418860813217734964554394751737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::last",
    "hash": "42155170522563158369288241912847349603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::next",
    "hash": "76651296870643616426687280122647481917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1027708593438540248413980505779482502344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as clone::Clone>::clone",
    "hash": "71956149775931334722378863190788942805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "8543891363159389582920860483451020261",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "87690680761522152038486746772950141337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "28182804892575652621262896378129640226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "20444811762446829696991288622876336974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "158641604252574621329089955805779685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "114941131914495097537432681118221818874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::count",
    "hash": "3319693376345974627089461543492396543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::last",
    "hash": "238505091526455334718032009824167781884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::next",
    "hash": "1647496878448908476410687713638279428970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "8062902232142518633462520009088608308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as clone::Clone>::clone",
    "hash": "17593036413974483450417272064427724356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "163137489307341236254607985678772685992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::PartialEq>::eq",
    "hash": "207895728047414024214160502408986053704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::CaseMappingIter::new",
    "hash": "541581225115752502417474823358327926347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::backslash",
    "hash": "783953459669900024915752671644269616211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::printable",
    "hash": "5619596178062134676583009599741352142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::unicode",
    "hash": "1636921161980070082112691859644861415933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::backslash",
    "hash": "167318693743665471496388970833021607658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::printable",
    "hash": "95001581818926480997273063874299368335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::unicode",
    "hash": "1217668811729325338414337733949387649941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeUnicode::new",
    "hash": "97935541639476879329425550517759892937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_digit",
    "hash": "41074370055697033255632607170202960049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32",
    "hash": "163726434574820562036550499213031717032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32_unchecked",
    "hash": "169157450674248986457480567982993655557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for bool>::clone",
    "hash": "1541084449582708066812227015681373151583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for char>::clone",
    "hash": "1684636505577985912917866394062015379629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f128>::clone",
    "hash": "134864718858646887498578662502019801872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f16>::clone",
    "hash": "62033691751709743921158161411877009058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f32>::clone",
    "hash": "62849242641042502655525935897380561555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f64>::clone",
    "hash": "1510688254251230865813497044048451380593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i128>::clone",
    "hash": "161839298653982029038459114307016294619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i16>::clone",
    "hash": "1416907371658077741315444557147585542943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i32>::clone",
    "hash": "2946218448093988201964427223285041136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i64>::clone",
    "hash": "37339067580597664836529318802427343795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i8>::clone",
    "hash": "90692542500502867534412921940530622966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for isize>::clone",
    "hash": "40841349884173141842442651584006866032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u128>::clone",
    "hash": "782533626902243992317767964933214769061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u16>::clone",
    "hash": "1405173180943430666414644407524585429282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u32>::clone",
    "hash": "10603719114885247727214992470050664594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u64>::clone",
    "hash": "171106814752922133318385408044488291847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u8>::clone",
    "hash": "91101706103594327621932468101859858531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for usize>::clone",
    "hash": "147525344997271935276533934923114074305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as clone::Clone>::clone",
    "hash": "1453848351783850549116325865097133367598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "173990051472475260682432545164290715366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Ord>::cmp",
    "hash": "90137591796003850359632561321974967469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialEq>::eq",
    "hash": "25315992229481465352451865580694346951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialOrd>::partial_cmp",
    "hash": "58040128369477041818581262470185408620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::as_raw",
    "hash": "1599087357710868766316850218022372470465",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_eq",
    "hash": "1767636601726053801510136021476408014418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ge",
    "hash": "77015241674195912492077004693443111248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_gt",
    "hash": "1413669743415980651815482576558527560187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_le",
    "hash": "7720540233689324914916901207397917923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_lt",
    "hash": "1135064969461757410215295834489737485864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ne",
    "hash": "5540397206875553286766355609948884527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::reverse",
    "hash": "10330146680765739193313035122530387069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::then",
    "hash": "1417415538638866048610242062592059666242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for ()>::cmp",
    "hash": "326266878733747875510010226591721936591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::clamp",
    "hash": "96811812160594087115063758489337812780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::cmp",
    "hash": "88384404180700621366629882541354269403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::max",
    "hash": "141198862792638300034244001504527487083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::min",
    "hash": "45249092865509278445496023662989879959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for char>::cmp",
    "hash": "139527066517240058298709637544916107716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i128>::cmp",
    "hash": "44832224789384222802515905590530188068",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i16>::cmp",
    "hash": "17570561132490819092874960552795184458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i32>::cmp",
    "hash": "842267059997019422815333829425931124000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i64>::cmp",
    "hash": "131203065817488211067140136749599673893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i8>::cmp",
    "hash": "273822593351941059516531358367108661190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for isize>::cmp",
    "hash": "5379374555789658073707012302374996835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u128>::cmp",
    "hash": "1131636666458486906514966799554721553883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u16>::cmp",
    "hash": "78730284242200430723749747438658132860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u32>::cmp",
    "hash": "131804240691040385559237509421631119204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u64>::cmp",
    "hash": "1089932391761665036016414866145987101524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u8>::cmp",
    "hash": "4298436512004098368501497010512321306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for usize>::cmp",
    "hash": "951858419091851333614102360024241858063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::eq",
    "hash": "4705100405533686565995074127689304415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::ne",
    "hash": "1429062094026820723310786334394082734490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::eq",
    "hash": "1802889178136868040118343593200685347686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::ne",
    "hash": "178554573903023165771469903548629224914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::eq",
    "hash": "15518699560175228058918609018343356989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::ne",
    "hash": "93438172312179898191465897835311049562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::eq",
    "hash": "132412117790542443258465150605224583056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::ne",
    "hash": "155140754874107391946791271500498011272",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::eq",
    "hash": "98567758370546986983125852220078410127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::ne",
    "hash": "35902004169784870955892667614762650595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::eq",
    "hash": "25228437426877576351635482740751924775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::ne",
    "hash": "47292217725132162384552093565156223818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::eq",
    "hash": "53662210377722117247255803692570139662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::ne",
    "hash": "17839973167024825035303796143882736645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::eq",
    "hash": "84854157009096793184505630589693821140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::ne",
    "hash": "4523606285266326479107799930613427596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::eq",
    "hash": "46481893354104515173031309152647932738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::ne",
    "hash": "4050526925845494852453066671974997164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::eq",
    "hash": "1674849932610625866118370104244658210822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::ne",
    "hash": "67377197155755049242124838670677101573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::eq",
    "hash": "102394854822679185511757346022704137097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::ne",
    "hash": "966830624825446352312094373941736813516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::eq",
    "hash": "66112845269262938208238172803954980118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::ne",
    "hash": "127268315914801632215788024717444007960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::eq",
    "hash": "770689426483228761223235743246575806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::ne",
    "hash": "118326583535237364012713187347196655489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::eq",
    "hash": "64201773556620695745425537250792946260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::ne",
    "hash": "1172093201039334143510524123475294682361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::eq",
    "hash": "99976419681519545577929510319272264645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::ne",
    "hash": "501638087040665454610983510760598562478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::eq",
    "hash": "14788582008995232797761326074092651079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::ne",
    "hash": "814362674021914825717686245777359703992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::eq",
    "hash": "463280735582930019114404485781406104133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::ne",
    "hash": "167899847990632413701797351830072679643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::eq",
    "hash": "50268492807635183487245076908425358872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::ne",
    "hash": "142470248864388377168870267173636394357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::eq",
    "hash": "1320467760788560224514230630305072675871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::ne",
    "hash": "28385238908980352326805070693895050864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp",
    "hash": "1414541300270199418213168766429460715197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_ge",
    "hash": "578825596355387149613395567298980423769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_gt",
    "hash": "18978848694670348275182692016708428262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_le",
    "hash": "177529187826170619114976296329021118707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_lt",
    "hash": "1115226253549215040310617354234484519419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::ge",
    "hash": "798551639269656365810633668857724600431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::gt",
    "hash": "103748085360982771628096357783467833374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::le",
    "hash": "1604618878034127788917555461967531612844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::lt",
    "hash": "102798952029638042176319523404642444156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp",
    "hash": "359362747701919629717464054427512026912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_ge",
    "hash": "71264527894865437414010551682653003543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_gt",
    "hash": "161171011629462626583117577797162402362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_le",
    "hash": "163920037673336650801186132432189168010",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_lt",
    "hash": "399597032967171941914036882222973238490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::ge",
    "hash": "116941670053223182849548112347422362172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::gt",
    "hash": "42680075303052524965485835578817634150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::le",
    "hash": "25191063086834228011728582489039895343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::lt",
    "hash": "1690201120002870263910426166964932573304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp",
    "hash": "24162148448370354589733188262820661775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_ge",
    "hash": "77570750049454441942845132557359668124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_gt",
    "hash": "105319187994360730337130640445778098382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_le",
    "hash": "1175159422002408012410682921135195731807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_lt",
    "hash": "64371128778089058202286036483345602485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::ge",
    "hash": "1112776653218206363714268674996192728274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::gt",
    "hash": "782623629868165146717175679726287462758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::le",
    "hash": "52333083893762950753975300513354069894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::lt",
    "hash": "1072726330345218873818086691183427976262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp",
    "hash": "5976169314198244501162287379919144072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_ge",
    "hash": "1143316090739976730612708710701624315763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_gt",
    "hash": "5802485527763915903785816903541984550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_le",
    "hash": "74370977747920265178084032885873630739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_lt",
    "hash": "1387163546711210556615505660394295610840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::ge",
    "hash": "16247735014743643556170438868286695335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::gt",
    "hash": "1795146981124003409014685080961516332493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::le",
    "hash": "125470925375554590103042773218841190787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::lt",
    "hash": "330097328533676009316647207291422362759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp",
    "hash": "51253921565357424419363665474916532429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_ge",
    "hash": "1201694889440830776616491155782243712353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_gt",
    "hash": "8064556355725971666159407891176223724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_le",
    "hash": "105204828085430851265042250988438514413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_lt",
    "hash": "67046926271757515012646727538693885780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::ge",
    "hash": "658078132255476494111548478521730703813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::gt",
    "hash": "469220993544944414914793290462524071579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::le",
    "hash": "21116977571499421344231392672037243897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::lt",
    "hash": "40773573738061859959602751174711918062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp",
    "hash": "32741184074212339817025314919489807319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_ge",
    "hash": "1173149172762998377418276918221513185689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_gt",
    "hash": "158070074086519068765694059185536281341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_le",
    "hash": "157467864489038012342887292173163315993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_lt",
    "hash": "1822179160837771135816988259484768122430",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::ge",
    "hash": "68339023766398858555440975147593137171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::gt",
    "hash": "9674521848752756613767926320582986339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::le",
    "hash": "938692198099078774712083219862555622919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::lt",
    "hash": "171966161495435417465664914131710370997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp",
    "hash": "511532948149704845711189102103753452552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_ge",
    "hash": "341477888021074005512263839230117409292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_gt",
    "hash": "98038596223338175935015569615538862549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_le",
    "hash": "171772693376941040631549184287279487111",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_lt",
    "hash": "53291966586716576161924084086348413938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::ge",
    "hash": "50955014916640454661837898389233919200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::gt",
    "hash": "40375971446719616616292812952070776740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::le",
    "hash": "909252076882372822714321152903899582909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::lt",
    "hash": "432643872418970768815692863716383369432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp",
    "hash": "163550080227793864966356638535326483641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_ge",
    "hash": "89754109746419697064282609422311153699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_gt",
    "hash": "33120969441997411617499568395943427527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_le",
    "hash": "36819412795964640751256964026380709160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_lt",
    "hash": "1215348657450408908915707620005837030616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::ge",
    "hash": "161676835738211674035740305725907625183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::gt",
    "hash": "76619691553272127929569312204715869164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::le",
    "hash": "17658178577037227397858916360997625917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::lt",
    "hash": "1213853443284027005618058598546630235512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp",
    "hash": "378067185406193463012370735721593125470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_ge",
    "hash": "317792569590250014914282631836499933273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_gt",
    "hash": "925527185545600121214320941965971897059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_le",
    "hash": "967213496975972407618309591448712697150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_lt",
    "hash": "40594718373777861913173333482836340135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::ge",
    "hash": "1535996575152168769915549877827737279774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::gt",
    "hash": "1262279423235411172410734952325013040644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::le",
    "hash": "69754678775755535297499542041512795014",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::lt",
    "hash": "961413065080689263112368134397402718944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp",
    "hash": "119929648751817687643890860233822170900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_ge",
    "hash": "47589363529059518557164846191631812127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_gt",
    "hash": "1569615108346367101210354453684372262973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_le",
    "hash": "304975284974325326010269844088334472878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_lt",
    "hash": "1817930959233718391013674952392569718213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::ge",
    "hash": "37605485286327083705540910950398614470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::gt",
    "hash": "515369855418007512414387965608362668851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::le",
    "hash": "1794809666010129108811414850818778983482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::lt",
    "hash": "31971559620634993072497414611837921172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp",
    "hash": "2859281157529461291817402771229094178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_ge",
    "hash": "1108596952885060690113919593807334306167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_gt",
    "hash": "29557147755429277923355210438705404295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_le",
    "hash": "16857087145812454999123125049855976483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_lt",
    "hash": "1012036154051267487610935974485415595462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::ge",
    "hash": "1357844897070325128016688287209214308086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::gt",
    "hash": "954451088741779958915780013560057788449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::le",
    "hash": "97944781607954234714933777742521747758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::lt",
    "hash": "59431585877006832114506841815936661435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp",
    "hash": "689348305308456613610193932127614414004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_ge",
    "hash": "74238220381331612411106969544844414137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_gt",
    "hash": "162856045306888237812597494865305313763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_le",
    "hash": "1205319475555766320017072830438170774958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_lt",
    "hash": "150601667537082114577657478468856106029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::ge",
    "hash": "128530691637756161902288255534984213898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::gt",
    "hash": "67579297537116726217259322251380228589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::le",
    "hash": "692745909670683610717943687571091860832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::lt",
    "hash": "177500186369641598656848646804160604843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp",
    "hash": "1504894046191329342516642283196831270142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_ge",
    "hash": "4198955234369094945978331441190929155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_gt",
    "hash": "113721095776886471043363431771612134308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_le",
    "hash": "46995294116883531787698078568940216452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_lt",
    "hash": "1098066212123074333516856618561954779120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::ge",
    "hash": "103444057591425912974560874025365600988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::gt",
    "hash": "1334043413188491969214517283895342564103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::le",
    "hash": "43973918452349306445740347792719101674",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::lt",
    "hash": "585929059500562879912576476726405500891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp",
    "hash": "97857633285368943681354350891308659595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_ge",
    "hash": "3618889498771154404696266738403658285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_gt",
    "hash": "162939954678090397912888157844254535032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_le",
    "hash": "403813540871790394313355218333123519238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_lt",
    "hash": "224538569773332953015935354565133478118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::ge",
    "hash": "1250127290689641395013554160309947391491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::gt",
    "hash": "184387475556752258705797486417760904645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::le",
    "hash": "339429075237884379413705816082025146619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::lt",
    "hash": "82654341932789732147751919849221457004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp",
    "hash": "177204132674385933317258937504706541492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_ge",
    "hash": "128841769378838719667823853324957460308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_gt",
    "hash": "165631093884235901911340502259391976001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_le",
    "hash": "107348173371221698306089360007976222698",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_lt",
    "hash": "7525438604242668256700235155720471681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::ge",
    "hash": "1431354684681232682213532060815840762611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::gt",
    "hash": "644738972691477611111440489835984167081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::le",
    "hash": "73823948922687090493490572363404488201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::lt",
    "hash": "153871104070145767316778160342330240743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp",
    "hash": "4976469618670056178712128564843409920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_ge",
    "hash": "1276924848331803346612424721148379696422",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_gt",
    "hash": "1759615334014351544818399444616972264823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_le",
    "hash": "1775229380384845135716104350028784713627",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_lt",
    "hash": "504506494268084635912923131009762231740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::ge",
    "hash": "782504771221663126315856838856334729028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::gt",
    "hash": "104296872960810518573767383121132081425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::le",
    "hash": "115347817357415588962889507446769987335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::lt",
    "hash": "54685371803764063204690065054665066907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp",
    "hash": "877085482244590541498241263273192687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_ge",
    "hash": "179661276308380416043908849496757309702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_gt",
    "hash": "1100107231971130229214132907963306794472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_le",
    "hash": "535861037408648390517583728715194186024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_lt",
    "hash": "2555464184068495982191126990705662077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::ge",
    "hash": "499670831053921794217163067823345305002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::gt",
    "hash": "1823693009941540177813329131996096504992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::le",
    "hash": "1283469796163921542411319081112879521884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::lt",
    "hash": "26005865984918626858637243729294095122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp",
    "hash": "96628072369026310369313522421454283121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_ge",
    "hash": "1548863975034644371418113953602308266846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_gt",
    "hash": "152030842626583256111932459692417043153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_le",
    "hash": "136946971767327480267949460325330052198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_lt",
    "hash": "1214050315828216669613460239412280975881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::ge",
    "hash": "1086880474753072881916750292298015254856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::gt",
    "hash": "587485916120659342113526814978768353585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::le",
    "hash": "1186658527347102749413053744485431793478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::lt",
    "hash": "155146884437592745449279657258619050520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp",
    "hash": "12056847098724419635546482860389617832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "5401272748005108225170015231844042415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "8106237640557471073580597645246276389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "492233870384668259417646718277520613131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "85436354481777373298678937161968822808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "67272556067146161882674407005627671670",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "145859362768437713122255974850783963947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "649373533595446747616634326362916258113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "68691467309782099588566504033335306113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "142095150557611732085601685115493352309",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "4047051432235026783944635623816623002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "8759826370357264640712844467855374887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "987003126600730429312936607391211602970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "16330166665644353718187662156311451106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "46138308164662925421872131734313820414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "922371780220321241915961426071415444094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "30943267019948841189819240036255568574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "11540754517172685714952890080583928020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1657647698240050611110600248014284790678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1584507318570215242217093049813184331868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "605022253927063737518373324847650302490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "113194812208013255087998247489448877960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "1655810091731811610911551844610285981497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "149684059415400330131224220641522900093",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "236602267344438528112569534307232442444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "15080030101056987978349956702811452423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "166802358580199115719878010896079132113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "548163622760939740816876510990731455391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "1084895836427789824717598742751658306639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "34890024067839659768026381397380918139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "167708659183710072111515128342092549088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "433207813363144498614421505327452795449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1231920946327885171814833090428139865746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "1214858424165111957313963051426664600400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "94526677244680493164919154072316679657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "93978316644746463992277797426831022622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "440086421632680266711470680405402503739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "147227011374976596589077049069025332704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "79501386549668259428026726782306385145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "53595793617303824321148836128309304338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "5317042478714973718750854311883021473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "119408407444599371510815039566879659785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "59245911038507173017966681126328345067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "1334842237500446619917057637565054429902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1483028211588406849813308090296863861059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "117969322134786505349670780818056937488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "488821708153327801840929483641102328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "890139287041388898414349884129634908933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "1231465154010309634711140755662905314330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f128>::from",
    "hash": "110881469129293374461689505924235041315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f16>::from",
    "hash": "943413464529794757514462316010205831773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f32>::from",
    "hash": "153326820821773873772091306862541230034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f64>::from",
    "hash": "995222203227735323514928508668633191233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i128>::from",
    "hash": "22208284725177795623594570492707797552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i16>::from",
    "hash": "24773051652261842687887471551694823272",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i32>::from",
    "hash": "10076492891954951661463953691852747771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i64>::from",
    "hash": "1531636480009823003417836788135279994417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i8>::from",
    "hash": "3610705182928446304538100706374143982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for isize>::from",
    "hash": "1282186088411117321813548059107696998563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u128>::from",
    "hash": "481215133607717616817819682460276866838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u16>::from",
    "hash": "165416586658890695728115009353858882055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u32>::from",
    "hash": "180655170006001294295555006423100495712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u64>::from",
    "hash": "96621402837380680721333145943833842130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u8>::from",
    "hash": "481341513349839104513191774250718025971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for usize>::from",
    "hash": "653215507652934411316052840977792002238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f128>::from",
    "hash": "1636549345474812061013973441761651529195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f64>::from",
    "hash": "712714154425398019111118482260956842293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f128>::from",
    "hash": "20309801154002515405384324529433307352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f64>::from",
    "hash": "61200987496754660668246785930410746099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f64> for f128>::from",
    "hash": "1592301879366521520817174526498778501021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f128>::from",
    "hash": "1450849970472511162017117987312594733759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f32>::from",
    "hash": "943643965918024664911246988049271230568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f64>::from",
    "hash": "82003143081312190001139816590866125942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i128>::from",
    "hash": "457496591895088517213949106287356378673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i32>::from",
    "hash": "1788629259643413256310066874117969377071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i64>::from",
    "hash": "148445133478272514866189385002934463197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for isize>::from",
    "hash": "1835795815221520146215710495905409119120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f128>::from",
    "hash": "25687510345656977010211740413376145232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f64>::from",
    "hash": "5763033272886548976825648368788526617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i128>::from",
    "hash": "150479046948171015539600662717815409579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i64>::from",
    "hash": "66962369661388082982207527549902408234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i64> for i128>::from",
    "hash": "151927195810333452646844682674187077022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f128>::from",
    "hash": "120822326223285725755884898012734145005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f16>::from",
    "hash": "1559125760145834628111155875721066100447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f32>::from",
    "hash": "17715390145897254033052271743142466615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f64>::from",
    "hash": "1355244510466647580817166425951794710776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i128>::from",
    "hash": "53431865726769579418196589720896411073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i16>::from",
    "hash": "30283517204377103806255872306696784344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i32>::from",
    "hash": "813983002832207557312452352074528357945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i64>::from",
    "hash": "1367746607511696500612315285726011880050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for isize>::from",
    "hash": "171343897030491116914606666418528160533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "211986369401987044617967638233971687510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "16853406912172615815062719204690378491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "175907404212014642574398113010912783790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from",
    "hash": "890780276406736165411952470103626347292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "281966997100713716612760001486205325065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1561935896505349220916664107205603470765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "481358386426761425015465717636004376629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1334211500842357054014963469837480729728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "1149563802661070279112925529790459673310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "22209673400449390296392524149157592039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "435320218411848390415377875750324655671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "917337238911893277317248306654178875483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1535849854977822098582903738657966392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "107643473990792647399423109426162488688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "132725541548688574921645568285100311920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from",
    "hash": "82583140954815741655994436524216072866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from",
    "hash": "117544866638536046042120119322226443831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from",
    "hash": "127269044212056042416361572833816964792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from",
    "hash": "455516869522657812813437576204583924689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "75561233371376533003535322358288847451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "179995470355608941007455558143454400811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from",
    "hash": "4248316978463551087436165207422129161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from",
    "hash": "6457029689964507203178864866598804619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "462310999085130904512053733482402481213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1336840453889327497111246176267694428673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "41181866433850166744086444798489360241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "171413817209775049727131153442028994484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "1771125921055871951713496392825014292409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1038385984053301623718264596491225047981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "963478781734699289715715729937152839233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from",
    "hash": "79674669660354613031460495462294931780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from",
    "hash": "1400114409259794364717424708612521604648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from",
    "hash": "1343267485601402310618411068761281447039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from",
    "hash": "8344180280606181317958394437351588285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from",
    "hash": "1727499930539621677515839820266943345032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f128>::from",
    "hash": "179099580832712496201700405953772941475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f32>::from",
    "hash": "826733254080854553717066262962171116076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f64>::from",
    "hash": "1035406128255351553516374566813031483535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i128>::from",
    "hash": "88463712728038489297687034720269691365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i32>::from",
    "hash": "1239064726111999912818403993094734668256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i64>::from",
    "hash": "3939359599974365315150502200455649734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u128>::from",
    "hash": "587790825369494559114530670307009668497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u32>::from",
    "hash": "11426815723507955575587511513574362933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u64>::from",
    "hash": "98734322721287726416755294233666693251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for usize>::from",
    "hash": "59819684876446801767075723074766688892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f128>::from",
    "hash": "162625874690228257243120877627144166591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f64>::from",
    "hash": "153476614698454871217630913550117702265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i128>::from",
    "hash": "37471479290145605712541564470327110274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i64>::from",
    "hash": "70429293560803509951211064692325307128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u128>::from",
    "hash": "138949011704345311982228946342474831185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u64>::from",
    "hash": "159849905535178171994512809728570541703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for i128>::from",
    "hash": "1233961909250454624712214517732852015719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for u128>::from",
    "hash": "54002317748711237553487300900479183799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f128>::from",
    "hash": "165807714005562093684318538498193440143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f16>::from",
    "hash": "64935567890631118014798175066263270058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f32>::from",
    "hash": "1307721532483893329910126701451467101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f64>::from",
    "hash": "1011852131942089074413066384106619733269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i128>::from",
    "hash": "466062346049362442418086799501421406128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i16>::from",
    "hash": "103329716819318152712058165718453590086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i32>::from",
    "hash": "292117316579397413710634235207417793004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i64>::from",
    "hash": "1071260507850226764012830939197367188988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for isize>::from",
    "hash": "1777042889100457519316034422711710978952",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u128>::from",
    "hash": "14894337966590458426071691121360581177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u16>::from",
    "hash": "969963374678177204110420628043085256328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u32>::from",
    "hash": "3814273895537324543754978978296271406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u64>::from",
    "hash": "122310523491784190453861579386485975132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for usize>::from",
    "hash": "9122690305665940051388962439719640221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i16>::try_from",
    "hash": "4538192406421141883864893557081945112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i32>::try_from",
    "hash": "62660601074982240816181283978054462637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i64>::try_from",
    "hash": "42437507404818177214700403759361085110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i8>::try_from",
    "hash": "1487322809842624433212696234650149141185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "490665195441729151715653565462279499159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u128>::try_from",
    "hash": "1251754022635477288712883773144532494613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u16>::try_from",
    "hash": "1734677354952893320916985332689785538213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u32>::try_from",
    "hash": "122941565781780903027752294908773162930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u64>::try_from",
    "hash": "75534695021024005737062263342264502429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u8>::try_from",
    "hash": "280332791388163703218174512005062262441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for i8>::try_from",
    "hash": "1277123308891564712116214062392749521765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "393625597331874605517971395067887605709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u128>::try_from",
    "hash": "815295521860543473213507395237256255193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u16>::try_from",
    "hash": "412913662545761740513587047892691047668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u32>::try_from",
    "hash": "1086412315642879459015698569764454717774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u64>::try_from",
    "hash": "96388879797461152403459722039853339424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u8>::try_from",
    "hash": "72217782953430566361602673187908261660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i16>::try_from",
    "hash": "114508080554995412910812183738484241692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i8>::try_from",
    "hash": "4679365242577356812966424623224137671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "1709605832494208056510887226670978677759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u128>::try_from",
    "hash": "164557049878527263008045228230705624107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u16>::try_from",
    "hash": "1618529254100396595012168917465903472121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u32>::try_from",
    "hash": "1310216450780391402111897335122167690877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u64>::try_from",
    "hash": "98692679274177573118020741553755499413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u8>::try_from",
    "hash": "1700193759597639239413678281338525035904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i16>::try_from",
    "hash": "1014586502611131556915851852336351214813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i32>::try_from",
    "hash": "11309332498749245251551184719839612015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i8>::try_from",
    "hash": "861509496255251384014906783499883434295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "25196248692627453366969155254604567412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u128>::try_from",
    "hash": "78752228167439505804250867939782585802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u16>::try_from",
    "hash": "57200868724106176436151421074557879957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u32>::try_from",
    "hash": "958696317549386270716553612277697463463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u64>::try_from",
    "hash": "685193118118066073214409510240539797414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u8>::try_from",
    "hash": "82865707128871457128382532429109324193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1649813921944898735214804333868758915732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u128>::try_from",
    "hash": "289670983772250962412102020473200034150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u16>::try_from",
    "hash": "1356555665482938368815384291088555716527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u32>::try_from",
    "hash": "997841522642062463814247061572799347211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u64>::try_from",
    "hash": "153512825233445005174926657861700592299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u8>::try_from",
    "hash": "154073490075111386464231311920916592319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1354741613145135513511960146377491558174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for usize>::try_from",
    "hash": "45940308187990342316901162153738194162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "15717250854304448414630306717568813625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "1522034522506141010316540940465769238689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "102108967350482740364772675218945681550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1572903685735413491715868934484567363941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1314309122821070688115882548344348124428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1072709564843262791415694473960972161216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "83078783730028161686026674626498830763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "147213798182930512944828667552061969907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "20320493428326090682621279547298407738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "518610475233990206215403414472018282694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1769738144852057373113184233342804574701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1053449041932183609317149239970898007672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1778773479431625725918329332268615471053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "15855403606710377850348007082476809831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "63187020536017577826862576253144516700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "8304385509813519167988389567687956076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "5514037648247854654939543182072738400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "173432340198841358194028714009143010957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "388421912130703821610682968538025035509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "750913682718391462715608614132024530256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "42214756228354840932016438755479611106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "26393171200523237429071790117580388561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "375640239761296418011966311013687879633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1630074227461527505514396818611178883538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "65775577381548976458143393318261869703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "183972876700343110092405279682653075228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1777017558853012574317795006539299976435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "396171349505628337813231009658920916673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "100333068674706862642729686680778719186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "166464088866484357083087148073663662743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "314115466585863328515566185709459337527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "821717386435494016710168735495481071958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "165360786298112791493688983936333433768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "123645810772646764827980960962440061657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "134667863201385314383906963510258179599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "149556494295483936072313008762574268838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "69484446234441263517780613247583212226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1662386170598830784713678178161198830174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1087174621109703731617083413886329154608",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "121539451702105687015252439445117126475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "82760333599738257808649225298192418271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "142213130522902755208211529454541620704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "171692240992434301699411718777401509644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "393330132484874955811523471570260210519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1104366319478110563311771202791179829397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "1362259551857530934410689952790360721350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "348334336853640554917585022796094721848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "47173690878967506839830193201987838595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "746631223586739601510142897002639655290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1683686053353837962213790241114753264311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "181329365744103013374956650286268620121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "285675800804400279117207251280999482306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "7992010939295846494390145434093633974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "145939913579102054149628145816718703831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "51809478835012440499998241098913120533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "120364801285407589979718664597106040687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "160166718025072423825541942828222857140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "167298969618389432609904940085466412784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1304625473297771451916766516351359548812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "3496445921352185977454978318979264734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "17207645774061835367104532832761666632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1552269917522723064512869533150553339945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "14059908288244412067264074841756642473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "101873969415761086992391150550969636508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "137619042814357877162978068989413309702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "6334757834714704947900348337514805384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "742639116395046710311357772789392322353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "5168653897117637676639912666934099618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "161916336577111384666204188400262792074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "117151300588710136772560868213481075480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "29719468340842032587088898468659805644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "106796957892480493294280784333953684445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "5413481325324047442252837931860677096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "47146671169804290264821747818443833457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "30995577065753160059446937600976006631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "176937397292974680304063912356220913507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "174474336753990077998249412109452328752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "886048062335505579418354319382730867618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "128301109428885694142142033397778911563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "982860989849162676914267519410025584949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "12062361106146020284988529731219940692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "130645703080345668032313075740701857299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1158509954690249840411630832314241864730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "45452170662194084824434869395400584469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "947239982811197649613852317657427218596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1273760468522698563015752358382738107561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "1205795329296819017518371341994696167010",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "360997069194548555113515804884419943242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "77896919259892323677209393907012683583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "685304283901570866316416972341823507445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "4215017691470706918231813216318935043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "49273818326049251775574747161609866467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "161770343419858237362377481947825098655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "10657010424422787530605515432372577099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1361219679024897337915378929552218405269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "39636873340376137343106774995002572480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "52612662499907092917220628592403571503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i128>::try_from",
    "hash": "75015492120286512557135292435515319620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i16>::try_from",
    "hash": "244323777221945976214656327845054550221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i32>::try_from",
    "hash": "5025717771849593658528828316511282176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i64>::try_from",
    "hash": "89471132516378825217944066266675463765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i8>::try_from",
    "hash": "260773898664730415811234635234911941679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "121622353918536169868110385704230080435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u16>::try_from",
    "hash": "650529418484457217913848080141799517901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u32>::try_from",
    "hash": "14165028602063700738840279778495532296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u64>::try_from",
    "hash": "887255786740299707710663539413259431157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u8>::try_from",
    "hash": "554942904806076157511492795710487712658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i16>::try_from",
    "hash": "157389155447973253109663186896715717593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i8>::try_from",
    "hash": "170197245278581859257121351479598756553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "151401882062930714152954122067827720155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for u8>::try_from",
    "hash": "35110294467609769663729154177710953677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i16>::try_from",
    "hash": "6900075227148813683270538468672479136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i32>::try_from",
    "hash": "147195628745276788907233705322725807083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i8>::try_from",
    "hash": "127755239307151318601571671787491024679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "11538914254089016768666386455080985033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u16>::try_from",
    "hash": "10978774793629687985652421476673626725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u8>::try_from",
    "hash": "153464131300973601641642416030510450301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i16>::try_from",
    "hash": "146806450133021845304557390205208117501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i32>::try_from",
    "hash": "221650747662947686415784853532398849428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i64>::try_from",
    "hash": "1413619503549473020115069181025304695683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i8>::try_from",
    "hash": "38136655164368746638114341050348064949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "795538825742124568812936111800953946333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u16>::try_from",
    "hash": "155480039964775696911435596762176643592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u32>::try_from",
    "hash": "1819362859866972983210813863737370763365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u8>::try_from",
    "hash": "349388836515070263117106235618934920694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for i8>::try_from",
    "hash": "29110400871968463488367280935112564881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "89215101158655023258638402030680427798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for isize>::try_from",
    "hash": "1603501439950658534811412469765863972297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "179053240970654349517736197610115792062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from",
    "hash": "832481598805144994615466898310954649844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from",
    "hash": "175979209155424815063590590103927622541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from",
    "hash": "276265400912668155712314295144970764348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from",
    "hash": "149270542944262678161884354442224350007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from",
    "hash": "686432449587531607917658283569998762685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from",
    "hash": "887312898736951970515714058949524793682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from",
    "hash": "76341279559441553267910001009283930512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from",
    "hash": "12329037171111077987851932868851775919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from",
    "hash": "1150295400206833900517156408554898503930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from",
    "hash": "142167184552775961885838072473727197763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from",
    "hash": "29749083854982608764737743068688777179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from",
    "hash": "856841129201804427516381069780768072182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from",
    "hash": "78851457708965478578276188434828386052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from",
    "hash": "1350740886826494665115995981983593675423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from",
    "hash": "16845975225763695614598599085967241228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from",
    "hash": "161555724126986176214914386277950471121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from",
    "hash": "162578048776106731837680257411116527301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from",
    "hash": "913229656602733298610259876809839340638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from",
    "hash": "1496756623498288054016239435940434474400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from",
    "hash": "71424854477153499672116475120149513571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from",
    "hash": "997870149769990041517164388719883308671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from",
    "hash": "101662966660818002934971993480412837912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from",
    "hash": "92936935846902606246615418880539885029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from",
    "hash": "1015004630747595791912379695026358898485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from",
    "hash": "1383629528721614117815133976102628543400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from",
    "hash": "94108822326132810541460096466473317406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from",
    "hash": "173674837994074297469040267872491602758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from",
    "hash": "871581765649567640414086166492712856089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from",
    "hash": "1013877430135758112812231793986459527250",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from",
    "hash": "58490356918069641394900612669565806537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from",
    "hash": "1671623069452480280817746907609249615496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from",
    "hash": "34375090245907747683587413290874263185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from",
    "hash": "1829296751424163616111065659097144121709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from",
    "hash": "182631702639180035997581035291218990657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from",
    "hash": "2290980464301696929957012594850492860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i128::check_float_to_int_unchecked",
    "hash": "726079433780871972118089782038700119377",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i16::check_float_to_int_unchecked",
    "hash": "76846065561055953636861286331192677752",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i32::check_float_to_int_unchecked",
    "hash": "1105840258289478376917496062547132550484",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i64::check_float_to_int_unchecked",
    "hash": "1607076611541251598013816161143751354067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i8::check_float_to_int_unchecked",
    "hash": "127232198393010836642289269534061209082",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::isize::check_float_to_int_unchecked",
    "hash": "166057331918895372681798058056598137041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u128::check_float_to_int_unchecked",
    "hash": "919159616503615394714490857978644641280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u16::check_float_to_int_unchecked",
    "hash": "762567687678203972310208172292907155030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u32::check_float_to_int_unchecked",
    "hash": "547630039776911227011303061320692132287",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u64::check_float_to_int_unchecked",
    "hash": "6099386460527358425752548945285578685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u8::check_float_to_int_unchecked",
    "hash": "127577644685073215278982252595795016341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::usize::check_float_to_int_unchecked",
    "hash": "430210428455886362711680369326149647181",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i128::check_float_to_int_unchecked",
    "hash": "1238503737569176298710969684680541114128",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i16::check_float_to_int_unchecked",
    "hash": "124781082545870060694837878366712111795",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i32::check_float_to_int_unchecked",
    "hash": "128028370812126816906769636064756715477",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i64::check_float_to_int_unchecked",
    "hash": "165665243125173871492737109976075458007",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i8::check_float_to_int_unchecked",
    "hash": "149553111406340368392186777842108849819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::isize::check_float_to_int_unchecked",
    "hash": "1469844425945096498916047634334419397427",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u128::check_float_to_int_unchecked",
    "hash": "733635885393604379613211839354327018409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u16::check_float_to_int_unchecked",
    "hash": "320662952608664908018025284089592123742",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u32::check_float_to_int_unchecked",
    "hash": "832955836561587953311409149842976405716",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u64::check_float_to_int_unchecked",
    "hash": "1257469705707121330616589411327459450738",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u8::check_float_to_int_unchecked",
    "hash": "10751741823013818023296398191134491153",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::usize::check_float_to_int_unchecked",
    "hash": "114095987978617841117192053508032299428",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i128::check_float_to_int_unchecked",
    "hash": "535717628773564927115028078573492383124",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i16::check_float_to_int_unchecked",
    "hash": "122327743583945512562359896861349506593",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i32::check_float_to_int_unchecked",
    "hash": "15914092602755463446443099414265087857",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i64::check_float_to_int_unchecked",
    "hash": "149096560235410100961693381099705623699",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i8::check_float_to_int_unchecked",
    "hash": "278565233543276133114574024160846867568",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::isize::check_float_to_int_unchecked",
    "hash": "69479829321471664513814416686077760409",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u128::check_float_to_int_unchecked",
    "hash": "81600628266660511481556811809269509960",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u16::check_float_to_int_unchecked",
    "hash": "161990425485029979841639393033572354820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u32::check_float_to_int_unchecked",
    "hash": "156922579332899417779699777769463300777",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u64::check_float_to_int_unchecked",
    "hash": "789855232862000207016220004877566949897",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u8::check_float_to_int_unchecked",
    "hash": "1561096723784424062412945495968473449070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::usize::check_float_to_int_unchecked",
    "hash": "115600040551940030518265706276112820212",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i128::check_float_to_int_unchecked",
    "hash": "1797053298718753334516989592935679000737",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i16::check_float_to_int_unchecked",
    "hash": "605708909461772873713557109386036971072",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i32::check_float_to_int_unchecked",
    "hash": "1809788755676603313612647733018503500769",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i64::check_float_to_int_unchecked",
    "hash": "97485931389339903367038508051012279242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i8::check_float_to_int_unchecked",
    "hash": "81146701544910379369805920554754620569",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::isize::check_float_to_int_unchecked",
    "hash": "126319963542422124969754106204175646335",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u128::check_float_to_int_unchecked",
    "hash": "4647838360162947036712375254210294809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u16::check_float_to_int_unchecked",
    "hash": "449049172364678259714685126827463384282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u32::check_float_to_int_unchecked",
    "hash": "39037417319840225437501193300680936469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u64::check_float_to_int_unchecked",
    "hash": "132220176709584074641660094302990916751",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u8::check_float_to_int_unchecked",
    "hash": "95098321863824337398735446891713760654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::usize::check_float_to_int_unchecked",
    "hash": "815110889484150127713188982799153450452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "44079580132557189149119405005704277011",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1838331014151998300018433175973031483961",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "804780128291893270717820423925929219291",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "181784662393136958678816090115795069070",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "130698691990650916018985835515922972251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1845641955360503255846138250222486955",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1488462391816715253614201930120089077522",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "11730724307293188858771036594389856445",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1231702763028386188910417702548466961393",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "91309575742787656477628878949062773741",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "144283633057450585092814831691723601314",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "64129614312179739016863958659203614254",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "737922579534047993715170956098579935117",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1148563866410797181016240293840650961523",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "101164118136228858110880175645230662713",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1260901773754508712612096210960040211689",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "109879645269016353468283529109193143610",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "20436060268974233214050311491743601512",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "76607109502871830501012566677322817426",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "69081819939556161566419308768758150313",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "67940623518758351427660577377857441560",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "63679209777377928827683641944025143810",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "436854581169601849715156948120167207984",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1556663677496787656815486720952802322095",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "110914198619025852873757992277298697526",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "113535096377403267483922599374576910337",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "49263037049922874941518293541065938953",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "16723300390345264613291840202585968636",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "129117806223522257681700452763616861431",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "972991665308768853914049014023990286080",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "80770325037018268642490592030355544703",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1822541916439443845010749137963969319277",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "218123985942247697614720170254800902756",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "152893624166121920299168066647676813646",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "108550440170790255832957299755784810097",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "335773864946002004216869913674964403290",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "174932393235227750097991354328719934253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "672845901215960471216474666464404245495",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "131438310384313118381845015776702216005",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1466770448158790818017020548298467981063",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "127455470228365044341682986923926468973",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "182048774718547995256265304394810124402",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1185119888087790737517946093863833428723",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "4458507642948951713447815672393026395",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "135038594179304520894211779013906291661",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1744783933497153766616281402641270462124",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1116943452427658075613750228022606503956",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "178758624736286347612251012078369622766",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "178921627724020145346769171922551910683",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "17123886077140023362219011567988250627",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "596529247482330717010401943864917948842",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "124731329867565049873630233154170545062",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "48964386719443349394915789018226893019",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "319149982155814570214869700532103883588",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "86584347810471694295396492248498480568",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "87389441375716897297761939079044894680",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "17436482340198615023837924189727877688",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "34834934077115959728704883070655667408",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "92117584815043531107425697537370387014",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1685323503776637675710627419349275653123",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "175026519718665788398423375339945775925",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "405095277268038664415027748230304923447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "118006405255698060978371923961082519105",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1706394863524324637317652010899694282235",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "767134311387989459341122924490805943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "59255211929832738213058313522831467136",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "815543060870775170116620924859745031452",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "133512157196679128112083356968948422456",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "143676221585624098188531886842673096394",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "406414010289798875412076989969304465144",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "16738573515913363513582313823207260233",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "153923933293969966837302051121855551126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "115613520467591331777976440883050924990",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1698104242383309046211383585519654311868",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "129252438118887245989112911491057556033",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1572618934537650072617948344183383567988",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "137866467159705190649321203392666857161",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "137028121756864441252510042201275593155",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "763497047774187779111951745164952630622",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "867454232233218163413072925942267341649",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "61791152296761030839985331163057776293",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "484939708137177376114673524216935659165",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "320153343070592838810462979403239292840",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "28281155898878958838582299058940087133",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1253980267534122537315227903473468446919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "390599940468915631415616186457310879499",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "777696140381710203414113294411524162693",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1314349681413940880310269941515661309913",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "88884000372960220509652232407896459353",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "6635430333492727196375512189805885576",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "163593426663172664787089760468163223403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "58213511746194838571088629164776792471",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "6451958048360717055152022433166170896",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1325425925157268042310815027789955515191",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "750783495766417528315499488129404038901",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1252183640116402631317406605013102493057",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "9078037017800491045083142167653031358",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "922633130439773752112336817915893176059",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "150923689759452150564322027640064738425",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "87164717993846419015796667531028081243",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1384881957561302928314695822977417260350",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "822337458729399875716912740439430638574",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "157700283834690919578258648864223446463",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1675367019532491081228386958118677798",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "44437354379282791899746231169630719110",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "705354629905424048612812345535339443286",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "32053794783341623526861977666777784175",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "863418670623251604412367755954112231726",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "160154777791817429974881571022729838339",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "133905191532660506638046390971571524728",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "997308363997849308011398477111719008714",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1537737797781090203514070428541857976572",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "59171480088707388439901759598097660300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "116891335435806479069571000929066845060",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "98459122251741168844465893310939892570",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "138790161595099700709871894946405350423",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1760247004655014356711108267050169192899",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "111989361592128377065402862380642331665",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "173223676447478725775636059560726158862",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "123953371414464690335153477047952051538",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "81500332434579642248473904059295117014",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "318810509654180043811462298121136513416",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "5041241481389791515252479600800499296",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "183408557331880636551051721333692940816",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "157701122761925072145982749455602047505",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "156961335127584255613525955701427875857",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "173270528930318546627123704550889385151",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1359132736745732272112062575412609902981",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "95788522006357402865894858386931342267",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "285868147670718120918409845552461774560",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "699509494169777124317780927904079325437",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "983678475760384086515670558007698220514",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "125050390202268749633385602818975407595",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "17606603144827336724311356766344963915",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "94425741406794546227424097321916875214",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "11253154145397476574863240844950045721",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "675878629395695110114369379509841337961",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1228179247387040976915328715998507753275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1234415442404603348016278265489369329596",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "173739175199713241114369359673323015432",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "168436521485488462131726670320906399826",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "63050386846877686215638720594000675355",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<() as default::Default>::default",
    "hash": "34007422583350565266331217997887226878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<ascii::ascii_char::AsciiChar as default::Default>::default",
    "hash": "1269793736544104207112095330690687044137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<bool as default::Default>::default",
    "hash": "97113273368390197422399019494646759870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<char as default::Default>::default",
    "hash": "1745631581736053538713989223609175157472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f128 as default::Default>::default",
    "hash": "73435203943850270461466813298534963252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f16 as default::Default>::default",
    "hash": "1622206036435330812911107287461629669262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f32 as default::Default>::default",
    "hash": "58324239745448176079354504889339599975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<f64 as default::Default>::default",
    "hash": "1692730864480687644115505133513487257960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i128 as default::Default>::default",
    "hash": "4785567300361512032643061108134310925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i16 as default::Default>::default",
    "hash": "1179818934459369976111773881948486975797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i32 as default::Default>::default",
    "hash": "1002172265968274352711498511734125215469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i64 as default::Default>::default",
    "hash": "119375585161096607021051354898639892017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<i8 as default::Default>::default",
    "hash": "176821918491003468227626359749537396864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<isize as default::Default>::default",
    "hash": "60732786507886163233768065239918067122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u128 as default::Default>::default",
    "hash": "147224602796396873381982155428707872800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u16 as default::Default>::default",
    "hash": "465632265339412911812289834689314255991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u32 as default::Default>::default",
    "hash": "176721295741621449156391608664984007411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u64 as default::Default>::default",
    "hash": "67903923256944088678414142369330925193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<u8 as default::Default>::default",
    "hash": "811783093625119632316445809894821812924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/default.rs",
    "func": "<usize as default::Default>::default",
    "hash": "526522679742031129215701282242820325587",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::AlwaysEscaped as clone::Clone>::clone",
    "hash": "5842528753916618278220424385606769466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/escape.rs",
    "func": "<escape::MaybeEscaped as clone::Clone>::clone",
    "hash": "179049050490546689751700098731696226443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<&ffi::c_str::CStr as default::Default>::default",
    "hash": "13444961751981528944997733912099961612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone",
    "hash": "87428115072661550129081655070802804323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9591374333009235593271208878911185570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq",
    "hash": "5652746276482526532951808077332295579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone",
    "hash": "94602514312753425407799669423045651165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1824658960251005138113370366670541980583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq",
    "hash": "175462240773915972574804831616207090249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_as_ptr",
    "hash": "1047703664400379010015446684453067530127",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_bytes",
    "hash": "1255415957961084813615127735986876258357",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_count_bytes",
    "hash": "71369945185352613656241023409087560910",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_until_nul",
    "hash": "1832033004009284242618167281916379274493",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul",
    "hash": "741411164728339555515390482102074792029",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul_unchecked",
    "hash": "654339337585151027012276232736675304794",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_ptr_contract",
    "hash": "66239059670834457399223371654011819725",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_is_empty",
    "hash": "4671693157297985172964850900702267721",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_strlen_contract",
    "hash": "53626718322224190315683669763605021570",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes",
    "hash": "525722095231892406917852677570997698601",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes_with_nul",
    "hash": "1327275874981642240214061086929262949047",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_str",
    "hash": "864911414016978777811519501145437056877",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/builders.rs",
    "func": "<fmt::builders::PadAdapterState as default::Default>::default",
    "hash": "81986060615313457313520860313503674379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f16 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "851745407749290379018406218338085803070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "1074043478732182391112926816275990419436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/float.rs",
    "func": "<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "784694590963647726113650322247217948464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as clone::Clone>::clone",
    "hash": "1930369643134351532599693691908151985",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1020126266642071054913472207007823295715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::PartialEq>::eq",
    "hash": "138791160527873869081784178737256895373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as clone::Clone>::clone",
    "hash": "72208844353626943052934295674922735023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "12780908826539783988363338530004955797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::PartialEq>::eq",
    "hash": "13643550569496295414399782017898620453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as clone::Clone>::clone",
    "hash": "171074186052613514879790254848816336011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "106517918667363707052261391735220907356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Ord>::cmp",
    "hash": "112191534329724873754391363740074601252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialEq>::eq",
    "hash": "117415858753975547446665330806920238181",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialOrd>::partial_cmp",
    "hash": "293749126067864311313789127599878053988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as default::Default>::default",
    "hash": "326393976186220405615721807704106422290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as clone::Clone>::clone",
    "hash": "1163979745846561664418378404682540817643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "979338618432983950012547760744686033549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::PartialEq>::eq",
    "hash": "133931176326902353367209293050489626987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as default::Default>::default",
    "hash": "658660712720961258213951507188837886297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as clone::Clone>::clone",
    "hash": "90874146393869501127809933143331436743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "765900809292437332013261180106698574193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::PartialEq>::eq",
    "hash": "148003910060739080037599170770526304174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "<str as fmt::Debug>::fmt::needs_escape",
    "hash": "179685553147709381169171195521453669841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::align",
    "hash": "70678707815974353129270849643470718392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::alternate",
    "hash": "7145267509689093731605290537369000390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::debug_as_hex",
    "hash": "1691420332628550559216962565496140995201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::fill",
    "hash": "7159367661129856143545653945965765610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_align",
    "hash": "9007521356456792533806907033713747580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_alternate",
    "hash": "846166874642796147413812718364271769170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_debug_as_hex",
    "hash": "109970252845503685424744068744556592050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_fill",
    "hash": "1130219753616140084010892038682713793809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_precision",
    "hash": "172140117843934269071100695499597161982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign",
    "hash": "170302555131953217375919710574080836661",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign_aware_zero_pad",
    "hash": "1032211682820222384413209611390579221735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_width",
    "hash": "52500763207302495589956168323478942233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::new",
    "hash": "4960461046229976118108876182482238045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::precision",
    "hash": "1119964696083366461911820852378407356080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign",
    "hash": "51266055501168515924678692450285645547",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign_aware_zero_pad",
    "hash": "1771343344827971571013287530707954834772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::width",
    "hash": "399585986683883915517776172855848018359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::PostPadding::new",
    "hash": "398351056859449483913563186545567727466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl i128>::format_into",
    "hash": "1086209385341510176510103158953891687012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl u128>::format_into",
    "hash": "630485915823646312115331465672322828762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::div_rem_1e16",
    "hash": "1145650138279489223315575448589768813471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i16>::format_into",
    "hash": "231956014355166634110751427626506226918",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i32>::format_into",
    "hash": "457838685718972021714698446453874465848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i64>::format_into",
    "hash": "95853107405043786811596928977937496947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i8>::format_into",
    "hash": "59470590613191577478612161921179224371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl isize>::format_into",
    "hash": "46454659932593548669704197899626392044",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u16>::format_into",
    "hash": "100613057224074480319465050126696151881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u32>::format_into",
    "hash": "746101696596853401013260047847872139734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u64>::format_into",
    "hash": "35939501884814284193368265045229133331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u8>::format_into",
    "hash": "1676015433911415781648809207713743025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl usize>::format_into",
    "hash": "1126290095846938156016617993471406153541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Count as clone::Clone>::clone",
    "hash": "1554088839245077136510151124508746428733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Placeholder as clone::Clone>::clone",
    "hash": "63597180392563451051069991250281351682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Argument::<'_>::from_usize",
    "hash": "70377232471128639649303697310799707355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as clone::Clone>::clone",
    "hash": "1104163013065108252012527246222564001253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as default::Default>::default",
    "hash": "71024570808190257589295996218145184325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds",
    "hash": "263198087784864776812195884216474914753",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds",
    "hash": "994475640075799180313535985711534527745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as clone::Clone>::clone",
    "hash": "1079646048113631268211479430269231609065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as default::Default>::default",
    "hash": "14823643028052029119441293659492769535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds",
    "hash": "139995322274341144697005242497319929202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds",
    "hash": "64250329082848719811484994477552419747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as clone::Clone>::clone",
    "hash": "93948742315428612379557796234542196204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as default::Default>::default",
    "hash": "137798405421195991881467035531719510403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as hash::Hasher>::finish",
    "hash": "62195672093495243756755172463438147938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as clone::Clone>::clone",
    "hash": "1461738931035793229913553534843785018533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as default::Default>::default",
    "hash": "794755360944475058710056361763486199425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as hash::Hasher>::finish",
    "hash": "1042241345991782108671475608298315319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as clone::Clone>::clone",
    "hash": "124895290382739822298420522879387326013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as default::Default>::default",
    "hash": "1554038128847289597217480548674988257209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::State as clone::Clone>::clone",
    "hash": "114467121091522395751435869652266912369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new",
    "hash": "1397418372645629505414475577164745558400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new_with_keys",
    "hash": "163242560720530940153418761772316596453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new",
    "hash": "176915448371237187187727523878898680450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new_with_keys",
    "hash": "539836302076479601417138968118632292728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::assert_unchecked",
    "hash": "6962362284417680556415378392413733050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::cold_path",
    "hash": "16392690540146237040910799779868652709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::likely",
    "hash": "181482167990866638179327465910727112043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::spin_loop",
    "hash": "18373020802021212176105694317921636196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unlikely",
    "hash": "13839786837928674380824344641290470077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/hint.rs",
    "func": "hint::unreachable_unchecked",
    "hash": "1415106497522421883676194742336801697",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd<bool>>::bitand",
    "hash": "30198916002976542106519383074498473229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd>::bitand",
    "hash": "149726432661941012841297356226701119430",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr<bool>>::bitor",
    "hash": "580748047223400049615658800837973716077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr>::bitor",
    "hash": "2507167844270719911409577224799299522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor<bool>>::bitxor",
    "hash": "1058788989414364151311164712053811450300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor>::bitxor",
    "hash": "636886664426249497216143143734678711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::Not>::not",
    "hash": "801765893340550108411093272984453482374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add<f128>>::add",
    "hash": "14607330535173983345110673420579562205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add>::add",
    "hash": "43693930733865557919980655657768586896",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div<f128>>::div",
    "hash": "165759492977500845674181249245530021318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div>::div",
    "hash": "1395269995391731643816361417229257950343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul<f128>>::mul",
    "hash": "937393537330320601312101932973261810096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul>::mul",
    "hash": "54378920911427035314701255885275896488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Neg>::neg",
    "hash": "394423065267816652718054361730852442460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem<f128>>::rem",
    "hash": "856963678645497314013026592807985960231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem>::rem",
    "hash": "1547391027819502554445626708441535188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub<f128>>::sub",
    "hash": "1312960347591011848017316059755306187502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub>::sub",
    "hash": "70913936646483920962551670916797348664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add<f16>>::add",
    "hash": "1518544050861187998410991988279585893347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add>::add",
    "hash": "103115856711937122907130064416802340474",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div<f16>>::div",
    "hash": "397676938553692189318205461925879349552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div>::div",
    "hash": "49353684721349766954219920062440487607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul<f16>>::mul",
    "hash": "642791538068690016314414003823417167466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul>::mul",
    "hash": "33397512498167917877654842425212810295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Neg>::neg",
    "hash": "85694429161619584916171382546399499991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem<f16>>::rem",
    "hash": "51298458272709247277813577933910865248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem>::rem",
    "hash": "889572431355678288015007538431417159693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub<f16>>::sub",
    "hash": "12804566461415793661296811603803773576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub>::sub",
    "hash": "1775650084023323812111287391806817614072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add<f32>>::add",
    "hash": "819114713403531897016766014803264020682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add>::add",
    "hash": "1381915411273740277514139927899713919194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div<f32>>::div",
    "hash": "1198557465065544389813819428220286851988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div>::div",
    "hash": "161734663496156265532680160663635211286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul<f32>>::mul",
    "hash": "114416838768228613976884880590266833113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul>::mul",
    "hash": "134433280961495968365749748302845790558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Neg>::neg",
    "hash": "420701478371552465615673252871513215921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem<f32>>::rem",
    "hash": "87602053706245178701421791602792249439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem>::rem",
    "hash": "111198496606917153377377962209785949130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub<f32>>::sub",
    "hash": "117060116552421956541920207874643437153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub>::sub",
    "hash": "122376253317635974588934409289529834357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add<f64>>::add",
    "hash": "1289563298439215006017200719361366554733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add>::add",
    "hash": "1545467351319816495211348846997497099103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div<f64>>::div",
    "hash": "136226338570985839061843013871874865556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div>::div",
    "hash": "140801130159310395614721440006336150722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul<f64>>::mul",
    "hash": "840564797163611758512095270548615070236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul>::mul",
    "hash": "159712557707580949224238413837194974605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Neg>::neg",
    "hash": "2282011715756519049490894630621370591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem<f64>>::rem",
    "hash": "41298423586360136798052560308035769717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem>::rem",
    "hash": "137905200286923895556893979882418067801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub<f64>>::sub",
    "hash": "148996248639418979679135796677224378071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub>::sub",
    "hash": "942367861012716489813062009787796189665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add<i128>>::add",
    "hash": "10391902533421166738750213197112217395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add>::add",
    "hash": "832594674791021679514442585927924588736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div<i128>>::div",
    "hash": "114317876617161220897103388394353292484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div>::div",
    "hash": "335661006923872856411421850412589544313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul<i128>>::mul",
    "hash": "61713814130229622974783403076407072871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul>::mul",
    "hash": "163102848664168206211325945204040053035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Neg>::neg",
    "hash": "160458408559579061397000285785385280319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem<i128>>::rem",
    "hash": "26632295734421806198966312704019174000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem>::rem",
    "hash": "124325422069039523782415822009206141622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub<i128>>::sub",
    "hash": "153031473827211114005464607129595158591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub>::sub",
    "hash": "481662048887486371656179026575123048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd<i128>>::bitand",
    "hash": "46745873721100592773706426213297795142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd>::bitand",
    "hash": "13021371005650130479367473832524989194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr<i128>>::bitor",
    "hash": "178676037045623210268576632665689840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr>::bitor",
    "hash": "827708574593240937172795085673669761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor<i128>>::bitxor",
    "hash": "149158213939388264777642020644692077005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor>::bitxor",
    "hash": "223430582074632357018373612295081975060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Not>::not",
    "hash": "47616367282816038439259358258333934667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "576722938105406976912810709383945291622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "26637628455623450815527843475603830806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "127970294528806029796542124102698793406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "81528052013653522253209251866325907619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "523816763711867919117215291056335373490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "124333390814100281404785154876724100773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70412657910364605694696625158594310515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "397865040843327819111550422789249946720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "57497438191717731861475585374470222485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "71536946140959468898897462238358508294",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "66954461997409518115352697497078007138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i128>>::shl",
    "hash": "58931011180259013977041933776625368613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i16>>::shl",
    "hash": "57620777351772083711940521907085636372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i32>>::shl",
    "hash": "1051718923285868668116144834379889421410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i64>>::shl",
    "hash": "515269430802887698313913301586893156715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i8>>::shl",
    "hash": "26870492299732736935154251111962328306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<isize>>::shl",
    "hash": "10228127099227584486983796632732929923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u128>>::shl",
    "hash": "116222421562374223373284593051319796264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u16>>::shl",
    "hash": "7255728393621542815159905491535191832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u32>>::shl",
    "hash": "679832209443784315017873400054651118981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u64>>::shl",
    "hash": "507010451399988006710128744542894269676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u8>>::shl",
    "hash": "101980689012552870492296643582710498410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<usize>>::shl",
    "hash": "23420727086096370513681961918458725558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl>::shl",
    "hash": "845971465300152531812761404728728991145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1795591391526478646810996243956515506635",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "891961557737938330811509531992038670647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "1251667093086336443518322241805393337271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1080338921861575556415449562576551521973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "169948327540135668567599247398955628641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "817606217340461589512658605065702265012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "25902620620837424312138132045741165562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "684094698223526362915450056985617825788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "140219860969842724807865366439375814749",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "308718803898760825714291377300181018452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "432789105308362480614615986680024148657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i128>>::shr",
    "hash": "971779726311401079910008921618304006874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i16>>::shr",
    "hash": "89834844656498515932057229835903613992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i32>>::shr",
    "hash": "12179856177594533613662350192378017408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i64>>::shr",
    "hash": "40073749812509907574005587737100963563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i8>>::shr",
    "hash": "440780086663660733014774701491399486512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<isize>>::shr",
    "hash": "182088250441570603422630524635462857316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u128>>::shr",
    "hash": "387693787556494335512909044124532825342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u16>>::shr",
    "hash": "34884669497757640806515084887020077859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u32>>::shr",
    "hash": "172037335941770859754905328128574138615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u64>>::shr",
    "hash": "836926539099451969512941081369880301827",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u8>>::shr",
    "hash": "108100290183357660697424951938094372091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<usize>>::shr",
    "hash": "234639371447434317011885689222326453220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr>::shr",
    "hash": "1147179115595518222615676769092580718088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add<i16>>::add",
    "hash": "22973830317947593024332688587450450193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add>::add",
    "hash": "53245774328406326904806112541718268251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div<i16>>::div",
    "hash": "15124981278895610847352786637707897684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div>::div",
    "hash": "1089060127972936206610177472915065078219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul<i16>>::mul",
    "hash": "1595338203657994640617296084489428286705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul>::mul",
    "hash": "640338194822456533214505479440935516316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Neg>::neg",
    "hash": "61457271683391748363576303739135211279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem<i16>>::rem",
    "hash": "16065135598316871715449506490180889505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem>::rem",
    "hash": "1265301665121487312712207321896980545791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub<i16>>::sub",
    "hash": "33482891826277398311704361908328220548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub>::sub",
    "hash": "174988334509977311255332808119811636863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd<i16>>::bitand",
    "hash": "54579304439266861264028460125788974793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd>::bitand",
    "hash": "1384291668544727436912797155090650502213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr<i16>>::bitor",
    "hash": "95647175070617431222837554787324468514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr>::bitor",
    "hash": "33622909694952911974605693149318569430",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor<i16>>::bitxor",
    "hash": "187952945452273163813914124917927324829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor>::bitxor",
    "hash": "5518868572732046262572223791770830286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Not>::not",
    "hash": "111380734293756406566383445465020064211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "18261745239550273430389513193047032047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "138328743730274712863946671945171077473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1507047202394090246218296340901662327122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1456370896747121926918322440066946758112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1673955859439496053616190683232260104306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "837030531318202768316493945364163644305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "154586680972331597309926697789852643161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "26465213199896725457709041887130029738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "172762641168253923004451848933143101946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "59406410582092717113597534099951643834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "165446674110523233124486932311603702786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i128>>::shl",
    "hash": "14468488721511727146033305555327738574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i16>>::shl",
    "hash": "13414411082044022788868616293032141817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i32>>::shl",
    "hash": "73477917188603661751253131575789159502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i64>>::shl",
    "hash": "1477012738048319893813396678046325057783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i8>>::shl",
    "hash": "608694506903489509017032779779734596184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<isize>>::shl",
    "hash": "114643569927352439742537494176003453518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u128>>::shl",
    "hash": "1308996929500961773713633146590372957303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u16>>::shl",
    "hash": "63288071722449046094600394352739576108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u32>>::shl",
    "hash": "1044694989923928507712314365851119182139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u64>>::shl",
    "hash": "739692948161001025715732102307120951412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u8>>::shl",
    "hash": "72405206033504786098855456991813738875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<usize>>::shl",
    "hash": "96609476624198946958268066620997759703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl>::shl",
    "hash": "304017454761933752915783100760995675977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "318672771422442021816132881810628283463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "76920488488348108422428758363999778543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "4038231236109648107123490772116844891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "155384444644559448023704675307601049839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "98185568363298867595978612560898745100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "1526251674930587395313473124274489791220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "117693488321036433371576495495175384702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "66349226080214411454659483458221506925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "63519384021498683445135992045120444003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "87554071914096946162876289832474889574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "1050535669528077586318258997407654398847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i128>>::shr",
    "hash": "88993318026920160215386446118687177188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i16>>::shr",
    "hash": "3278808773968543185695940627759467839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i32>>::shr",
    "hash": "763641291042944023411306614262289919330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i64>>::shr",
    "hash": "24902338414999211465271498912203432793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i8>>::shr",
    "hash": "1227142108772046319811789467156388719785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<isize>>::shr",
    "hash": "63293082178990904343970672230275610033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1723238738866117363616705440530908128127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u16>>::shr",
    "hash": "25334866079705856653983500845799337854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u32>>::shr",
    "hash": "158997038828006975543125689017009731826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u64>>::shr",
    "hash": "1415125655894973604415330497661123053408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u8>>::shr",
    "hash": "1809158843232064225516107428330384641021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<usize>>::shr",
    "hash": "14156090617383576560329396010787286170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr>::shr",
    "hash": "199312953815998242210734904397586368035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add<i32>>::add",
    "hash": "1646016742198820570813305933378717977187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add>::add",
    "hash": "1378125194707347058710359697728485135915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div<i32>>::div",
    "hash": "712720761378380657917832130770586561071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div>::div",
    "hash": "691260060021289229115797052592732486156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul<i32>>::mul",
    "hash": "4425338319816054412067725099350324339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul>::mul",
    "hash": "38426543157764426915738436449456863354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Neg>::neg",
    "hash": "34729374320992161012462106249172725964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem<i32>>::rem",
    "hash": "170322526570633571805771989028601434399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem>::rem",
    "hash": "24085720549534801724292278559904273169",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub<i32>>::sub",
    "hash": "125808477302802184092760353607907705081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub>::sub",
    "hash": "121099190300592659609147260183545859870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd<i32>>::bitand",
    "hash": "1681604863922447937413184149748203062255",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd>::bitand",
    "hash": "1273086319164070411113279283836002941654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr<i32>>::bitor",
    "hash": "1108409024345719358411823985541679331036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr>::bitor",
    "hash": "8094231932808331345982210081211843665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor<i32>>::bitxor",
    "hash": "1149412822245450072012074151403950776058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor>::bitxor",
    "hash": "271453720080261399212729830254415072357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Not>::not",
    "hash": "825827340387038172411642428826025046714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "81525659300422839314801550880469269193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "679502465103800088217688081126536387375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "58383280420036557636757919552776532251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "5963844117195827695182553485280040193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "102030702717001267381283453360079810573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1040427414715311358417097746565684482699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "162572479092188413591287162953115008039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "64189943435079994724744566074915908345",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "134613790551388177511519385168395662826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "1797079872363021916517542840043465019238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "879468060823450772518393534048429041407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i128>>::shl",
    "hash": "53921018636382906793910654216550674414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i16>>::shl",
    "hash": "106146965883684222117512878650852042593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i32>>::shl",
    "hash": "293027247992434729916188444830947593624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i64>>::shl",
    "hash": "178987423106890999279098314820669163389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i8>>::shl",
    "hash": "24821708340853766689325977852397761991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<isize>>::shl",
    "hash": "36865235361175958056037686515707583285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u128>>::shl",
    "hash": "149685990520254264226822159003679826082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u16>>::shl",
    "hash": "103272711276135185578281676232532418339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u32>>::shl",
    "hash": "119254107463730098715691938937795437368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u64>>::shl",
    "hash": "111984872529994110878777062417507432767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u8>>::shl",
    "hash": "20101963881337448531122143516187723411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<usize>>::shl",
    "hash": "121130310457955544119991404344561548141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl>::shl",
    "hash": "16453112518012981811036465448485563147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "188778235668951759711390856388024054455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "159728373309303273104001791108481954474",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "971210571986476498810309850080176805398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "147539018494790427031165159007127676875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "1530750179539716941313301194142244971585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "46934227487134300638226195085870953941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "14729626018844445692631160355842364726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "153948227861028446029214747602890087205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "148593236157126815241268820567459301124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "26617388208557974199660689978125747147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "6594620060467567160740978875678884187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i128>>::shr",
    "hash": "66732566690501203139198173594540686543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i16>>::shr",
    "hash": "548941730763358935613972969546646377469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i32>>::shr",
    "hash": "1504443064224036403217141144366976042761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i64>>::shr",
    "hash": "1339598925238336213412662627583885013017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i8>>::shr",
    "hash": "870208363172991026717483611012804120909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<isize>>::shr",
    "hash": "34126029798408027037242422580447772186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u128>>::shr",
    "hash": "8890605633868814950312619104466059645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u16>>::shr",
    "hash": "425288586546857502618376531356334741019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u32>>::shr",
    "hash": "57301618174615440915006646499872826152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u64>>::shr",
    "hash": "109115995466379095237185756400202884894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u8>>::shr",
    "hash": "69476140844683409113241597024628771366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<usize>>::shr",
    "hash": "128034094513942649129946841676616469951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr>::shr",
    "hash": "361980757760945297917240965097325762538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add<i64>>::add",
    "hash": "164048429665284704212594519811408136481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add>::add",
    "hash": "321842867715153278114914446100132733499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div<i64>>::div",
    "hash": "114609333831249912911534931067986802352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div>::div",
    "hash": "442203165748230155218004339661345589920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul<i64>>::mul",
    "hash": "751087629937378656016687263155071169132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul>::mul",
    "hash": "833627924167967430011112135376860748094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Neg>::neg",
    "hash": "8405970081279781639553797432103530791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem<i64>>::rem",
    "hash": "120548647296291464515269334673085784992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem>::rem",
    "hash": "975090479010882587814294787064444775300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub<i64>>::sub",
    "hash": "178369180780830143681707461058210084277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub>::sub",
    "hash": "173966860468011860347683700593852977629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd<i64>>::bitand",
    "hash": "1481274182272974427016793344244164327525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd>::bitand",
    "hash": "3274592259735016465837754955452288668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr<i64>>::bitor",
    "hash": "151907825070363873262740878867496294942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr>::bitor",
    "hash": "933283198081616501014811450146389738841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor<i64>>::bitxor",
    "hash": "112930318554709106346454723087937492166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor>::bitxor",
    "hash": "40941922113763007468356941769268880293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Not>::not",
    "hash": "1711189889244927400513458225485979758957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "1631950419817112356612630333695520445307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "95117954947569898884809399017049231987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "165802443139633681348739930925821612892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "353649876170232384111509491951901014770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "728580479680029491412294838105184289920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "548653927270990668510122889651447635861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "308147776078805308813749732669257300604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1270830166844017684112836136070091665344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "16332945858623545741313145658360168067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "1285079477938495888816147851699768522447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "61832352292282978966862442104065825311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i128>>::shl",
    "hash": "110906851637583877666313805381257111022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i16>>::shl",
    "hash": "130337427772951674389301096934196191384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i32>>::shl",
    "hash": "873051519039907941411534991440657317136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i64>>::shl",
    "hash": "99959221071848329245381556517469783856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i8>>::shl",
    "hash": "79078032347431217165287110835181746831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<isize>>::shl",
    "hash": "1520572129424005698910288385791275539373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u128>>::shl",
    "hash": "71551238170180442239337489666773889991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u16>>::shl",
    "hash": "2193640256030866835223381083050996854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u32>>::shl",
    "hash": "140457645338391247342163740543822538695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u64>>::shl",
    "hash": "183143955606498962113707426267223554549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u8>>::shl",
    "hash": "13966515962821644661604332499378864626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<usize>>::shl",
    "hash": "964883148525320326616891725012756073891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl>::shl",
    "hash": "804525498719132771716668731768899320470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "8345430521518198079517805192410116905",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "99484860021144449902774110070542973829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "924101341392874771412605804106974379334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "74880631098257535166638609069660168723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "124332115104620223977597337538597877199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1759889616086202912813740694001498050840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "338456966924138736112609590238019423517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "162592631481603278478718711104222749514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "93075926809343513844272130092734691491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "156687091767423187616594134328908188185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "1145011882938170123717469389325123496276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i128>>::shr",
    "hash": "1492848220906123880216672645302039380468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i16>>::shr",
    "hash": "83136077058372592564292207716636450048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i32>>::shr",
    "hash": "1234770330059267505415576183800655542527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i64>>::shr",
    "hash": "894688824509343729413956607675792990271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i8>>::shr",
    "hash": "43082431284639128583036306446703008366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<isize>>::shr",
    "hash": "666583903717520367914974494295014103655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1461122797283733262818441836640900803285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u16>>::shr",
    "hash": "829155992614313492616142838777286556039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u32>>::shr",
    "hash": "103090846504445590435404757826065910330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u64>>::shr",
    "hash": "83807129587706899512117227329879009971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u8>>::shr",
    "hash": "55880402194727687315094899152454060948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<usize>>::shr",
    "hash": "1808913585004110889117220778241193336631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr>::shr",
    "hash": "113609619067028625628891754637666822441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add<i8>>::add",
    "hash": "42090862018665651255342609151695079520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add>::add",
    "hash": "458983039538613151810715457688253868008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div<i8>>::div",
    "hash": "571966270943819058010913161824843199225",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div>::div",
    "hash": "75134380128217149781833952590758085206",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul<i8>>::mul",
    "hash": "1196420960691931098412847424979264467691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul>::mul",
    "hash": "821368268252264736913684147667543633691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Neg>::neg",
    "hash": "97422812229093581193283237171976709770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem<i8>>::rem",
    "hash": "3684660533011333563738296819858297340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem>::rem",
    "hash": "6191136213985437765595895671777105322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub<i8>>::sub",
    "hash": "88182587971553560647227761065376158147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub>::sub",
    "hash": "119343366074213953192239545134880696966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd<i8>>::bitand",
    "hash": "1377675400646782439315445987995768500448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd>::bitand",
    "hash": "16019810956647806410816062042011691777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr<i8>>::bitor",
    "hash": "179885920272475584947411873487379407394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr>::bitor",
    "hash": "3862915553487709603373790963381726165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor<i8>>::bitxor",
    "hash": "160165700537658412656298289626209340889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor>::bitxor",
    "hash": "104272443061591556574334389349549520752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Not>::not",
    "hash": "1230983930510394211717157197341553923711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "152567651094936160353234325649507834090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "48018634931732763677270555276302057908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "18261525363885238737850730065169699913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "125124764787590659737332553689281497200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "12488401642998478343738439699166854007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "50471979309344536296044229671881543184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "923364553791711032916166283865384512975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "58165744535095431789597910584639208800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "150768181893285443447096795820958881543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "34948051444372766662170870639952290341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "136026663124727285038198120398964262635",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i128>>::shl",
    "hash": "597159477471130870018290248764787192264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i16>>::shl",
    "hash": "70476177457621110124328423946406534421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i32>>::shl",
    "hash": "110552563491430476767945577658163311027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i64>>::shl",
    "hash": "8800131341957234588539213547160507241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i8>>::shl",
    "hash": "1288451634428734213016931975453245063573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<isize>>::shl",
    "hash": "109269326986386257379614439015572037857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u128>>::shl",
    "hash": "245304109088131727818180095341515259919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u16>>::shl",
    "hash": "1208336102679847158414630766839337883395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u32>>::shl",
    "hash": "1831760761420251602916431911416064109754",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u64>>::shl",
    "hash": "760527314660467246516453776293900483432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u8>>::shl",
    "hash": "5346103125156430562327468812929571902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<usize>>::shl",
    "hash": "182898135672549570312252838811401089048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl>::shl",
    "hash": "1027080918921050148014486402160177404713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1753106966670995356715687533182312794805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "94386284202037628846998811649541325809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "7889752302774008739120368031335192727",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "771099203794681750914699453348823700041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "180561100817272585558981436736776900073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "40135371267315243637625251063902741814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "93386231016373089117118563041423590164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "20166217946156958212138810777141447583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1838778503393763581811874817153323796383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1699632291463461727218344195358711813581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "27878323848731885465074911149828576857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i128>>::shr",
    "hash": "1511172131827918790210971984805040508187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i16>>::shr",
    "hash": "165917007078900391778800053084488407850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i32>>::shr",
    "hash": "2652694196369760162489697834631095160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i64>>::shr",
    "hash": "469822270713634893115847900711241264217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i8>>::shr",
    "hash": "77718901332695223055199669164587486096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<isize>>::shr",
    "hash": "63516819281084176715428491552262964108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u128>>::shr",
    "hash": "150528167108329100662671422648890218097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u16>>::shr",
    "hash": "1722962286795093939211945392373243184530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u32>>::shr",
    "hash": "27640701675782891354668764473723973650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u64>>::shr",
    "hash": "74572482503859187148401914062058824228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u8>>::shr",
    "hash": "1517650289982183774211474869758502906221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<usize>>::shr",
    "hash": "135235852133298654889534150553449996298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr>::shr",
    "hash": "81278314249050646432812602166583991279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add<isize>>::add",
    "hash": "639904839237688230118021491902907716097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add>::add",
    "hash": "143300180171598554966053340575673744439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div<isize>>::div",
    "hash": "1045161825138900931916561247424885801184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div>::div",
    "hash": "28231130058152671699068401320741793335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul<isize>>::mul",
    "hash": "114043199947446593476214139193520503468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul>::mul",
    "hash": "559304653575291240811840817621697126046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Neg>::neg",
    "hash": "1721352087907853740014257002577132322759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem<isize>>::rem",
    "hash": "1036834873107148648014115011668408533845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem>::rem",
    "hash": "145814661070175108008122346274187422661",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub<isize>>::sub",
    "hash": "71443397231430156274032176343914431279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub>::sub",
    "hash": "9350244020028923114148129707712952922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd<isize>>::bitand",
    "hash": "166664018670287386101967522193647647876",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd>::bitand",
    "hash": "238319511775889677517662148869226892495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr<isize>>::bitor",
    "hash": "101593188608139526077094752115451786545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr>::bitor",
    "hash": "20893310807234486016637123110139660459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor<isize>>::bitxor",
    "hash": "1012888139979088797215577569318943192059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor>::bitxor",
    "hash": "127646408771367667916524609554895485453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Not>::not",
    "hash": "419533008474594235010808428410753077136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i128>>::shl",
    "hash": "30103239126630459448115257868855017509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i16>>::shl",
    "hash": "141523677025929653338396070285902637154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i32>>::shl",
    "hash": "74242228021848012821404628064170803949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i64>>::shl",
    "hash": "173169319532796765227549770039424861265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i8>>::shl",
    "hash": "84578645396550621628573914379055514713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1507455822423501874514119066943720969595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u16>>::shl",
    "hash": "1808705262200788313296061162245595740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u32>>::shl",
    "hash": "81573698313114856403252512051937802458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u64>>::shl",
    "hash": "5143326043680248678837444136662320256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u8>>::shl",
    "hash": "134603514244807450751335316075077003126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&usize>>::shl",
    "hash": "61748272639616230038979898064119212139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i128>>::shl",
    "hash": "183129209340267864966941087034959909389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i16>>::shl",
    "hash": "545236765472922399412630710413804335569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i32>>::shl",
    "hash": "1530023401258363195316335268817420079560",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i64>>::shl",
    "hash": "547842880936380818617334386481182964760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i8>>::shl",
    "hash": "1384621600966953361713336453328689803154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<isize>>::shl",
    "hash": "1474819917028438701614820484136539652943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u128>>::shl",
    "hash": "59821226098905760838439823151924089540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u16>>::shl",
    "hash": "1201360222549371597013038493402034707694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u32>>::shl",
    "hash": "98541774793206638629299573342267264645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u64>>::shl",
    "hash": "1162315963643463668612337717014468629504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u8>>::shl",
    "hash": "534538123561405160912910218227118069290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<usize>>::shl",
    "hash": "1374163358409499367617131475321670517605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl>::shl",
    "hash": "1217133929452249531017407852554993574668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i128>>::shr",
    "hash": "1257626193289621037910408828926293796594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i16>>::shr",
    "hash": "401997102352709109113359225194918620358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i32>>::shr",
    "hash": "1603689532523320753211025484663513680400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i64>>::shr",
    "hash": "14544357735292398714361908229885904552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i8>>::shr",
    "hash": "6978467086039407541768997809132409650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u128>>::shr",
    "hash": "278012771722352928512162148089302915639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u16>>::shr",
    "hash": "125073556872533329977272525008647983717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u32>>::shr",
    "hash": "113966147281288733665938774161580985634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u64>>::shr",
    "hash": "1590140012110959990213985275905656464192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u8>>::shr",
    "hash": "1246039569705107819311647661823896467898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&usize>>::shr",
    "hash": "30134252821298550313207630645777509935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i128>>::shr",
    "hash": "90360998129055830653970325086318183056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i16>>::shr",
    "hash": "1051900385762384284510537833563386149552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i32>>::shr",
    "hash": "10452802504283917731357452065719068293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i64>>::shr",
    "hash": "1507125845896179597013671091701150241936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i8>>::shr",
    "hash": "1414687796818086495016772850526558153446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<isize>>::shr",
    "hash": "1537706526612272270213301611268104940086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u128>>::shr",
    "hash": "56750337873897000676686900294540454746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u16>>::shr",
    "hash": "1306333519533764794413779627412810490871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u32>>::shr",
    "hash": "54831191363155187404412547806932678005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u64>>::shr",
    "hash": "622894871633702176011985320493934228585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u8>>::shr",
    "hash": "796384119680132839717496509486158960490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<usize>>::shr",
    "hash": "179594357052460315398669147787211131630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr>::shr",
    "hash": "916227360501164209415878645314249360189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "113938469538230938554096476754097919644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "73137690084383271589713274537364833255",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "310869392536540564513702282201345814237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "167377274007482588615664189324177761612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "70078490367505472874602013397174442190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "28917282525672319553634694806531374718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add",
    "hash": "60378082221489672658134098161910187202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "1675279489782469617213631458164785717499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div",
    "hash": "1183881044927715284615914224449998110848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "147769913678295032141177586477168312472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul",
    "hash": "180083089817946639398413687079554633369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "12646815724730625728411026220722561755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "22077765082572613331768232002835889870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem",
    "hash": "1648197845450544308111638020904431683394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "1828577184219657357110126192096267575365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub",
    "hash": "45433187021047926616443935831599725139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "1349038113009214603115092496899124047923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand",
    "hash": "61669064473567347708191842009254810903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "18979583815522883195470876179551281691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor",
    "hash": "605184930755976537611969080693039145820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "65197238455360370253816508701212166485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor",
    "hash": "86974981292080942706464922566234778224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "19740892553591114817266883467175615579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "95857052316822152283235921620640111161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add",
    "hash": "72346112558219235046596092012443139061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "57973265621160191614913046354836431505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div",
    "hash": "1306777937914815444912604983656018534229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "100029684461972110644894129536216795330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul",
    "hash": "165713366383125346548481014308346808021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "574774549979597583311960175019677599546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "1639823108353117391913149195811117446947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem",
    "hash": "896641577315678846818396029884822380893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "71151600018608212799855672859171468428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub",
    "hash": "764189853759696495014381001244559766850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "1189226537057901903114172123952918190657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand",
    "hash": "769438768429025898216308243159212440793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "158809313307463680769185219026704553985",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor",
    "hash": "500393846618484438513568248839008452787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "514402675797676112514875484011419048656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor",
    "hash": "806103283829064325213383574916463302998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "659872815964254236514890146574815239790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "599325085483868264711648261609001014048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add",
    "hash": "7069086816387855476507953045728492983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "9377507476841073517749055100094503564",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div",
    "hash": "1791592744521692450911263757178460705207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "440683386530711942012177192038498482514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul",
    "hash": "125297325416069890236694593620847819579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "112789991508393744471745755010782572243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "111207458991161538804704908706038441351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem",
    "hash": "1648354978398246864017770648067957926668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "780925561722304094913557013380638704655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub",
    "hash": "93482146160644402646274841043724763008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "1410917702176163511418307344019737479354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand",
    "hash": "54892587953798363484931565024789941246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "3085515142309510125599074969192547481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor",
    "hash": "149802067960455334912827314807976462982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1721605706553478032012969801878009793136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor",
    "hash": "2706256674075195854282939001951841110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "82465307163493313733369878278388041736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "1551448562476148108016176886814220091390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add",
    "hash": "18786175879278589091036891883404371231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "111740533869608101121252791582917881943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div",
    "hash": "1473745361171065549813267678803045993483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "633056233086167529312533571658456948312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul",
    "hash": "170764917902033020674751744899261186133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "79702281256400012121860829902948102855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "59301929823105985373403132736239244553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem",
    "hash": "89256061833298874138676374637260183593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "1216343584060733996917655479750486372252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub",
    "hash": "1036842214264349926211632597445529050989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "1307216264401476408712232176217955856899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand",
    "hash": "297463084841537053912636274857853668669",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "70111404814641564579633146275079539354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor",
    "hash": "1213205376297184219511751704162092192184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "6264861854130439642492266456323505699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor",
    "hash": "61939036601242373839763001059500335421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "13405628446102637717548810321701109388",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "573138316215909682810971425122646498916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add",
    "hash": "1129721228700492640617813005859672108129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "70347865502565470696907566717754377450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div",
    "hash": "179724273674436749456713994334611943741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "103085866205079538543453058865482307965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul",
    "hash": "129511102098597795469721791243103632438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "852825887461862685217231630923432432951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "43422794514406300935391558845422962237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem",
    "hash": "21733606648139720784567860373384057969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "124589833027750690075078648658378496774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub",
    "hash": "168174207933719033411879445659198152006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "165716719610216996619126168209237352271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand",
    "hash": "40679548901880790634790817769819559930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "592252792520972779610679525175870114497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor",
    "hash": "174425937886210509567942296534983248804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "84797197052642977304426427134738996858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor",
    "hash": "91876134766376109858274189875327526056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "13349850203493590847459761267872970861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1624996569003215158515396235646919070121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add",
    "hash": "1816773649743601392315557976337960487185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "98218432582134087758842363579040576403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div",
    "hash": "512333885129800401511258869461821267371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "605018558672255456911645341238009267401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul",
    "hash": "1632428812072373188717017451965686510929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "86790694028843625158492977999142551211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "10175310462894027835447561158374567047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem",
    "hash": "463296883576556002717260975705803118212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "63738914697258679567891260979200174458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub",
    "hash": "1099776027418888606417068124028557494997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "53484700480169340732583077199107195474",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand",
    "hash": "1642866768934124233415908874941163753672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1117814121036636518617655101323262290634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor",
    "hash": "13142449285945918421294394371709065504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "1430683129329995592411963714487256953029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor",
    "hash": "106064270116457943115271401682833456928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "528214848026272692410909242943256489381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "1418457847732022241818133574162516297901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add",
    "hash": "120624074535244055610954530170924349042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "58422224359360022464741780256833545424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div",
    "hash": "12044910284968630109646993649231824872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "99806224335815490927546888190700800483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul",
    "hash": "41967000880405610538298289382152450533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "1387469610510081207617617359153666721971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem",
    "hash": "26445665990569449823944579607459088139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "897997776090527299515486793610668811147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub",
    "hash": "1519648464566186099311954289502571351821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "108998589341557870811956358919330636262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand",
    "hash": "867418546470295476412483100988281200791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "1792365696683989431012438615461225604920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor",
    "hash": "447648879388635342716328856022099381637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "1601991425537747962210221223904444801757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor",
    "hash": "21406353996110965217504306127739633551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "51120875041836143242744408844095124768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "152712252246251233316730900410169683506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add",
    "hash": "6290583863832820078895384410527167317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "1038146105057563262715312137772025212189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div",
    "hash": "128778237945136799754777757564500055247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "57870019013558632369942635323933050911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul",
    "hash": "544634029330400026017886772162564759577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "102799935502263383881078677947570530411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem",
    "hash": "57527141689997729848868456420694941460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "141543372085509308405000713551287937937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub",
    "hash": "331732547524780193117742872117244386232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "1017160108180790962815504429453484039061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand",
    "hash": "102609036268273417635195257271756434793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "86651351269774730287832006315354568002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor",
    "hash": "950071264369265002214058176041833031772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1172242625181628543815725375469239251485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor",
    "hash": "22952311063559877086695396600522252567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "1803299081383678186917572978410293276146",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "92631857521177524912402539298832676829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add",
    "hash": "139212793777877387592605723422808682046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "1394380825765340266613625412471903355328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div",
    "hash": "133461939412749517191395948273322040550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "1009139825078517319712057501143843855255",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul",
    "hash": "281684791688142820412656402643323185693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "1825609076609856310111265324439048964440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem",
    "hash": "155788409275388658101953738236817271448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "37395330639998670603782920273431991783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub",
    "hash": "108256225050324671867723243212137918156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "44202930371746903011986728652196739300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand",
    "hash": "16043859446694395157567626328052697929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "158392626922966074624405682066066310498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor",
    "hash": "522809240722697630710804446307046583938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1456641668198307778012011916874103053925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor",
    "hash": "1539265577012981449213793822929901602808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1545066465346278149113571319502676933399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "33475073342884183438447992695546883317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add",
    "hash": "67738739028650248110178927533966254248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "1554597499780220394717191289602870354219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div",
    "hash": "1820811725608848111217203548399803948613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "6557622432769972625619758282083293203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul",
    "hash": "1186637603397061001214727824206860940979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "164705958813795034246953618294235193518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem",
    "hash": "143836061301218774799302876576671556826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "969470945443589044411600898050446406052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub",
    "hash": "979519155496678816411423760973700754198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "1252594816213681231010068356258020446460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand",
    "hash": "70145061065599067408935873645710465845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "559275040145627315316727798246354186713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor",
    "hash": "799149595618109365012569414743029618762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "305486188121943624915242417638726189707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor",
    "hash": "1265921720359983632618356004724544948290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "28788991861233145437324521923178088289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "1221672594960321484755985114288477350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add",
    "hash": "686463716014544150018047947852642634850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "183355809716779636928154606990084374587",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div",
    "hash": "4086392595231551281729131907420093180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "68318259956362610839422133220836430244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul",
    "hash": "169232268632416538347656844632679717325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "767706613282706873011976486219248740870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem",
    "hash": "179142600328801822415896773152923871236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "72501386322270842772323309839503385990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub",
    "hash": "1002552287230850094812628244403341721711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "751851707105543320613340354543738056930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand",
    "hash": "774834974749566305514428595102887007703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "294357046050091099318297120169264137728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor",
    "hash": "999859800265625444510595553533346597119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "35090081832740957315398225389759052936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor",
    "hash": "675956012623774968413781234662759359188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "858176592372062314815045782012998147356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "49830904555372786495170374959882275355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add",
    "hash": "142642619663850676508529079303750596435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "85091703817875311444555651565402498054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div",
    "hash": "49926159559557427471730849069102402973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "785673448817878868113018241449498019723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul",
    "hash": "60717286746278670175076920777912379397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "1834664393010399031914274990327984622123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem",
    "hash": "1751126422258229398515107692451582982643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "56755266713455194738993084392833870021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub",
    "hash": "71425593709402407015607704999344369045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "12617507438565515762094774683269754691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand",
    "hash": "920745862393786427412418310963865989019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1796588158396543706318229536195279024746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor",
    "hash": "112919329238375074977812833293827938276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "1426865916983207233468322311169410195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor",
    "hash": "75372215498476330392140913187015961428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1750824097696278179213351110205833459340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "160804271649793846474081348266450721543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add",
    "hash": "100741670673257623511034733069069103445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "162665077919343799037751728198759684903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div",
    "hash": "154671157774477274783064521513202543190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "534470860013693138112379267526374022257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul",
    "hash": "684607706833658896217450961800033806802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "869658856613960303916231573166835327885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "166767575282541829208596805024312687787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem",
    "hash": "1150536054539051713011733434991225648053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "462133549957960781116423845726029134185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub",
    "hash": "1289249054908117807715535592585544875876",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "1593620040429885146311550025366126207074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "51278431989766028706499114258196783801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1685438678321854504715657690099320610786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "100457041226822995785764045053281090673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "102235584566737884589701746269275511017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "115334695634007226102183653422535062938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "8346469332978447415243447272652426056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "56742298200268951118315753241514382544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "1075415123157269199314651963028019006283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "1132022226412591294810957545321047182686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "47557873361065244203163494543511970375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "3623777899709267602502707938623767674",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add",
    "hash": "77715139506090121293151070916870192995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "5511614426879694873038008785391859479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div",
    "hash": "12280207398087187766914393974548941163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "167477174027051737461776946085846635612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul",
    "hash": "36515304961511863392261872290006206594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "151779805323480101453300914591638804047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "1806788941865550165014519143494648192841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem",
    "hash": "883126310684009246713777278223733834246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "14442225320906024210098358537359367874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub",
    "hash": "71821343259024097483307886980220745233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "106536379580351963437847792665302571518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "1028475283608914050017057414581460889058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "86949185259454163679489498259195762203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "87802051606815267513167889668207963631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "324985955703347421616480625692460405454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "75175163594238575975475794873246591778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "69708522933981465655812294219800440063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "108993870549584183213096812818362687826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "11784414511028220897606722886109075129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "541416264516003258111881442825576025526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "932470095388258785011262953385872210998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "9407165739197023524439295538205826815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add",
    "hash": "126385984783159102653727927196651185553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "151484537425938579363893679356066719854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div",
    "hash": "280078905950112160612575913752068429993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "31847317783575804378450437735093040683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul",
    "hash": "119406224476793803217872501463454779844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "105137715775957044593800171262356769226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "1434716306014315861312225616177367486057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem",
    "hash": "64202561464736847977834392553370078738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "180383506240326991489915124281502658003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub",
    "hash": "1693597043390812481510606531414613501218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "1159663580856053244515971252257745837531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "1151835788785027330718182810734656984631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "58493834985947123782492497003072203247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "1561183017805296975813008485052833585813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "80205480968549307259047951061082499003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "95572692922392708718036614559294805509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "4621599375320725179820165925446372679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "92010961785731088111012023776440865318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "77140632342602174443570733764890245461",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "18338896739219293545303035791147720795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "108923849874451209634265671308532080014",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "378832330456780142912577902763727595400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add",
    "hash": "68279038732911694555882019653944770671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "160751419973977024191358533373354015485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div",
    "hash": "96041177545323410292870879838329498987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "1793627057110150766910376083353600727316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul",
    "hash": "150116559033301748762315204791702027085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "139949483518768560512216821686921863416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "1763468250310300991411975005135143966869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem",
    "hash": "250840163771965821968679978303935113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "299929330589017699515331783658032323613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub",
    "hash": "1017050824687577887412306780954317073103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "44426341384722772449120446333326034175",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "616428129220549715216994299033502954325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "184643219482815890914125921184262453445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "112253383969330965929941906802309193274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1368474574588003245416916315708704392854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "1308802575172552284517399477232315974587",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "2901199543208227658793683058444912916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "178303533797913717781221807929838851949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "167584217759337682794686472523565818226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "42279729465265764313293323465459906898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "32280815256433893111616471376116495335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "34248948036249753159657635352890733134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add",
    "hash": "447962529854869481417764373436111882399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "1047627772343009820110141705683031329104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div",
    "hash": "1656135036630829767211426109198052484146",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "1180121021140195983012187043317439797212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul",
    "hash": "35815082703032673038169248183169296254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "22974202913188301369250795300488438342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "449564029072672141113524534203693107410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem",
    "hash": "1456568569124780074212137292026241623397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "20426389256819901814774275275328393509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub",
    "hash": "685616992034727639214774785723117280526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "134341836840626566673885713723858779841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "1306407742880879071734562766285183009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1460214850617501348110268375449263808049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "1206291449666838807117400348079040185357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "146344504447511447849227294595986798618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "805006804827174534710374932042105840959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "1539384212219457256712845403073420007502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "167020842421073383803570158685538499385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "70056560005047599635683087898740355935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "848903041136437650610020721110972720624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "64193760552423497128668083221043264960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "85728388367512789434871679544695343426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add",
    "hash": "72487650513172076514145422194470186039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "150249112925910092814836703596915107790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div",
    "hash": "89536059369126276969701245314608615226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "166286789712625951861900546913592317584",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul",
    "hash": "282472869498654632313790843278164494173",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "559154208226916670112637335036722196485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "1323078679668857475110523495926563172615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem",
    "hash": "19400385331881279752208629166543000434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "147008965234882415991530424448524269304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub",
    "hash": "72120876414335969510016531890265346105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "179210108959450166184083969692665068540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "1764709524688129967510118589742728922728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "114471052876309947693435077195727887688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "45623581786398480246907026494460706610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "91714199039746428415043927160987174813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "1674422434400160517511742739234440059172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "110911919620704518465800239756780286035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "53151058160939101564435176280464644444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "61161436524435456853615158537697420185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "64072689002820624381104852571022678287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "65964388829246394461186058266133225862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "178427227487775902601411253124843004846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add",
    "hash": "77012653027171239904500629372247560962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "133636581136442144114964218263856349224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div",
    "hash": "57370563179305026078113902853545206304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "89659294192788647082565164319020662717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul",
    "hash": "801443982539423356917746507908361547108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "1231590362314549021214457900780140940337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "110405228331854634986441436937023148875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem",
    "hash": "1112734169652076873411365598205984142618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "5006061382111397523514340804821582720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub",
    "hash": "3812174824176780285802962304728154804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "5327263640251012586081792210926028862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "1659761185718709458211758714216332829877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "41231885053467540774983365137621231702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "149924065430303595375595833513608050962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "1516541699426826552016819853729199294918",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "1591161640183166657717997456132343869156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "103768852061926319258049036393767935425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "58501394887734408571489067013420794508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "46967159243759321714662869702311367475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "1267810780705902378913879334452854917193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "5516800847232660829491056798409573429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "20693096633188776216094400606698835724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add",
    "hash": "19715847145138093246462438460281294335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "1169948226072091611215820337152391303796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div",
    "hash": "108264716518216994201563780428996665687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "1341171098445250500317207018881332802491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul",
    "hash": "39890183542429380511025616303238649958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "50853091181998271114414530956905310019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "74065480500851016423393701593364908882",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem",
    "hash": "1171513238259935863311447848841337002259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "151275270979169781213637479209266240486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub",
    "hash": "1585439525873398285412379429451016959404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "141151940864953564932624809368733468816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1636495298028375871417116129554469265276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "14596400186171140398238235691472600253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "1717781083693181853211053853516241316407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1456985843786990552011577164727881828235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "1828399869538700131409454889227970792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "363177419474449246217105700943126580031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "75699008303779191739390175653042797521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "7699732709187178235447553022929257522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "31100169054237888414569124290376766741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "1338726602428460367113590972794705479984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "847026936768357047210270408772808654505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add",
    "hash": "164557406645294441873746520651115056407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "205769499260155851311953169898962007126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div",
    "hash": "128008590025314582354426951541143738021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "13247423225465214176499468382221448045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul",
    "hash": "10590694095576322626754606528819085994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "2887360223730644090970323395228000902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "162043465722240358641637229815319693658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem",
    "hash": "138584878097831284319416706953257844824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "9861764901790329488076316925422579202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub",
    "hash": "1436948710796602862314667454350585052745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "157735546265091261486393041734627120781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "43692817155000169738390645447702786401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "22617501378428499498330302991521485769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "497868304850633540816067494971654015050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1835422608541714220515667358500763033174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "127013362244296240721701309819008268826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "23879322274814695658053412382986639462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "42402464720640900987856151360815494191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "8540967789252619119875668617557335070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "500438006364546819410160055793860424119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "54882515952616154443039805552679518792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "38137166906537523099295593852411117583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add",
    "hash": "898583564623204824812580944586922389538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "285653846358291649911178950631404535007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div",
    "hash": "758983252171903630910912784547255371532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "183690315618896427111897839225594551133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul",
    "hash": "1083361834337898258716419305295756859117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "78229040054860421465365482737246935969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "98126443498223363221711242552734718681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem",
    "hash": "1380602429893440533611450487312869207668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "85485910805515431333828342056802112985",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub",
    "hash": "12017030863761407365393936043553523241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "1360132892305812972611848427310015948699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "35418406053815257204357004220395590615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "337496980769468348517848525702778276439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1710057128983311039116875268204059796447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "1536786289453084152516749566643984061282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "1467319598501889705814822950722204047820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "64330954768917337576358091999359636339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "521628405895454644616706632206262836166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "149879506794640445174368835888741926829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "65175711480348938403023365998254228573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "65015612307122101605713325352370763174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "97162178532279176433118300012364825401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add",
    "hash": "73709831563097499022049494983757950252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "195739426564979995012830091220698057578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div",
    "hash": "1744670395902706475812670029825657858525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "795338427250207395013678016521022575391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul",
    "hash": "1206620953457406948814965381850306421898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "43297838656633437707598053118746472878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "6203874500912296302247163043955479804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem",
    "hash": "268241067796731177414415746257361643933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "520013638930900368311091263428292584381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub",
    "hash": "137015155423163437146748269029303689369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "63003029671043548991887499923817740824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "48402160220454116296258682764308725085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1153052198131139880113365281514638134683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "172090173808613084984137121569555938043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1696161332617467543216022189685693107886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "183148526910531296133049757297123601967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "128315667351902305653196313105255610500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "474185802253909917912578566299204832810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "153201602673710079154826429394807561278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "1472916999099670146018047200919569036607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "1794267242246968657512888241945178146886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "566572687247995124013086869781106202224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add",
    "hash": "160016347991211473937579991073318906691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "463080667468799202015028372083710243164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div",
    "hash": "8953550374223790187198340965384220684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "1371026470965526212613847598999995033208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul",
    "hash": "227880179354147514017753174622477378177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "65162025594815207296599553134728387029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "562838828884536473915123523615425764070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem",
    "hash": "174482973443610506099945723404919863903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "304095465665758431715586334887022894435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub",
    "hash": "45181519071367334595805066750905587648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "117378204669780120258088229610802648872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "117667712942413883091995093098135045614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "234950762874715555012138936638895825684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "142786609084270181825665985701272456793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "58949521386964026377698237142003590373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "113111210833975851245630542895552951001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "26747083385848703411116161719043579266",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "453297136283542473812903433912628693838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "58622574252514405612671978767243188554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "1653382117711850808815938857037714633620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "5896040843835395181436410397185439570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "144190857425547146371841142435978095267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add<u128>>::add",
    "hash": "82734289528069015946241299902781950967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add>::add",
    "hash": "1368059339996922269516383221951176464650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div<u128>>::div",
    "hash": "143889520242320860682950811525154242931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div>::div",
    "hash": "154224520866116098196881006847342709094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul<u128>>::mul",
    "hash": "966455139349630206617809733168595499219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul>::mul",
    "hash": "68920973388731666942997543632565614305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem<u128>>::rem",
    "hash": "7491605404170295710719792318678329537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem>::rem",
    "hash": "159375071383441195297415822979062454818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub<u128>>::sub",
    "hash": "764907984152003495213282169282664666554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub>::sub",
    "hash": "1541735454483826441318414389891766703234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd<u128>>::bitand",
    "hash": "72042370228857880082204987048680775813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd>::bitand",
    "hash": "683370716743291462810989997890900158166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr<u128>>::bitor",
    "hash": "69616708302925090591334088276208524798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr>::bitor",
    "hash": "665284573206974720113768018552587069457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor<u128>>::bitxor",
    "hash": "1748301014000791495413147333225170889131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor>::bitxor",
    "hash": "111751806292072521412030115615561054527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Not>::not",
    "hash": "681608784955501143212203566472353285681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "1383838447537442305010735453570940955285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "812855686067608330112140278545798526427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "161317627005043064062474257111056368241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "1535708111194630479016412538119392488748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "113612541489429377736169590792189030583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "224035172991005876917295717183426307970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "70832947111651877458616953835996337882",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "421414067678281292114814431009408180619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "95964462714697587516719348334908895808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "109016110155464120804146263403438400037",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "91374018996362229974363441910324554648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i128>>::shl",
    "hash": "78384068952255431158019129011019313038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i16>>::shl",
    "hash": "504712935870273724313458617529713040151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i32>>::shl",
    "hash": "9745104471783750877992604021747670688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i64>>::shl",
    "hash": "141625411705578644727744460002315168446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i8>>::shl",
    "hash": "22713506251996639745281381825434888793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<isize>>::shl",
    "hash": "64828728208674603499278986796512873344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u128>>::shl",
    "hash": "37622619798633598901960990220522616889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u16>>::shl",
    "hash": "16665772108046481645316075411768223923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u32>>::shl",
    "hash": "98456495501599739843830573223949213162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u64>>::shl",
    "hash": "151983224674726294621018330395106292134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u8>>::shl",
    "hash": "1579671952910543839015869904897729229399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<usize>>::shl",
    "hash": "180025402500771996494538326177614578090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl>::shl",
    "hash": "359510708595711890610749657903354018373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "1268971495478769475110992220113742873578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "23676456680405944511706316861258050313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499539540589652569913068138084443103083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "671575998613098201316863522077038773168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "102124771600598323431705094097050200719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "858187367227578784112466828408092809387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1690288693907005049014030550368691185630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "180500923859564745766439849418313775971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "754277052318271730712889864174736194383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "9962752784120610022973566235968468935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "86037432259685145136747983972520447342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i128>>::shr",
    "hash": "182843058101103873686335253686833033106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i16>>::shr",
    "hash": "149904660080892647857152968684749971264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i32>>::shr",
    "hash": "800764444734789663112771277903617792346",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i64>>::shr",
    "hash": "164625254313855943761504425919020050028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i8>>::shr",
    "hash": "111174098869301780259849118679767270272",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<isize>>::shr",
    "hash": "1009201096279857918714151075436356599503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u128>>::shr",
    "hash": "88315783651751419829567145356880536610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u16>>::shr",
    "hash": "168338404046575953569808219814018537122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u32>>::shr",
    "hash": "16394511495261017352901563062815623849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u64>>::shr",
    "hash": "1157815810949274669413693965595826470553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u8>>::shr",
    "hash": "141382694539226346279921384392444198945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<usize>>::shr",
    "hash": "36863596492670592516764678867849963217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr>::shr",
    "hash": "62881541392075144188407098580208763623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add<u16>>::add",
    "hash": "1835420921884104177112425740248525514083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add>::add",
    "hash": "854393268147535383617943453828889067287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div<u16>>::div",
    "hash": "536711884552490331618443737258406186560",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div>::div",
    "hash": "129000606728654663938268142517513076476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul<u16>>::mul",
    "hash": "989053416161586767013334241812553290728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul>::mul",
    "hash": "74623112439521002519319573179971326294",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem<u16>>::rem",
    "hash": "120950157105850725604304819023281570006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem>::rem",
    "hash": "8486985267066988062413450538893414441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub<u16>>::sub",
    "hash": "145946463077731572542504300330154248862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub>::sub",
    "hash": "422127666090329670614413205521659149091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd<u16>>::bitand",
    "hash": "28414425187680394093458461897954469200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd>::bitand",
    "hash": "121524937280540128164959926802363578607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr<u16>>::bitor",
    "hash": "39338034002717608314910940678351809235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr>::bitor",
    "hash": "4289130445703438177217687706258890406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor<u16>>::bitxor",
    "hash": "1731697903032050630518315740049853844528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor>::bitxor",
    "hash": "1767201022648020183114809789568916482085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Not>::not",
    "hash": "96417808971026608282239739428832315798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7995408941192344354877368047685398519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1834925674940870281112146547967669934955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1573614315813243355817868280265789653232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1258764233097044960515326816405122252063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1595776478587335463517491734888862852837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "1601269604756060124617904577508186383590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "90662981311700309966485334649902662532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "4308804393010082158602271103852402907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "1218284163631580538215043015140815834892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "87101426554801543489182844591286342527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "1325675380536601859614629696713499063309",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i128>>::shl",
    "hash": "91799888983171300924686745092589778074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i16>>::shl",
    "hash": "418039225002329712011730572128502790703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1080747387910652780414162954965442216726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i64>>::shl",
    "hash": "101663081541908529639180572720987025420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i8>>::shl",
    "hash": "1366474649405984273317013508446592138825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<isize>>::shl",
    "hash": "145646281761597831358796528572710586238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u128>>::shl",
    "hash": "156923637451523036243161054092372522215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u16>>::shl",
    "hash": "490048590875100880711421231794694765819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u32>>::shl",
    "hash": "675756367378097154713245812251213474365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u64>>::shl",
    "hash": "307185838710442314415689367474766632552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u8>>::shl",
    "hash": "51031553588582848747934970876185896414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<usize>>::shl",
    "hash": "975850444747540803112152972660283696626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl>::shl",
    "hash": "549248893738290294217666256693611924923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "191306001583202435213210254586515883296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "877201431944490009316645810317147331821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "1649791918434528767415321586561857014090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "399622283597245232715017686358165565501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1295166367773191509013793764321921013663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "118039410179122607714956437970451739777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14471369891961002232624947063383073714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "737577474724144174311811767510484295451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1596575575438337919576786536699965625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "1295496017730614156012758731413825724206",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "13116772915822434373377540423670336421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i128>>::shr",
    "hash": "350341359213965076115808997973322023271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i16>>::shr",
    "hash": "180446435546744298735693207876089495874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i32>>::shr",
    "hash": "46389004382702130517781892181185613844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i64>>::shr",
    "hash": "12114654754382925694828908790977539023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i8>>::shr",
    "hash": "72161452216123227567440341112937928182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<isize>>::shr",
    "hash": "148387799871592359564586749205630334471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u128>>::shr",
    "hash": "1764910780602210211417130894600372355795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u16>>::shr",
    "hash": "1249845617996916658315251278610356255610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u32>>::shr",
    "hash": "718434215564575757311682364526897242381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u64>>::shr",
    "hash": "60488211596653991621893929147264260297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u8>>::shr",
    "hash": "31353857871106438228633803967821801532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<usize>>::shr",
    "hash": "299160801020215661715408545222574600170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr>::shr",
    "hash": "91786511708047246613840566357398677365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add<u32>>::add",
    "hash": "70033593155496069745464701093641887481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add>::add",
    "hash": "170830447827917427677449373901740278907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div<u32>>::div",
    "hash": "53095409267712816454188946367039791363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div>::div",
    "hash": "1015960272468883677912220571694042476548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul<u32>>::mul",
    "hash": "1098889098768841981316351181843013458697",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul>::mul",
    "hash": "616685395068277821916778085871378598797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem<u32>>::rem",
    "hash": "20855797299675449403802801117539973982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem>::rem",
    "hash": "59677023194345341667743303935118870654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub<u32>>::sub",
    "hash": "38094506305940337238743672236470423966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub>::sub",
    "hash": "1462954606212807212217235099144943176932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd<u32>>::bitand",
    "hash": "121380644833737710514368909981030146508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd>::bitand",
    "hash": "115957689722409970337153998760788133185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr<u32>>::bitor",
    "hash": "1284196093881024676111334680007446719194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr>::bitor",
    "hash": "75546471028219167855477290584204466696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor<u32>>::bitxor",
    "hash": "97644969783204403851916368727531590129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor>::bitxor",
    "hash": "663639709235165461813472821009456489091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Not>::not",
    "hash": "1383959140131906656615060511976522317964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "146374138756862017744849736918010715151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "181109855225366901946866782147185760443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "128281533429373501379166381824815392303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "9506709974375741069915375641211465750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "809050537109644739515114230148564489158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1205532712432762379811393051208445392366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "148102501714327305883940155995580064861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "993890104083784378212155026106996844421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "11146732325445421615566140130232455136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "132569470270946891784342049169597110899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "978105688280375118410847206641190867809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i128>>::shl",
    "hash": "81836041276434679284079101710210543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i16>>::shl",
    "hash": "911538807718776080712918237551443621154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i32>>::shl",
    "hash": "1628502955774075617511388673319780196973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i64>>::shl",
    "hash": "1395952955862927940115824120555965108850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i8>>::shl",
    "hash": "176047591529791085979996120051221645491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<isize>>::shl",
    "hash": "130060858147609046683146381979893154815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u128>>::shl",
    "hash": "108028586501389279578422759217348189108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u16>>::shl",
    "hash": "25631447140056778005362683390659865726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u32>>::shl",
    "hash": "730177359315579413916735956712330786496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u64>>::shl",
    "hash": "78238104454220130481083732159681871004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u8>>::shl",
    "hash": "523011497796683558815494397292189019522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<usize>>::shl",
    "hash": "447441523798489484811356342486568148862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl>::shl",
    "hash": "54493951937708927617206868308756405570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "1698377770618167965416719820886481538918",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "89698611101096385275427436530976329534",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "142666644228020542754721144426187428488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64555615871626835035303724905092136152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "52019684766904830001491237913582610693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "60461314157618778511118417373112796502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "41132024835220750396484302390843187838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "1741562678782502701711979201696799855079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "129714383748372549711308383016963783590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "1514796187456769151515964114842351940219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "28519740618662261491105091017219635980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i128>>::shr",
    "hash": "7878539720532759324282868372734073840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i16>>::shr",
    "hash": "190814341904419707811854227983936596611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i32>>::shr",
    "hash": "1626200938260846699314813988082562794103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i64>>::shr",
    "hash": "134417798279392183087107644095888659481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i8>>::shr",
    "hash": "1579628246061942818010625260209759259729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<isize>>::shr",
    "hash": "568159705419465246015155735623137904042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u128>>::shr",
    "hash": "1390622520090582151112185714081741570075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u16>>::shr",
    "hash": "104491237479629807345033888506441694180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u32>>::shr",
    "hash": "1430066552310688710514899996387606455462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u64>>::shr",
    "hash": "71715221213979494702058030179231274351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u8>>::shr",
    "hash": "1400712727107429269414147608806897126948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<usize>>::shr",
    "hash": "175141703061118560018061335649812182895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr>::shr",
    "hash": "497723569038909810014705728205113236734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add<u64>>::add",
    "hash": "33331557417589730831665925566843047445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add>::add",
    "hash": "163396781071348608202476441382261093085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div<u64>>::div",
    "hash": "119167913234071907523194001676895532562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div>::div",
    "hash": "843353982591817317317675648580757467787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul<u64>>::mul",
    "hash": "4845573506098039582380911550567106485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul>::mul",
    "hash": "1393336016143168210016281493527258672130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem<u64>>::rem",
    "hash": "148870095657924744222372880002073267712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem>::rem",
    "hash": "946931836166750526115701561906917756562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub<u64>>::sub",
    "hash": "1192381740732418688411924246696390052940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub>::sub",
    "hash": "1328451105441438441812507627496957310057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd<u64>>::bitand",
    "hash": "1417238128284550428315535405162383146626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd>::bitand",
    "hash": "210438382073689327710592734984828308071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr<u64>>::bitor",
    "hash": "167359529974750999498011573524808630288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr>::bitor",
    "hash": "47272795762849062126942129674253603224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor<u64>>::bitxor",
    "hash": "180762176507005435482755677247990752025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor>::bitxor",
    "hash": "9194986428990627099344386831027217925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Not>::not",
    "hash": "134839891059554646644329350855584029273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "392512883733227984814850737253218949177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "5720714955307291654751503426165651324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "485259696259518091812399268265771105286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "124851964479508303817264777850527440109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "2007102255935635103841166089409607020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "133522788972975617394105804772949519616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "164216770921551971893002203663234409594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "287166772028845529511732115206921859362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1013245883307078494113140807543187035457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "3304024049656499379006064702478054409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "110479146314355736751499313586796333306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i128>>::shl",
    "hash": "1283703044380298346712833589551234261017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i16>>::shl",
    "hash": "91850952202987791676529283414426512941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i32>>::shl",
    "hash": "58168715859550718015570808253196545736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i64>>::shl",
    "hash": "1179983254110602294917108525952407409113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i8>>::shl",
    "hash": "155647100058842454993891115528276542290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<isize>>::shl",
    "hash": "261226803992134287113043386948000050725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u128>>::shl",
    "hash": "180659691283896290357936636441738952877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u16>>::shl",
    "hash": "72166017761654091721555158786185675818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u32>>::shl",
    "hash": "76847114410597172833945562625664919551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u64>>::shl",
    "hash": "152975890332242627558953263347430501741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u8>>::shl",
    "hash": "1482628189736871723517657803520689486548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<usize>>::shl",
    "hash": "56268138362984901414944298399504017301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl>::shl",
    "hash": "154660065264916810441095963143951388380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "205402991408139705718205586767490221362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "819787010396980161514942899709338810830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "8512283520214614348085068092153617517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "321332476169044990512545791426119738219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "130986878530520484566696100827089533258",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "153025305532858390415742915257534817719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "57713145127437431721625740941632479232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "154791681661556504773838344770058487222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "120442369664465488355134028163785874627",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "552287348467626204712967041130326335786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "773371809053715815314730386986008897298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i128>>::shr",
    "hash": "3105185029816583918392421812159573279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i16>>::shr",
    "hash": "1249446499640926627118346471018460461363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i32>>::shr",
    "hash": "160777728834942820932616949996058515505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i64>>::shr",
    "hash": "138077895583189014201455395585664810382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i8>>::shr",
    "hash": "472230091183965213813073954855855482704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<isize>>::shr",
    "hash": "121723913311298650364878270836632675503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u128>>::shr",
    "hash": "1277606360938721294313264922268395646154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u16>>::shr",
    "hash": "85905883965308882365375870458772530485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u32>>::shr",
    "hash": "119647381514428261754661648558031868813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u64>>::shr",
    "hash": "1620306399243927810018154280291324733321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u8>>::shr",
    "hash": "156464307264994646753075926382699830003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<usize>>::shr",
    "hash": "47480966937559420226726009486499305076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr>::shr",
    "hash": "21414017961124087231251793075150855002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add<u8>>::add",
    "hash": "1450176940975280811511680647021413221950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add>::add",
    "hash": "12471820624900661671147457116964060412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div<u8>>::div",
    "hash": "729813184486935198012310578133778617459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div>::div",
    "hash": "11429862701388016006108916303590598864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul<u8>>::mul",
    "hash": "113570411688688540853338733271621808334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul>::mul",
    "hash": "94825364841709794043216918839895431614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem<u8>>::rem",
    "hash": "63958408087734703714359412751594610133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem>::rem",
    "hash": "31804740076636853222437739766941083043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub<u8>>::sub",
    "hash": "54270614149678762282871058595133279337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub>::sub",
    "hash": "972865376722062256115991834903153644664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd<u8>>::bitand",
    "hash": "1306599253137065923614281773446707915475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd>::bitand",
    "hash": "58648221330900769177726510350052223191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr<u8>>::bitor",
    "hash": "654783384242718781110098426298919994956",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr>::bitor",
    "hash": "44575442811320202886261647944902279214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor<u8>>::bitxor",
    "hash": "146063172940146169013544499503021589576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor>::bitxor",
    "hash": "44543816578077988163322341160714439621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Not>::not",
    "hash": "45468103384529318562920457208506891147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "153548240768005530929286426227834809489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "134385329897832391781854079098601956214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "4109678121660482676460389992354965477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "39064081088966793910107516360345615995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "329696116232641918114711286783213805705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "151635826536299364972571268511224746375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "143360053359849916775436691202375538477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "56006661203730835244511408555593134498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "35775918316891594766704332212329313429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1304709069431027470010486614661938867824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "94618361139796208341328266184379844179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i128>>::shl",
    "hash": "1104124595083431481911170398706285170822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i16>>::shl",
    "hash": "13346384547147083570243518556164599482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i32>>::shl",
    "hash": "14541031787190459911501526392193115923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i64>>::shl",
    "hash": "3307494033759957709278742393229386408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i8>>::shl",
    "hash": "1446550290865725360510559893727930152108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<isize>>::shl",
    "hash": "167985306724794424828882663233562312107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u128>>::shl",
    "hash": "25878410218074916272037511531781236671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u16>>::shl",
    "hash": "1603900275397604010712329210008593377308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u32>>::shl",
    "hash": "69541779994415077251511490130632924585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u64>>::shl",
    "hash": "1329800117021898110211157514542469643770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u8>>::shl",
    "hash": "183499233831915322712413717449352584182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<usize>>::shl",
    "hash": "28549061408659462887791365415551441686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl>::shl",
    "hash": "179812035835771431055884940179856957578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1086751539164161270112538117861787675700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "180823366389138230618273464646893354858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "402351214406065676813072336990139334028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "139454997083324991669514274264384138913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "1396530612580186138917536057671385344171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "99216345946045910903583198604272663127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "331018506418819924616595722956472962057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "1389463599383797700313166643744412375950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "1301839706036347398313849882351330338938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "79061370817141484591843639450871823445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "992498190890676082112343058439603788776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i128>>::shr",
    "hash": "67712302402622023405361259037015738955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87673204901337065404769075130844050175",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i32>>::shr",
    "hash": "37121642278878901037809655144147841312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i64>>::shr",
    "hash": "5666322687630611280521739130823572097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i8>>::shr",
    "hash": "455089624145437675613828691201846260307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<isize>>::shr",
    "hash": "62235739251903262028617766428131359133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u128>>::shr",
    "hash": "727890128839327467413253373100370752123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u16>>::shr",
    "hash": "92752772566448262146269129744376498197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u32>>::shr",
    "hash": "93142941748049122786639886904668761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u64>>::shr",
    "hash": "381482774784597994712745287159475711626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u8>>::shr",
    "hash": "452727797262814055517839071463497164798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<usize>>::shr",
    "hash": "1271401683466613494511639416050290091548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr>::shr",
    "hash": "759480743252128386315526013362574129747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add<usize>>::add",
    "hash": "1825994194789046965112915513657718135589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add>::add",
    "hash": "11764961515515950298043216116330121006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div<usize>>::div",
    "hash": "7196002893950985818832164879412652068",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div>::div",
    "hash": "1426887536633609091213852998379949011942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul<usize>>::mul",
    "hash": "24852367499495304485153491900127988151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul>::mul",
    "hash": "150163639109559689083492277857504462937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem<usize>>::rem",
    "hash": "1541474629289746765612034722308496514680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem>::rem",
    "hash": "21020527073179568516155983604511600101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub<usize>>::sub",
    "hash": "158227952296256296186620655005473701328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub>::sub",
    "hash": "859378723764991095811195085555427104407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd<usize>>::bitand",
    "hash": "118749287005435127227658704651739947094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd>::bitand",
    "hash": "148883724030399851413808810259250641234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr<usize>>::bitor",
    "hash": "81986267404833965714455535680918903739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr>::bitor",
    "hash": "666767564672854709717306393187817062877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor<usize>>::bitxor",
    "hash": "6674558348999862231483559443469522742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor>::bitxor",
    "hash": "1269977774979252352011418047624393463171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Not>::not",
    "hash": "83201146647483598085497875820318842215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i128>>::shl",
    "hash": "147288205365117239468566585456857289141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i16>>::shl",
    "hash": "71099005334795953568709972140229227279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i32>>::shl",
    "hash": "142843970058905482911004701791952471659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i64>>::shl",
    "hash": "5314336281881298321356527315565027304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i8>>::shl",
    "hash": "57954553351533777269888549588770122620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&isize>>::shl",
    "hash": "139517171560462546815726851417373476662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u128>>::shl",
    "hash": "1813161645759317828014804187485650405259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u16>>::shl",
    "hash": "1780388358200541992611979601606498130513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u32>>::shl",
    "hash": "157933251659659672709721216545672941513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u64>>::shl",
    "hash": "24868738786821075531057654255874617425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u8>>::shl",
    "hash": "942728885585609359915553555454019576279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i128>>::shl",
    "hash": "512988778594167032011666958124514951793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i16>>::shl",
    "hash": "778303778570490043218309284195382574568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i32>>::shl",
    "hash": "1516243086020496029366500688814148608",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i64>>::shl",
    "hash": "1330800396806147995711908328412182787940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i8>>::shl",
    "hash": "128591827988940754931275790611828845238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<isize>>::shl",
    "hash": "157970885883590653318570597605293787961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u128>>::shl",
    "hash": "135501402210930935413554316623283655927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u16>>::shl",
    "hash": "63157261267604179314460573612548647777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u32>>::shl",
    "hash": "810116896732251771513062968300394223031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u64>>::shl",
    "hash": "113423777502842132173577369420688342136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u8>>::shl",
    "hash": "45139398918120095354564024462999233284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<usize>>::shl",
    "hash": "852895959509117699814465021405787805318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl>::shl",
    "hash": "133494807453391920515942712170532515783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i128>>::shr",
    "hash": "10620112275569371844131176430622996319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i16>>::shr",
    "hash": "1440085918663671409012704342399616065100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i32>>::shr",
    "hash": "208131555663274117013160730303715890405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i64>>::shr",
    "hash": "171030368808518374011836464064487007224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i8>>::shr",
    "hash": "8672799597825170546670241604552181911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&isize>>::shr",
    "hash": "104034143376858478966575296192671381492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u128>>::shr",
    "hash": "54190114424512004836723622001702376168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u16>>::shr",
    "hash": "1056000977560548137016779702763053548396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u32>>::shr",
    "hash": "9347288501147751705685723772492277594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u64>>::shr",
    "hash": "1530880789751038105615014881971867508705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u8>>::shr",
    "hash": "128912470132151468404586954351526434798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i128>>::shr",
    "hash": "1429031653702389293514314021692581369382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i16>>::shr",
    "hash": "1530040105882327158712611874744302544494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i32>>::shr",
    "hash": "646734427034679215515449877423961837466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i64>>::shr",
    "hash": "769783741192906517615844839102417369854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i8>>::shr",
    "hash": "49762848597465359201369343891127542787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<isize>>::shr",
    "hash": "1724782263971276776311210060619893643943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u128>>::shr",
    "hash": "310258427275170955110538481433256442859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u16>>::shr",
    "hash": "127264401621156307583600334584457354305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u32>>::shr",
    "hash": "1315679867081711816318186438541219064694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u64>>::shr",
    "hash": "1157752715478968414116495420031434210352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u8>>::shr",
    "hash": "7004271595067559143494947600662922207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<usize>>::shr",
    "hash": "3744076839691443012386021938329124196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr>::shr",
    "hash": "828755626651577801111656916872016381994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAnd<&bool>>::bitand",
    "hash": "77668908298663733032226436761840213633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign",
    "hash": "104891665549736895492023087598938299512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOr<&bool>>::bitor",
    "hash": "4991280812392628402231440048792398989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign",
    "hash": "33365749677149259034954781568303036706",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXor<&bool>>::bitxor",
    "hash": "792116821238867620014874936495311436284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign",
    "hash": "1607849616613687371513559705966949369453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Add<&f128>>::add",
    "hash": "54934051275090074431975626844324756794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::AddAssign<&f128>>::add_assign",
    "hash": "11602203155233726392998394425736614990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Div<&f128>>::div",
    "hash": "975528482471841736117778489735429144115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::DivAssign<&f128>>::div_assign",
    "hash": "166467277260184652821185087423970392011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Mul<&f128>>::mul",
    "hash": "51961118673010123252905102547520105560",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::MulAssign<&f128>>::mul_assign",
    "hash": "177648775352790466857282330902098326909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Rem<&f128>>::rem",
    "hash": "19757719817578762717398958836643451837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::RemAssign<&f128>>::rem_assign",
    "hash": "957474170912725518413132143458820831362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Sub<&f128>>::sub",
    "hash": "1348364691876949452613877452476035508691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::SubAssign<&f128>>::sub_assign",
    "hash": "126666412888530529835259550563831469847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Add<&f16>>::add",
    "hash": "1161190888950183033110830281187001788031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::AddAssign<&f16>>::add_assign",
    "hash": "157143843428663036861829184273538173337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Div<&f16>>::div",
    "hash": "934249694515085265816315365637378401053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::DivAssign<&f16>>::div_assign",
    "hash": "1413403813696346971678012923298213001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Mul<&f16>>::mul",
    "hash": "995340285067628267115511312931057994319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::MulAssign<&f16>>::mul_assign",
    "hash": "82683667931698202054204043329686619970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Rem<&f16>>::rem",
    "hash": "127877788550872661292757104981983933193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::RemAssign<&f16>>::rem_assign",
    "hash": "352402199144305102717609094404420846880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Sub<&f16>>::sub",
    "hash": "687187487174757070815142979308465023824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::SubAssign<&f16>>::sub_assign",
    "hash": "1229367076273572715311139873680393863320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Add<&f32>>::add",
    "hash": "329424281969913405916758665102423842131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::AddAssign<&f32>>::add_assign",
    "hash": "131363467900616297419348330031436668199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Div<&f32>>::div",
    "hash": "929266892331746180713017364462744691238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::DivAssign<&f32>>::div_assign",
    "hash": "131248800487678711334062678319753476316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Mul<&f32>>::mul",
    "hash": "1367938817600533635113575158565400069307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::MulAssign<&f32>>::mul_assign",
    "hash": "1540295675351962027518019986324965433863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Rem<&f32>>::rem",
    "hash": "1007915103193673748917425066874075655597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::RemAssign<&f32>>::rem_assign",
    "hash": "95570051789741164724735289754348429577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Sub<&f32>>::sub",
    "hash": "859643795356927077213741155956164834484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::SubAssign<&f32>>::sub_assign",
    "hash": "159060448590142899303238721013977318234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Add<&f64>>::add",
    "hash": "982975655936520697612225030774426602124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::AddAssign<&f64>>::add_assign",
    "hash": "237873795418536586910652161490088854130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Div<&f64>>::div",
    "hash": "1760085970258207219717735666414258675878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::DivAssign<&f64>>::div_assign",
    "hash": "1481053180543240376012269137720404774662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Mul<&f64>>::mul",
    "hash": "977104548642875856713666272240759537002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::MulAssign<&f64>>::mul_assign",
    "hash": "214442269685416045110218568479726725342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Rem<&f64>>::rem",
    "hash": "93138337462101792465687020776876836628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::RemAssign<&f64>>::rem_assign",
    "hash": "165785437539010707763138994295724317441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Sub<&f64>>::sub",
    "hash": "95672016099363052333996466075731818699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::SubAssign<&f64>>::sub_assign",
    "hash": "133870422498065270056320868414659826447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Add<&i128>>::add",
    "hash": "114545824265515893441477454134551387687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "956283264113187028815210015242845610962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Div<&i128>>::div",
    "hash": "36063902368621463004441055409419003834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "155385422469450611399216523358957400842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Mul<&i128>>::mul",
    "hash": "180518380496321456878127964860767172180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "59401595674447088412742890259598046731",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Rem<&i128>>::rem",
    "hash": "155964553619169456539998935044831778416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69135370191384571925807796551022445515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Sub<&i128>>::sub",
    "hash": "106229787906788619977580510236797690028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "1627850595307722218713124413167528173811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAnd<&i128>>::bitand",
    "hash": "40715639933211699259288827888629152746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "1020890394448684713011071252795742064704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOr<&i128>>::bitor",
    "hash": "48096658079868321673141173653884018252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "68492256087026216154864316457095158477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXor<&i128>>::bitxor",
    "hash": "963422000192796097611290580678198235348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "177702107941320258926209467485529619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i128>>::shl",
    "hash": "14984636461477266188440265038974301530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "38363939128698146082096633085543577539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "180411666635455910719929075137956955032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "645557200650174453317687769875771417124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "523514605086288913316987272932988850087",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "1097932567737949965712378053217579935105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "1185026915721454471612871785102548678616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "948633227301788983210538087601756906052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1686028144601267643011749997524873551522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "372967551347800167717648806682610375722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "1534637241572261189516801178574344306933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "589437227359416080210212725148866879623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "12016732080440119927804325324097186719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "51091453180274693021859208247308698525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "68953961646238988336547890813766502139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1156740749869261836012661954770280866062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "130363757398169413217777220775438018045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1712934276785262254115447643992005011039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "63342211296298726017511365152330790315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "6545742823933068843412682201554790533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1013095564822238599211217371665081373590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "242390716004288941915964653990989610572",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "32516930000178740958023128992315691364",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "90011926086805283646151571464196755024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i128>>::shr",
    "hash": "95643957364873916919664391601064134628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1391136281403195995713431738635356804707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499623258836392825316413493620670456239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "137638669549053230995521032226802602806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "905613681680810037812282890866967902485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "1026009870420008420515722817828825939977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "101452276421029137691587614902986482014",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "1063150746978699843816211863910114350607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1755268987791934137011903313573554574115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "1584470964692854981414154229500287345841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "135538472958078713389023482022081887094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "1309578256761506046214518430026452043275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "264400900254326142111570371369040970119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1372730432022910529013738743463356510180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4978666306179714015054638506704997234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1843975455763669003017474916492218810931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "812464472401606351013750930455218623276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "12437153188584918784419293342245205850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "49982104887316374235264225599159660351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "794390564665375616417098943499674261377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1219714424906045362314531954717483215483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "146278415105455598314413270528357268155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1306896208071433705010346024458158922369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "173007190119150701475488622458575148595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Add<&i16>>::add",
    "hash": "14251242422510758811335459972154583914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "72234125394727902663803565187381189836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Div<&i16>>::div",
    "hash": "114499226763559011639188581403912807334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "163559599963835616593932973160362105489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Mul<&i16>>::mul",
    "hash": "97487264614903428162671787396524187767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "63539331101969995475929152669840633019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Rem<&i16>>::rem",
    "hash": "113612625298396876752855389508157183108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "1359350094956498708817357378835298180127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Sub<&i16>>::sub",
    "hash": "119130059356627178734846662510538257803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "796374607085193852810269917864883179550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAnd<&i16>>::bitand",
    "hash": "108322297613592287405553860062462743755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "1567250105646941888310606866848979228447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOr<&i16>>::bitor",
    "hash": "96610512134135327528483954969271922269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "132006727085639250233256713332343642322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXor<&i16>>::bitxor",
    "hash": "101731050079908242844831991158852401470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1199190101527718472112414671044868088982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "31307452919813496591092413034439950192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i16>>::shl",
    "hash": "1384173985703855952813119055071796904849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1698458133116898626314659516313601287219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1373443053241495869742077603452518609",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1518557881150521008218399264332731550555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "357316253993425046117210924619793983888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "1027579833019070856714952456010475973376",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "444160916099086111211474143963003639754",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "10576627950274670244154559934723857666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "189554748401514298414972670498934769951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "636665416502332632912097634263512023171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "56493005654322745286819025928677801004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "970365620802595577511201446451390503108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "695668567259598529412808111583573011650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "51801432399497451892486775464531960787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "40985610417604824396859420136166223104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "3284985056503405331803554172813897894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "603960992310404116813358658086228226529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "136815154097636041418968158590540558029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1562754938202676304912496294384079725271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "443959638382042603816152799958379066940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "87174835492659771234051930803548693822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "74892110214747568154193332524314429772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "17005404754820061414827439427334570214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "136279136623198532017855148461553027648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i16>>::shr",
    "hash": "1014823018160487291214408386278020714647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "878136091841639183711042894985846972131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "107116657715829963528934258819834995389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "73083907822825617611576143425366585325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "166622804396880978348006364085261005685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "34921550644759478733012896108432081030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1509357632862297082111896398334582775935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1217758544912578384617808821743969124557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1581377335621831968414314967815432250960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "140297301831719234721640926825143938705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "152747153928389907521530165788673338001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "72528301137840878621647379659222081240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1633320673548010626310899526896486554951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "46535900811240358737277792424873598499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1600637981160887446816914998624719304455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "93750131162841910872106090758910853476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1740259275583925722918183749530667186881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1159090768253993699015928043954974824884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "136661281452881077802071776484111024167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1634386804437937927215635525936992933955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "412392819917572690711889620249104317450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "278034579454058040536162496818645992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "517657813439753455517669801685714994034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Add<&i32>>::add",
    "hash": "74820973598209560359288848777852857923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "13363730902893962187688580887652641729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Div<&i32>>::div",
    "hash": "329523781381934867613868590574581309051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "2702348955541197049671642164162124444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Mul<&i32>>::mul",
    "hash": "135234661813878885084213698139927883382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "133145444556103818003474717663351893886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Rem<&i32>>::rem",
    "hash": "1217824091838775545212795125154356269387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "86123851767370717272168874720690838544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Sub<&i32>>::sub",
    "hash": "155572844697267510612682389754231995158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "128737403100533769695944676428323191606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAnd<&i32>>::bitand",
    "hash": "5931897964367307037218252471193728354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "1002091101716257371017465078823704354912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOr<&i32>>::bitor",
    "hash": "46189164185107806863301104754393144075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "116215686923794596058425273579429898260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXor<&i32>>::bitxor",
    "hash": "119317407676641730647596389133818749060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "827435277632533631915131857981734407399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "172372101531285085039830071750943780539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "2109931966283820527630437989647602245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i32>>::shl",
    "hash": "910999868950995871015516053170703449060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "40882081138207050278664224036878384675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "61591119580566985375058889394358792753",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "1414858859685522463816272258121793701835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "34223969597807711743492936281230103398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "115878849677982524665605801231063522334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "1718520397352588415616386869646519234423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "144415611816639112674741934634549697159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "11388517342998318337683217946133496922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "20283260052229411144676799266596887030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "120188111792185228552083059963242688467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1794074814581016089912788130134794620099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "874338999576682736916158675301274056696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "60090792942542607194945662078085110538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "223887750028560705715625453161131420277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "78964361520374556606475040260827437624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "43627110148978539964323242262966035947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "3458036056432986718081443406397320140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "12108504097102775548264019256936707104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "101173952972331809532945997765950816440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "9342231760384964189355498854329916592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "325898505715790067411872180302176156217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "928451950345208894015248643131211204029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "110980484121837364862578106299918987069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i32>>::shr",
    "hash": "8759426850122440952822704544864307134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "73925974614589634149115303023301757040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "1762604847687987777715313213216519915658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "139776624535643334596620927577082017653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "660522378472212848612608031986836919720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "15184637279743868374763657922606868812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "28756855361848655247028594612002366977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "778545855597045054715930191134307556159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "141843418289604055113621204912591940846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "105538677269464983811002192263882430732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "53333221716071648355100671786915079526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "893626155806409237813358474569901495984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1813870681465680246014529045986153601895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1108654067855658193712198852900165862243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "166688096840989200124438616084486678380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "46369017114389239511325370842861443192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "113380471615554851643964249281371756205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "153935464145547119963305332125446801453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "288902087403751995514819384751567492861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "66103011149201734616070759383022409337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "78384259045431364677904006867925853313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "41425856379337626308108133795125568500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Add<&i64>>::add",
    "hash": "621417160278843779516306826218108227030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "45780376162797751855215476177303846675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Div<&i64>>::div",
    "hash": "37892061058365160537163479119590189251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "1826531917053891973810515589313616332741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Mul<&i64>>::mul",
    "hash": "96413324016636961618192025250009638183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "11084685148374047345375931849696543342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Rem<&i64>>::rem",
    "hash": "37263033957171297179115866799685234803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1654258414274204642013373289018854809825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Sub<&i64>>::sub",
    "hash": "1499876157039757054213576736430357161598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "2929950153265441082861219625407482686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAnd<&i64>>::bitand",
    "hash": "533392532981290140411812648564011609130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "36246029427736319354378245050884073754",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOr<&i64>>::bitor",
    "hash": "72199379048014460328228372799099719326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "135248643296514268475386654425615771311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXor<&i64>>::bitxor",
    "hash": "213023564755064787515167821226378949751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "1135070892491756301316200978845934546521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "38618312384401341922772387142531790396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "23067987568570556011150322596191708709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "153833852018301352877116771547012582948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i64>>::shl",
    "hash": "150478512124952641335658498864210539053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "144396427640511530974366817112137772245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "168921480684202237416569154524282259401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "1146211279304716162213864856885756508996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "94781794557798756104112418186218687269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "442611581563960907416917638717567156126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "37754680675501629723525456326930036611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "135809373688682186723408285877143914431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "187112588819476892517068374668623172843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "1603751669371622705710538085656939986237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "9200802789476607479805079307792990353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "571032323788168546714191417005769158104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1836237060569335956913245778319371256614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "352534628599580148216364147786213650165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "138883885698765171596361121368398635419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "732486413096870761913534474712988072612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1283967497878366812021211992318663114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "22419905131079435971694144766127024416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1426071402992761365118053552480374167496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "626161772288660810311712556050579802337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "110011443250924874366434258775829348963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "21021036557344671437826926363887697112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "75206547525729491019363767560887674859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "170237449997668343814062732774323925687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i64>>::shr",
    "hash": "150715371687695606082105657256597366296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "825632344154222640617752374792004892075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "15376518174565761177505422970931399486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "417496103856432035612402156594951829066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "5528845397537497689243733824636360497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "60459652709497901182885951489288518532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "431447600187760917911402836197251377628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "118691949973897360158907485529336039588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "161299441837663092724956132244252241963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1141459628545108441717031406952422354040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "920628206244618579412112346530727450366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "15562864100631398054143900939039244734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "917055573538743924114576138867191413583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "350784664029020347115744691416943725356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1654838746428571223415112528395525095695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1592339171367325369711847832885606845868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "130216253737316168578419133517885841961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "74577537473265354318064339006223386469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "55130173963189312579835382658864275990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "654296666793668967614124729729311294859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "315979869777595000715813728416900434198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Add<&i8>>::add",
    "hash": "957945827905253094214148150501985267118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "151824909519449230789821770434221484123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Div<&i8>>::div",
    "hash": "1014305670345667473217152203814532805686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "271954025808879269913260018153998216701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Mul<&i8>>::mul",
    "hash": "880908813610896830316291420323192782195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "119057997268843357621511160966518793402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Rem<&i8>>::rem",
    "hash": "248882315942977572811945676937095043009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "505427473123391206416818727915614310598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Sub<&i8>>::sub",
    "hash": "1655628454729527675417561531133177474892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "36225250793039808965994696852643908546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAnd<&i8>>::bitand",
    "hash": "1004180067607670762815887478187194711002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "26727425218073683856778199483834498331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOr<&i8>>::bitor",
    "hash": "192603323422720427313441569094205485120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "405772589721555995012601784912730541040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXor<&i8>>::bitxor",
    "hash": "66202926021140699215051980833384320624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "1482047964947779111016344767533616516404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "154704729601342888696331928886814934299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "2265155874147341041042916176815264711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "182258149339194923967994666897074559506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "33254729709612489942740302161031187904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i8>>::shl",
    "hash": "20485112305777671054061256971715532944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "38619373363902328606507150166449290837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "14865803260963625536367108884237714287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1657033549584310605911422084084492035132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "538905085312201006117367809882160902838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "958094658473999834618076050611629601421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "120217464668136078224077204967558499883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "51556225948989796347268074670536848682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "631868036938364661516134156469499418549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "770287913732031103710408286322992957747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "802929655138356501111641958358752068725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "687968302977570266612085435418044497436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "112210500944709357089951920678192371184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "10312707536031133527799766663622098601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "132209300385111394914234123025104680297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1499316173599621306517791625056909032320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "269434601536366676711052281195790813471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "159012461912120357171878434438211938209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "13242215843841384991216406153081006458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1516961640768242471415381325612473432468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "10131681027671792866470288229710194944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "116813539817265930619744891821804360633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "145181972408978905689696368001107778987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "2201253865479409619141666524829118476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i8>>::shr",
    "hash": "87550087737003032482726246132200457262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1284675577761042364016416860090285207492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "711773914523466572915425393516635323017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "15005796739324569378545666306012977682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "24496257897734848796072233017297376732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1503460033494949927412021130423377729710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1745026361120123482110608674039173629986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "1777666620815475558515436973168849916381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "56307820585549541896738551494301791596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "16618589061696659105659460536525719251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "4633985086628698685989821029159277637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "9403411695146714337706851325051517338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "70821645427514109175086037717601011413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "276844002005070770516733329157444972263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "116380862722429433688945440676235371408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1086812004876984907212762645045132310924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "165601844854576033006365505325094808821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "78824621965400971924018032235598027332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "877688668274666503710578614250576955484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1149849534857962401915394273535192133803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Add<&isize>>::add",
    "hash": "60331126894468359407230470097010125778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "132449584224789635486836679266378994429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Div<&isize>>::div",
    "hash": "31987572136085918891318328664430296920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "1193567250745185414111405706867047686019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Mul<&isize>>::mul",
    "hash": "1352375438826298998410319652092098318551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "139508241437966252778402440494024328295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Rem<&isize>>::rem",
    "hash": "569167636225726701116993736163524951606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "958565291087777571418083714692202439824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Sub<&isize>>::sub",
    "hash": "176378552462415681171707568211352274879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1300153085291125282010158560398330990202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAnd<&isize>>::bitand",
    "hash": "650460010716084314610888026190929419008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "1042290879650696614415823504568200477406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOr<&isize>>::bitor",
    "hash": "1672841064637544624012743462971831913330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "116232986680947692887746244980786565941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXor<&isize>>::bitxor",
    "hash": "159339126408046907614739370806192035624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "58672793852729948312889284929483483830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i128>>::shl",
    "hash": "105967141506584817316210215701326887418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i16>>::shl",
    "hash": "167730248679986123215211041622912850525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i32>>::shl",
    "hash": "47347477178668725142203456589556605147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i64>>::shl",
    "hash": "101113565163633822281711239290753709494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i8>>::shl",
    "hash": "961539007930788967314083672189342327306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&isize>>::shl",
    "hash": "170153440402399663096462699511491898062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1198376724680399676114740645364641475822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u16>>::shl",
    "hash": "5111116630962081015631323227054470636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u32>>::shl",
    "hash": "519690613799666698618065007740976962287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u64>>::shl",
    "hash": "193669346252723217397481670837686717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u8>>::shl",
    "hash": "1347472188785514034917125718285132266049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&usize>>::shl",
    "hash": "629435932312521399814645644546393796764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "514711965222549525417421249956433481011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "65037513573167708044545424060277577638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "39209864685980580743770004632419074136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "7000653694897725043182491909196610241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "133748417173162211362680615434983062786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1682664618162820736216122740124686875658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "958990274300123574518020483689063399031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "160045021522430648265353147329838308494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1067758747354216555310728914631283565438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1279830939527297586513733828501482876201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "834506864789774155813859456073224116946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "143840939588164321598111398913474330069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i128>>::shr",
    "hash": "585339527782717469812733988686921342133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i16>>::shr",
    "hash": "1224763918825533312110233574032810529392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i32>>::shr",
    "hash": "84091289825032107242267009643637508439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i64>>::shr",
    "hash": "154115050756775372022454169051005451834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i8>>::shr",
    "hash": "888188654881115432617985346272435180775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&isize>>::shr",
    "hash": "247974407580116057112812815628410020913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u128>>::shr",
    "hash": "102698748086609078298821705595344013930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u16>>::shr",
    "hash": "1786011844028194318811861850643878507936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u32>>::shr",
    "hash": "46270550121416893732153661112553016147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u64>>::shr",
    "hash": "179830655109743509769179812154971614135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u8>>::shr",
    "hash": "57621788043487617344253439828242795184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&usize>>::shr",
    "hash": "104215125148840620666476259204429722150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "888667146749941918115198394839892486823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "118527591905584527407470350284955670555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "172089107088180304947417641155180798240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "171539385614278335176039601021247929891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "44612487864594819447300363592238532513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "107011414448404065033275471971610472462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "851515630839955921911741418121477244845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "10283160772166775633202851132372533014",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "319704230181613756712462411532892607366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "209608133185976633210992885855423006058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1314410631095225210816979548382604699061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "180004841078921817355881152825655489710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add",
    "hash": "125225577854128193436819430703894030888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "53764625320856763857676432202150857913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign",
    "hash": "1771971580147853706513615629802182533023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div",
    "hash": "214940567738920401016451572560521938868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "17952439844967732649492844782742018236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign",
    "hash": "23406808338171979222352313654976969230",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul",
    "hash": "170545117588850067102424138171276642052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "44776228892984982402890327243400847798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign",
    "hash": "92855213957055626294872134907355740732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem",
    "hash": "632203645739475756216753385270311098788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "69152005550859352123142337579923036636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign",
    "hash": "979948744623652913415811329606076795728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub",
    "hash": "1193931726894762228612804820200985243638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "177245427460021353016284809593201378237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign",
    "hash": "1707436914468169751614085519194422026379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand",
    "hash": "4529174905003408858295421083661239586",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "369888015270594587718245920349435843207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign",
    "hash": "699792333249322926811298523233042818651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor",
    "hash": "1075489825223117212016565012375054670715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "115921663531136768617423011870340679448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign",
    "hash": "137756730001348016645275437308313575333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor",
    "hash": "16203112981112193138462729668873660941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "77328214016507160682673424383393718347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign",
    "hash": "1492075071710517735212729972689292152995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add",
    "hash": "490924430488049321617442383160664589936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "597887282333957585714373175764067858375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign",
    "hash": "1273590954856736339115234652607452971269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div",
    "hash": "155880763312730636493212347217931804817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "1212109608581060213816559471522209301304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign",
    "hash": "83310363962721206312925632147379058029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul",
    "hash": "9045195944990542103982300213981991029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "37178131573896609923019417965853231830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign",
    "hash": "242630257899440692918056469227228666856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem",
    "hash": "1472920937352355387914712267063687922867",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "5553840653485150656505648310522478833",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign",
    "hash": "10145919207524320422358200781071898908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub",
    "hash": "915479948262564932013056123679796210219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "629458661143013304116328351421154787585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign",
    "hash": "236983481000588384211802299633994409694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand",
    "hash": "159206339900618952722767737233970639684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "713458623090224401517487711551356911924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign",
    "hash": "15377222211541073141818830961868377058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor",
    "hash": "775441453621489483411489910113898417752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1386427166305909206718015409345707299709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign",
    "hash": "122381345761171424003296196671801630180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor",
    "hash": "695239222473852356812189085988411624712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1241318019172537603015031187806341607605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign",
    "hash": "1186599677044166555712154332457600579518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add",
    "hash": "17045467619146389634041512429038241925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "1373786837596061618711570177993107996449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign",
    "hash": "231225681211969637212664526166285057402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div",
    "hash": "1501734478856226851410158817468904277398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "92203104849225860118111918117620704215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign",
    "hash": "1604979336048077666116898392529621433337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul",
    "hash": "911557030872896159011454264094843089488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "25808156024492985163232574948566563844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign",
    "hash": "293975096725266530612831027289927979498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem",
    "hash": "872667992399247072113435586709214850856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "464928659853439401510741713229785195170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign",
    "hash": "496856661046363376611383048855127258496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub",
    "hash": "114228661737686346585811102499693931397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "27804223048264319023567674077330871747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign",
    "hash": "1050624472344799179310668785091843085928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand",
    "hash": "432027896632894797412324147976945467319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74067082511212639738674331958951090598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign",
    "hash": "48680955322708584233055880273214030552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor",
    "hash": "939491617002613612010083335511500363366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "1750840540774748177011392019622996349715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign",
    "hash": "81307190284869646579140383503409902808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor",
    "hash": "570679423165641270013052943531398680700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "134351972411168303129910050979931985730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign",
    "hash": "18309632453628027377952573655713819382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add",
    "hash": "1571946781615977959410290630876062717172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "1277990050208965256116170870048953494950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign",
    "hash": "13336470272279431198387990978724052138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div",
    "hash": "59616399273540761652639038557833491364",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "123811102987810153675987097157681883011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign",
    "hash": "212467650981502448117105769822432999673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul",
    "hash": "237987497963486246916185418505496167977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "1220701418156972434116896260796021808773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign",
    "hash": "141598849902666626844437981937726601342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem",
    "hash": "11600437941916428276799381820510197636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "1366196331009934209518355843636610268054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign",
    "hash": "756299294891882766617887365291208194455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub",
    "hash": "42398692116572278373483810173582523176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "168738344875399976709966464159340379267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign",
    "hash": "17188968497783518144048228428082718509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand",
    "hash": "148964653616453991235436697275875759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "939125340758960531918019326753555472432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign",
    "hash": "1704601175004116643514045369578463368194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor",
    "hash": "151158596076494401031666326473654938688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "12066250041010451497306235939414928521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign",
    "hash": "554131134242479421810594244734507987022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor",
    "hash": "82698217210362071621123974924154071188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "556519577690761654915956355923195385900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign",
    "hash": "1297797962629342808816005859141852517916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add",
    "hash": "70743122641853493218243957803258685316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "105855007891568814581828831095018036681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign",
    "hash": "138218398927165434923859397596978166269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div",
    "hash": "164266250394388383208105139389129049711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "1276396008878588143610992377587770062769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign",
    "hash": "144937212770057247609624467522080473764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul",
    "hash": "98070155380926862079028929078565721837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "1265973452073714227915485708957937405270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign",
    "hash": "39659551948561646739948144488772810176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem",
    "hash": "137913438963545033374050622920259553305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "391454347513567336411472722492357333105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign",
    "hash": "610818402563084538716272390894172011968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub",
    "hash": "1187622009640316697210597755457876678573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "573248426382945887515304699016928535729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign",
    "hash": "145383006204167926117975754782018882675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand",
    "hash": "485990076821611095612437181964163391289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "74436138301816287287949082662641017851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign",
    "hash": "91927781966917934427090677772527671184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor",
    "hash": "129753949657858112401759994500682521646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "611177484694262293114298260370873532544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign",
    "hash": "173343535645730291189343900367568432752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor",
    "hash": "1422153335797785491973681092850627660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "163069627040178494107988449038788377756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign",
    "hash": "649314996106840473616526118115312161925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add",
    "hash": "123081036719144301893054645681644947192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "9911195791214744863592905970635731362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign",
    "hash": "160741392153125791702984675232577296948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div",
    "hash": "120576644938157384815367664916029408159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "912395538996379646016728540963102424617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign",
    "hash": "53022091996747274173339911735309922439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul",
    "hash": "274992480804207106414786560346890047562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "32543739541583336947530783206831460960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign",
    "hash": "1593301421073496853816802408922197773453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem",
    "hash": "1672366185805468300717415490907881164037",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "68960877313197405182892673239658566297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign",
    "hash": "152276948180230723439569259000654647163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub",
    "hash": "123485327097662366006899330424473317852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "948566716764267978717148579796475141601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign",
    "hash": "19981272248203368761173857295745119801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand",
    "hash": "1029038298192549371016085197781253982449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "147284944896508261743680101682664687251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign",
    "hash": "72670101930894263219342139938026873908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor",
    "hash": "79218962765212155366896762661685801316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "5181601176800762821013186447881059164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign",
    "hash": "61891349833805878227127057255139785898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor",
    "hash": "26681542414777859852284861864675253978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "69543915326927445216176611421710216778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign",
    "hash": "2836281492040191721817926440400217444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add",
    "hash": "97585777210873671212624302976441256553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign",
    "hash": "1412865585672827411818033677932654425770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "1166039320819547551910118382483235579899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div",
    "hash": "1075050662585630194912347502482755709521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign",
    "hash": "78132856136982220543414830960322547545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "52813865019172704845107872529628196062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul",
    "hash": "15982685381939182048895434447232733451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign",
    "hash": "99087567301472509313047572718539173073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "77104283406207110445478189340184830598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem",
    "hash": "163556774947860797655224522067858186496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign",
    "hash": "1566069568485401192813118522937537028463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "38163302143418994404394971799080005454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub",
    "hash": "695623318708702716411444350199963417145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign",
    "hash": "69446498080278946097339003858991145199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "37470201760481797799517565800517495615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand",
    "hash": "1586612142195618290517082560964781137237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign",
    "hash": "54984976903597886287716087611938207853",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "632628476416999833016082340918613957428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor",
    "hash": "84364849138670844921396920328382591317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign",
    "hash": "1544395190171079460515943706947553123463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "999762568023288536914835701195807197625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor",
    "hash": "163637080908547485559601646284630024574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign",
    "hash": "26982233871198899465682050328857869417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "95033304847011108713079148655432245339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add",
    "hash": "38107146845200752409119876772556043662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign",
    "hash": "69898112686968684141354455319625501012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "133509357881932905053187061219847302575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div",
    "hash": "117299109437247447951402405611206104177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign",
    "hash": "1815742967893365562152738205884524716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "145708505064499960214650255846477010220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul",
    "hash": "114143214178527168515603859054002218168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign",
    "hash": "718485681291425316316667642880746813661",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "1757480931874973474013803436327952873529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem",
    "hash": "1962619729674023897070691785184731224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign",
    "hash": "35999378691656211218219924263213566633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "661367153813290968813627858567104176419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub",
    "hash": "8246052730408237187397168822383810517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign",
    "hash": "601748771137721849115215648942091146133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "111738310416412085517581740802240318852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand",
    "hash": "30947355874017412184521521477381485911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign",
    "hash": "151596165237081842193547288544484158068",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "83165162482076394973234413095570391848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor",
    "hash": "92029479624834062757663099122447404729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign",
    "hash": "64920976184836815999364181920911412990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "1476942745280885018915096292121061916650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor",
    "hash": "15932873330975320679577371101163045279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign",
    "hash": "111322053000772895555035689801420744630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "85703190794730706495899628676810535655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add",
    "hash": "67297379359242237415977811395963274673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign",
    "hash": "98453299143160515062719850911443341167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "33659112850905238578629317714632851204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div",
    "hash": "216740511304051188717146559235011653642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign",
    "hash": "754021200772677840410278551883222154655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "88060525482684903048416785998042627990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul",
    "hash": "855347201571120985415292868409759051825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign",
    "hash": "1476439450560683275813307888939832519148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "694335209793967171116601948048415453278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem",
    "hash": "1302159762166697474012786447180712964454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign",
    "hash": "172900726955334710866638022908024748271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "1705717573863604320213620451645942888526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub",
    "hash": "1288704080435671091911539489336885383470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign",
    "hash": "80552968659382115914971175951667687435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "4763757640405784629158642899359613126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand",
    "hash": "181608571557069981589070661142071295986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign",
    "hash": "1329907767304454515014686086202903455510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "126014217170929718441538537527859467760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor",
    "hash": "1428195191825694474414977553925550876211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign",
    "hash": "650200476049364264313797680493317413466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "83925411088114686674139893662956208679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor",
    "hash": "234901542025814248913669597192070235548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign",
    "hash": "328379662672357389910075555631831375573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "65060911874222312785949373520593537127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add",
    "hash": "1445955966629671257010902488601389195544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign",
    "hash": "108814359716891377416349189484645422122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "959105809732496462915267167303562261100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div",
    "hash": "72148375869529135506326839656267452042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign",
    "hash": "508365477761091866518374547779714228144",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "262975400065339836213166534775736786956",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul",
    "hash": "45231290119849671507946884706751183663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign",
    "hash": "60676658242735467826691906700371070244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "1289170567237794126010602189299204695774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem",
    "hash": "86436231788569726841493102178695213860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign",
    "hash": "144912683914811053926693833333147886520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "1067448139644896035417136461202210404442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub",
    "hash": "3263458039460907234502608843607086710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign",
    "hash": "163434582368034154465415380270706200447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "108468257409732338789230158785845300152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand",
    "hash": "118434218828739610836920811020669849759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign",
    "hash": "96318577598294560826676454467039705238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "3359871319813181232021252761714116880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor",
    "hash": "1388011547326450790610939860520438455844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign",
    "hash": "94440777663390981474538085821413136946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "991815182936113900311851837777046048331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor",
    "hash": "44143631107288872365717766772506979472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign",
    "hash": "1119097468660158010615199673233601732659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "104352739706528051187782507719615929773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add",
    "hash": "78564775822786353576376404690504160863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign",
    "hash": "707181463236808188117080095292942183929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "988813009638127144814822875866288657910",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div",
    "hash": "157391262014139122994643940808822628819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign",
    "hash": "147447808826526706038791802582055902234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "63282033808728477996271815837522492229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul",
    "hash": "161445303757522030365433622922408463127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign",
    "hash": "1832475559400049756507242420783741507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "93347287590735446412820119221969075880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem",
    "hash": "1827329930798182313518183669026304175863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign",
    "hash": "60768713471428322428799015960623502607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "204012584163302876513224593809435318239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub",
    "hash": "69814866612132820243708187723899660242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign",
    "hash": "73800612965972892295192664638556085232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "9011942051353570808242051841346389519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand",
    "hash": "144613412197365605414831411752624341748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign",
    "hash": "1530675555285175003011707008938381030725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "137220210331350433778522945167503097813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor",
    "hash": "138933086039407254504062016832526667590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign",
    "hash": "63618192934903793643252157524356499043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "1284833368630121245711461346407701377824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor",
    "hash": "666074730341997351614378745336125407564",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign",
    "hash": "78300212117258375992040617561883417759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "393669793514660588912161635742338418591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add",
    "hash": "80481806766313428162790539544106663097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign",
    "hash": "1032830162215209812718347229031945326419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "150904722135359096735902845310756588073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div",
    "hash": "1179733848221384122516892222612381497176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign",
    "hash": "484306751953124263918190903278881140844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "1463109724805093873513051975557145631337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul",
    "hash": "3561082128640511992765689857942394256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign",
    "hash": "72870999302690388955418231408032873486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "636884963803756881313406378390108424472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem",
    "hash": "22045961939121551729579655006471649359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign",
    "hash": "1595567593176112730816444196220172646507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "431796685477969191411024457445209626282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub",
    "hash": "1139067845262160839518370083465150679470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign",
    "hash": "12504543164045544364795964893040903625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "13427722386505586015179746171447321690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand",
    "hash": "398189656834025967513417660547987239721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign",
    "hash": "369064201012240729516988436661022257571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1212785386216276259613074035633317290741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor",
    "hash": "1389484483259841215616490833099015155871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign",
    "hash": "150472673215144657795798049364469141003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "142734499517809557552112197976406142610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor",
    "hash": "467291627211184368312523988874046611380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign",
    "hash": "168951480305374336473408137879471269827",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "1484424056815599283115486480099759226680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add",
    "hash": "169713561858058868847831190796158974228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "587468782685784716510206764763405394215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign",
    "hash": "511827652717240044912832241258145550561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div",
    "hash": "1379058872160189223710903759530894504128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "1283768866005635637310699528478416895563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign",
    "hash": "120042795712229480482930735228011678385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul",
    "hash": "1735988538617909424212845456543324504338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "1274958633360367387812992466637449828703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign",
    "hash": "140099932633454575156622668036916359304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem",
    "hash": "84187857039461786475347143807962031719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "30825822191875255434142332351867022846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign",
    "hash": "81057890396059269049253696422665665734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub",
    "hash": "265076458566794057411367719023260206472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "24867431131938081875441539002467662583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign",
    "hash": "1804969277458533333017482503957236900809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "10112753626300529591849255109706264945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "888601222372597156012453513633497487977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign",
    "hash": "1754232287511276820113472740898059626677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "30764207410714678171033087770602468213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "53586027615008256721947021578277412611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign",
    "hash": "1398755961226854633418372709167441202062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "1176357627164153253410845823822079072235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "98606303936150562769161631115889844028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign",
    "hash": "848689674774025239815015918853055095993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "136684836702797477679590989686994820852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "7702586505191213063343423164596186234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "157944647390655257727329919561094205075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "153184668577098134152900200797405601600",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add",
    "hash": "56588624466702700722554610739084005553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "139674836757915222774664166874481342118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign",
    "hash": "180854758824756715675139161817389379806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div",
    "hash": "96616434854427311604223960169722505889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "108375980083207636321526793790746737324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign",
    "hash": "474526399400355677710615794401487438832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul",
    "hash": "289536682651746206114086287138526079488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "94350435033225009917933860517523876065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign",
    "hash": "109117396335148064715533786919410708680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem",
    "hash": "980869047035364649815708659886125258627",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "69292877465419431113797868799730140494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign",
    "hash": "5613448414778961395306924374632468366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub",
    "hash": "72347716292468723649289326807835859837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "1715948792319947863111868307067257796172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign",
    "hash": "1196918970528880749512368900682445878017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "187656301853131112017935755307930590385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "124238343662381942323375836893880332590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign",
    "hash": "546353379616730951215489298901471681910",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "1740930292932491118516919971564517303535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "1366176245266904286611969867878711188972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign",
    "hash": "22904260270781805825527643875672830758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "16505410653546204613678182724362187591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "823029901611996000812811022380080538931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign",
    "hash": "52029801296215555855866701039645195668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "80048907059382028663454017932123643210",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "24418303718526587973188955290369660796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "1753952729549860946213807860086471440854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "31300037758313962694769184159764384844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add",
    "hash": "122458265773086552516909518374101070685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "23438328676094046812641840615684756960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign",
    "hash": "994856670106118996712364935686959584034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div",
    "hash": "834700461075226571515804051450413305003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "1038955970006425259010009812716072271254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign",
    "hash": "15952669949741661498233804617329425733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul",
    "hash": "1019121379330211689413891859628097609152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "16420264642386614575311170107242309281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign",
    "hash": "67853842407090039066823649927070463227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem",
    "hash": "223999988016899498718389672730812980379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "168163610814527389746542521367354784069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign",
    "hash": "85305917683138810897010714523568586718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub",
    "hash": "85505978775159714087206467166483515303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "193423300685710842912001032768417870208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign",
    "hash": "1178956463255242273016382029196431838775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "793463926299434503817346604502825159520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "74691509261521790616529908734321462931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign",
    "hash": "899971373615221393312226246888423192021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "94166221813969345217243225650979077008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "182543189080745557116261659331138443974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign",
    "hash": "5580352657957916389114044101626258298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "109846369256452202968466291194850559269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "1127887004726246338899715202039724132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign",
    "hash": "416140274399719526511250747798861194676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "45273673036147190374294763341770211161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "145568391087120918024526677547255410529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "1603494929802034142117996086612919281818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "21150506044034718664701477474769875643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add",
    "hash": "9693389662687940317069828853876832491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "47984307307719283012632156298808482566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign",
    "hash": "1500225460362962931316911930595127954098",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div",
    "hash": "56768806175535702859753285282893722198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "71552205557973429252282687809360647141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign",
    "hash": "367501916071350417718278658722104100165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul",
    "hash": "18429921577946872192605693886896592989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "1456703882221947525517850970902884495800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign",
    "hash": "1555938068409636911314355059297833398872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem",
    "hash": "124385862779610733557051132755648382559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "73529348787044629315988347733689641767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign",
    "hash": "64799295552781154716495760225881707795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub",
    "hash": "1677309686137569587311432188804684830406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "282598130484077968511256983583651410814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign",
    "hash": "526084487549220846412971334011041099170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "728445270648883664410071608452660816292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "129961742192546887511914539199903339297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign",
    "hash": "45566724884160501329358117929448450084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "1036200127659718295916048383252909054024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "619383975993713697017063995002482328022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign",
    "hash": "26525643419649402895999123800662620889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "983532210357934792413269715557241428982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "536489799223263311311104416884596014431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign",
    "hash": "92833682644123120719795460593568822263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "173927175015607685483112364469869065168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1624350987670955858213469444419534048944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "48675044074728384986246221791077455165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1803693855877371502211374900982582012884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add",
    "hash": "51654793980768160504954148589098160616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "523777539432138782112714450420641184238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign",
    "hash": "35678581663591253734399419509556905282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div",
    "hash": "636459144363820618917418810381062104213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "7324396569306095772519795424790547009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign",
    "hash": "55680911910998814352196920594281236529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul",
    "hash": "1731487801067510357311814820129531799965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "1506788409314051360710855507829707981366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign",
    "hash": "1244056724816782889318149652535483152730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem",
    "hash": "180316629699005660483509211218179445891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "107772485531170666181049237684929286787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign",
    "hash": "18542056046987354843348757514352225140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub",
    "hash": "82410912731048562498409232842559173075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "148602562651737716131545454850001285052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign",
    "hash": "43415114159822886155227230921986574508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "430552428336040316410808342675202099332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "1191841443975983091513288140073217032423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign",
    "hash": "409322855453674698313837696642162818614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "880558134298026146716189467349772059562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "32707347472066704655658934683516837653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign",
    "hash": "520860117520266249012171909513912915409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "1449464577861016864610187076186218761992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "829778417933022489816073611476232512972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign",
    "hash": "25885455175625782429559638893308682446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "764313284809873453411069826067214480548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1321502690795460854411498043181894959180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "47077900513024750985323575749524116356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "354129137984044165014925255468594407162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add",
    "hash": "64272381074321975754992974292070432048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "873662470741600908612886884316665397521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign",
    "hash": "173748553649028991269895855018081229365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div",
    "hash": "1798217102006725362310496013901568399256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "474242678724500349412052806355018524988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign",
    "hash": "115264357711897751596714946842206748090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul",
    "hash": "38888631255596992432785701186207317484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "304869860343155975411755952118285820252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign",
    "hash": "1444760929592779785211463600575365179603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem",
    "hash": "180755121319767825614452429534942601712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "106334410161778267807418763617487200354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign",
    "hash": "208254216946653367710931221421125368777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub",
    "hash": "167517076259444441858525313381375631846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "87613195883098740216445378212916305253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign",
    "hash": "144887817622110264052119348334771378488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "437779995661574010114612662353711361021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "143720856997084986325752373091024644301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign",
    "hash": "1774913413173164778513525178257826301879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "141379534121483683215031289364260726374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "7691318599357444745167055424322525487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign",
    "hash": "43842994766648827387211028203032487874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "12746683981417145712663815131420963245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "72077334072306267033316289113268215231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign",
    "hash": "169269758608861596894430668993428039037",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "164607818913095649818729433151536680754",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "205925815497464480712336639044226869862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "926204561696632923714340954778193643845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "535979190534305019118362162202774858413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add",
    "hash": "75020592038119556968263259237102990041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign",
    "hash": "1783507748460750308518432153711227816813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "1444330560665725835910968074446147169379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div",
    "hash": "87522063180428142857638690454562864687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign",
    "hash": "1564343313467201071211221628941658745630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "87038059024326297968109317165346472297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul",
    "hash": "1034322047565439074113755872631494222117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign",
    "hash": "96938756170457065012051326325974663659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "108310304883380623116405961416775231413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem",
    "hash": "1340454252707193239114066257737916662774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign",
    "hash": "937632338032815945118352394011720926964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "282077804782525129114389678549316830979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub",
    "hash": "108917442688790770056060406993671549133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign",
    "hash": "166291616251720113826747519176630540721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "152168391462651309811761080520729040248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "778925635719220611210412200355970450123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign",
    "hash": "177831158320032071408414223666913860101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "2957794332384549241365378417645324215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "1675551722437363816615678894165219735934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign",
    "hash": "122014373390981314453445296082997355821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "7585208501884706426302641685134724625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "79559790655009326918416251273768254507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign",
    "hash": "151592686952459454697603535875563276191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "3115817818936655032245849574415899257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "107731152452593592812898038536031854087",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "16565851642841212187079074246455456290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "1516399652212500372414503968509931377675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "62248258204044638726130225993407853376",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add",
    "hash": "45523515249863041875950441552054646131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign",
    "hash": "32235279988006432107920094975043826681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "426518296396649739510911156473016695197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div",
    "hash": "419737780427161686013069744728719848078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign",
    "hash": "17026572908970202782848929613736142566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "35693360912398235711068939703098297182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul",
    "hash": "533159491831215436412722961950140522875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign",
    "hash": "130626754199049450022537343676132532668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "158457939100271199104264509005196344824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem",
    "hash": "1341310149101175939816617273422424433851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign",
    "hash": "1468396225535055137410508418660926352540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "166938482665469681542609622678933788716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub",
    "hash": "60887856025141811332270802386331551086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign",
    "hash": "25715679568502165201497534916272921455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "39164447570602510569563361325614490659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1008773332233545468717323319289080492997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign",
    "hash": "1155428342526603130216944858586918456538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "940717614383505172918247934813854261964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "106779861969421623112836436049849520859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign",
    "hash": "150476204547168285814840989882031901730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "127037804379397222476161305645632341881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "42658937718569257213539433830134582564",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign",
    "hash": "75011582831788759612093092768482109404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "659155508918675928610666129026865690492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "127944250656502212199569367658642256410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1818359265767803113211144969203263702191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "107264164989157623657040850351859758155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "793268909499421094615405283613862228084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add",
    "hash": "179732332110780656508025479152451363877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign",
    "hash": "113452640490463438604451016427323127745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "922575678202732891517852655388950594961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div",
    "hash": "2192498094797259796236862219459449439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign",
    "hash": "157209342809401942893448775215055535746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "32096312559953761648879438183086568008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul",
    "hash": "173324739163019775931442783872260732277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign",
    "hash": "2556067181184965755386504190672884424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "16260873821019123416069543442863399912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem",
    "hash": "1718271485739013819017699762740187690058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign",
    "hash": "84501384818085484679843903130521230986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "485429382628443373716705269412009348737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub",
    "hash": "1533813218390129652415929705597547253897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign",
    "hash": "8671833143021382672360058674555434311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "99063248961468443148742693366786899528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "794971412360123584513996500242095118930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign",
    "hash": "1567524660986221294414089316281818857072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "1731246895659425111411740137396601824911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "120732169329801416125840384327019761274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign",
    "hash": "1240259830151407424794055607303669187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1449780149786273317810680954017337519366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "17561745628004720719050390341688551615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign",
    "hash": "157952206666417939633808538037575114234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "740366304848764351215825183171011946254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "82391930890424656566996763584404691891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "628264537376350118017464846602488803516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "316899483184846210316842476440339135133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "922427028066669984317449960821304691475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add",
    "hash": "898741826597849844811697115903220313709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign",
    "hash": "985964700466492228815669486119574220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "1721834879421760350212243362163910928897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div",
    "hash": "92338619371479646661902803658882357439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign",
    "hash": "364903509385335893512242298513471898858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "107558251437582860722737776911743574519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul",
    "hash": "168618841822822004161552834181037732466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign",
    "hash": "157010667378170777024957352928053314074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "340276687972144818615151289720688458330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem",
    "hash": "155462864781633436856854670576731197455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign",
    "hash": "566984674456131981310722923317945178262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "1300916483139670722915150494595865633164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub",
    "hash": "667457429116645811616506625125604890515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign",
    "hash": "326501049093240223815806073295236463752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1782778926023452244716084868997815728792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "43120945942062415523141379080949878954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign",
    "hash": "124329574752211507607410404647102097231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1244146704425020979813798847137706826114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "1009547094895033363315380839675347121455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign",
    "hash": "257373934460761038216542739462952466042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "5390212268689966586317345829101937103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "56162191347322525325955416887561814576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign",
    "hash": "34997879259023964942765910389126622996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "6984462078573920282585790198044624211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "49443853563606920845019484514318498358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "72721172795611470808904763739879418355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "124995003681012665909976783408417096968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1665125952097731115915328994098107304691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add",
    "hash": "75088985497814997524861607738060196184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign",
    "hash": "126779605549098277926642195641231404667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "62452659448193874702491241844162851858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div",
    "hash": "125845883218795900011465705522257111537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign",
    "hash": "16438882651538765114251534637187969065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "77998466722679744856469587424949753086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul",
    "hash": "181038353767553968864480001906041159832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign",
    "hash": "103124904111125550844789373721481751525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "7846015813765823734971896990877255184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem",
    "hash": "98116707562289909292792389145324446500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign",
    "hash": "812854720735923139615699872067713543444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "240768041150344740816271133752530846712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub",
    "hash": "279210666004228869614832113829633958385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign",
    "hash": "611665259903313554315541769806535069923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "1394598200721171035012954677791952646334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "94290869160107438117730041421212881389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign",
    "hash": "16692366807928618535674872157852483121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "166481671099348585349235648072520721954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "511758944076478291217508899554450603026",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign",
    "hash": "27935828157554983527631587395919474874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "84693211385337697902295608053287661299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "163923488932732699709775113041035402345",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign",
    "hash": "3864714119964995904942518034228949528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "508460151576263061011925822818430646850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "882780909086512853415035341190476751504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "108708372331310669026919111210194682760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "163145129591411217988215451813732704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "117691907477918665055143186598750468640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add",
    "hash": "87193975584799902492928121893349150713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign",
    "hash": "1399430618965762714010406120293569863767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "16567587057000872097779511492565444262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div",
    "hash": "121429326414038845509354986915021557123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign",
    "hash": "161284100288738313426168348992069865886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "1629896495964109886916224188196359928217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul",
    "hash": "111422015796596461322556052761975282441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign",
    "hash": "137565465548689678233290216027756288005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "87301776078090553452726528045580728205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem",
    "hash": "110992820294086486321835623240669670200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign",
    "hash": "110845172055346682898697418197916315623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "117568963257446390467386306674369947160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub",
    "hash": "235886761958021102110922613003002373862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign",
    "hash": "299764276211008573011553160459686593977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "128457281793800122267973343683900109352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "14453801014358491812996303907330586052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign",
    "hash": "1734765449581753755314339941301138310939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "81747247369436232075725657307283302845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "166244523787719758812127738752586039996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign",
    "hash": "158799118426277343168686343555987761322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "819654227215085640712524509977559594679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "47466553912218891315400164938565916893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign",
    "hash": "111643109900760095638481365771726706182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "575853635810399511814324143561819851089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "966214488677280344118442377169459018464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "143005168547238571463035886950111926244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "2231554670452929886921763127739926615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "130920132326959322476974865449332813030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call",
    "hash": "10982754966678867121806844237345901612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "64410004147113976114939863015791472405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "16533781588272751569642670047435451405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call",
    "hash": "70908687357875721998996585709605673243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1331747642789892471316587454262849369285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "125847760946822715319069007870122262040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call",
    "hash": "45021138135762491325367798081109252203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "243411990052289849112316301373674327024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "161557103486259447206798653223255990275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::Fn<(char,)>>::call",
    "hash": "140979162253101145428042644231275222209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "790365466425998142415200964839822423436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "144901485728295170916662295686107338805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Add<&u128>>::add",
    "hash": "437112021871332367217014185872963675583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "131956654836093671586308182497438886137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Div<&u128>>::div",
    "hash": "171653021385854285863814973575203055694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "13139636306550889753983890253912379180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Mul<&u128>>::mul",
    "hash": "1097371677605289296512463351741266887484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "10460691339654999701376154066230029900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Rem<&u128>>::rem",
    "hash": "1025868384962655318713943469385946858759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "1245212142262414095313868095605243749567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Sub<&u128>>::sub",
    "hash": "1298851035090416417110549042050303314047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "26989915596117553708351636633518761084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAnd<&u128>>::bitand",
    "hash": "137173297230917895561329602659032991380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "786706648786948340612083411565709412176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOr<&u128>>::bitor",
    "hash": "1583968743858198075816424701134769179459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "14112814468342127942467255386109978681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXor<&u128>>::bitxor",
    "hash": "88133653546005366367265959107693737532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "1574151954307327177513926165457487547501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "885990443138254486915015513229760800390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "863349133448211128811244403459168702677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "134150636644735524092724382886025756789",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "171529113986015938841559887153781270158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "1128251867454148344817084091851021973760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "652949066039887037714130289813707754966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u128>>::shl",
    "hash": "174931312826812392255691086662263620300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "3173287854568369848551971540717208390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1442872331949988778616118407961837116629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "1812363138188149578315869549878346003981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "144492851472980402444834333751506404164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "49438772121738125217388176954926846531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "816486659077030596116042121267564037209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "157795283029632174326204965655416903385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "117499094425084923569244480980540088364",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "914214819399372214217276923124413873793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "38097228718438228934579120033161365073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "8663970766231133685889669593222928458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "61335145481718476314176699472403965804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1109711235882258887110310125002726350533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "86686966871925980064229246180177952993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "44971731331718760415055803519738478381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1367467315025282962612669822206691963793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1074215288596325099211803290254256869463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "87049604456679981233555018472834989193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "8620423392642894926199932596184181483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "935468619701427675014756106416911293391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "119605063994201902236949839123303568003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1526752683453247052412556665739811180818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "128703234813053608317883837302178446121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u128>>::shr",
    "hash": "182341962689556444686216255012680313299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "104127435522098647082873940194910423619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "1624004375916515777512194208449942315550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "908217440491776327282906467769388849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "81613049909568861366835522280806449549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "11155851161161011433344775301052118667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1537016527201804859714458487103037024759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "798220158154294057515979202434919475603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "174870213120089012666496760114348939874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "99445277215331236323342400404737042757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89682564014211242932516658023844730756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "129023020468262783908950768770135835989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "123084530483101626817193660564011544883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1395183517017801944914385241529589441306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "33485199090982347511541439549293562812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "6996598537826672372117071326838081007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1226281394218852045210099695686699945196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "20620262169907784109880409789672072159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Add<&u16>>::add",
    "hash": "108429781377940193215154079929628083933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "6928441550936178019115835112384458330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Div<&u16>>::div",
    "hash": "204181865246471430413218601632229185098",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "69431458999460679633847732137844368656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Mul<&u16>>::mul",
    "hash": "5816109182859663205296192931125197674",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "16291733403440241791375101896755516548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Rem<&u16>>::rem",
    "hash": "68378961173004570292452139456516716329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "1947204944717401532224891337976523266",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Sub<&u16>>::sub",
    "hash": "980769449777536950010427110342173757750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1282722465017867681010286986737428003223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAnd<&u16>>::bitand",
    "hash": "767722159569593230110715440432620410962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "51105525693651308812589771283529924183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOr<&u16>>::bitor",
    "hash": "1676443064345066321811280106140239663573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "497984568844062190110299514068485059336",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXor<&u16>>::bitxor",
    "hash": "321824902530672645215062963855770534722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "650491789782740430717232147391142192644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "7703786644142918736402803289102642134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "859591102461920400310669782358540020151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "16380643324989701560664176672391924294",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "166971183318769176907139294924467665473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "978249124108109275613641821403992473559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "616840035937843878816964225186125657426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "106858444475239909039924975750214627029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u16>>::shl",
    "hash": "159535561872318407956889609113441496497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "104757516128289879661878587124046272627",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "726032477613465577113487271044233166835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "70934824164964502426702928171190573551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "88967170656048229549729610353644506589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "560705037011246158212340306071026778969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "47366312008905417638983878499371048380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "102650890469689711848452125233356534808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "12022401505159213608338861174776748108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117917549497742105563013824615280696259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "165801651716930118032675273253710759672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1740391881710236818013298696993891062672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "450280626597283598713282041790781952960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "495537169559978086712321793162178848647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1737522251360106597418032428919024074141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "189061408045314444512678726947730745106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "533346246068896479913526498648580485030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "184188740176355754546766211081032008472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "104978714174352531559380508806949270228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "92829595789859997813261142028959875962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "8049634690704801642492826472383326927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1487501127730095623215062786440188734354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "730075436502480026416343455452484545849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "14898046603676871299679385376746271708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1703777439336808166410784036587115650784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1808764561608789958616768923629731616637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "83892235900252469010459823124112202357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "54675702019135355946939998972449113391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "20460387022426154987055888733434568167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1484376903850572498717807848135322697379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1179841259157854398512408322427122030720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "567255828859016616915567789493075258589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "108795703638509699544151104674758917013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "63063597178523389679664165873705458351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "168215287990850373784401324107977531202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "59821060621298886214950426269410146244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "17723464019948594547289996209153844072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "163115203449125013029461889891422012193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1696844088931446882214943260510479080436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "118686175936401947043784252336970680032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1145370785793806924311194365055421499569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Add<&u32>>::add",
    "hash": "878046817043645378717808125345992677612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "1273103234751973698112971320705642706289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Div<&u32>>::div",
    "hash": "1529060289669500186410646483370052692558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "1007531441639071614515557063879505119881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Mul<&u32>>::mul",
    "hash": "34854298843734442825926405813188140095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "1511628909712987623811323760725581277105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Rem<&u32>>::rem",
    "hash": "793829256731749348416491976247555010231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "181913387919365589787141757117820677155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Sub<&u32>>::sub",
    "hash": "43537550310677691914959689060518680337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1373142158362202395410671397636711532054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAnd<&u32>>::bitand",
    "hash": "104857186632182944772442553788847659033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "122389133921983791181774439018187043399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOr<&u32>>::bitor",
    "hash": "283924555238115522211343675181337067821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1360716763434540377310600429471145669033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXor<&u32>>::bitxor",
    "hash": "14726869702182266291735977969622614133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "674543254031986704110816924821700315633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "868118776050252008711386119973009344523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "180029282763579532388679729201685412174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "94313632400037019123972520478287998488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "91840997335001566845794673821270283934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "15760256600467111288729189517107154559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "6473717444166661645205861308593802694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1187758524150483134218088312165988444227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "202395816668167962831248277581396521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u32>>::shl",
    "hash": "211890721822014019311232834905345965296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "1326366837998746884012898270529842746582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "102728497816833942104142410031450149603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "1580976358587929480613833179920016507742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "837593396094682959512108379767514378201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "61491731983950329310676894265801948995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "945404260035518119216026365453424582158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "49913892239680097258443668428499006328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "258877102576282536610991735294572527200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "227360084064275892212633215634979805664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "35334390132110711073480814742820253777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "27905291490706428502257211662844139193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "88653553197834598737928977843760516741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "86013350415525700115067012840360295191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "82210025211924507995458759394196136869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "649651069470691236016102303469015354727",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "988177142805208221314568553844309595558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "36636816662155934219238817704878564823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "811455052143532458412507409948930566527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "64196124688723095823118867566514009389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "920455871639463100618076207065655683879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "155850926903536771219140290788138493167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "147546450949112665024892182880472408133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "176738799313917202317894671226644672347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u32>>::shr",
    "hash": "86576304868079642219518867369549485220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "1392411780882792536615078145236793351228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "608258118921455005210575338231677266492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "1443218206087522397616827010656100491571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20800565574044758218101736142453220894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "101156690596641372464136077228434621437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "2493521767227701959143980012858588402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "104612665719191023610764224956188722668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "297273689497749162312948393195700861860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1050394093128608313517959182436287591381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "11068920896943063951736577106276111387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "743264581794211711616545706064469306700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1807132717738638711614726621828957845756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "129459390018125451137069251740193258533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "961011242599288426114967137319198714301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "24588557839131282066974871493078757711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Add<&u64>>::add",
    "hash": "134539678732592052124705086393343749735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "58712962057144355625161757308072067873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Div<&u64>>::div",
    "hash": "1209227468621513163012801083635821136747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "66025047854646243267385817793555646709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Mul<&u64>>::mul",
    "hash": "83479321638721763692449690507194413846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "1431265625403481109716656352456730286845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Rem<&u64>>::rem",
    "hash": "172958062518190963586768832038459623228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "120141962715614002417595603179453787613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Sub<&u64>>::sub",
    "hash": "1277666987446344054214566501732171075611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1257133000582338172417805612927992911528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAnd<&u64>>::bitand",
    "hash": "6346087602326594397414578242643250420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "1503952676880065760318186817304655051858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOr<&u64>>::bitor",
    "hash": "1811606181469027902910856902949463591034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "40818159211691558275726427392084344077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXor<&u64>>::bitxor",
    "hash": "1035710993352624660311918769550435105295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "380206197024932941818410495771671840074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "152312476328010757328865205953003898830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "89197000295579675327913649294764398478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "149168709398976427161188422741372182505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "7366644644596129967674171436491890743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "159428242810209506956738010590775410727",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "176042233533392469927589691904305345321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "14514630225904823565887235953367641114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "1662619460976053209510421061390127052039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "176090599575747477896584410332126005196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u64>>::shl",
    "hash": "117728323782251027524725766152971622168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "99136352417178070511748853077902304607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "11526601647257390598397248826181870241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "83019024351820516207702662768134479342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1665725819587747087613302216358451721184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "761890564720383690711734448123863462219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "25500837421731226481144834715792342357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "117776694572568462082964860327758552124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "633829588001523350317552392837712774447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "277671097034271078314920663689462381074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "46305687093787415218308356288848150484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "869515339911828617715459548278139810141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "121737658333047076569538646530600403437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1530717789813777295012127784743211649239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "182851128506927002416528605373444025842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "154110981026370630610841239340317486400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "11720776114217951535931998269612870693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "160621739598204035815001853904271316726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "118237725076302568202431678155309527491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "152431440468037815705964426596861188580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "145580168434373569798534813430553350250",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "1686583730550496123912481557242834691014",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "392748686748777756911615207935680233002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "16090518422946079812521542788779333871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u64>>::shr",
    "hash": "163992689563033982088618043558349096922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "137372205973408497644152672833892248109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "14781457212714720419589546199112714202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "20699761960969522513490902377860508139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "432537278147318043318207902547489802987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "31993422895343505777183359522473608719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1456511206758177792013029621743890610423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "1335634643809417089760048529618447945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1615996439249039487410878816530896407709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1723256215946150448317034616286303673280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "4635872526064275049057733470588754440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "169010079972992917418027463902298036577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "422575461567732413316274305293110634228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "22476264440137242076687493756962873476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6589798079078415442473689615690597966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Add<&u8>>::add",
    "hash": "98328573110472543898671058995967036234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "1608333412196717223614425602372986452556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Div<&u8>>::div",
    "hash": "13873929601884261929081189368137325329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "105880236617187995549982353027814280117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Mul<&u8>>::mul",
    "hash": "1476277167238332479814496504122711235211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "156700657519157413445034267699082219864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Rem<&u8>>::rem",
    "hash": "120326992867704602303843801578938487712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "549508696912775355913511941321326739437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Sub<&u8>>::sub",
    "hash": "1152476691731523335117491478094499601798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "409743780342455560617106776857591145541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAnd<&u8>>::bitand",
    "hash": "1748793706065922073115990197758463636263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "3209030367679218227557095570811271094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOr<&u8>>::bitor",
    "hash": "42064129415613643406384991684813475527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "8193543802013694733543958397954885494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXor<&u8>>::bitxor",
    "hash": "42309369360428296738902615723415658624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "31630403509453631423961940275789326173",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "63213955949397182048222247447959614247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "43712563637202670879777974081613796379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "175065939307455564015323932597667392911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "26258900108581475954855823245480004618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "156485736663370090197080203176820386636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "1343933908018643470511989811184774759859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "103033522119145406815932824463103127619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1123987701312751549210786509607145108749",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "280432013923037987615979669373532288983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "1823270998605647210410054494277095352825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u8>>::shl",
    "hash": "148698765752243958215325436264479352509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "1657971415745374660514678652554180299585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "26920476402376239642969677740827480660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "142307823707975587401103105079325888247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "172576880472478391006521427432425081022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "45637653177962185351539621855410642512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1081326713194487378015973104505896104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1329789905700698356617683756223039400020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1355492644051781577816436565800105464080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "257426944648337830416477269178221165628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1609393392404206318216774419116105703785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "142907954704421534485980889894587807472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "233298022309745724310608801946853319086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "86575361056001513325355485158808515810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "59041548177243912144967734267737738026",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "117281403935255571610731823152529359817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "1067278447111488836010407817145122666915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "108895638333705600659308012342485120806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "148419777388936071846317542261170072342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1390249830340254713714360191229102643237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "56786668972997064772065630607424655121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "8918566045425744755224600621507242075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "29824546853178753904588838992557449099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "135144980168669314664381378016033014837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u8>>::shr",
    "hash": "121477740495020851712548791137866993904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "132904923077153593881997461737628357881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "600426195651969265110903116723654631702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "73549967626989510688872689766772925184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "310594366007308258612289061332390864746",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "132842219509226845557556861016783530741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "89478951336307607853511601472185561992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1128181294201604730811604459373119028090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "835472095910007891817895781473901383283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1378021136985826632517303008425235335653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "24297878532561396288609527107433527503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1323236387539651372816917957965430699790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "64427641001877284021686238924932376983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "6222242885449249968329117214669868276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Add<&usize>>::add",
    "hash": "1614654634895657775916257780422624616223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "147158870004959936747464697283668994744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Div<&usize>>::div",
    "hash": "69747676218484066165363542884754488182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "142681760788998473689708013103283115672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Mul<&usize>>::mul",
    "hash": "108224038069129778875059752103422089085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "101155082926836052551896339225881163716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Rem<&usize>>::rem",
    "hash": "476829673127127077916073877576936714076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "989704122349513567915844513531976983482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Sub<&usize>>::sub",
    "hash": "319945555664539878017279673086659865715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "94306108026677042988410716596634887840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAnd<&usize>>::bitand",
    "hash": "17435936355128296073444200068781648396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "1301292624806143460413593428190372195285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOr<&usize>>::bitor",
    "hash": "82322853059895501705031650447886161973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "184022690104605206822342192086553388485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXor<&usize>>::bitxor",
    "hash": "36149074340900968792621900469606846933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "79350393797954388413837311361481943097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i128>>::shl",
    "hash": "6080378966546193479153631062443333194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i16>>::shl",
    "hash": "7413129523035910281224693567749501780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i32>>::shl",
    "hash": "939444632222010614614677471821790286780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i64>>::shl",
    "hash": "12710701162409349282872629358445955550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i8>>::shl",
    "hash": "208596107452770364317013959155965592106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&isize>>::shl",
    "hash": "1534259096947632768218351509312514329960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u128>>::shl",
    "hash": "80649154307622419886564886236550930455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u16>>::shl",
    "hash": "83178164713792866388601521223624648676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u32>>::shl",
    "hash": "143820901782473728769683967008569396029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u64>>::shl",
    "hash": "78073623432144556011899303110745344070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u8>>::shl",
    "hash": "171253201941073623695948570542644169052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&usize>>::shl",
    "hash": "1822164382863374819416998809246245767139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "16182769236733496805036238086158363030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "18664063089056231447215191772119332139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1483297160714447686412139797758564129512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "927009371531512756116588301740385362265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1370227298514463467010039187693134280432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "124699002786138129514573571327942375866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "88496025100864499848162293466950004803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1204559652711148633714148432236185971124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "128799320683647422611192384961259278769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "62332501374669349683497717234743059401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1482301998514267410014574983295622943199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "42091708057230030911370280004314643563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i128>>::shr",
    "hash": "22854779699679463598517452214934714246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i16>>::shr",
    "hash": "732700922891620559416387312384839348559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i32>>::shr",
    "hash": "141580448588174724243362693285779383439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i64>>::shr",
    "hash": "406809492233466025610147152339057178576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i8>>::shr",
    "hash": "27104708226954890888594165208903876184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&isize>>::shr",
    "hash": "98027387298128185035314291442929478975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u128>>::shr",
    "hash": "9791938409793031218396404526061322938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u16>>::shr",
    "hash": "137510412440746748041737635202782172378",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u32>>::shr",
    "hash": "677108840940243545918018000659893267183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u64>>::shr",
    "hash": "165573824501490882866962632466250925568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u8>>::shr",
    "hash": "30234889235354321899681320840007118469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&usize>>::shr",
    "hash": "179408480666129993586394316006132646255",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "81329413326208677294326270773106028438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "130736039821025738083147483603749197481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "170907381786583437452151185264654512905",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1655304469369678577918044127918978871980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "120392148007707889946716409728876176879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "18404752592579528306475238760488928510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "80754620455484657124150089382098854005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1262963103839776627017841136086618634513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1782368220017790697914518691907324994449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "83031568376340571997698067540952010644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "7865504992128505684051582602203364431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "665125577036080795417467355620283829957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "250800211300164603812517143290931935490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "53708891679875800052832931937811171490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "80040651926103909678271999392285372990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1830217983329785560410244833622901427052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "6989983334729211908927339249900663943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "122302766217189543014900254878157438416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1063987999954300775215342309582526319529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "173387786816898789623000030637272844593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "136616187162751180573644041167231130554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "513576104662679029714274679730481362425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "60458008535657027788705666854141614114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1206474107364746324514036244532711785001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "62613819432045952176759186974463354075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "28588117351228037033816481701749562121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "41389422597421656741395145042566161444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "41383783896381957677060081807780226962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "1309760659441364260113637621803027648512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1032289468151012314118203924934304480766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1806494181001350783915205167250141868281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "119877630236156869457967767032646056550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "166328933988070636039542346150215537701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1333588820054761765511554855614177767265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "14821326756404741505611264372285877509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "62986723808619137772259424865299830403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "44187321108602600486638229966240838936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "15780086404796901452171114016829526503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1142238300830356026814631151773818865873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "161433770960147136007504687034330088040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "1275745113313396474113019903553833127186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "167165260706103225348828696425526634166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "732735713645133618817345018103717632801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "628723534297154305612731995865791520229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "330729516135950166610995411486427570529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "176863413171952423588298210118276962435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "130330123525716393101034958525209554520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shl",
    "hash": "111578832161705947388803849334876584267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::FunnelShift>::unchecked_funnel_shr",
    "hash": "27202592506480067365365105078978722856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128",
    "hash": "56064935532181582357217772644767711324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::from_low_high",
    "hash": "1215867595331634964412092261842216784704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::scalar_mul",
    "hash": "96480950455274538863936471544432656148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::to_low_high",
    "hash": "1424635015723676172711879731863681352571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Assume",
    "hash": "139116841123241296862329197121605946323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Call",
    "hash": "6078477730596990242113457321841194043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Goto",
    "hash": "1759747026585201915317755709751175452805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Return",
    "hash": "1170599627963948291011266800954281277174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::ReturnTo",
    "hash": "1011495986108837620716835023935711399203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Unreachable",
    "hash": "66192141860655940445911401905070001291",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindCleanup",
    "hash": "1017943120358722484515226857180518966828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindContinue",
    "hash": "716205042651839572811207433411047803327",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindResume",
    "hash": "434066018118664981110529406670455942351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindTerminate",
    "hash": "1007748932934090353117462947671117947538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindUnreachable",
    "hash": "17925609387187167828243374465831357219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "711056209482254658113082833997498389498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::PartialEq>::eq",
    "hash": "88877246034085362305537985067713117388",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as clone::Clone>::clone",
    "hash": "668434863308423807612947543209820319186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "145417971357762886007482460662303412209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as clone::Clone>::clone",
    "hash": "1130182855573675769914523734239966029409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "2887600198566352773684432512560948637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as clone::Clone>::clone",
    "hash": "109712242799967761297613655658910135074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "102381487177496324338476543520831045774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as clone::Clone>::clone",
    "hash": "95924691271640231921433012408833616119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "167854312578663968009529066705777883165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as clone::Clone>::clone",
    "hash": "126771781333547488368086322377509765640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1689252594087785933915598483619334608152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as clone::Clone>::clone",
    "hash": "55986416196107202667177120378888181856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "34665534152048460913367544338390960166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as clone::Clone>::clone",
    "hash": "8041577304042185661418501751727040648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "9859181824640323755333096837796082576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as clone::Clone>::clone",
    "hash": "957069709908682265117649890045899517332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "48027802749924940115726248583106801393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as clone::Clone>::clone",
    "hash": "1137666718250997373015979146969043840015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as cmp::PartialEq>::eq",
    "hash": "1554279941658177487310761975885713866112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as clone::Clone>::clone",
    "hash": "1242200455388979343313558476846572027837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1004825844807549103615688802214258372912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as clone::Clone>::clone",
    "hash": "1220998989066453544810325948197839204112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "115709760814604442252737259155313495637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as clone::Clone>::clone",
    "hash": "1107942412453118282716260082566407623385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1526236189042748075114283679914995575222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as clone::Clone>::clone",
    "hash": "15477842866907110815631714505822464592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "122261535514438133911763084164840138267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as clone::Clone>::clone",
    "hash": "98802623013543488718768907816755635006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "6004524066957894349610382023112068453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as clone::Clone>::clone",
    "hash": "306348905796160350213674312474299428749",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1305367119046602001816363039827513849713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as clone::Clone>::clone",
    "hash": "58344607455878823815951414012232932218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "49286551530941805783318609903352435112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as clone::Clone>::clone",
    "hash": "594674818617818225913145583589805084172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as cmp::PartialEq>::eq",
    "hash": "95855262543484333061997486664200818696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::compiletime",
    "hash": "149016491882703966614369493205944347039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::runtime",
    "hash": "131139883989256078316508036156498616690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::compiletime",
    "hash": "24519840219812011119266756937500078368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::runtime",
    "hash": "1229299134231018704112839043358227152981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::compiletime",
    "hash": "88052731816800370845922057460954567729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::runtime",
    "hash": "130733565599101754379953028492709326137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::compiletime",
    "hash": "1638183979521812543813190801179967899671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::runtime",
    "hash": "135085831257420105511932492454364625470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::compiletime",
    "hash": "159963367604859094706177739418435620816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::runtime",
    "hash": "56283790425435948010103950438393583579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::compiletime",
    "hash": "219487126421145596418015354223038147254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::runtime",
    "hash": "106601809889378647691783508214687533467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::compiletime",
    "hash": "198150020248112727011407715180527090277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::runtime",
    "hash": "1801200543627756071117457445429915538199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::compiletime",
    "hash": "1204216716995483789011413885380631460095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::runtime",
    "hash": "1502545044392980157114063311066167066621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::assume",
    "hash": "150801711286849130431483622466962590964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::cold_path",
    "hash": "907759440697598486516002160639518786286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::const_allocate",
    "hash": "1643928417563595727114252839317269764770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::contract_checks",
    "hash": "202041077652800040812890563446226571566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::likely",
    "hash": "159665749354558523559870046369576019821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf128",
    "hash": "59203540119877078856937496276701616291",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf16",
    "hash": "1839012001462943493312789979357486918333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf32",
    "hash": "975617838670588919414885362085125181836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf64",
    "hash": "1761474634303920217017290991538678528378",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf128",
    "hash": "13429142554620148681304087284986032831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf16",
    "hash": "1526820967428337727416708302353840979734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf32",
    "hash": "754999970016676017213814673682659647165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf64",
    "hash": "984223037173483986910484498604904703708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::ub_checks",
    "hash": "757546346109244535514310268435567268562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::unlikely",
    "hash": "690438059002452523915046149102377829082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_struct",
    "hash": "740901580716236388017445353015162332385",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_tuple",
    "hash": "270565142308186889913332705961347474944",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_arr",
    "hash": "18601231304545612513062166463921250330",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_tuple",
    "hash": "488268941605952814817858640514843421794",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_arr",
    "hash": "1631632087715593850018004563091541442275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_struct",
    "hash": "24493272676582188743624083204532849631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "66751986689090510981116477515529919937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "145851241821974628762404262971648363607",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "150772366248141671328110556181286494792",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "90114617706775939754310882233628616345",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "145310963984108869783413227959369083274",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "176021295387697574507813191231773699110",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_struct",
    "hash": "1249885930932894569813386367014775693032",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_tuple",
    "hash": "130880522694857114166852025388955020428",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_arr",
    "hash": "1534686368813587448417283934737175739422",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_tuple",
    "hash": "36371547867981253066748237300467247965",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_arr",
    "hash": "70159746076639243623129647549896949220",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_struct",
    "hash": "45244952344854025978445864846689373120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1048303193534936132318398902835662623042",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1793959515031315732713243651163330239391",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "732617147823780385211432947386781267754",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1674750138649238783415468618240418790905",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "546556477680206396917921041746180840924",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1773932210351961261916316128287924348638",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_struct",
    "hash": "86598441453102740384969515802734427962",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_tuple",
    "hash": "1291327440718012599389853534389309351",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_arr",
    "hash": "125445503624354570593069842390427582764",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_tuple",
    "hash": "266889037737182163813440873029032803514",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_arr",
    "hash": "490884178003418311011570845851771685075",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_struct",
    "hash": "61198721371101193341969939563203751268",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "10373400205167821278445497082034364600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "9838556832493032016777267988161258084",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "170310868974769481118818541434329637925",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "35094246368884368112365900402894554785",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "46930030303379979889699239945890659010",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "84303663363878287114230504388498680638",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ptr_address",
    "hash": "517150862108719156016766402081044315196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ref_address",
    "hash": "176751454731123593391742949312733633344",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_slice_metadata",
    "hash": "162744423848266527814128096867714009899",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ptr_address",
    "hash": "102557023141358355034382664803587183874",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ref_address",
    "hash": "456861780978840666917410666476829927624",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_slice_metadata",
    "hash": "1302449898542365260612861240286479074306",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_char",
    "hash": "175186470432967693803061875506622177794",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_non_zero",
    "hash": "173139571820533450017714811528335617090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_u8",
    "hash": "24894278048333706775721352144623109827",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_struct",
    "hash": "72966909048743059846528013492628234197",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_tuple",
    "hash": "999981264435279741712603098028300488846",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_arr",
    "hash": "1363381356338726186117755784143400264374",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_tuple",
    "hash": "62774135548902629314594086151991712140",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_arr",
    "hash": "1067789825959569984310463988219823918490",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_struct",
    "hash": "763087682325452684013884718469155516735",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "22694072827035408411565619492741571912",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "8189443337465969839377697085249245125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "705242790197271665717932941119085626778",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1620027957675200239110196252322817120439",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "47560228158841323184348381120566000833",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "174911693183608175786454870214938781475",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_struct",
    "hash": "449059323947074599210183111104026932557",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_tuple",
    "hash": "167651622323059527266416686165758320475",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_arr",
    "hash": "172342725775639942229569626795398868486",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_tuple",
    "hash": "58921638604254661322023641176642378626",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_arr",
    "hash": "171387958714480391071613260103399780965",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_struct",
    "hash": "54107641517339199849145174199346905421",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "8826805868691232946586940543456499196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "174626297908995182973787589907565945330",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "100869032375674706519865829924161738789",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "150428045411699364898121585950711167845",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "10768597141565473294721716820813448454",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "123824589621642470109737144238148317390",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_struct",
    "hash": "4171936018795584187469750576184201775",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_tuple",
    "hash": "72737197357457182074282989167146167811",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_arr",
    "hash": "114746971153622097605550726646799783067",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_tuple",
    "hash": "136128912624687602277927398934823891108",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_arr",
    "hash": "1763512895535338386712198913348053902793",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_struct",
    "hash": "5323888132871044249835981019541676897",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "138948274555785703717331005796847525663",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "114020709467452085712286810942435964943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "77194489959696848806408993101975616469",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "11933914245412188221627855010327856268",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1148074091630355604411404218814525482326",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "256734739440998654413561877681422682713",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_struct",
    "hash": "248883933089400577011951545939469652670",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_tuple",
    "hash": "599655902802020344910343314872530652329",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_arr",
    "hash": "1368924931050586222712979373186882793984",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_tuple",
    "hash": "52907952032525777615236117266483969455",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_arr",
    "hash": "61638971729657945027065770490065239133",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_struct",
    "hash": "620245591780309890911392105381997547905",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "84513728379035167266247976672768407911",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "889345027553160375913504900886043742308",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1064362699310481994814518741490521012926",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "169419474319427171948256603789907387853",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1631223022816437935616489007970920248967",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "60605286396697216742259348016489768690",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_struct",
    "hash": "1205211597625297832113016697570729254737",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_tuple",
    "hash": "510230207525963077015283438623415959618",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_arr",
    "hash": "1814412783214444958611410480174790837243",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_tuple",
    "hash": "71479118115566069968960995127208388542",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_arr",
    "hash": "96304783231187511395683216795222824215",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_struct",
    "hash": "10086005933267865526502153198148221815",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1386776029099614284112802870826014354705",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "253585044340013644811078933872197910522",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "808260804683753493312118528927080809136",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "141252311527250571866129577704451882760",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "14319185900481775552439965661483767910",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "87952366323145664362550410128195852226",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_f32_to_char",
    "hash": "27210763290400007441965548385812950068",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i32_to_char",
    "hash": "214685333023033000910122027605014110374",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i8_to_bool",
    "hash": "61223729653790303996305178962524233704",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_array",
    "hash": "899061184470284942511290477974316141100",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_struct",
    "hash": "108238772884614670824305271069184178918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_tuple",
    "hash": "816670127590145549711058689959766512555",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u32_to_char",
    "hash": "109500917940910473794432082492802146716",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u8_to_bool",
    "hash": "1617748455254561151312266116372300838694",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_i8",
    "hash": "12075485336201253419692735109903496120",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_u8",
    "hash": "9484830916799611742463060836324411575",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_f32",
    "hash": "174530820389729294738007011910713431186",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_i32",
    "hash": "175217153517745092728910136019980284289",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_u32",
    "hash": "53728388849046542735937296066065492730",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_char",
    "hash": "1349931843404520200711050825954140194157",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_i32",
    "hash": "1168782887460991199718096664534879486157",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_u32",
    "hash": "946604788067296605110981180043288636675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_i64",
    "hash": "75753025837061513541419920864805314481",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_u64",
    "hash": "377217855089213854812226147906617621461",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i128_to_u128",
    "hash": "988990810077135512018115330772148874253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i16_to_u16",
    "hash": "42510263206727149901943168901994116937",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_char",
    "hash": "526338656674129615215345778182345928056",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_f32",
    "hash": "155566086465034992962232889010213975434",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_u32",
    "hash": "130778410883370313601088472790045763166",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_f64",
    "hash": "683727320225700557813639410955627975588",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_u64",
    "hash": "107237130132153372769225754218930316561",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_bool",
    "hash": "823740508925228048317438987624308594735",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_u8",
    "hash": "1359279884243369717812081074938713810318",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_array",
    "hash": "1388761137575246791715542363763057593428",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_struct",
    "hash": "29079949118792111569855857610163173476",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_tuple",
    "hash": "532715561356322048310464966500485238768",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u128_to_i128",
    "hash": "1461260413641825203614548543702007763750",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u16_to_i16",
    "hash": "742467522569302902316033925997148071489",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_char",
    "hash": "25360825501360459369404300365599191449",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_f32",
    "hash": "1195582530850636471412050079303307101867",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_i32",
    "hash": "1243893104645823087310507920335039638126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_f64",
    "hash": "161450271877470610259761285943569642651",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_i64",
    "hash": "1799261862631666800612269882863883937060",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_bool",
    "hash": "1730484774729392548517434621453412689657",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_i8",
    "hash": "34055782383635767255972967863404290600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_struct",
    "hash": "138187782054962492974746761497686478826",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_tuple",
    "hash": "1221626922505450444017007557811825890243",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_arr",
    "hash": "840319966543049764313604220726507254363",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_tuple",
    "hash": "1268768087672290115612620243820435254889",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_arr",
    "hash": "1274685735512107390613002825359282834057",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_struct",
    "hash": "80128204534890571196708730308381389548",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "317291144554602171710242111131028903300",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "481006515711772869117517873357583939009",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "711518466203921420317515726077856878139",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "13653125402262511166947633605827747609",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1421034309137443797414560391729490518669",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "130901231083336124328858452632038667509",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::supported_status",
    "hash": "1100372222744605741114100551764421082829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_i8",
    "hash": "281748700784930752410843077475912667226",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_u8",
    "hash": "17660273729614336182166962827081855293",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_f32",
    "hash": "58456475742635599371346056561957869707",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_i32",
    "hash": "116670719793190870695071079163650237276",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_u32",
    "hash": "485985766404498768481619347120534814",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_char",
    "hash": "1598044114448343860212069739861182753428",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_i32",
    "hash": "255761524688119985714330297983479730476",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_u32",
    "hash": "1151577981966589249912553862548916599004",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_i64",
    "hash": "183680239315532216579016221850194040143",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_u64",
    "hash": "142529896949877051168117851576823447229",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i128_to_u128",
    "hash": "26874687943023578713747466823442013546",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i16_to_u16",
    "hash": "421878298292771923414976849141308627405",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_char",
    "hash": "142301307492672735779898132181898119148",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_f32",
    "hash": "1609854891407312766716960537730895159605",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_u32",
    "hash": "180976062703045920086691064353498814",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_f64",
    "hash": "1158210659840083523716534689459277914810",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_u64",
    "hash": "528822828551266459010901853808351528488",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_bool",
    "hash": "1417156880613070035516792541592907273290",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_u8",
    "hash": "1691946410595911022616035029915529965031",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u128_to_i128",
    "hash": "1282463230867956516213505217001161169125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u16_to_i16",
    "hash": "22834757359565404028826825160150954560",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_char",
    "hash": "1198874922268017161915715598636273144009",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_f32",
    "hash": "5402059538071239014239403199439239895",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_i32",
    "hash": "27439909188075844509020495829144658089",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_f64",
    "hash": "157064997659516187785624391892665569872",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_i64",
    "hash": "148109587237835103575395050760891149105",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_bool",
    "hash": "1239303723076579809918286668052772448729",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_i8",
    "hash": "8590075502670666695875044747849528215",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_i8",
    "hash": "180461872079610982312610103391903572889",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_u8",
    "hash": "58942975988623844003085303314128021996",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_f32",
    "hash": "1713878439069066563515126352345311829380",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_i32",
    "hash": "879363237231342615711130071975900391565",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_u32",
    "hash": "33845486642349911638230068296201417426",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_char",
    "hash": "46167209554940032407222367676309948599",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_i32",
    "hash": "52212062975411958748921492040103176666",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_u32",
    "hash": "1257571842525059910812514712208414212713",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_i64",
    "hash": "86995088823397716671047908455298776670",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_u64",
    "hash": "90777815734305699097248382806269743746",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i128_to_u128",
    "hash": "166919927632259966754061642204914768185",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i16_to_u16",
    "hash": "76773489404436711657677754525696677816",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_char",
    "hash": "1786523555432968775261697105594104530",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_f32",
    "hash": "22427656847108124694386538898280468768",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_u32",
    "hash": "132472227937210186575647446215635129960",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_f64",
    "hash": "1433739418484753303814285839275347488343",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_u64",
    "hash": "1004237546321707896413116864650134075316",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_bool",
    "hash": "1589870616485470421912345746508529042149",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_u8",
    "hash": "12559978537306272722969166984069162957",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u128_to_i128",
    "hash": "105566640635064953899189574641242826508",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u16_to_i16",
    "hash": "557401479921915196816516911679670185529",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_char",
    "hash": "403955296045569671814297946479495373538",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_f32",
    "hash": "1485118919575790771314955574638436525438",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_i32",
    "hash": "8622948414567708956661474694840592034",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_f64",
    "hash": "87511676217263743833729542235021752864",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_i64",
    "hash": "122110858340927832315208205627667748289",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_bool",
    "hash": "1041332872332070628310296762613797263306",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_i8",
    "hash": "21597665953891392341552997487098598731",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_i8",
    "hash": "481589559063876481211306728576271090069",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_u8",
    "hash": "1184965038288395784814888264322036388578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_f32",
    "hash": "1544783818920679476216415607738775870820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_i32",
    "hash": "28425792563483293217971916439639817189",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_u32",
    "hash": "166429219081190754021913714923907375773",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_char",
    "hash": "536089479205392108151484881960878535",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_i32",
    "hash": "1688886869746163293411768184254305862422",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_u32",
    "hash": "472529676620762709011528786996811450379",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_i64",
    "hash": "14195598881026685206188916942843068678",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_u64",
    "hash": "121641822530538977074209003585715951457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i128_to_u128",
    "hash": "375931946145524692416350034297215244452",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i16_to_u16",
    "hash": "1106474878493827849415658481064891132180",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_char",
    "hash": "147795608688418681726078995478641171610",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_f32",
    "hash": "47429229922379397329780166598634376099",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_u32",
    "hash": "1477833059357539851313951660800848340071",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_f64",
    "hash": "1817668722102552620812364772446402790925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_u64",
    "hash": "633809814117505894910299385095868473010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_bool",
    "hash": "104663810641068135077575729081344209952",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_u8",
    "hash": "567257716275800969513698326500261810696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u128_to_i128",
    "hash": "12062606281515543091753842709521741276",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u16_to_i16",
    "hash": "123660911511559722508034929489434741707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_char",
    "hash": "123775852278191233416940685975533694821",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_f32",
    "hash": "79469315224361352978190774855499503347",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_i32",
    "hash": "84635908967573641467527311434066762394",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_f64",
    "hash": "802511089344905960612426861018222657722",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_i64",
    "hash": "76402475924937604234045940242800013340",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_bool",
    "hash": "152647190142807722692305853971685188703",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_i8",
    "hash": "10554253401020006055962818074048672089",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_zero_size",
    "hash": "484507416527538729312714644315538965810",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_struct",
    "hash": "76650783100407874141974671180446869666",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_tuple",
    "hash": "83258395564958808144825376010917754761",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_arr",
    "hash": "22478145584628651433805559005935572302",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_tuple",
    "hash": "13397647762902325996902122628245564919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_arr",
    "hash": "43034840512158035627323022843462217841",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_struct",
    "hash": "62843742576216858712236027974246265397",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "171803156721272185492472494348092202891",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "874387975068634712312998338720110754874",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "83222356413038562028506189372950805947",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "49615864477991744867619079610576204796",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1140540075007337298512174128742513459403",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "79812354748458317182302296048616446298",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_struct",
    "hash": "1568516767712171013216607104992206538222",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_tuple",
    "hash": "81717346862622579344740166386532730972",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_arr",
    "hash": "163829979945858087147072076910299393427",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_tuple",
    "hash": "20784857066735722784399711492429427394",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_arr",
    "hash": "175713773409705433282713205770877626583",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_struct",
    "hash": "165712769859572528788003130390397306446",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "671776416030670610614949610109299890924",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1678661274656780706214552550906289042079",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "813085512611506349815249905212400312884",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1423794944664995557012248309783529119148",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "618267195163184673010028557361536965319",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "17565174946806506317181929352326850315",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_struct",
    "hash": "123805710474576517991815965125351838354",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_tuple",
    "hash": "341241745600022563213210485242540094168",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_arr",
    "hash": "16027342291504170446936708270423852600",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_tuple",
    "hash": "181297620277830437367125882616346744787",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_arr",
    "hash": "740351521890190167014245568937061806029",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_struct",
    "hash": "1067272143072620594414924665162676294824",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "535423821312403891911113932778254814217",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "20482919349977808048392654678771227829",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1289123659540743741914835592143177581979",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "4638252730867566421406556788654172255",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1423466653304333937913205139447999419568",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "68183370054688260882633268228450949124",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_struct",
    "hash": "12768693365607781389494350909811132169",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_tuple",
    "hash": "959263912470449715310372721553410614256",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_arr",
    "hash": "6702593813143381446561939202688567294",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_tuple",
    "hash": "672418875585989449314446363161112153595",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_arr",
    "hash": "10482661600828037853294546929837028494",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_struct",
    "hash": "1377722698866632135915398429055732160752",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "73512758570948821863034463425662475134",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1559354874167367063814600169061586350146",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "4708659000236709935788499703846249662",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "145158862873853452394188766103515174895",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "736567648768102547211327090401478085560",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1702758186038721936514436157870192412965",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_struct",
    "hash": "170410604168022499807338805685085598412",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_tuple",
    "hash": "447200529069616920117399346571823714377",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_arr",
    "hash": "390865013595526654513148784429404508939",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_tuple",
    "hash": "76803851992863875856666500963369680919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_arr",
    "hash": "1412095653950079285913217964021840832432",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_struct",
    "hash": "104340493034872516937406338646254907334",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1256769975004233488510070570076117706589",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "308552301002908724212883202140438398262",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "1632712805811467390614047765103030301570",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1113005048527714148914349909259178855386",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "43737820845593281177247841103644891122",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "128682313715634245742310464162330518441",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_struct",
    "hash": "167901809206565770979682663492125462465",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_tuple",
    "hash": "175461143737585640598171414750227513174",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_arr",
    "hash": "1158279072485976435111552838096816291048",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_tuple",
    "hash": "40441364846722516088820399814551732046",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_arr",
    "hash": "24305284989910177471119368671183150054",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_struct",
    "hash": "1105021795443953448215878755582855654175",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "98389135429840119148490851354607633892",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "4423815661139626602921573306781180924",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "882000777747555736216021045482929128207",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "120820151273695443923207338184524090791",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "391415742011104433516898147766190433015",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1714366447475360295210030936683807464721",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::compiletime",
    "hash": "74535031650896051214723818354113156377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::runtime",
    "hash": "102030789931982425033754462629844682694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime",
    "hash": "179544472223032317616057845771026677656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime",
    "hash": "1155781821894353667911860996388541298277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_fail::do_panic::compiletime",
    "hash": "572342295307501594510847624094986331249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_fail::do_panic::runtime",
    "hash": "135085831257420105511932492454364625470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::compiletime",
    "hash": "1541363921555960948418190727205931026341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::runtime",
    "hash": "23815256893174302637797703719499456373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size",
    "hash": "62286244296064334663190037313067156494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size",
    "hash": "284863414593542695517394618973036226172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back",
    "hash": "1437546102495456400112923537045137278358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back",
    "hash": "465312997582996978311095285701520047252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next",
    "hash": "82428942310670224525825087710903792686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth",
    "hash": "1069320309520884758418363830310528562913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint",
    "hash": "158301573143810970113344600865488026234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back",
    "hash": "90456138571888307211130366223652161242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back",
    "hash": "87674634733485931199163931115738233772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next",
    "hash": "167264054377721765762382707996591587360",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth",
    "hash": "109783604558198024229747548980546512275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint",
    "hash": "1745453724709238680517191219809178490890",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next",
    "hash": "157092788179352842055144923025693014806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth",
    "hash": "85539967946589086313505255291888692847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint",
    "hash": "9309498195766837577194283210562229959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back",
    "hash": "31992152674570070249470577279589129744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back",
    "hash": "1716272715364849635210440696842299809120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next",
    "hash": "3428007115215612070702577009422852673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth",
    "hash": "857247127651341989417338223221041099895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint",
    "hash": "9255805255804584193411116438326773862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back",
    "hash": "690642499111150908817515126236491340300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back",
    "hash": "52986755345589320188411792288535466942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next",
    "hash": "409282298450666503610499063805205540841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth",
    "hash": "34006592998064194052787779850199423288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint",
    "hash": "1144218567684167729616089602923919486424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup",
    "hash": "136929409553214361004743789654689586419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup",
    "hash": "153439348672004327191804533722609318590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup",
    "hash": "1111533983088006041111309498178519406826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup",
    "hash": "52663175837114205447711075515446203410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup",
    "hash": "73327015112066724988644636191964907634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked",
    "hash": "158451870533178898195035220912174357464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
    "hash": "115361175269263563214856908257903369446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked",
    "hash": "582224843831388759110648855542125244539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
    "hash": "109139637908755460326884182542280911770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between",
    "hash": "171867204063098476911645982607944067247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_checked",
    "hash": "792440810659040425513959376298781786590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_unchecked",
    "hash": "1265179122472707272610246310318670839119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_checked",
    "hash": "93830906200340125387487403600464543094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_unchecked",
    "hash": "557055529845642736313065703630870349165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::steps_between",
    "hash": "124103073994392253749307952794420814390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward",
    "hash": "1199042644092625113116013999591833925442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_checked",
    "hash": "1209299870988436268517590756107173975803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_unchecked",
    "hash": "1308827536913111295818058482037146332557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward",
    "hash": "798177543382233072813292722465291065951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_checked",
    "hash": "74181673893882043448952216787629725303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_unchecked",
    "hash": "95016260826018548966044271311473131715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::steps_between",
    "hash": "134595230238556820322619858171400804180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward",
    "hash": "731661557953955090915137002356256548353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_checked",
    "hash": "408985202954845280413642186300397426365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_unchecked",
    "hash": "1759810499816900758917023264662274670998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward",
    "hash": "126298770417031096019551244432853530610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_checked",
    "hash": "1698134154854697379326941913705180903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_unchecked",
    "hash": "57837018818993944057738158852531290792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::steps_between",
    "hash": "306302068261058727714114954500750531049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward",
    "hash": "71308942364514092207817256897889415563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_checked",
    "hash": "71828199362707208219987205259833342323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_unchecked",
    "hash": "17863821184109163546794658475051781047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward",
    "hash": "105849354478397803012338288816917183630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_checked",
    "hash": "177811328040477497439801129276014776553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_unchecked",
    "hash": "90463445971792878398614943728077777342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::steps_between",
    "hash": "30312646909148629495663120442192014399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward",
    "hash": "865646366641326423714338222220785714296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_checked",
    "hash": "620200631830295702516303946853078228240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_unchecked",
    "hash": "176286820448348818671472820415778077963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward",
    "hash": "137543844559284805884897799258296041282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_checked",
    "hash": "1052502093836085990511178022760932572605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_unchecked",
    "hash": "68997004867008556017717235429706063352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::steps_between",
    "hash": "26766789700039499247136242277770962250",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward",
    "hash": "951322447233841921610206674156140182753",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_checked",
    "hash": "43918820870175271413160601167320655096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_unchecked",
    "hash": "1091926353400227001213727845021289133177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward",
    "hash": "165654926342968632722279453139553709164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_checked",
    "hash": "1285013757995501859715901378371449511159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_unchecked",
    "hash": "474081880304844378314272403533923458040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::steps_between",
    "hash": "425054866159262844417345426432820622634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward",
    "hash": "19052350449892488241409418442625775152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_checked",
    "hash": "252827187092367855012815661213493729807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_unchecked",
    "hash": "233550152965384494713682276287834491780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward",
    "hash": "72934496690355453325550404995294897851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_checked",
    "hash": "78358467475875518952868248066233875941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_unchecked",
    "hash": "703292125058064800113741874364144024758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::steps_between",
    "hash": "1333789623016981317514628460503594094416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked",
    "hash": "60519744525805335462043078575775704536",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked",
    "hash": "49187579985920506439025799755368679125",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked",
    "hash": "412772385587225067213126174929522908372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked",
    "hash": "941678835166173724915400608673219466051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between",
    "hash": "1820546493966965404516489485444990917349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked",
    "hash": "108049258154003810685053018536440853256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked",
    "hash": "11089017297407150016510725901121092452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked",
    "hash": "1577669027841583781813799740802908788765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked",
    "hash": "123034551765982204453684762909376926288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between",
    "hash": "1711048807984175316217005349493457450292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward",
    "hash": "802085179621064481718096080080623811268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_checked",
    "hash": "43642794235389993587482243514652006434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_unchecked",
    "hash": "117404571589775436933618839075873778556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward",
    "hash": "888061125579449234412226361024196678174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_checked",
    "hash": "1819272042952839510617903057328478959015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_unchecked",
    "hash": "354632026535880549015036983353725549275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::steps_between",
    "hash": "1497363786181881712912680785317475207082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward",
    "hash": "784803660595887447813036913919386086588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_checked",
    "hash": "1022708244151754038313494500979745098285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_unchecked",
    "hash": "130826625265018240842585934762694200656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward",
    "hash": "137269847074466746886989281046334920623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_checked",
    "hash": "134403773602237209952638762648856048760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_unchecked",
    "hash": "170263472120930945276863179915420040056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::steps_between",
    "hash": "24731638943756635255783977765570373732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward",
    "hash": "173925086361379319163437175668852391412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_checked",
    "hash": "82217930737989589297530360437390322722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_unchecked",
    "hash": "187707461451049832517498205394896812182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward",
    "hash": "1747751866346677628815303170175973617440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_checked",
    "hash": "177334384479175319023502841768237713279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_unchecked",
    "hash": "18239385951464490937490396355773401419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::steps_between",
    "hash": "894283018808594391611609287380905026642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward",
    "hash": "135986127974405052852971362096267335615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_checked",
    "hash": "75430863076574916018091427358514224876",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_unchecked",
    "hash": "256500575202118636616798106652967259398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward",
    "hash": "880673705320622549814174685380119512516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_checked",
    "hash": "360352093030890401610333404938110126366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_unchecked",
    "hash": "33143189024990287768726638175856399130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::steps_between",
    "hash": "1869392806298544895849880444382624092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward",
    "hash": "153598404127327274583823706635361130428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_checked",
    "hash": "562975586856471688612148749155815005525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_unchecked",
    "hash": "764810948457541511713207497644013999971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward",
    "hash": "1451354929174203758110145708637267040418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_checked",
    "hash": "183405440155785358824916303827424937858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_unchecked",
    "hash": "66558832420252384767352894655095642857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::steps_between",
    "hash": "1358246712086198366614107958808171399286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward",
    "hash": "559358132918290319213725687841415320370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_checked",
    "hash": "657951512274271800914352182291589407665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_unchecked",
    "hash": "174583527470119019351759393122367854049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward",
    "hash": "593993989321194940117420527086090690871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_checked",
    "hash": "166353767248941559903246799484993018752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_unchecked",
    "hash": "61537032802646890302053131132263133848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::steps_between",
    "hash": "177965079280133880087474300800680994427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/iter/traits/collect.rs",
    "func": "<() as iter::traits::collect::Extend<()>>::extend_one",
    "hash": "1120625557459031317916703552649357621493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as clone::Clone>::clone",
    "hash": "825667327041390782617747015861779504959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "831869974603347859414716922117860800231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Ord>::cmp",
    "hash": "126049039803743376066865254267291754990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialEq>::eq",
    "hash": "174411396243082614912337350529316792857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp",
    "hash": "830703818444105436118252870303164065030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as default::Default>::default",
    "hash": "1600509304913695688217697405739095284668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default",
    "hash": "200093235691051171311857133310441964385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default",
    "hash": "1585636264149941122215739800273610451179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default",
    "hash": "148627860536482951858651344035260966131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomContravariantLifetime::<'_>::new",
    "hash": "325099813201210676814303942567768414682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomCovariantLifetime::<'_>::new",
    "hash": "166995861130904311335873509826353853958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomInvariantLifetime::<'_>::new",
    "hash": "226486674780133469212919495806579546593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_adt_no_drop",
    "hash": "8255241439277726787798859065115343647",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_primitive",
    "hash": "1126343931950519298112224482113850816103",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as clone::Clone>::clone",
    "hash": "6113386739589260587615432633775330905",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1286419259412180144315209012837167429522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::PartialEq>::eq",
    "hash": "1017422462877208356713854341404052895459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Add>::add",
    "hash": "232771302356690057611311769829264534757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Sub>::sub",
    "hash": "635741436447222796014484736395444526961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::and",
    "hash": "1084455007279128514714263400197774751518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::but_not",
    "hash": "1696062762999842893816101781539844044659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "1499027706463113029914722318264888564518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "19038539976714877621938063870403800822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "1450143984580719902416880929753416596256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "97915705229990448319830217132682394099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "1076770814037108337516709103481467091829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "947026038782299596713283875371031526550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "131012454452551441867174702414933009726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "79509005810274679277715193973954622529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "38264661869465706988268920408984779502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "76153270744949521483249765683685975831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone",
    "hash": "43471275599068202915603092652712170767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default",
    "hash": "5166604374501805499379909553192072199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as clone::Clone>::clone",
    "hash": "1264060357870657360614311409253839986891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1288518373394506866613409312397158608102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Ord>::cmp",
    "hash": "643064650251834819611394355958929414787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq",
    "hash": "70479896803653984325842814174243248158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq",
    "hash": "20893141095634284172087981679506930314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq>::eq",
    "hash": "1457563282582880031316726086703283705974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp",
    "hash": "75843686374402514111872769203495205619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp",
    "hash": "33199855511472328302545160492460849207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "15022915851435415936220181485314380428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from",
    "hash": "176341453427038476015824911394335674791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from",
    "hash": "1802821787855136755113668362828090022142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from",
    "hash": "170210693590717514915838547958882393841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from",
    "hash": "1364782457274969512810337006941660859937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from",
    "hash": "68073068911272744215152262124905904980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as clone::Clone>::clone",
    "hash": "921409553528843095212392378217611236487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "438248999008166340012331970616792148675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp",
    "hash": "5072067421634535515172598013316489284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "1572779705144993790016396127973471967713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq",
    "hash": "335926086649163344211724987064729739868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "87771466797572457261243928491736958096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "446113247573873126415740106879866073552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from",
    "hash": "590872620568502661513453452280775232682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from",
    "hash": "1496908710492586088011631234999877072526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "125135056325573265692579555174253599366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "467724484819212620012193702746008078689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign",
    "hash": "164960261373697601339858017165226280450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "53348732915243955366474502245850694427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "208817120089508431310227264987737265858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "7957386348102956150639334897645457546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign",
    "hash": "58349043381394603534762643127118709642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "68305790234567403593518267939076346699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "115979366230571205841273096360743512900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as clone::Clone>::clone",
    "hash": "70641865147263933991186943641804389872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "68690352043314482819199385780598020614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp",
    "hash": "297687310054646356512921969090488168392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "11259879155801106824452719417641411155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq",
    "hash": "155000671637313718397576088623777978878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "433711549096308801713122769683871257991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "132226844881794156525231476324080574341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from",
    "hash": "70210276181338850712765461057428232387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from",
    "hash": "106806037778717533315162590574739237997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from",
    "hash": "67680428370416151081664237778980427133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "19787599367985276271280958099214046333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "170800379728392804222586662629180231922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign",
    "hash": "113569054666517166911489198123534796411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7071427928082939459235444216712354480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "1378935421168953185713976362142403064143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "1527116647105089561615470345125122722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign",
    "hash": "1217135473270964254314286450239611177252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1423955562833255093613083828574392478228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "1122736451574327556517542562811819781081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone",
    "hash": "92394463914089531449468390566136204436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35809579958767686439726390059935628492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq",
    "hash": "183878618757968736835492036060161220830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from",
    "hash": "30951647483856332789930380077000548337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from",
    "hash": "1129865032383255963912840309298432339249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::as_octets",
    "hash": "1495495502822479886359201545694468405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_benchmarking",
    "hash": "172196339370890572395803514273617110566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_documentation",
    "hash": "56829940731781306493810823398598802050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_global",
    "hash": "513468574239714914511189334453535119750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv4",
    "hash": "34072154202520050659010384716436252275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv6",
    "hash": "1647072498908601860616152277765007431928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_loopback",
    "hash": "63666756278408404608580048381667427546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_multicast",
    "hash": "128274097065671412798497127198581221612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_unspecified",
    "hash": "156115933041238023005551687353723639111",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::to_canonical",
    "hash": "4953067943861957827401423747658147059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::as_octets",
    "hash": "101223278979454058814661964633516097013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_bits",
    "hash": "858662101161229236213038897790963718978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_octets",
    "hash": "13074558314382086100766543927783076739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_benchmarking",
    "hash": "1154112256791800715810884634918423760489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_broadcast",
    "hash": "19539067258683629587198030310902408607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_documentation",
    "hash": "114579728239549930234356732496816117126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_global",
    "hash": "111476772486891630314169165621172868221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_link_local",
    "hash": "213253987694335189314156504989406609016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_loopback",
    "hash": "321058546026469120416686063572945871223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_multicast",
    "hash": "907088996340716512213527345379247401613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_private",
    "hash": "6620292540561497585213147191522101109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_reserved",
    "hash": "1533461424577366903916340757475165187792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_shared",
    "hash": "31755862083688557983057264915524589934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_unspecified",
    "hash": "1114986949433194244314969954654235074496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::new",
    "hash": "6502083445142584246779010121987916385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::octets",
    "hash": "594101468346705865516588037143272085631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_bits",
    "hash": "302366368669349645612225110485395161879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_compatible",
    "hash": "1137454815818594248212153291962011273751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_mapped",
    "hash": "46152593324762142206711102552937996774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::as_octets",
    "hash": "1382459460223033583013039461048493254282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_bits",
    "hash": "302652060077874868317761657460448052717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_octets",
    "hash": "180480111936671725525131652993218366240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_segments",
    "hash": "1468852806416891163648013132632383123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_benchmarking",
    "hash": "1240499369310076670212351683282300474245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_documentation",
    "hash": "904873696202259034013244636588880589033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_global",
    "hash": "1460651251813490257812863370272785622667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_ipv4_mapped",
    "hash": "131807482451443382172726615661861839122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_loopback",
    "hash": "182957680342869370068846555826079726104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_multicast",
    "hash": "9882864542450372813623879688080678840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast",
    "hash": "146701608563695615907277349863152295495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_global",
    "hash": "175063685604017540741125057283853901319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_link_local",
    "hash": "890834425445624066914492995607737117777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unique_local",
    "hash": "981111566713331075211834612901514862469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unspecified",
    "hash": "181160814787867857569128902451186285473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::multicast_scope",
    "hash": "523641140430087893316301314139455702837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::new",
    "hash": "23821264730853199911213785152831109479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::octets",
    "hash": "62038573511047791971320547253979391011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::segments",
    "hash": "134724938574094262089516253074382302486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_bits",
    "hash": "7991095536327695054550747156672163636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_canonical",
    "hash": "105730132000642611302988186046236357533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4",
    "hash": "51859388528890157064990598852660709647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4_mapped",
    "hash": "71246380578644339536635791968521120722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as clone::Clone>::clone",
    "hash": "57338033242676239491212106943760500661",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "51594275855947751775142425134597913907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::PartialEq>::eq",
    "hash": "108990140259355343172568090755494475769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as clone::Clone>::clone",
    "hash": "690813232397562813113920840619976175903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9049099429058470621088274378690438309",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::PartialEq>::eq",
    "hash": "130017362708044870112137214267689148259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "985534027864289666414136581042057138480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "1839338930402506290912118824178795638624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "1085398929461512376613630071574080050688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "108078900980728946107200203014405602196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "105694717423925436031685063675772687404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "630581024435565232213550134371990029149",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as clone::Clone>::clone",
    "hash": "881571011535632767913619940880887849852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "154690688717505045959622994226496609969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Ord>::cmp",
    "hash": "144175333359885832443943246665789332672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialEq>::eq",
    "hash": "1598314630380856789115672586518068129772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "43569512266230753417898142828671710106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from",
    "hash": "875366945930901465012893057476305314447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from",
    "hash": "72683622554543568413747473558961338978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as clone::Clone>::clone",
    "hash": "89143128249529267221365318318967522453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "16434557604526258270935765766050497281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp",
    "hash": "176101681564078052391377394909374020333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq",
    "hash": "1397759549931663747813915423406976584140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp",
    "hash": "4834433346569496402184941970290104105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as clone::Clone>::clone",
    "hash": "183312637659780255541231484230627336028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "376654811610081405710951660308378656615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp",
    "hash": "51223491600376101987204438166174799317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq",
    "hash": "1626301176650439842515552588979456722752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp",
    "hash": "17295971467079851114185088831425689960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::ip",
    "hash": "1018061110745715494518367550576783268367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv4",
    "hash": "1708910507140939535513526005614921409339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv6",
    "hash": "58551937312814808791470176540531718370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::new",
    "hash": "143820041307921704907427054283161380966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::port",
    "hash": "821056380986737062313722891210613829489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_ip",
    "hash": "674094990990729284615905934285441113489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_port",
    "hash": "1533972840162688744217732469413820183265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::ip",
    "hash": "1624000160582606817992326574978127176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::new",
    "hash": "346801434708832420411564731853873358189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::port",
    "hash": "1661274048381503306651132033638689155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_ip",
    "hash": "120687218285710837277016605598984744489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_port",
    "hash": "119592868352706283101965858666230448128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::flowinfo",
    "hash": "271726665598233068216672816377939096504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::ip",
    "hash": "13923939275776602743576250441745041133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::new",
    "hash": "956390136576012052516294645937270315205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::port",
    "hash": "518917683179470932317479461022108880549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::scope_id",
    "hash": "26383702632836770192870777257194244442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_flowinfo",
    "hash": "1496512249137928513715459396660567295848",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_ip",
    "hash": "1017782510994436574815932785748847997117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_port",
    "hash": "158701287728992250414215863642183640212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_scope_id",
    "hash": "56593444992042073581463295166616692561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as clone::Clone>::clone",
    "hash": "68448351923864966201202342370076058931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::Ord>::cmp",
    "hash": "59938049419510669711062024995335921297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialEq>::eq",
    "hash": "55342957751527949678708416814213480497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp",
    "hash": "19684188516265566771651004715206449247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as clone::Clone>::clone",
    "hash": "22768490750388970221446139959291849771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::Ord>::cmp",
    "hash": "79456946139018867267100635429645271864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq",
    "hash": "9545080481036209117556321656899553418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp",
    "hash": "1289942252905596997915543256060893339990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_div_rem",
    "hash": "24394899481369512671357527845702976105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_mul_add",
    "hash": "1603543728729183321616410501201294266403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_div_rem",
    "hash": "421349501390734416011533386675405511079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_mul_add",
    "hash": "537616630704522200217231635580372837379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_div_rem",
    "hash": "168075370270112550468914736667046711117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_mul_add",
    "hash": "131773311852764655024953585027788742507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add",
    "hash": "102508803915550794609463305216374947451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add_small",
    "hash": "1563741088495919549112870733614417790319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::bit_length",
    "hash": "170651548469663780724298579953072999915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::digits",
    "hash": "64482042172957680597458376848546031781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem",
    "hash": "142952364420949618811464516718376401559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem_small",
    "hash": "103426838297082867306651532955369294804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_small",
    "hash": "688273509255497241811981814166475898820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_u64",
    "hash": "65012448208712145921130822083503603265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::get_bit",
    "hash": "325062202126984603410165208796385002580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::is_zero",
    "hash": "246753510483060322916261866593464369166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow2",
    "hash": "1306336661249133475411987841834629563858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow5",
    "hash": "85025217243172843395033330639789716358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_small",
    "hash": "31636388437489011866799337731681339875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::sub",
    "hash": "93779494020190075273166049545136126639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add",
    "hash": "1624247758131503477115837476627400846618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add_small",
    "hash": "16635702828706904563923828233104854658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::bit_length",
    "hash": "438049163055511320714759481437336164071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::digits",
    "hash": "142818126011321503072333729517504660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem",
    "hash": "1516964638178903057818198010997166920234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem_small",
    "hash": "54685831412891661402773122919450159218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_small",
    "hash": "95923251219851982587733870047772138958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_u64",
    "hash": "109015202747875864486895855169507729787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::get_bit",
    "hash": "35754342945009099314998714575357595157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::is_zero",
    "hash": "64412208354304940416427025180335483366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow2",
    "hash": "984386586716994216015275297295247742817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow5",
    "hash": "987001465099768655410180716128370021806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_small",
    "hash": "1033688064969053133413545636678362942035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::sub",
    "hash": "842004708777537168614759167950153490512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as clone::Clone>::clone",
    "hash": "99441173741908537221041840997597706871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "159308443299976036093318276350800879542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq",
    "hash": "145429786339401763763301312996132754216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as default::Default>::default",
    "hash": "945785180716183794615500752505374170007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::BiasedFp::zero_pow2",
    "hash": "124079140710334239353528493759477592936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::is_8digits",
    "hash": "149099005912003325244325320241689589321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as clone::Clone>::clone",
    "hash": "102162506459467257013338494265345655001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1450693652236591138131492669646915817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq",
    "hash": "110999280021339733258284588787542720220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as default::Default>::default",
    "hash": "42222447178915793548542765777097211393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone",
    "hash": "777711447013849913009532213041181260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq",
    "hash": "45179767777851486332294915690955240334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default",
    "hash": "87456189090776109958790862427017379305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::left_shift",
    "hash": "157348913669476303141278107542573453694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::right_shift",
    "hash": "608388296789548810016249717027452878830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::round",
    "hash": "52206125963560751428658468352121213337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::trim",
    "hash": "165046526160593314567078115148512297437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::try_add_digit",
    "hash": "285895325995770899616926537188131263408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_left_shift",
    "hash": "40932086679285554755145589358440903186",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_number_of_digits_decimal_left_shift",
    "hash": "1506196309305766169611817497624632512904",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_right_shift",
    "hash": "126967922605756593598301316359841241203",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::decimal_seq_verify::check_round",
    "hash": "17597343262274826193522836740124476204",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift",
    "hash": "1221885333266410625418266723469411290891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::classify",
    "hash": "1346210993873871991211666290987960334823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "14534063376101289658844515537532987720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "66193859863570600747554959599874745142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1331180765608372746618038457355727292914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "1330230614802694744615177276662987673529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::classify",
    "hash": "707171467712266834113402276266494278110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "48413878820509011811281704779891899714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "131737611100280153115121608445336918708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "1477297535109009433116068469030518062631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "643749885405830349618174171670233457290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::classify",
    "hash": "110136787095800963745070749484865738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "115412798294293315119430927104186225573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "139488482713517022392802644189683338670",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "282518903960912928514427315635719199053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "320659744895839940711142382562474182804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u16 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "127687323327805648567195218735907442787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u32 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "149559975351884185919646369653297958751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u64 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "948784241142142375515727762281903710886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/float.rs",
    "func": "num::dec2flt::float::pow2_to_pow10",
    "hash": "1374583963071674867516068621844801164227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::compute_product_approx",
    "hash": "60763573711029026858639391568773305540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::full_multiplication",
    "hash": "629145951687599873418257489910998052999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::power",
    "hash": "1134774619075691336512120415078180903148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as clone::Clone>::clone",
    "hash": "948620242474440880814597029645470490692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1332257997316420780915894390392057489961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq",
    "hash": "1377143002006642229517171085059045089805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as clone::Clone>::clone",
    "hash": "128621596444477492361384010490164262983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "9504615767016588195683765292003259967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq",
    "hash": "1782673906597863114816792713400322968088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_empty",
    "hash": "163583058705921443356149816263196482859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_invalid",
    "hash": "1727044216435048357413768906990211119788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/dec2flt/parse.rs",
    "func": "num::dec2flt::parse::parse_8digits",
    "hash": "588805403201731525616757972643909383015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "<num::diy_float::Fp as clone::Clone>::clone",
    "hash": "11123308985278480483617437397512463001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::mul",
    "hash": "61192806222280460022726642951850667017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize",
    "hash": "118271566347208496455794892186718018856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize_to",
    "hash": "86743156304664435361459245229429219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as clone::Clone>::clone",
    "hash": "1236789399677122116714508316988697139166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1419445016049295524118374810393943854299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::PartialEq>::eq",
    "hash": "1800354311251897773810617165975736784271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as clone::Clone>::clone",
    "hash": "2643485135499013354917072026224088561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "959073878858029247611239324486018914214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::PartialEq>::eq",
    "hash": "47322104149450984505262916341339848557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as clone::Clone>::clone",
    "hash": "916036849199497178314263223508599207575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1270288674622507163115620625259273602427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::PartialEq>::eq",
    "hash": "112852414032303894246681102116085991357",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/error.rs",
    "func": "num::error::ParseIntError::kind",
    "hash": "82038347365787383711313580505188759587",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::abs",
    "hash": "1633869985145731555711738745641244921442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_add",
    "hash": "107412085628933887705341889824882063588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_div",
    "hash": "28573718556958702876367388132345536459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_mul",
    "hash": "1743008224195980377918385042921460347963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_rem",
    "hash": "759896221967461959418353569912238842391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_sub",
    "hash": "2035428624977107881303811008018160018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::ceil",
    "hash": "890892326526035954217739887613926105526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::clamp",
    "hash": "155923323513677202213588376153310001405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::classify",
    "hash": "329598873808563524728391998075018970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::copysign",
    "hash": "27577874283823845322841179150241966344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::div_euclid",
    "hash": "1719105811906915258215891585661751001995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::floor",
    "hash": "164343511295033781638628160971858826102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::fract",
    "hash": "22372380824071182601499837245090610339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_be_bytes",
    "hash": "127798389373853079818248131479226556000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_bits",
    "hash": "1234048470098097220414204578628110841792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_le_bytes",
    "hash": "227823405384618938710424591830329921938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_ne_bytes",
    "hash": "55906307536914277756086704767537893271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_finite",
    "hash": "16202382198934990966542523486449605989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_infinite",
    "hash": "236758410783238469613851478046733879048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_nan",
    "hash": "252887400125453305612667949128372271249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_normal",
    "hash": "27269214563205269914051069830866987834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_negative",
    "hash": "783290788233458409213943446188194581582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_positive",
    "hash": "260250833418102634914982796035296776119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_subnormal",
    "hash": "164684107263458641366801424444170751216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::max",
    "hash": "173647465369519523937213106820125207492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::maximum",
    "hash": "1094509065320253984734759796539912530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::midpoint",
    "hash": "778162653032193857217064299885357735031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::min",
    "hash": "8725491321584156676421639741486441029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::minimum",
    "hash": "171091201390141979079517575818744438541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::mul_add",
    "hash": "110584017521883767474642803331835729246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_down",
    "hash": "58468660979199056379891044349254630413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_up",
    "hash": "1110697423436517853715911287716452833507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::powi",
    "hash": "1328475710985588959412647222202311337096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::recip",
    "hash": "53673775587403904852748555491265792057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::rem_euclid",
    "hash": "27287646097975060608818861969660199324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round",
    "hash": "40309882590468259442140807086508547844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round_ties_even",
    "hash": "1773072776909027464110196152472753402342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::signum",
    "hash": "368383134810218413412034408711171454153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::sqrt",
    "hash": "7007884518632528311742548136128264728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_be_bytes",
    "hash": "1166792289218917094110838025940931008534",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_bits",
    "hash": "1974282168039380848894594196462410349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_degrees",
    "hash": "866438288293955544411322518139559775041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_le_bytes",
    "hash": "338279047050377002611649795850819944405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_ne_bytes",
    "hash": "117792607612295976253401490805228715476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_radians",
    "hash": "79118724877691747338061507073933210501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::total_cmp",
    "hash": "979604039652460967811070772091740033195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::trunc",
    "hash": "54260058544797284938142620574691468031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::abs",
    "hash": "73925086737508027584524650242921435444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_add",
    "hash": "1059660548574338426313416220588653512942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_div",
    "hash": "104186358263751208487129328069002154041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_mul",
    "hash": "56428216161089160957710962075375122303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_rem",
    "hash": "1508010742080831854416493819258616290167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_sub",
    "hash": "770641304955567270711466230620836663502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::cbrt",
    "hash": "1767604426030851285418192446979788597691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::ceil",
    "hash": "1082734517466005126418251485421086386161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::clamp",
    "hash": "1794699509354232315410850720748547260521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::classify",
    "hash": "821624783380660323912636252934479695499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::copysign",
    "hash": "37680520250890434433114734277362237189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::div_euclid",
    "hash": "171436479127279122138558003880116972264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::floor",
    "hash": "921339864627596099859018162835429613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::fract",
    "hash": "173290611482697946331997386164575909520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_be_bytes",
    "hash": "1451594153188051828516326425188663625150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_bits",
    "hash": "80331169847412004098471689422468576411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_le_bytes",
    "hash": "13989347391654407634476786493416053667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_ne_bytes",
    "hash": "58324662727659343404189347005211570358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_finite",
    "hash": "556060979483318749516000448749604067779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_infinite",
    "hash": "98825812488495831817080296609037965467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_nan",
    "hash": "181659118885593681133963112753434433326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_normal",
    "hash": "154926313383668412766224911126506720924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_negative",
    "hash": "41314493314170273698848119374772252082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_positive",
    "hash": "86698344806947611722293919790928706286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_subnormal",
    "hash": "109519248899684371789777581971098695341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::max",
    "hash": "152711517664294811573978637764540359704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::maximum",
    "hash": "183020508902589499482473813196087557516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::midpoint",
    "hash": "31860725487928759022445980499862312335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::min",
    "hash": "118589128990215951012823730733088797622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::minimum",
    "hash": "11805647257725004543720445031762484219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::mul_add",
    "hash": "95134245530129762546123037105692663858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_down",
    "hash": "43480900025104149959117673580742885429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_up",
    "hash": "1768830170805391089315880766164808379489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::powi",
    "hash": "21262879318647260149068258229086577412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::recip",
    "hash": "505388474969557991817888203243110134258",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::rem_euclid",
    "hash": "142407567263000014181597748260039194145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round",
    "hash": "138083676265772780101124621173759773073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round_ties_even",
    "hash": "1584401323964197142214394972853170238527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::signum",
    "hash": "9670103822153451985703418164222835874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::sqrt",
    "hash": "895562704183033706610562039504268832954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_be_bytes",
    "hash": "103555918561411280335422795434871099039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_bits",
    "hash": "331178422282659479317337493575173626152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_degrees",
    "hash": "1668718189272279930615015280623345311293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_le_bytes",
    "hash": "142194908254050615138753868175813643739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_ne_bytes",
    "hash": "62238549004314071497589773292114218004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_radians",
    "hash": "702138316709949028115526273021606948057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::total_cmp",
    "hash": "775765639444551220212167711497732890430",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::trunc",
    "hash": "161445155628503363538073693770598233224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::abs",
    "hash": "7140594435781266806154578540850139692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_add",
    "hash": "104484803692756604101945356077582772503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_div",
    "hash": "125480685363005409174722380280464863701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_mul",
    "hash": "100871955394263534038098351889361213390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_rem",
    "hash": "19284626247009428058378358838134224477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_sub",
    "hash": "158572850392779277579946471697515664200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::clamp",
    "hash": "79622684106175440523976419354734932808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::classify",
    "hash": "182543060698366627214161300569806267932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::copysign",
    "hash": "91660879335401236928730477644746477916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_be_bytes",
    "hash": "1279228263211930867112615663396590325480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_bits",
    "hash": "141416729681063873945734553097119310337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_le_bytes",
    "hash": "9807460207871020769265139320554307420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_ne_bytes",
    "hash": "1537779722485897727518009229282891247499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_finite",
    "hash": "1531303938923838765511396625477318073187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_infinite",
    "hash": "10636394365405002924847654351707122379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_nan",
    "hash": "110174298608622596992026438568283617550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_normal",
    "hash": "636232236247176065514514387436694411421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_negative",
    "hash": "169025222698088550701130642783988507306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_positive",
    "hash": "894614440018548037910752981073189373335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_subnormal",
    "hash": "1642289273768535047010633412175950183516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::max",
    "hash": "112128120424148035529215705998019957629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::maximum",
    "hash": "117322212830400902639622612582340000610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::midpoint",
    "hash": "140883764915296612627756507760024372163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::min",
    "hash": "451372623761066015216066333506654496517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::minimum",
    "hash": "991700303329753118510903083951194519463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_down",
    "hash": "1681177393123097029617095282565980636829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_up",
    "hash": "1269843125073022512133378576492267679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::recip",
    "hash": "9562761177431460092250536071346692966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::signum",
    "hash": "753087530211395207011740606835076684171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_be_bytes",
    "hash": "274865885723840609112318016262997141407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_bits",
    "hash": "1280257502160233765816408910554470634604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_degrees",
    "hash": "1790029633707205064914146472043073153339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_le_bytes",
    "hash": "37285932813356840016034374922786756644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_ne_bytes",
    "hash": "1191129574588369773011241369750503709340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_radians",
    "hash": "1594891587742809642313250880989429414592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::total_cmp",
    "hash": "1157832635988226544312579101964623411278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::abs_sub",
    "hash": "147824754210793306612224136684974876748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::cbrt",
    "hash": "170363654074632269934448994608027670063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::ceil",
    "hash": "1035767718139092257414645907844215592290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::div_euclid",
    "hash": "15032386568545210375665912564520042984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::floor",
    "hash": "14985070720090950399587691230438474661",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::fract",
    "hash": "117479480859851369524283266066306097031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::mul_add",
    "hash": "960306414198010095314924900814123492338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::powi",
    "hash": "46627752418478057373695395924105075743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::rem_euclid",
    "hash": "145956509312742314166437771491205134633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round",
    "hash": "45394002683714670213397947575551564242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round_ties_even",
    "hash": "1465525211766878933612973348735864383249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::sqrt",
    "hash": "82419710605507816349607127734973454039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f32.rs",
    "func": "f32::math::trunc",
    "hash": "157990166986652145461875664503021779858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::abs",
    "hash": "75082519682538823603969732638410705888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_add",
    "hash": "47082923326302672515497974211937028597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_div",
    "hash": "139521875923279349413234625166864569959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_mul",
    "hash": "952762552281015986717966951154928030709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_rem",
    "hash": "1567984623655507089211711396593762706912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_sub",
    "hash": "154125230642450902129272785221891063816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::clamp",
    "hash": "482335563557786123210059056925190437915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::classify",
    "hash": "532879368499335525210375989760065508477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::copysign",
    "hash": "67963974527742159972610443212593302814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_be_bytes",
    "hash": "69567991980421676488724382938370933221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_bits",
    "hash": "36822172541893058416553893184635977627",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_le_bytes",
    "hash": "1522234874715951511114774137873855953324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_ne_bytes",
    "hash": "1490803278445739297515190264247004558819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_finite",
    "hash": "149211871492080108598327183981824852066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_infinite",
    "hash": "13512674014400935391489011822204974697",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_nan",
    "hash": "175257293156396574608708563526179465699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_negative",
    "hash": "529594375125482352315806705650284901742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_normal",
    "hash": "63337192395889833306503793195305820843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_positive",
    "hash": "29567607453735018075330329502295835592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_negative",
    "hash": "1176328137589943253415190693832930071313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_positive",
    "hash": "1415830620938680807913361960636901152453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_subnormal",
    "hash": "514807974022540665012576078828228459690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::max",
    "hash": "1486452097717518669017337634165412670198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::maximum",
    "hash": "31889712987353550436659287233283443158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::midpoint",
    "hash": "153917947671946619985422722266841694988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::min",
    "hash": "170653147750905819614417588574687809349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::minimum",
    "hash": "115193647832598641363289192430637705311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_down",
    "hash": "93571390650135106673454717496126328595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_up",
    "hash": "17338784576413134460872323108501169018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::recip",
    "hash": "177187307026383803322078806229263804059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::signum",
    "hash": "12902274231737729234848811482265804611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_be_bytes",
    "hash": "4945945591082184989556868250306565515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_bits",
    "hash": "1033976944350554769714411313899354111723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_degrees",
    "hash": "1508480638906586939898712208310546312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_le_bytes",
    "hash": "280714083060040312511931953527061044280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_ne_bytes",
    "hash": "1480408310671372776117332282811599457287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_radians",
    "hash": "55366884052654534681733128703751848086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::total_cmp",
    "hash": "935865976961147776913102301421189848381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::abs_sub",
    "hash": "1573678775023933523510183021361825689101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::cbrt",
    "hash": "613407158268551309717617956002968467861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::ceil",
    "hash": "75362501417091822857757966117749144879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::div_euclid",
    "hash": "106009916394163281565225401153986068652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::floor",
    "hash": "1055257727812382730413914730601118869130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::fract",
    "hash": "427075525536988273571091771379324603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::mul_add",
    "hash": "1513434431476876897315370193006938937554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::powi",
    "hash": "92363467501872478308143776290411715104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::rem_euclid",
    "hash": "48695589473683170276468272086639820085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round",
    "hash": "1298351934288336602512194140932754017728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round_ties_even",
    "hash": "738941912072810946410876002326639549374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::sqrt",
    "hash": "28577739389794658844894865097729461657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/f64.rs",
    "func": "f64::math::trunc",
    "hash": "101824234212718020125078204067537076967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "1411683336468757870511743711763464370685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "70639346671593076312505980927961085607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "88995097835845057026643214485317588839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as clone::Clone>::clone",
    "hash": "22196668788775880228807280919910066572",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1074522564591392152312797296692926083796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq",
    "hash": "1341518285277626009016216285057754013763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone",
    "hash": "129259328319905844708261732164549998067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1290576628407439649515681688098285308163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq",
    "hash": "114346909286564325269344255709905061981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/estimator.rs",
    "func": "num::flt2dec::estimator::estimate_scaling_factor",
    "hash": "90383845607904206367813478185574206088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as clone::Clone>::clone",
    "hash": "120947378612395994628504307865777242178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "60285171457992118441354160639911148336",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::PartialEq>::eq",
    "hash": "1581502818683518884716301355999483565432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::determine_sign",
    "hash": "839674987001693291411818474957253198623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::estimate_max_buf_len",
    "hash": "9342887985634485973479008237345816446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_2pow10",
    "hash": "114244860188552166915435429868795587244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_rem_upto_16",
    "hash": "1563160396312484082518114299134889757937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::mul_pow10",
    "hash": "53597365563754622412272442949084912249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::cached_power",
    "hash": "1181644125006497251615243195645141756784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::max_pow10_no_more_than",
    "hash": "955476229197528600214265971075818548582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i128",
    "hash": "59386087132677451236210312458518974912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i16",
    "hash": "1545343046737874902312403020346146721035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i32",
    "hash": "114685722929929873749560514147797532667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i64",
    "hash": "1717567921191196525514731974872231517300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i8",
    "hash": "131359992944760294391978023220681961417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::less_than_5",
    "hash": "177450053108937244256024058949791559633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::panic_for_nonpositive_argument",
    "hash": "50186211171463953727684864518369695334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u128",
    "hash": "1268824783546043517015463399488275120996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u16",
    "hash": "39865264399044161166492979154730285341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u32",
    "hash": "66990443953145658003996624341340406115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u64",
    "hash": "113105628410323550903289764020827107190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u8",
    "hash": "823628517717737326511579186628630831978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::usize",
    "hash": "7890666119737191484082000720043292310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs",
    "hash": "524727855244845736518192459865729551959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs_diff",
    "hash": "1572198659893956107915878152569457993830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::borrowing_sub",
    "hash": "803829176253982570313428006803138497223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_add",
    "hash": "113661539350786871672582464417050748257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul",
    "hash": "81827108474053998023225973412256983437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul_add",
    "hash": "169925694359394960914196846260155633864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::cast_unsigned",
    "hash": "1441541187843873015211004178432488928682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_abs",
    "hash": "1594700915706204179410684054635063976240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add",
    "hash": "482596419477582560013813183248195477781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add_unsigned",
    "hash": "110935915630965523295479945134498579076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div",
    "hash": "1554626521349149962411416229827104717107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div_euclid",
    "hash": "1224854043140471566814935717978738700609",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_exact_div",
    "hash": "21223884188222633264195524883133149515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog",
    "hash": "182726451805691480419164682718493049641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog10",
    "hash": "700685797668976204917631389510717350202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog2",
    "hash": "1377115904970882841314100159136708370752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_isqrt",
    "hash": "640662379528061124613809850376293095048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_mul",
    "hash": "179351740495315864195098113762983106282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_neg",
    "hash": "94345130358941313065249313225844318724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_next_multiple_of",
    "hash": "1269027642287521188910238380082231680759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_pow",
    "hash": "415601478887199855311197595027757201198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem",
    "hash": "107674684309475058844023164071958513806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem_euclid",
    "hash": "133747928988105473042243775034549644179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shl",
    "hash": "1843786797553393369710997775541172800843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shr",
    "hash": "1433462381875491777011052601913098874922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub",
    "hash": "734917329505459768611992150788570820360",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub_unsigned",
    "hash": "18905872100916745815078330850074246851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_ones",
    "hash": "340605785995395017312170393411047438635",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_zeros",
    "hash": "17299748633984812969758335305450500801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_ceil",
    "hash": "1018456159966071470410781800383839422128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_euclid",
    "hash": "322229795952863981410668516334636977494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_floor",
    "hash": "65850596700327748294571303070947815148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_div",
    "hash": "52538599445194737752773022815098035081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_shl",
    "hash": "143932576810098357826896079788099892626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_shr",
    "hash": "102560855139430445137217917917948551749",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be",
    "hash": "51812514676952329788065313503889688812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be_bytes",
    "hash": "418928177138756924016758682648889321574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le",
    "hash": "47142704907792770814580683396572113996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le_bytes",
    "hash": "733036652424789311916086454468965444128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_ne_bytes",
    "hash": "52759504471593131462501680775986439457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::highest_one",
    "hash": "1356279268407152980017302654498959406120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog",
    "hash": "49736128983309577211724747032388890541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog10",
    "hash": "954615868052405770812359181039788277864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog2",
    "hash": "1470381078732057256012234218571075853870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_negative",
    "hash": "1162678977667308471311266224814525897920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_positive",
    "hash": "1672475631941427584010934101840465747487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_highest_one",
    "hash": "104154550443203616501595728778138416790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_lowest_one",
    "hash": "430251025881205180011174656319751552250",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isqrt",
    "hash": "26609431820571134823926585259768217416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_ones",
    "hash": "146658687164903899065279015738326860929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_zeros",
    "hash": "67432071118121027002067727792443249963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::lowest_one",
    "hash": "27294035895341536596335716936016457758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::max_value",
    "hash": "1085196014117814215813590343636963655154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::min_value",
    "hash": "329946945703542362115592771828305175168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::next_multiple_of",
    "hash": "14613958743500668254876499723751757652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_abs",
    "hash": "307306195535407963417231726727375026471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add",
    "hash": "73062099527698320407073030075131046008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add_unsigned",
    "hash": "51389404366963337773166200567779821214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div",
    "hash": "63366271704192353987654255175838207064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div_euclid",
    "hash": "175417777477373779772507606536056594557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_mul",
    "hash": "1333991354301368522512196064899493880564",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_neg",
    "hash": "1710980350946576661514098031495246215618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_pow",
    "hash": "1099530630586030867014913433577517498453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem",
    "hash": "40820021631141824733195911466046575375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem_euclid",
    "hash": "253890500415028612711670300274430049079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shl",
    "hash": "1650843644914746526418278793863042831183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shr",
    "hash": "1498240157161932908714371755901065830696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub",
    "hash": "99573204806805497962082422441702041656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub_unsigned",
    "hash": "106892629567257466565501311202227336791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::pow",
    "hash": "149093605400967877309510647523959919460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rem_euclid",
    "hash": "81462316931981106651497604830817726535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::reverse_bits",
    "hash": "42927417389542763586446127251475081443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_left",
    "hash": "1750208144939178448411546074205351775138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_right",
    "hash": "35943582448954628278280489655070375261",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_abs",
    "hash": "168015052484142055071477322468283425374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add",
    "hash": "449548557195583199412429545589328822298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add_unsigned",
    "hash": "1618285514247537281514128380227164348793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_div",
    "hash": "893080698535212066511368912405881753312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_mul",
    "hash": "1075034747474839650816895092217315546632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_neg",
    "hash": "148889178353998768098342094342617026439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_pow",
    "hash": "1616218613191676653615913681069827444127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub",
    "hash": "1207421738045178719317232388725261713548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub_unsigned",
    "hash": "10580957819285058147340665508001852980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::signum",
    "hash": "7410916288494084294643919371771655432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_abs",
    "hash": "190009689101798283113427933260378504634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add",
    "hash": "65314460775117248822552184833345674546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add_unsigned",
    "hash": "230177946481937557310687575253649343122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div",
    "hash": "1607199170996749725018115518376094834525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div_euclid",
    "hash": "111824447847535351393248566313195328113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_mul",
    "hash": "1481740754867018464910396337490285910309",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_neg",
    "hash": "345994639640342701910636032932329439044",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_pow",
    "hash": "812342991873482371813924208968779696194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem",
    "hash": "151708364355436763418323136484728607038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem_euclid",
    "hash": "1065051963912731066016725329917391860025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shl",
    "hash": "155213441470476706654794015587847493471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shr",
    "hash": "85462267223072413368413523327584070742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub",
    "hash": "152114068554595939771391969682337761939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub_unsigned",
    "hash": "14277794430381161562679188198171191379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::swap_bytes",
    "hash": "65018734321973476508917226282384065735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be",
    "hash": "1679669131830110445216023698882232092302",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be_bytes",
    "hash": "467649983261813939011414915551120973358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le",
    "hash": "91581740737495072307172465281539894897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le_bytes",
    "hash": "81825759807711483001328664782216537933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_ne_bytes",
    "hash": "734324788681461868418253764282549503518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_ones",
    "hash": "143394357570954827859759585426013995884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_zeros",
    "hash": "54804980934694437731495850998941509405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shl",
    "hash": "159288330630469090572574209562571730225",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shr",
    "hash": "1444433073952663382116412666167519614637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_add",
    "hash": "65157345591482832713269241872997089308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_div",
    "hash": "656870279751247820710768772766731449265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_shl",
    "hash": "665850834654585780114212016344522381775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_shr",
    "hash": "1409415976491625861413053570976282337139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_mul",
    "hash": "645347229108740203611675561155142889909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_neg",
    "hash": "55896349205668789804334167249173464015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shl",
    "hash": "55278440516736372767312854892729018952",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shr",
    "hash": "1776943983846999345417241592300054106617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_sub",
    "hash": "11819746436875559037259058328413372243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unsigned_abs",
    "hash": "14487393346386362276800730359823230759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::widening_mul",
    "hash": "8300711582753656356743574111226730414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_abs",
    "hash": "149511140300492050212006767815449969096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add",
    "hash": "139037607927126898323742206625509613182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add_unsigned",
    "hash": "14849341353752371322812062840709376315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div",
    "hash": "79967124770125111061888733498739394504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div_euclid",
    "hash": "42367806111371793262082256385328776311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_mul",
    "hash": "997073802075895252610603976605452368575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_neg",
    "hash": "69824616647891260438967989101419303298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_pow",
    "hash": "146371030855741673662918246750456118240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem",
    "hash": "162948910352468788572710570672853138325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem_euclid",
    "hash": "168056716737311733401233344527296007594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shl",
    "hash": "113020063335006077893288349200429928576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shr",
    "hash": "1511444917092536035313200988884415303984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub",
    "hash": "324744344081646711010004671441632148983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub_unsigned",
    "hash": "895009886420954586116660270738621433004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs",
    "hash": "139609182103772370573766066619724347539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs_diff",
    "hash": "740712482901528706317783975105755234632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::borrowing_sub",
    "hash": "9018810069212083522651936236347705941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_add",
    "hash": "92956824625397587375411858586453491182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul",
    "hash": "991193075033640496014717847723166952917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul_add",
    "hash": "398974446789193616914668121913874325205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::cast_unsigned",
    "hash": "1290451404891277496014582054179652042509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_abs",
    "hash": "172405062078718915317786881563514377463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add",
    "hash": "11357892380942665275529178851858391786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add_unsigned",
    "hash": "17616170189487366404513333827560799200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div",
    "hash": "226953102814321261415348159980804883213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div_euclid",
    "hash": "1330607892125060144414075747372755783739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_exact_div",
    "hash": "174424656653079339579669723122948436787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog",
    "hash": "410421614442917508811928579073598686365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog10",
    "hash": "53063172724732350859568881649184308898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog2",
    "hash": "987708885509357822114046461826026475972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_isqrt",
    "hash": "1194939277012830962210086583558280629157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_mul",
    "hash": "1403065504555762809916348949842827406483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_neg",
    "hash": "174488837652436550298046867507436921427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_next_multiple_of",
    "hash": "625244151528259228516557454232861781307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_pow",
    "hash": "67862864286650497515698337766468311836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem",
    "hash": "746892177050624129318203729158014183152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem_euclid",
    "hash": "133853652347765614657217417956038047835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shl",
    "hash": "28025784773905151688066122325372390445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shr",
    "hash": "1393623972652311063512795992566856248227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub",
    "hash": "66395865268868429302303790541379092065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub_unsigned",
    "hash": "1431158124697519271618160883123060363908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_ones",
    "hash": "124692644073698712888647358177778262941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_zeros",
    "hash": "14478150187293817575474979595304241775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_ceil",
    "hash": "919323418632331157213178802023533648969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_euclid",
    "hash": "179437473341862335447016478136318867487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_floor",
    "hash": "488157271246644811317043582125555839034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_div",
    "hash": "49789583781239674561251613147199607186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_shl",
    "hash": "92365565753074685337975983276992836797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_shr",
    "hash": "77099931056195443534679696959395188174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be",
    "hash": "731478692560024134212994140681293792832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be_bytes",
    "hash": "111677200082673850254915422923183285877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le",
    "hash": "869636892109654156011986705581204885597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le_bytes",
    "hash": "166577119665167074789697509960274624750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_ne_bytes",
    "hash": "1150945686855806819417188691116192212947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::highest_one",
    "hash": "1405854951502190834814769566985128682874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog",
    "hash": "45578078524157713197483971544164528081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog10",
    "hash": "9110854193072726729155913724439127468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog2",
    "hash": "111567245966690908194136958291656485107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_negative",
    "hash": "103535699596704774272175336263989487448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_positive",
    "hash": "31770219817416005014778611159250199881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_highest_one",
    "hash": "886248044634171736018251661526486981940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_lowest_one",
    "hash": "133297819875478927148995851607099056456",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isqrt",
    "hash": "92821618662242382671416718720301125172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_ones",
    "hash": "92165956531500118874144409776907110188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_zeros",
    "hash": "154990657355124781407356653506005462196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::lowest_one",
    "hash": "1508951375949580631117336136402700114215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::max_value",
    "hash": "128894084892593471465903145971918562735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::min_value",
    "hash": "333265785156732889815659405669441591117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::next_multiple_of",
    "hash": "38180553617676929779708183783097917570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_abs",
    "hash": "844430054085676658813051959774566571064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add",
    "hash": "180091338442153991101810852859536420484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add_unsigned",
    "hash": "63026114336041623924380415620230398987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div",
    "hash": "145456723439470955615661753638213163438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div_euclid",
    "hash": "441524124486815202716595973519563909017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_mul",
    "hash": "1550066966949167738716244153367257654793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_neg",
    "hash": "11920013464354079011371194608719823513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_pow",
    "hash": "53822244420780450343333003831357864654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem",
    "hash": "127260308822293136705962665304231099438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem_euclid",
    "hash": "141114178165379227453912585039759765636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shl",
    "hash": "618863122010474567516119861679821915445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shr",
    "hash": "58143116828521212446547312270540988122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub",
    "hash": "77084092104349699282006235504341570715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub_unsigned",
    "hash": "3128687746831533392802474746430093885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::pow",
    "hash": "1687349342706247108817995215419890448502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rem_euclid",
    "hash": "103806359713781587212089766770339657337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::reverse_bits",
    "hash": "1058352583297672756710704476281363503120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_left",
    "hash": "148894119521574481722610030466148850314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_right",
    "hash": "435332339734226940014172551068008292860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_abs",
    "hash": "1803881417672024295614451949726929405084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add",
    "hash": "210263293244615126614629467802239924949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add_unsigned",
    "hash": "1367008194103462396812454298713484197498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_div",
    "hash": "318876120431375508714230274186780661749",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_mul",
    "hash": "57512823458690491809136018676590284778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_neg",
    "hash": "369458257546324732810092317457817076377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_pow",
    "hash": "4253145921124560555914332889945527002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub",
    "hash": "118724264890088505014935398645971785891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub_unsigned",
    "hash": "152473754095618283028101876812679186571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::signum",
    "hash": "122138061529603761878501930405620861275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_abs",
    "hash": "11224376092850672074755857955788410371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add",
    "hash": "103210920923608824826161341992156512968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add_unsigned",
    "hash": "560882423388568105115244975100489412350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div",
    "hash": "14435562759782762134926903692279087403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div_euclid",
    "hash": "473226007811415287610175008276401249029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_mul",
    "hash": "50765201396661839684668824405722616865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_neg",
    "hash": "114147699918769206453235943590860557235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_pow",
    "hash": "47303884358010726608142935779922743822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem",
    "hash": "3209867534510752992165965015590829678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem_euclid",
    "hash": "47341869880470971296343886841174240990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shl",
    "hash": "1558191245770971863611552115899933471064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shr",
    "hash": "35318130258615238612441293180800715819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub",
    "hash": "88745198489027121402487795049453770031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub_unsigned",
    "hash": "154213724428478766447862285537067711136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::swap_bytes",
    "hash": "1638158997943321106910576246855604342701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be",
    "hash": "123854407893159922828842353103575524231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be_bytes",
    "hash": "1069915423207062716110988366100266871839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le",
    "hash": "1753137060049362506716449112167024616361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le_bytes",
    "hash": "174702217790262217918727259503197710780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_ne_bytes",
    "hash": "13088546215881948683811603540297516723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_ones",
    "hash": "13432337739900656484772672555943736415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_zeros",
    "hash": "1119579102845401184014042795240495603469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shl",
    "hash": "161479166469714151018680036435384839626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shr",
    "hash": "173788609375014252249176069810653507420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_add",
    "hash": "6075160848709568986211520763313809958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_div",
    "hash": "447641052459431033911342488541191197492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_shl",
    "hash": "72447729936053191605775453301422059802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_shr",
    "hash": "187081371065160574913223950637491182360",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_mul",
    "hash": "4467408480505707359343132080468601038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_neg",
    "hash": "2543889065944748962927695197786951451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shl",
    "hash": "34824380467228971085111610879517887253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shr",
    "hash": "567415992430960765518962788746630930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_sub",
    "hash": "33314434247354018675028025711413273806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unsigned_abs",
    "hash": "797060176539388803210123616756054258696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::widening_mul",
    "hash": "1424092488398174207111879620650936016247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_abs",
    "hash": "44331511621808520329232751427851363214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add",
    "hash": "136397705784568621217972947195872631496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add_unsigned",
    "hash": "58439221449576559698251403128447514410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div",
    "hash": "645557352795421541017944665319939693911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div_euclid",
    "hash": "161455199362506569567263006850529466892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_mul",
    "hash": "37152295249288595591529548301558058530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_neg",
    "hash": "154054957247084842813556838290954484639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_pow",
    "hash": "1806248624167575732716148553094116650133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem",
    "hash": "84898754144915516904120459671716759711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem_euclid",
    "hash": "1338587640022827588417791588413951810165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shl",
    "hash": "1014100411119345593712685689988358016910",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shr",
    "hash": "1828872750385749623510296281442303944758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub",
    "hash": "753787764165176062015930745751725023672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub_unsigned",
    "hash": "753788299889824915711383924358665997974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs",
    "hash": "77250298157016832182044515526369131781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs_diff",
    "hash": "438696312918286863417429556888422587332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::borrowing_sub",
    "hash": "111318627357377106544932771754016621256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_add",
    "hash": "18670779438781712013669573877301336757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul",
    "hash": "561704198712178216613734516432431215441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul_add",
    "hash": "66317489323753905429335334090500197548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::cast_unsigned",
    "hash": "1640858399118236108216922114722390467018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_abs",
    "hash": "36532823432045203715180046975696047019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add",
    "hash": "170129026914565664943222111758845109690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add_unsigned",
    "hash": "1311686415713489351414056737961955216499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div",
    "hash": "328642562826421690659424860996166185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div_euclid",
    "hash": "1550878422007538668315826432506803546714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_exact_div",
    "hash": "45557473007563983856740764121915714581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog",
    "hash": "309267167911728314113947227097463021247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog10",
    "hash": "121882212581876192296010724984716736093",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog2",
    "hash": "13416866433992246737887251902705922708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_isqrt",
    "hash": "65998267201465927277285977289312624112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_mul",
    "hash": "81207649111288025110851857611973957745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_neg",
    "hash": "1049994875277604122217974375300801962065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_next_multiple_of",
    "hash": "102997745053100656455255251264112586435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_pow",
    "hash": "118884949478650075758125219345147832263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem",
    "hash": "152736761603277158012092577977622957292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem_euclid",
    "hash": "990123182951083731616935911372548284888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shl",
    "hash": "651764056382717373717454827799479533212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shr",
    "hash": "763289424644472318715904765689964664596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub",
    "hash": "113389083607858252969251752177453112143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub_unsigned",
    "hash": "298036447543142503916101914246083762981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_ones",
    "hash": "492500101162083798718196707570928137147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_zeros",
    "hash": "3628527969570838895361807864768061934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_ceil",
    "hash": "134191307860971389457440163957948631110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_euclid",
    "hash": "242299230963620004913342442935515136968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_floor",
    "hash": "1569210307122856241510337896383223230954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_div",
    "hash": "58896681184473710167212526651520563850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_shl",
    "hash": "779183260865375906817050241532842113932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_shr",
    "hash": "14384428937475881402759763691737743007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be",
    "hash": "1727783632393534643811877640561290338235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be_bytes",
    "hash": "93383867200855939629430986649133142224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le",
    "hash": "9232900396684262426544668734534770350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le_bytes",
    "hash": "98508888554942085192137803572471868715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_ne_bytes",
    "hash": "710799956578801453813354853650587237613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::highest_one",
    "hash": "17695617083554137657124637135158858949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog",
    "hash": "26086334168479260111839575096618707314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog10",
    "hash": "174792737958162044285749163953705684566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog2",
    "hash": "3648923221163903663209202025248468766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_negative",
    "hash": "824698057860634039216667043292814384158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_positive",
    "hash": "45377479852411732515269416922796532522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_highest_one",
    "hash": "1051659231562104664810569888069781638331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_lowest_one",
    "hash": "130532787202537138951114781959582590489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isqrt",
    "hash": "119836944809981696811005636718518519870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_ones",
    "hash": "132342093541249816217578972422923355725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_zeros",
    "hash": "10897436743251281184685276086639699388",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::lowest_one",
    "hash": "178707238628781510342271089596170318144",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::max_value",
    "hash": "1359563768298829592318377015716586325205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::min_value",
    "hash": "84869519169906526726104014761719957544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::next_multiple_of",
    "hash": "8309074502645175882032160089206937315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_abs",
    "hash": "9966361023751023554207699213795201072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add",
    "hash": "178895370753195426639504045417900976069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add_unsigned",
    "hash": "1747687717015510762814810765849972833847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div",
    "hash": "111233368847748662277546669194567854548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div_euclid",
    "hash": "92702492674662912173983810002150432769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_mul",
    "hash": "43099969154784151258336087897767552271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_neg",
    "hash": "1676328434698500868417703741463880282480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_pow",
    "hash": "1136943971195504180410048127093227573428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem",
    "hash": "84728056519397755853997234040863590323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem_euclid",
    "hash": "40821348139083693849867108290518240830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shl",
    "hash": "1823401090474380742311791217543622164260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shr",
    "hash": "125459623772227493016116396526369068256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub",
    "hash": "92761025217894253673110526198188320003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub_unsigned",
    "hash": "20963283966192229966724165013903303694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::pow",
    "hash": "47788337553374646937750254052744240326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rem_euclid",
    "hash": "62060418265013951315165110929177355191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::reverse_bits",
    "hash": "139632898108202978978186277559000795130",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_left",
    "hash": "603846337081142974614516152980746219723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_right",
    "hash": "148044994173731108510332100830024093853",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_abs",
    "hash": "506344111446316758916295243917476123901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add",
    "hash": "57771179417432089715895447757251992443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add_unsigned",
    "hash": "1028261771964157164811530242344955289279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_div",
    "hash": "258931313559418719715646321197910270084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_mul",
    "hash": "89357996005027483984064806520827089016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_neg",
    "hash": "158864033692060087762237981019811180626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_pow",
    "hash": "588812629821647197010399664149736597854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub",
    "hash": "132658274910674547107727836845129128817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub_unsigned",
    "hash": "156891601483986254672391288066340609622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::signum",
    "hash": "83001086750478948795118084259827972513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_abs",
    "hash": "166567281154239289510451979566120234717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add",
    "hash": "376386349046565710016370740689665733303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add_unsigned",
    "hash": "447610947260826197214455479442777329249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div",
    "hash": "275893407897849580813568646023593303453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div_euclid",
    "hash": "1773527798362602293816008476140830454484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_mul",
    "hash": "82735391237899575275459071191866173537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_neg",
    "hash": "1292297439589621805916895249093547090323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_pow",
    "hash": "1307940819379879097413161181284582103188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem",
    "hash": "142662515872667037208128660455664417628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem_euclid",
    "hash": "9952037305849846722385916191568923428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shl",
    "hash": "1340440922697704843814521472770362755089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shr",
    "hash": "549083901539563985813644646492843699339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub",
    "hash": "1246884092677908442613737479032764770826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub_unsigned",
    "hash": "149723806194821054733649061425047906334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::swap_bytes",
    "hash": "54048193463655521024183230984123647437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be",
    "hash": "182312436775859732946376294282288688937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be_bytes",
    "hash": "172097154451626453653644237773579280196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le",
    "hash": "171969906062449327957651024295139055076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le_bytes",
    "hash": "89241337761201961723412364600566875610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_ne_bytes",
    "hash": "157905562338767246075521077479738407414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_ones",
    "hash": "858211273075116567114565377807738622617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_zeros",
    "hash": "37763046523966463471641849573168862280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shl",
    "hash": "76239591309864028816414980963366376761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shr",
    "hash": "937790891784950446382585683318452277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_add",
    "hash": "1716488178134335331412149513624199147527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_div",
    "hash": "99303722076875350872924676197008550415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_shl",
    "hash": "634582226796661561316511262907830642404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_shr",
    "hash": "157132420714566419782493574689044050859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_mul",
    "hash": "927998587477264871412810803165510751143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_neg",
    "hash": "195345537923866765915698905969066569482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shl",
    "hash": "309225044988616683711155020127224174799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shr",
    "hash": "120547312960899125728619459067853951567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_sub",
    "hash": "89204511685073125549858712728522352243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unsigned_abs",
    "hash": "145260583857546744352679364306705014963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::widening_mul",
    "hash": "162300793601211970485364020937898827566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_abs",
    "hash": "141489593237085181002614656531811257408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add",
    "hash": "1251633089686808085013103894199704793535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add_unsigned",
    "hash": "72414385532171898895275816738539377487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div",
    "hash": "13939662280374801184741579342408978274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div_euclid",
    "hash": "60747799316173605845125199740642097078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_mul",
    "hash": "79242728783770300391285614254369091785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_neg",
    "hash": "1173385422516551927711311891490318803699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_pow",
    "hash": "186900996282494102710919324306990119885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem",
    "hash": "77358508253077648873375561825521134810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem_euclid",
    "hash": "12704058089143827675149527945012044637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shl",
    "hash": "127928177452271369706670644009391015253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shr",
    "hash": "139123032504472380795325928126313232751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub",
    "hash": "62587016874313131693329047355057219344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub_unsigned",
    "hash": "304633630521441602213106469010166328573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs",
    "hash": "130629801091310634679881442646296156529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs_diff",
    "hash": "1778899339145146354918108559311240355944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::borrowing_sub",
    "hash": "451360628865226596312119168790943995899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_add",
    "hash": "1564112419414677617413715662957013877486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul",
    "hash": "146544135769241094937412764801208795964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul_add",
    "hash": "43890755024579204661330274889224038935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::cast_unsigned",
    "hash": "1707608225334073814710246544365152901729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_abs",
    "hash": "138352563754053098655157501240417844149",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add",
    "hash": "1343942870129546494211318624644071452137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add_unsigned",
    "hash": "8334761627013288374554162088043201304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div",
    "hash": "979624915163101920610807802908415479368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div_euclid",
    "hash": "17096823768217193614286151570076766078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_exact_div",
    "hash": "1176219621141905123812354637894953380657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog",
    "hash": "1192590935800663904512251901554019295937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog10",
    "hash": "84156739773758512978330664559481092884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog2",
    "hash": "62388879494963169564549763048001904864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_isqrt",
    "hash": "172520029388763051719357515936723381615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_mul",
    "hash": "128226445925185651245408809495844741356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_neg",
    "hash": "881003484340896603757616146020220287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_next_multiple_of",
    "hash": "126566943200700103318506121224021466410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_pow",
    "hash": "159359617141402486699400590094466363738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem",
    "hash": "24109839156488971921970217907213074174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem_euclid",
    "hash": "83784046558398023112253895638268552054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shl",
    "hash": "1397824362677669893111836098345599766807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shr",
    "hash": "295931229693196196411471860564930881843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub",
    "hash": "178906378785023471239865777701489371600",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub_unsigned",
    "hash": "143016068080288294847882610460159578092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_ones",
    "hash": "898283129453181067310642872925147151911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_zeros",
    "hash": "1128260349444627351015086042645110397081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_ceil",
    "hash": "43180175808221689317931709735203260641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_euclid",
    "hash": "52577346668291090376136130713418993698",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_floor",
    "hash": "115478171962726417831339076797594819817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_div",
    "hash": "156684105100611650116999718737230920074",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_shl",
    "hash": "1600451088675983377315380603937873740972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_shr",
    "hash": "1236447394817528594910131885607684997648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be",
    "hash": "263627525287136156610210768650090158062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be_bytes",
    "hash": "1647583584584875030611339092518645994691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le",
    "hash": "911164546074074310312812953941461148463",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le_bytes",
    "hash": "9877293709038110957861652553841028118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_ne_bytes",
    "hash": "383851681186530361210935824091277388612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::highest_one",
    "hash": "1757382467328771405710601594037331664745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog",
    "hash": "639387289386667558716593434442744013692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog10",
    "hash": "1707950812832670107410832890511411455567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog2",
    "hash": "5686633740345070148149562873637078672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_negative",
    "hash": "170012113686095632513038213330000478090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_positive",
    "hash": "183813291891552235787690544125638802172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_highest_one",
    "hash": "777263528921289348416445994824563580471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_lowest_one",
    "hash": "975689181644934622015381165758998877964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isqrt",
    "hash": "153552871099640271632426183680541460293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_ones",
    "hash": "118854284267960271143282368027177073923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_zeros",
    "hash": "35802025188270800234186148757668174453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::lowest_one",
    "hash": "153377725237510342777730329860546966126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::max_value",
    "hash": "884800854657136059812494770232424646214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::min_value",
    "hash": "1808938607830033458416959265524552107951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::next_multiple_of",
    "hash": "96705517658702188816923331807401963797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_abs",
    "hash": "1827180483527793433114863514095673705133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add",
    "hash": "169959599922877056208082763552179219765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add_unsigned",
    "hash": "6647607398613114159972087576087609937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div",
    "hash": "33566292922819270271767620967831509710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div_euclid",
    "hash": "914066470716352259116936050004337417777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_mul",
    "hash": "365393941684361168210589959722636987943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_neg",
    "hash": "1778034882987286292715166930897001881849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_pow",
    "hash": "12888851031767306925776273857706009503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem",
    "hash": "151363501235261973936425804943560865936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem_euclid",
    "hash": "80125213460781216119079371688731786801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shl",
    "hash": "1233914240041483345012162809949596744864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shr",
    "hash": "5830327908064853575189805522354771395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub",
    "hash": "728593771407829698816580908884008100396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub_unsigned",
    "hash": "171312112530688830244000972590136150324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::pow",
    "hash": "974115667090730251511017246489790912739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rem_euclid",
    "hash": "40705448523212950954813755152218842470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::reverse_bits",
    "hash": "1892564445759622273203426037467253751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_left",
    "hash": "16316213488715014555885741357375102189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_right",
    "hash": "66608993072638721596417893849124115338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_abs",
    "hash": "517964989616479726313592782322972632242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add",
    "hash": "1202143119384309803112279318657371228207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add_unsigned",
    "hash": "252879210335560402616198869052173916184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_div",
    "hash": "177977131347480408031663745370943819501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_mul",
    "hash": "243795028496950357110061279091009275435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_neg",
    "hash": "1354662609771371675514280948966873001802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_pow",
    "hash": "80936913725695018189039070925475938783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub",
    "hash": "181725663762525448061533035337454251664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub_unsigned",
    "hash": "1781797440033641692116396384574152251714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::signum",
    "hash": "1427384241356226697316234948423165947300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_abs",
    "hash": "979254307096270894113395592501775039379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add",
    "hash": "120168870491991091545076337078643577854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add_unsigned",
    "hash": "4100535241540832966129806806810930198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div",
    "hash": "45523308388712001838391033484469624954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div_euclid",
    "hash": "991455144925627012112578917549191154200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_mul",
    "hash": "35083576544095933523976107754311090849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_neg",
    "hash": "66708629715691262279396073727261749282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_pow",
    "hash": "7890543683326482294361417445217106482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem",
    "hash": "1416734112622764585110618337542733212723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem_euclid",
    "hash": "74227758670053929075309487702163529505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shl",
    "hash": "88810736323334061468660270204693260781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shr",
    "hash": "1521536044122432836913048706494159165121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub",
    "hash": "54643939756454445975232704899421421727",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub_unsigned",
    "hash": "27289996533041477706010533141397341768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::swap_bytes",
    "hash": "175079492794095125886178155990939079172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be",
    "hash": "76462948389150093559938719930473812675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be_bytes",
    "hash": "1362371186465198760116458221150499782437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le",
    "hash": "300878653693913588817442121578098326167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le_bytes",
    "hash": "569702226349129450111806972240523235836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_ne_bytes",
    "hash": "1717445008276653271911958959794688866958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_ones",
    "hash": "233369813544308707913188339089314523312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_zeros",
    "hash": "71932769198838115948173500632688420426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shl",
    "hash": "1830478233879422282412930607131319790710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shr",
    "hash": "124492722507431412027133440460035148075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_add",
    "hash": "1444778223937347952012490541777105135276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_div",
    "hash": "175371579964716305339928476509667538340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_shl",
    "hash": "941997674073920338960050524321471526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_shr",
    "hash": "401369510065640574011458259289768395822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_mul",
    "hash": "119533104578191162656716614232294740395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_neg",
    "hash": "54400646930767775762010208786383830546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shl",
    "hash": "87012219747144066742103552929814615839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shr",
    "hash": "28056106842452742041706137764596747718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_sub",
    "hash": "73703891702741674110780488903431585676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unsigned_abs",
    "hash": "1585337846534936574415009423686577682871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::widening_mul",
    "hash": "47314994409979149417877400593955071751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_abs",
    "hash": "895434883602847034311956737437791513536",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add",
    "hash": "39254961878224837063955731406028894450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add_unsigned",
    "hash": "160829910645564023862943640759648822705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div",
    "hash": "233012544452168204116679291484162395246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div_euclid",
    "hash": "147594238137110093873598891577969141214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_mul",
    "hash": "177044558704024024403624461904482307550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_neg",
    "hash": "995285317202435294714319303510167602079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_pow",
    "hash": "177687155673911551997690199037253673306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem",
    "hash": "167443360159024669613594084335997915301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem_euclid",
    "hash": "1196970209588784295415644063994522590138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shl",
    "hash": "1593637365197260411614300666718936317991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shr",
    "hash": "1639721095685669627316965783591522963178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub",
    "hash": "1763131247416446000818338850787315673722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub_unsigned",
    "hash": "571677935237434162315729348151068832019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs",
    "hash": "31085088682678292336938442445281910792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs_diff",
    "hash": "184331132616590752375988327590758138894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::borrowing_sub",
    "hash": "394079212585242728416735407301745312743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_add",
    "hash": "843352294174384117511241811136080829121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul",
    "hash": "121220062636091749584713728347987065118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul_add",
    "hash": "1640243556244953191110205448756794870275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::cast_unsigned",
    "hash": "22864119089514009867295756838428239539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_abs",
    "hash": "1318892034351416586015102417878443952468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add",
    "hash": "3156644405831716489202670511991546732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add_unsigned",
    "hash": "636116162170291110263956630858548261",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div",
    "hash": "73538364348486628602858876938311841585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div_euclid",
    "hash": "75572284021976268748835590992216791206",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_exact_div",
    "hash": "836505042780137886716867183480832463948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog",
    "hash": "155203801507570453526999087657842962881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog10",
    "hash": "1422699785797126052313335814542821074355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog2",
    "hash": "130170083966599672223674214498263054264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_isqrt",
    "hash": "880706606387708274310011469227599712979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_mul",
    "hash": "131191960806581758303234939635902051638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_neg",
    "hash": "770820473816978497715657671400906245829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_next_multiple_of",
    "hash": "92466466508511508566354793186593761536",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_pow",
    "hash": "1824822620689393465412773754111078439638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem",
    "hash": "452839688385453202216034627001417439729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem_euclid",
    "hash": "118705507324233303684976610479414237604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shl",
    "hash": "175545776319615671027680437131517923043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shr",
    "hash": "1037495048641664591616246756423081155266",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub",
    "hash": "166630080526963654711496370099373057199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub_unsigned",
    "hash": "139011884382494038188022009982516109029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_ones",
    "hash": "148535122558728961755231464015828213224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_zeros",
    "hash": "437375628000504432911687941106206350438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_ceil",
    "hash": "543200920056783496414796813752796525027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_euclid",
    "hash": "1190110841106613638614022397107766012233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_floor",
    "hash": "137660500323006511025439284626317074733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_div",
    "hash": "684841793044976893110010626465372968060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_shl",
    "hash": "1031234117538505617711528470099991253717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_shr",
    "hash": "71193594607479887817593600733034591321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be",
    "hash": "473040537058339097266012426543907583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be_bytes",
    "hash": "1314415438869407034610957670159218810723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le",
    "hash": "67476017815134222484952652405821375478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le_bytes",
    "hash": "170072414812885954172004050006768922406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_ne_bytes",
    "hash": "276179956328477939415826956378292279895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::highest_one",
    "hash": "73706323641252818964536378904597217281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog",
    "hash": "109441166377784365787386900405984383540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog10",
    "hash": "1442562201585052065210176417617928098257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog2",
    "hash": "453650555805771674413860578044243420683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_negative",
    "hash": "167415713060497765515256310555663103655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_positive",
    "hash": "149383746866796693285422354618938399340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_highest_one",
    "hash": "3939194318533648197746935331797135271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_lowest_one",
    "hash": "118127034603823977299046317880683964100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isqrt",
    "hash": "1729616634255535819617716298234112714446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_ones",
    "hash": "1550876633524941170217306252874710419431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_zeros",
    "hash": "529663135670579140718084645145532098676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::lowest_one",
    "hash": "1704191402680827810812027920398249270325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::max_value",
    "hash": "155255773064624555313318464819776419336",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::min_value",
    "hash": "608760315234541326412299053743873706992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::next_multiple_of",
    "hash": "1314402599338662125217729191198078540151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_abs",
    "hash": "19925695566353862287024789254101127444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add",
    "hash": "76753900826134609698015239134932215001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add_unsigned",
    "hash": "88651606677824313444393716762044261891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div",
    "hash": "166244103635685044265285365114229877927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div_euclid",
    "hash": "37220193229609761823550310008169518184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_mul",
    "hash": "1806154638111984008610641464481861130753",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_neg",
    "hash": "1794486177473300381414674085643786858964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_pow",
    "hash": "5931660974035293782370079860846400571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem",
    "hash": "92623304629180330923527321327452963343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem_euclid",
    "hash": "47268883937885243906792354807317518461",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shl",
    "hash": "1210766473798903252115589051711549411489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shr",
    "hash": "45888695952987924102368346836186297721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub",
    "hash": "415631283801905336718117129641712021630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub_unsigned",
    "hash": "541076502348270825416123978037232538512",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::pow",
    "hash": "1431637021346055148913748320052997713372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rem_euclid",
    "hash": "15380811964985527251999384580591956056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::reverse_bits",
    "hash": "41064539592546230906089191439174289704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_left",
    "hash": "127806589933287605374490620639789769121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_right",
    "hash": "181621433961663637471144175966298995688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_abs",
    "hash": "154055689579846337125042393857870875017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add",
    "hash": "29641674967450963252507595212199624585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add_unsigned",
    "hash": "17375459882792580887674753422898364481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_div",
    "hash": "98439834150683800916013409274507530899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_mul",
    "hash": "171408080213196270505176871013758072612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_neg",
    "hash": "161026287995401275873879295841693237863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_pow",
    "hash": "96461080564818502651679245780217596869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub",
    "hash": "407815119120396808515460205544944168815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub_unsigned",
    "hash": "122910565590320057825546975877364001445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::signum",
    "hash": "126101224248761391714346574426194398273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_abs",
    "hash": "1235600844616068317911669711810902705495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add",
    "hash": "380113065364837114617008032367323896193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add_unsigned",
    "hash": "41284600781344422258372313934227541384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div",
    "hash": "2149379935128028044859843952319189300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div_euclid",
    "hash": "18044802085352038785796236082261209772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_mul",
    "hash": "360711305772112027717356811118014229964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_neg",
    "hash": "1005662252907644655918292258344784988796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_pow",
    "hash": "1223603869084719525913194284052538926177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem",
    "hash": "1483255006176020084113623090706275661192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem_euclid",
    "hash": "7815249575411889384243444866851048281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shl",
    "hash": "1805392556523891107010205611992774369962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shr",
    "hash": "1454073150783671773712300343414771497922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub",
    "hash": "951803822569230219716500067549600622212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub_unsigned",
    "hash": "14388703058987528987224993959590847438",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::swap_bytes",
    "hash": "12703512633362358628892008001060872358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be",
    "hash": "547193455254680401014092774075414971141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be_bytes",
    "hash": "406219531826466844217077823454825994094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le",
    "hash": "152577469746356600384775931289120767116",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le_bytes",
    "hash": "17379328775720881475522612303704127011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_ne_bytes",
    "hash": "741398304016211676918304329607293592621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_ones",
    "hash": "182835236721290929249368890714882822306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_zeros",
    "hash": "173345217144120751517118973859453575724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shl",
    "hash": "971440947667644127212841767021210681681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shr",
    "hash": "32432919422869593013184859719399327041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_add",
    "hash": "41459015075024369617532737517830694057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_div",
    "hash": "1031286784896673801611178545228403120371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_shl",
    "hash": "1233318065803260219916574613465502228842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_shr",
    "hash": "162657013763593897245037762467595583343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_mul",
    "hash": "160444711295694703697913348814236919964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_neg",
    "hash": "149573094103625928466994130595657730706",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shl",
    "hash": "143966678052227583529081433828961462550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shr",
    "hash": "55565874155486463636716175398364160379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_sub",
    "hash": "143561716153360300858663795361684314271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unsigned_abs",
    "hash": "953137291639510480410105275326046210500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::widening_mul",
    "hash": "68176747259647751945681867224342226091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_abs",
    "hash": "1809047825278955004614922435690394920128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add",
    "hash": "99716412801450542286208789753911265009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add_unsigned",
    "hash": "981546007401456562418253198430173474812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div",
    "hash": "762139682471833414813352424261466225690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div_euclid",
    "hash": "67969523579358394065359192265078905367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_mul",
    "hash": "108594665471324032745398400337047131190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_neg",
    "hash": "1059063546890179764310683125698586565191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_pow",
    "hash": "1790052174642435503612237153874273414023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem",
    "hash": "165666102438625705179266041138961426755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem_euclid",
    "hash": "1062143259246554154613369476391799934761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shl",
    "hash": "1785053685964091224211659645355532075824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shr",
    "hash": "178930526543785177183469737533475930470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub",
    "hash": "13485459679412339191992989225549260639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub_unsigned",
    "hash": "613040356440860815516612895448035168333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs",
    "hash": "462501011059582189517399244111354198165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs_diff",
    "hash": "1481612749479810533110141378708056667120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::borrowing_sub",
    "hash": "249952888479226476314940956428043351140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_add",
    "hash": "69826915303601831219427567494436094502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul",
    "hash": "1821079452798437041015661771223797128464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul_add",
    "hash": "508222795479231459915968942188742781785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::cast_unsigned",
    "hash": "147898616127417732426729571249359342278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_abs",
    "hash": "668494927165806883216576751845996767874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add",
    "hash": "1135484733813133852610739758437133496134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add_unsigned",
    "hash": "166999201557032273571608872796817301099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div",
    "hash": "69423070842641143331574397852820277546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div_euclid",
    "hash": "23926509470169174329794966780937570368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_exact_div",
    "hash": "1775921766199098928712970594165785389576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog",
    "hash": "1295136940147845702810346365535094540215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog10",
    "hash": "59639508451868848713771789084332833380",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog2",
    "hash": "1701466556604805168816284489077588649974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_isqrt",
    "hash": "42354629332243185010642164827340714515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_mul",
    "hash": "1705507034440987590414221204201048619104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_neg",
    "hash": "6440140648877956911439988203617122277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_next_multiple_of",
    "hash": "421177177739073041310174823885102620768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_pow",
    "hash": "7276123208278791744316529755006367743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem",
    "hash": "858863157617875273416469290304311005610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem_euclid",
    "hash": "120888105786355850398801050713023957508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shl",
    "hash": "35991093183224322018056685456439117765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shr",
    "hash": "145718318273787373467807981516663525732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub",
    "hash": "1150810986419414212217083342862105858531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub_unsigned",
    "hash": "95701773629824710635075120841814801719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_ones",
    "hash": "1670480464920232235915498489713596567779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_zeros",
    "hash": "110239708162252997663083269147491093644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_ceil",
    "hash": "125385337947984713056440248628071531166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_euclid",
    "hash": "788202800219114734813963759536654062653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_floor",
    "hash": "9583752614733427552904028916857971975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_div",
    "hash": "180339215799191036485024809245360573877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_shl",
    "hash": "1733664592299347402913620670536451296885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_shr",
    "hash": "911611506945530996115413803013107968000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be",
    "hash": "1777453678526749144513110563135031227773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be_bytes",
    "hash": "58071344168357558316389867192725039801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le",
    "hash": "113929529144710946232318979169588911251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le_bytes",
    "hash": "1367297652973613969015316766641913156759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_ne_bytes",
    "hash": "25084730306936425661814909722254142997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::highest_one",
    "hash": "58532685010633263925959054972815936875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog",
    "hash": "3912784778739511411611315974335927160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog10",
    "hash": "569632583942406451814510327463140377082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog2",
    "hash": "53066044996623437759385486861690240212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_negative",
    "hash": "441612349511995563810026180559420913721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_positive",
    "hash": "176340480064377207016766703838719159741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_highest_one",
    "hash": "58226775423846389936366946543457972568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_lowest_one",
    "hash": "44092891462796361593597672541319652006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isqrt",
    "hash": "180311815013910673314581648413609554363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_ones",
    "hash": "121184667885865535222218088638194699865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_zeros",
    "hash": "82364528155575023213340219831364474086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::lowest_one",
    "hash": "106177970788337623728457496274923891009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::max_value",
    "hash": "644163523482111762313129396769571337762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::min_value",
    "hash": "101287761139986126495806099987986755308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::next_multiple_of",
    "hash": "136279066719896593018084311305662067439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_abs",
    "hash": "2103087424221502632692951606556161271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add",
    "hash": "3323535904070767275982574960807271335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add_unsigned",
    "hash": "1019827591666192629312139562894365278499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div",
    "hash": "37728340799475376721353866353964961012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div_euclid",
    "hash": "31334930403359976926621406123462204385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_mul",
    "hash": "562078349825457206615187653496907215669",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_neg",
    "hash": "64998410348949013165534729523823375850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_pow",
    "hash": "15347599714153624668238150862833379506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem",
    "hash": "144616914298442453667905256785230647835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem_euclid",
    "hash": "14637287038249928726266907263957939581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shl",
    "hash": "1229009318470924733615893494833271085544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shr",
    "hash": "989479050475295024912779271245107837218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub",
    "hash": "1145574494293945762512073332723515485889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub_unsigned",
    "hash": "7203008704090651977172286425197550778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::pow",
    "hash": "89346303326884022164845773757851606934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rem_euclid",
    "hash": "827619765401002325616915779231572062657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::reverse_bits",
    "hash": "1286708409239280927010120294188243746891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_left",
    "hash": "25522336766240171718361610109813195120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_right",
    "hash": "117046867822749114110166080746481739639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_abs",
    "hash": "754996290385794552016118590481682092141",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add",
    "hash": "1658036740334905288213838048310209476415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add_unsigned",
    "hash": "102891123331711049878367350371190682678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_div",
    "hash": "809679172903012766512699580814851185228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_mul",
    "hash": "48232509605015369867761063347093800280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_neg",
    "hash": "8731009101551506214397976074907168990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_pow",
    "hash": "953989235830453405215789887410335122307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub",
    "hash": "694499704053814544810521260813181664802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub_unsigned",
    "hash": "1247929623232719167412748612097286116192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::signum",
    "hash": "1616689437289482254217733081604578933954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_abs",
    "hash": "495311757895323135315778797789596488659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add",
    "hash": "630161101356836055715735320645510229365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add_unsigned",
    "hash": "133700115920484210325270384047538100812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div",
    "hash": "552880010100846404615762219950020458808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div_euclid",
    "hash": "54128665865514744128694640495474372279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_mul",
    "hash": "1383957489464772055714552974806295720971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_neg",
    "hash": "70675752357156142412000310547634347719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_pow",
    "hash": "308045071649775856214482866724131001619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem",
    "hash": "95864743906998763410079540958866188714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem_euclid",
    "hash": "926520038640817421317324372368052718922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shl",
    "hash": "69667058189159861372059880381125586490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shr",
    "hash": "6980234537300339841870993781183052455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub",
    "hash": "166426532398747890164923285190856049306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub_unsigned",
    "hash": "75761642149458142162327024947985312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::swap_bytes",
    "hash": "172905496740855816391158739690949200194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be",
    "hash": "267192734254375279912089969706690575537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be_bytes",
    "hash": "1235406672081459961213366922236642253768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le",
    "hash": "101508725573005914656778255849512480969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le_bytes",
    "hash": "1050858592289852591617550930546883831450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_ne_bytes",
    "hash": "137302336531931239474382783916761312862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_ones",
    "hash": "151217848753755230311086273796353089639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_zeros",
    "hash": "91325220491002031981152825046636866262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shl",
    "hash": "1370246049902747852117947376179943673601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shr",
    "hash": "138100775009252863653020765415360059015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_add",
    "hash": "1350713811998717550513711315200786765695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_div",
    "hash": "137601281543495343983188126352650908264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_shl",
    "hash": "8832577356021736824442224870655350707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_shr",
    "hash": "171345071931623653359571468133970841623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_mul",
    "hash": "4938205617533350734458061955948324550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_neg",
    "hash": "101445464642493846677061784532715524123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shl",
    "hash": "1344057091101120024214462061354265885105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shr",
    "hash": "151039533468901907067873910910278321855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_sub",
    "hash": "242154577893116643916663615895023882518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unsigned_abs",
    "hash": "1079072279488074256514197865859528505843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::widening_mul",
    "hash": "32356560634864743034306384368999966745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_abs",
    "hash": "34353580557405377241489353781288473061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add",
    "hash": "155260046349480168144667722895379918583",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add_unsigned",
    "hash": "868472194304037053015990205023990883629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div",
    "hash": "38453134261034227793351269458805658712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div_euclid",
    "hash": "40652108795986330236097949825474647952",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_mul",
    "hash": "33078516569506472177133081309517332905",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_neg",
    "hash": "427948772593900246015617695218292297348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_pow",
    "hash": "1838684724797948219816417147464767565811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem",
    "hash": "850217165765182522112939272556259260751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem_euclid",
    "hash": "180186518197305996417352020990996297040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shl",
    "hash": "840076482748140882010294715766500361858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shr",
    "hash": "66217053097956154532492629080071277071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub",
    "hash": "7858545234940505117539855476375371758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub_unsigned",
    "hash": "16657600621328311289081197959100915253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i128",
    "hash": "341299086912803247616346511615443151625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i16",
    "hash": "30156506846790606736223765765232401858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i32",
    "hash": "64850789950800466512658935244057752026",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i64",
    "hash": "125126313794131856664736237981464578510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i8",
    "hash": "5135967430199160468920261282515254851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::panic_for_negative_argument",
    "hash": "447633221541583627413452389044665805897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128",
    "hash": "34285557725766075041694403907652556376",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128_stages",
    "hash": "66739728497054990116484168794270847198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16",
    "hash": "148131587498236735283254898947308266416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16_stages",
    "hash": "159501640769214524245042016289694267677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32",
    "hash": "458202149282102677113803150571638205450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32_stages",
    "hash": "955186324838588195716147025325337593981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64",
    "hash": "24758902444378642523526003927453574051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64_stages",
    "hash": "1305301557924694183912301541987188563060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u8",
    "hash": "60960868849511503248088905502240646288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as clone::Clone>::clone",
    "hash": "38138070809326056813274648859849705420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "35517804858554754765753608331752288609",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::PartialEq>::eq",
    "hash": "662275074378696123273697715385597969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i128>::midpoint",
    "hash": "118725858493553258061778013582842899580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i16>::midpoint",
    "hash": "179827104322190559006006729748298921968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i32>::midpoint",
    "hash": "112885184505775227411344202282795087042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i64>::midpoint",
    "hash": "1236911846164131033411242740521533295923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i8>::midpoint",
    "hash": "1806314289338502242812778631436190394808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl isize>::midpoint",
    "hash": "76650669777706349847438362145325134236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u128>::midpoint",
    "hash": "1339968946229866764617084945979056956395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::is_utf16_surrogate",
    "hash": "79790052907687203808123823924777316396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::midpoint",
    "hash": "70333124555803083698724319237077865990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u32>::midpoint",
    "hash": "1442757669858944772313258849104098439308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u64>::midpoint",
    "hash": "1175193678847869318211903326338808818800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii",
    "hash": "157342375234659354051153884526544597341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii_unchecked",
    "hash": "115229797083273352422457158100491949219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::ascii_change_case_unchecked",
    "hash": "163595600001382853907822330752148741341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::eq_ignore_ascii_case",
    "hash": "988028711998370698513075918543258556788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::escape_ascii",
    "hash": "896062857449265910110082576405472516888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii",
    "hash": "758800371710587469314073968176229651883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphabetic",
    "hash": "5138601813322156891155001322872760576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphanumeric",
    "hash": "44344231375078259393652290267886090752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_control",
    "hash": "85514849358641988452354051984579566974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_digit",
    "hash": "89633452296352964709599256705517159051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_graphic",
    "hash": "141615893453559366675599442700992029800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_hexdigit",
    "hash": "127639827262063024413401410675802177964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_lowercase",
    "hash": "1808592158708615847911831363091156489391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_octdigit",
    "hash": "67513390696532489506923807546048943469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_punctuation",
    "hash": "62863102658561508765692073348166081495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_uppercase",
    "hash": "69417484249274791359857467967200926715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_whitespace",
    "hash": "840557237266216613515959608352403941460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_utf8_char_boundary",
    "hash": "170905408305733982667355251913602478519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_lowercase",
    "hash": "115014031790079929662428883345860873260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_uppercase",
    "hash": "676196596857159285115644035301973269414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::midpoint",
    "hash": "1411783917792700563013159976723630335741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_lowercase",
    "hash": "1766778296466189972714376152058119054158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_uppercase",
    "hash": "125240937021480279979048134700113690516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::midpoint",
    "hash": "182971069895310127889608793246173155965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u16",
    "hash": "1586673572421338717815250260844044721964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u8",
    "hash": "113976926829195441887553509461786022633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::from_ascii_radix_panic",
    "hash": "1764182603656772982812317864128667365325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u16_full_range",
    "hash": "53615074053506259666676225221554984033",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_large",
    "hash": "144965560757975885004610559468266347767",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_mid_edge",
    "hash": "677583862090210980621965216642710183",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_small",
    "hash": "1523027594143485408015754458628426299166",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_large",
    "hash": "136921833043314816724363633120494360736",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_mid_edge",
    "hash": "943573477373511403916830175918260829126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_small",
    "hash": "400771675419757630616250575997233950541",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u8_full_range",
    "hash": "49338580537361720947394380882666389202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i128",
    "hash": "1766107398249597652313541760474328357363",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i16",
    "hash": "638780313079037733917554433921829635551",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i32",
    "hash": "613899174872013535510035067124726923058",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i64",
    "hash": "17730826143348781471794749902853334503",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i8",
    "hash": "79345787519792293703780670701254088279",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_isize",
    "hash": "132368094873049466747036956769014964831",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u128",
    "hash": "148794754145971742811466049578288505118",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u16",
    "hash": "1453952249744041961514107147562369882219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u32",
    "hash": "149736332476344612517394749020742764810",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u64",
    "hash": "63548999674048527021206508652584118038",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u8",
    "hash": "150726283336619690372191673037258941793",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_usize",
    "hash": "796816521418143175113626778347185903590",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i128",
    "hash": "278172868268344010111387302596040852130",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i16",
    "hash": "159295388030785314294408782475537173141",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i32",
    "hash": "19893250824909951110120718338972607818",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i64",
    "hash": "586908104217582529417109283419794460289",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i8",
    "hash": "109897885187078961151738459609373235420",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_isize",
    "hash": "53951580558833404511163582317962782278",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u128",
    "hash": "1667350677081250371812780597308254847372",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u16",
    "hash": "535212358444454600917518602496616624290",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u32",
    "hash": "1796963595557852154410808887780179993765",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u64",
    "hash": "709359502374919316417177086388595918807",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u8",
    "hash": "1421510613512425723116188258552213902207",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_usize",
    "hash": "117913295127588059041219723422624259030",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i128",
    "hash": "12310983877812269143970341547745782871",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i16",
    "hash": "165711407183561797319601126041248739856",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i32",
    "hash": "49523507609155596244261862090346001863",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i64",
    "hash": "37081887555816364695529425261537410505",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i8",
    "hash": "275774590270760181710695272347813644590",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_isize",
    "hash": "1587518822369751335812760006492732105701",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u128",
    "hash": "88459780252156380421229336851541134790",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u16",
    "hash": "718086813796972402915382419512364603143",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u32",
    "hash": "160940245155235052914014254049667143436",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u64",
    "hash": "127816984695285529595178666074549360160",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u8",
    "hash": "1135663434056648722117382582605376711809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_usize",
    "hash": "52311636559753448015885927781871368734",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i128",
    "hash": "133093111532896618343227516735159507679",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i16",
    "hash": "7024473208197181990403170871916663272",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i32",
    "hash": "16992294588613748012082322793032237015",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i64",
    "hash": "1136588084782271281513384278809176336696",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i8",
    "hash": "14051425957338776559880272571140169917",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_isize",
    "hash": "1479452467208899776711657174288891917836",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u128",
    "hash": "17121237189504192593875943931468362688",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u16",
    "hash": "102795506212440678831392778117121972226",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u32",
    "hash": "66301417724244194555549759806220098500",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u64",
    "hash": "77048432393829588643063746062598815654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u8",
    "hash": "64817357001448750818521361145468351590",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_usize",
    "hash": "28377838160332450499460949153487532207",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i16",
    "hash": "1744956840784225057211956217836976079627",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i8",
    "hash": "1811751845643676655312073646682767720204",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u16",
    "hash": "47969007055501323561120678700570529996",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u8",
    "hash": "9117438799946535013563285871140055637",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_neg",
    "hash": "172960236928282776836484797263887887424",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_pos",
    "hash": "1094208805025597781035617422966632637",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_neg",
    "hash": "584373016467374222310829757761131880546",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_pos",
    "hash": "377059382065628623715905486482363526892",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_small",
    "hash": "159797475633400175985707736714764204686",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_neg",
    "hash": "55573601202284127283111644995673346117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_pos",
    "hash": "1744180355703053711530890444445229828",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_neg",
    "hash": "473955927232214298096715256217799230",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_pos",
    "hash": "262189923450244135611703767944666770609",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_small",
    "hash": "133092056241682730697936450144915160298",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_neg",
    "hash": "633013380818602287414605259173840876107",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_pos",
    "hash": "115397585999036117067319606763679451008",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_neg",
    "hash": "889887494144199109718325572638105912749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_pos",
    "hash": "179563119956013979246127871815300993552",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_small",
    "hash": "138003792667252903706942470633217151390",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_neg",
    "hash": "18074473916777800677119038107573508555",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_pos",
    "hash": "19430715594234947091275911469422092826",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_neg",
    "hash": "85777474211420542423111541465801932057",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_pos",
    "hash": "321799403163903305911744286623354072137",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_small",
    "hash": "1001413482835619000210570915098704863819",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_edge",
    "hash": "374717028137013294415766049293145767610",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_large",
    "hash": "390546435358409469515437880989052366711",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_small",
    "hash": "60977108809731197371246342168093601670",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_edge",
    "hash": "129022737151100476221429635026935047339",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_large",
    "hash": "1367732985436908795917772784183552737070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_small",
    "hash": "209928883305981808513361023753631595637",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_edge",
    "hash": "1314695307607216351112352357344492550721",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_large",
    "hash": "507644507043675299416228489976619447088",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_small",
    "hash": "178637575608009385814333915912154545519",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_edge",
    "hash": "776039618287232434413009728216331177252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_large",
    "hash": "1231648710755496639502366036772579218",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_small",
    "hash": "273251243774518853214807880775722709368",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_large",
    "hash": "951692521390229319313037108746941185598",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_mid_edge",
    "hash": "15923219612104124896355290275637443093",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_small",
    "hash": "173216499333333477694564083276186616550",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_large",
    "hash": "16008707127524193108611316625197937058",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_mid_edge",
    "hash": "71999535709448136678921052142821840077",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_small",
    "hash": "157440083248273061164223176305107111598",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_large",
    "hash": "181505757550736766326619561496933757690",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_mid_edge",
    "hash": "54119817384552261881061361380967699850",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_small",
    "hash": "213641480478439361711879114148906316943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u8",
    "hash": "141690836579266773828126485218618117473",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as clone::Clone>::clone",
    "hash": "547529884554795185213503294046604198166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "657238360306816756217138590884262825403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::Ord>::cmp",
    "hash": "35625119464217248242707209573348038104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::PartialEq>::eq",
    "hash": "42205199488613790039931280811009634324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as cmp::PartialOrd>::partial_cmp",
    "hash": "87069162141081345704595351319099471432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::CodePointInner as default::Default>::default",
    "hash": "351854801552415395613396951977143260491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as clone::Clone>::clone",
    "hash": "130260163257831231661181744634157531489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "329132065827033569312001165327952153400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp",
    "hash": "1146570384903959533610649481180114308008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "58297757308377721723653430431359384619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "156513706797644713472920205271211570457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as clone::Clone>::clone",
    "hash": "136788494381657465026702589533761172242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "126182887731624466552965315148730945468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp",
    "hash": "121722638255063894977111397071332734678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "485308907394493207214860484740845740296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "1418721441568224077612505101991730542249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as clone::Clone>::clone",
    "hash": "7316760238328643291450460170323114796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "847809843468096518417101640711186155016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Ord>::cmp",
    "hash": "12272874884680288726617854333721840052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialEq>::eq",
    "hash": "14124548386454289006595217407936017995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp",
    "hash": "42800782563270888976682317232258164000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as default::Default>::default",
    "hash": "7491658729142438251950090353170692194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as clone::Clone>::clone",
    "hash": "24305943216781507703181320495852026442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1122015216536977037714809497619508940243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Ord>::cmp",
    "hash": "1011416943413051914813538704294290504462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialEq>::eq",
    "hash": "1760123889643607024311107943241248750012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialOrd>::partial_cmp",
    "hash": "96206383828600585603612398727181968961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as clone::Clone>::clone",
    "hash": "376990623522919887913483925469276793907",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "92180977522020171822312156051212340699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp",
    "hash": "416775039274211108312305495851870314961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq",
    "hash": "1750241060533132881915436811161863038273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1319135479400250955917705370477946021931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as clone::Clone>::clone",
    "hash": "1380752771936964622214815245512968760358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "102023715931964653638671751878807782420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp",
    "hash": "49114002810414922221205043465308555216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq",
    "hash": "677727736365088989415947268232606840507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1802331095321426398315084592474299466598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as clone::Clone>::clone",
    "hash": "161265720721628352008900982257095227393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "410373643314677068212368705475768712271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp",
    "hash": "1086301885373926066117778498906937195344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq",
    "hash": "9810170845630624752011508490121844974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "149603911152432099492140044865854422486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as clone::Clone>::clone",
    "hash": "178573451063271557717753258285016221213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "177116637920204991662180734184310708662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp",
    "hash": "95349354834376348432445714537908630888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq",
    "hash": "137577310392875302932469093234564746859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "12009791098126371242470621917473340517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as clone::Clone>::clone",
    "hash": "68734847054697733132157276997020845402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "42362757587951991407553999304302918832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp",
    "hash": "1488995088475622264511477611769916546001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq",
    "hash": "172117054183963467926619565998943144311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1705740104296491581715741773560437845200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone",
    "hash": "335863427241584261316891127608009340880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1278837861786431900711788476381545842868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp",
    "hash": "160084929951866264274539160173890893798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq",
    "hash": "1819185099799939982912352332678600475072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "272146668749897823417745188698722433123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as clone::Clone>::clone",
    "hash": "177038454855349628773921320190909598675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "234396594076741214316413790573553203300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp",
    "hash": "86974897882319390428050498403076706655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq",
    "hash": "395392616995226603715587695623343610637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "62870469311600464826870389107960463034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as clone::Clone>::clone",
    "hash": "23911721267680243902671864732944316102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "503072538232026062813814845106029902247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp",
    "hash": "39418779781398230719778816589198368098",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq",
    "hash": "1269180596674799884910463386201543178702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "179574562178195745229188452898540292742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as clone::Clone>::clone",
    "hash": "62912098898121413516603251637953627100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1764295842041942201616861570876342806479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp",
    "hash": "68517780434663349746650090340360971266",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq",
    "hash": "133685103181038045519295761457786930048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "683270276857550753215056978329480230393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as clone::Clone>::clone",
    "hash": "57476325778453791049111004303521026393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "592641779959247927511204499404739140109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp",
    "hash": "549667738925363848017580095034160193471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq",
    "hash": "126322703106409210951579460353934572147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1579714628468571640014196957875635930798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as clone::Clone>::clone",
    "hash": "32401247445884349681834377919067560109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "63706265927595693954987530639938583334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp",
    "hash": "1714211319104152307018222242963506835956",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq",
    "hash": "77632628362409426911074344968128302851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "88282393141432009059844877118587446352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone",
    "hash": "69267363667348276953645691528519062923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "612406203379376210914184660936520675610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp",
    "hash": "1429048223936521702816697653486658471433",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq",
    "hash": "92277888893719856546550168292705459347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "180478403492687816461515736414312883340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as clone::Clone>::clone",
    "hash": "1520420303832705438617162956769739529187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "831920621608879435514111650492010953500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp",
    "hash": "663587606081048337517454529201075781080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "1136385908265561615015751200701102075334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "164701500113069592987732838962225036729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as clone::Clone>::clone",
    "hash": "356641310758392203518286306980189857981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "21404756006682240601680541403762488961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp",
    "hash": "104703243318504746581040635173276444579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "164824275939231227714652728935987228177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "83786485708277646064696104068317965231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as clone::Clone>::clone",
    "hash": "117060816845408175911551408760687161979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "103771932907682537623292547417870916030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp",
    "hash": "90104338841661430587569520465320746058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq",
    "hash": "1218669554724966593712707659477451995522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp",
    "hash": "114931462477573390834465069502401138267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::as_inner",
    "hash": "107496796079202766681632399080957069720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::new",
    "hash": "14656247106766538210133043946558880503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::CodePointInner::new_unchecked",
    "hash": "72906633798708398514741480268678697739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::as_inner",
    "hash": "840518769854354855816047102508650772484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new",
    "hash": "52708999169030492906921636939240568961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new_unchecked",
    "hash": "928137562900233300117763224209176727538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::as_inner",
    "hash": "126100376589909515872187838964883922671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new",
    "hash": "1473836815976317712610646119988398506381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new_unchecked",
    "hash": "38990836088579866315622821884004083750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::as_inner",
    "hash": "27460360985597728751338915468532901532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new",
    "hash": "163998912568719548117232447345374957605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new_unchecked",
    "hash": "950957549956578784317830715657615300922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::as_inner",
    "hash": "147797036764499939439829141795549574955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new",
    "hash": "381616526107132428417262443857784367913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new_unchecked",
    "hash": "178075817586512906762480103651642610778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::as_inner",
    "hash": "95411387308345243557098707975127330735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new",
    "hash": "579555344641125729018432271083819467794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new_unchecked",
    "hash": "101414740034067659531213866050803907781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::as_inner",
    "hash": "58963582119714697109840570832796201469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new",
    "hash": "72835741852250203948983046089083560544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new_unchecked",
    "hash": "43028294030189282596872450694186365307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::as_inner",
    "hash": "172200621667727698253850181548353534854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new",
    "hash": "79575876144189951174067417023636300744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new_unchecked",
    "hash": "890594276805505117717998017081090587180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::as_inner",
    "hash": "99283088551408584154945769089223918233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new",
    "hash": "1405326562118444713817573877287113214752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new_unchecked",
    "hash": "137500526862393174478412207114749072787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::as_inner",
    "hash": "120117335716611505875386768970190666128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new",
    "hash": "381528343051682126510914514785083735120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new_unchecked",
    "hash": "102359307275430071517160387479704998534",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::as_inner",
    "hash": "945089393287905869013756238019492501883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new",
    "hash": "306472900339286542415199936790369485039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new_unchecked",
    "hash": "37418358478075222893836633533258439623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::as_inner",
    "hash": "1133708912525550893516468612402922863161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new",
    "hash": "638058538781887682812083798376672631683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new_unchecked",
    "hash": "1830689747256138632713956291861745067179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::as_inner",
    "hash": "15293534662332430236978729792552919598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new",
    "hash": "7153330048493753244480639526488451390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new_unchecked",
    "hash": "754427099293165725662640226379977426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::as_inner",
    "hash": "1006262637901002925815999979203524008519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new",
    "hash": "154332375968080907924343273853860680614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new_unchecked",
    "hash": "45214312522516704112566854796448624594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::as_inner",
    "hash": "18861947794361669911499976143624166359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new",
    "hash": "101959911468694108645862633136283326996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new_unchecked",
    "hash": "69887696208313239405056992472486899025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::as_inner",
    "hash": "1483842740554749988910771165984793051247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new",
    "hash": "69991688846476776068110092794180252034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new_unchecked",
    "hash": "32136505081749033161078988256937895027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::as_inner",
    "hash": "556649395834550201118244319595347455646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new",
    "hash": "63193008151130446554735682822152365278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new_unchecked",
    "hash": "87886531975366675896088514850635847333",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::as_inner",
    "hash": "145234670112517999774063514593638544423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new",
    "hash": "151846636834067149023479317943326282600",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new_unchecked",
    "hash": "45485188691913999741738462281311794251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::as_inner",
    "hash": "129970642203971815423271331306400021893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new",
    "hash": "1200051237088118386114949299933383170513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new_unchecked",
    "hash": "5408723889024818075658764342040817321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::as_inner",
    "hash": "164033130605793518138633321607675241591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new",
    "hash": "169284624762524851541613278171841773701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new_unchecked",
    "hash": "111930123754645271738740113181892812490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "181912669119563282317142029499283337232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "93551442235240602203252745001275618015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "55438669199704398491325673505830425047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "948934005239137444216228405315298270008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "253582462076014792316867197040883553405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "14993129664820744436311531653216507092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div",
    "hash": "511941123879300629816009364076348633743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div",
    "hash": "116163773132339038395435253225973066435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div",
    "hash": "82430740292809456879717929564744626760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div",
    "hash": "1580579314298925216215202472093333478177",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div",
    "hash": "122264676931729613737234743775117770021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div",
    "hash": "1805480804680761936118240975203772937225",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign",
    "hash": "1467066821514662832015636665253863232334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign",
    "hash": "52796068646853806631482574247418974565",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign",
    "hash": "182966819049661857909522639503099958420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign",
    "hash": "283449729836346587914708706552279831902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign",
    "hash": "124361687919838683453617624188794813028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign",
    "hash": "363508802737423652210212318702076890599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem",
    "hash": "157203399003369982179943446681346818078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem",
    "hash": "83297228639256638333898668611153380822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem",
    "hash": "57661005908346804526338996699233872923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem",
    "hash": "1459322799767101921016128981136491393056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem",
    "hash": "303481508202112819416698930830432577589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem",
    "hash": "102965283520156468668223727903987626159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign",
    "hash": "170746506544319499514443529605648678671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign",
    "hash": "1298681494087682468716475895433140260210",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign",
    "hash": "443023254772587165014035028201267176603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign",
    "hash": "917346905230565796210937783724421061400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign",
    "hash": "1100334174388748766413238645675261862812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign",
    "hash": "359314622205636101415288263552637251190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::abs",
    "hash": "23737919598044711724594102989862216829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::cast_unsigned",
    "hash": "7357419269426879078188628977734067954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_abs",
    "hash": "173551199490773755723509585038636643281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_mul",
    "hash": "73398874834718823925839469294778723865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_neg",
    "hash": "168078131098755996515394273698606724201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_pow",
    "hash": "1073995961132574767118331673026166998484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::count_ones",
    "hash": "76843279974707365525303745821298609033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_be",
    "hash": "648862612576635188417816525642939864716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_le",
    "hash": "694146745035208779711894574176100262733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::highest_one",
    "hash": "1274897598824915385612153728013493161639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_negative",
    "hash": "164690157589120184882262294840736589524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_positive",
    "hash": "737028311436115693111078837542380851781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_highest_one",
    "hash": "924191510575211265617042555725083762059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_lowest_one",
    "hash": "136721907735171092206154820945697289932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::leading_zeros",
    "hash": "1313949075455282400018302974843200582007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::lowest_one",
    "hash": "302309220950109380614822089422055477623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_abs",
    "hash": "560649739945567854515797574186417678939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_neg",
    "hash": "203424905200959157615200181506321890497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::reverse_bits",
    "hash": "59897941609998136112263551788517456768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_left",
    "hash": "5158769035594805820931533391089477156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_right",
    "hash": "149275891825509949657330711657750762432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_abs",
    "hash": "120453189461710356644850416908924358260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_mul",
    "hash": "526910462992019559910335657105880659467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_neg",
    "hash": "1204092313878249053117553983444981629039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_pow",
    "hash": "113030802241950772815146213876610638221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::swap_bytes",
    "hash": "128270698315220454981436449472121312633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_be",
    "hash": "1610326686093770093311317636024157805300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_le",
    "hash": "324802561814830898116764028681848823911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::trailing_zeros",
    "hash": "143028188676802180158126888610540680878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unchecked_mul",
    "hash": "135121737093955928849796717657293501035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unsigned_abs",
    "hash": "645251554530410357416759735524332214106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_abs",
    "hash": "49261007718130554088345448676916862570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_neg",
    "hash": "403611336035373839213696347370973651232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::abs",
    "hash": "1651065863358342434112578106419453084450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::cast_unsigned",
    "hash": "392299819510922071710643488588913869330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_abs",
    "hash": "56696910760498498052948142181848509434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_mul",
    "hash": "8870933510250196082096655919973914743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_neg",
    "hash": "127047644278392616285694228036992854491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_pow",
    "hash": "15220319506273353107536509009732665572",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::count_ones",
    "hash": "470567389088620738912093976468292292945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_be",
    "hash": "104540996440204970258652582324302404402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_le",
    "hash": "149373525665778311156542143239951019773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::highest_one",
    "hash": "105025975062855525185550200910319229660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_negative",
    "hash": "189658360974475075011762190139405443387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_positive",
    "hash": "449527288740230702515512276947416773783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_highest_one",
    "hash": "172273843298031617515643734547195665067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_lowest_one",
    "hash": "330512285308307865615903077632561843312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::leading_zeros",
    "hash": "1723127097372197112537334846174047553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::lowest_one",
    "hash": "631190763836708329012824720303133261856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_abs",
    "hash": "638851331994051957210493977460036765845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_neg",
    "hash": "1676077228839530178818238314353420996640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::reverse_bits",
    "hash": "73280260657453627618553484495818530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_left",
    "hash": "1072737150951978845515780254182673889712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_right",
    "hash": "1553123067294875711816839027135469200034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_abs",
    "hash": "15677714170422847923224568979093935933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_mul",
    "hash": "1091142553949755397414600299446223484052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_neg",
    "hash": "123668845113093621414635197249657186123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_pow",
    "hash": "15018643584537753731595673759952654156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::swap_bytes",
    "hash": "1499883600697370006812746924579091048395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_be",
    "hash": "1499183418159445255216778374628346078053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_le",
    "hash": "83527372516673477034985057917803066775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::trailing_zeros",
    "hash": "171633142147326882306858874270708019932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unchecked_mul",
    "hash": "114094373437975742013266697316951044938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unsigned_abs",
    "hash": "780039356473780634689973050556532260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_abs",
    "hash": "1472763841365974511615133542032249965794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_neg",
    "hash": "29684829759177614747099461833242092625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::abs",
    "hash": "1046380576641021001215161417530806696312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::cast_unsigned",
    "hash": "71511629528669841544786560281187530529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_abs",
    "hash": "148367365983176007741021176111042472792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_mul",
    "hash": "352547884679088480513141776230109816715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_neg",
    "hash": "97695153269776863765459075771574206066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_pow",
    "hash": "667410039591228454313007987336056394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::count_ones",
    "hash": "109805743578187520302125010163317677412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_be",
    "hash": "234750731987269426410180760923442566439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_le",
    "hash": "152658421684547636701990756369219574050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::highest_one",
    "hash": "1420664576340259383916917591391089342332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_negative",
    "hash": "95324704794787912765700900671458369032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_positive",
    "hash": "675857648352058251014229421601289298121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_highest_one",
    "hash": "43443290030466577916158654705037679307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_lowest_one",
    "hash": "1598213903985842734212928117957854723819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::leading_zeros",
    "hash": "1601543779408808670417289068684663405120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::lowest_one",
    "hash": "1606243380003230106411338680647247627731",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_abs",
    "hash": "1177314906143756499811167389497297084824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_neg",
    "hash": "10209407950435244989698065063123004895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::reverse_bits",
    "hash": "142077720906759265266670642902983610729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_left",
    "hash": "39804906527341348531740870260088830979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_right",
    "hash": "152318587802073106085451452189889555781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_abs",
    "hash": "607924855711929359516207783464009270321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_mul",
    "hash": "1172193411111356426913600228012897271003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_neg",
    "hash": "89465891700851170545286159194781279608",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_pow",
    "hash": "110254591451960885641653427187650737020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::swap_bytes",
    "hash": "51636598374430213712692317163056890454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_be",
    "hash": "88151506421338023129569059046556954158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_le",
    "hash": "954282767090946539112168596802655907803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::trailing_zeros",
    "hash": "105229746513868391117644978154210381951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unchecked_mul",
    "hash": "19279471630224496133907005692581628500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unsigned_abs",
    "hash": "858839677717841697016330747609827052792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_abs",
    "hash": "1246323397542731053913661877366834305060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_neg",
    "hash": "141511340305336693061011747029801894788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::abs",
    "hash": "1623952146456987303014501716882561135989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::cast_unsigned",
    "hash": "172405700369340074326686555835647179226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_abs",
    "hash": "1791349822796957267011175548130685673459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_mul",
    "hash": "18066007007778402735542371809621761305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_neg",
    "hash": "80448728457322975511560600005090978431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_pow",
    "hash": "1777703544852032045014701558129389511688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::count_ones",
    "hash": "2859147747489694411782122534455702169",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_be",
    "hash": "555578364216661092413348925373445738578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_le",
    "hash": "90562907638875921211234963041982372304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::highest_one",
    "hash": "50002342661843729586256737954178915316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_negative",
    "hash": "5277421248437516513041174965607569344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_positive",
    "hash": "912048876731413901614834937459216898502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_highest_one",
    "hash": "1216713638293870028714579012511281181504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_lowest_one",
    "hash": "119174517970273268386720208625018885172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::leading_zeros",
    "hash": "118881588087385606606406170230107641755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::lowest_one",
    "hash": "16881820795273826914536292240165713355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_abs",
    "hash": "92962035623669379252981078482124647582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_neg",
    "hash": "1089810311815728907714000265377252874223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::reverse_bits",
    "hash": "1588081940420886963612076835405018811846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_left",
    "hash": "956426774393335140614338877828593838593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_right",
    "hash": "1740165083243012024313858560607798707371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_abs",
    "hash": "1466054828542989477712813413871518688201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_mul",
    "hash": "1417019635715347272513588426767404172789",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_neg",
    "hash": "60735522179827473483293803180317525454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_pow",
    "hash": "553921979418192184318113731662308640781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::swap_bytes",
    "hash": "144251062070482220994342370030875592695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_be",
    "hash": "1069434427017785098912724549655336486860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_le",
    "hash": "839461433997028621516138807369640691589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::trailing_zeros",
    "hash": "222320113874214973715128051617972102093",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unchecked_mul",
    "hash": "174796969124794043872832944450978486794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unsigned_abs",
    "hash": "152089947264957558315746227023487528273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_abs",
    "hash": "4306299126409808717492160940189227781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_neg",
    "hash": "91937786065462197552893918912140057692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::abs",
    "hash": "25784090036304615435657758893731379754",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::cast_unsigned",
    "hash": "153496201864401676609879390977617254690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_abs",
    "hash": "19305173841839541828622116477349933877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_mul",
    "hash": "1433695267452680569813659336861517768485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_neg",
    "hash": "164480701991909752713655758562701985952",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_pow",
    "hash": "18795840208609323391684465391421915105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::count_ones",
    "hash": "1508312457504507334917942643972338969002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_be",
    "hash": "500456560535996448313534291756809955148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_le",
    "hash": "44435191854631276262784720929114359280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::highest_one",
    "hash": "96198677176678357544779526850810474929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_negative",
    "hash": "1026435939127408651017043936275474381064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_positive",
    "hash": "60175013843611277218638059829262887415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_highest_one",
    "hash": "16084579151142915901208187280490385390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_lowest_one",
    "hash": "141870213197619926905700160154042489825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::leading_zeros",
    "hash": "263941787361342372713919047113927743927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::lowest_one",
    "hash": "553638384526087040716822979431290757563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_abs",
    "hash": "1783141674582826682017822541197590317914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_neg",
    "hash": "1615076022593559844314261355012906483125",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::reverse_bits",
    "hash": "160367952695933967082663442683663944158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_left",
    "hash": "5904641252036933669924052130947246675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_right",
    "hash": "1183472259782495056712141934123279128595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_abs",
    "hash": "80314522672874159155942252205945037300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_mul",
    "hash": "1764863423684315993214402041584197706642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_neg",
    "hash": "1713710669807879176912782993073505641167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_pow",
    "hash": "159255715238074222008932738028925991833",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::swap_bytes",
    "hash": "113795396138960554442425875032335793940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_be",
    "hash": "166828798549806027841899120304049852021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_le",
    "hash": "1833090893673128665617888924394086729343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::trailing_zeros",
    "hash": "82181843213511667638731957127282500342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unchecked_mul",
    "hash": "84210329715257019605298395903479485601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unsigned_abs",
    "hash": "26050927654979272964283710506034585283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_abs",
    "hash": "102009277313029960266184377858999429696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_neg",
    "hash": "129640098351820563964651399044868003125",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::abs",
    "hash": "7669788007520588002322081773780917264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::cast_unsigned",
    "hash": "25080470501290645354464324365247543156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_abs",
    "hash": "1641853823535035281811352944718613371523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_mul",
    "hash": "135212846355966412461348657767102252933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_neg",
    "hash": "1809981434265635414413579597313652333036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_pow",
    "hash": "7193479096786677684477220978198727965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::count_ones",
    "hash": "6771512003150755210739011894274937808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_be",
    "hash": "567397862023942113418268517276798609139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_le",
    "hash": "1034974760164465672714701200010675539849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::highest_one",
    "hash": "365387806201086344216066490868306860234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_negative",
    "hash": "1392285293973063250710113558619683101730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_positive",
    "hash": "1398406689888387615810595275820506956289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_highest_one",
    "hash": "779934073829800886211960340897276419612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_lowest_one",
    "hash": "80094013902014623507910881621808157823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::leading_zeros",
    "hash": "13873662565776691708911681512968551567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::lowest_one",
    "hash": "1265444866518587202415810616554976803228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_abs",
    "hash": "447864472754044387013273800655956048115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_neg",
    "hash": "85833166321893140448854994992418563954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::reverse_bits",
    "hash": "1391123256845097620811090007038931690265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_left",
    "hash": "66912809756759456639754899950570882981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_right",
    "hash": "581980736653807585917739594332672119822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_abs",
    "hash": "118299122252520518818335575416743924054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_mul",
    "hash": "9103930455409023047984984629566983086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_neg",
    "hash": "164723625415446586882432260517340302580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_pow",
    "hash": "138400423645260908410609358878586639454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::swap_bytes",
    "hash": "1121271341078138104510947347514950851658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_be",
    "hash": "97099116196211857931166772962711275569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_le",
    "hash": "144303893201999686786887171950208830005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::trailing_zeros",
    "hash": "136274682462707083215785184595416541249",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unchecked_mul",
    "hash": "21284589289200748412669387274075589683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unsigned_abs",
    "hash": "150919250618101908576847529634503625581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_abs",
    "hash": "18040225277377893878690145014008804159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_neg",
    "hash": "183263999600781709997108419089818749872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::cast_signed",
    "hash": "11451987428244815353551628283233643763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_add",
    "hash": "175790287936082815261152693740943154850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_mul",
    "hash": "89130002053448512375068244425021826800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_next_power_of_two",
    "hash": "116959150104623070733429869307379769095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_pow",
    "hash": "323781066637382397311179188235462998284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::count_ones",
    "hash": "169212672726146092273892908369815161389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::div_ceil",
    "hash": "1796019419864464583512132912289977917962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_be",
    "hash": "13513137780887310756471449098851520664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_le",
    "hash": "787241832907736931211595385539301052403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::highest_one",
    "hash": "1698645770470711919214671023212132380497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog10",
    "hash": "304534819715815640710284249928759909406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog2",
    "hash": "135604424792153684877188191997980443406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::is_power_of_two",
    "hash": "1671891765888098665112039932428209680440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_highest_one",
    "hash": "777709689949482122017603087250433148241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_lowest_one",
    "hash": "161550242545607830608765922062346137589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isqrt",
    "hash": "62505045313270224228071648458055848898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::leading_zeros",
    "hash": "373307632430390614718200683597725388687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::lowest_one",
    "hash": "133041853937337840542717275620753552731",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::midpoint",
    "hash": "8441382724072782725152649935506835244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::reverse_bits",
    "hash": "125676154855103963295850673647987577630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_left",
    "hash": "1370019499497032224912359031238660321645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_right",
    "hash": "539499524121210181415576151016721063419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_add",
    "hash": "1414827110484342631217303012545091803677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_mul",
    "hash": "935393556222541154411408998360556372621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_pow",
    "hash": "756609818403695633413452221529755301707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::swap_bytes",
    "hash": "109045142727713460048750856579522453334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_be",
    "hash": "1153883449070484505512258848214012782472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_le",
    "hash": "1444519382150540497216782845424184828019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::trailing_zeros",
    "hash": "175499730691702847876178169759196365119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_add",
    "hash": "6188983748770332680963690126553666483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_mul",
    "hash": "1834519067984488202410068037454998960456",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::cast_signed",
    "hash": "23402119006402369510998206338650069961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_add",
    "hash": "712368832590253661716863303906062112089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_mul",
    "hash": "48466992330463169415598813815268549490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_next_power_of_two",
    "hash": "778262339420447930410935578464295107555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_pow",
    "hash": "1501983897304383488443351300149513836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::count_ones",
    "hash": "87509631546456422532675519980325554375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::div_ceil",
    "hash": "54371092214097879407777431852147946843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_be",
    "hash": "26844792640828987515378502058851473061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_le",
    "hash": "104032678610358805376670550463210811149",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::highest_one",
    "hash": "86182145371880733848319515059021162873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog10",
    "hash": "16906962046236246067270044149748063756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog2",
    "hash": "81911179681771240228082638866776637116",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::is_power_of_two",
    "hash": "593460162751729537911844753310902148646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_highest_one",
    "hash": "175677020938515773839491583551584424058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_lowest_one",
    "hash": "151251510088251620207726230751784632551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isqrt",
    "hash": "1132001593479633266117251178903526749211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::leading_zeros",
    "hash": "195366786575419744811650464461782000153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::lowest_one",
    "hash": "1370665293927005894212812737005143839545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::midpoint",
    "hash": "702313076268124604210428316013367970546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::reverse_bits",
    "hash": "165287643817988817775788820194914527455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_left",
    "hash": "173625776565259361912788027262656401797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_right",
    "hash": "962558185158637324714703446746293809639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_add",
    "hash": "660245207341069622317296466291940134163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_mul",
    "hash": "175827324034752023175858033072954220035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_pow",
    "hash": "400821677314475193614785408892619047733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::swap_bytes",
    "hash": "520190994795981841513613618927308097484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_be",
    "hash": "1484155453392123821015052062844119259069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_le",
    "hash": "32787143033968651128412291407900996964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::trailing_zeros",
    "hash": "91030792098121816156946524322053247367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_add",
    "hash": "175411979868074737316713953271833514966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_mul",
    "hash": "1344648193863779941912913733798224652558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::cast_signed",
    "hash": "1460024672806897726111177673321154983115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_add",
    "hash": "599601721298341394712880253122389977287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_mul",
    "hash": "576230554749761003117744499951325779510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_next_power_of_two",
    "hash": "8825356958335328550565811060784905320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_pow",
    "hash": "811217697079400154910271572807763331841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::count_ones",
    "hash": "83819784576125417848970143689336891231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::div_ceil",
    "hash": "90916115800943110856050390576068424596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_be",
    "hash": "132125374899285033384394498696441025263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_le",
    "hash": "129021205693734779222480651154288882949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::highest_one",
    "hash": "187260257580941186711763422256346709242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog10",
    "hash": "159031969492893890911115956273580598197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog2",
    "hash": "711331408230061058510143181124449542544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::is_power_of_two",
    "hash": "108457217075250801307391191681062135284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_highest_one",
    "hash": "112913584358424670775398218107735986696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_lowest_one",
    "hash": "72419510081626815428452751462285532747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isqrt",
    "hash": "18187469241227529967958156177059888683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::leading_zeros",
    "hash": "8519184813837493931929929104770129184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::lowest_one",
    "hash": "42800104288322201417826413040852844614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::midpoint",
    "hash": "101158761923237115228603004722531515973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::reverse_bits",
    "hash": "163431830662536664576444910594061642729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_left",
    "hash": "820948646973988224211043062356979914730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_right",
    "hash": "156299032057371922391823606644614908338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_add",
    "hash": "1481527181718427417512664055062698501960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_mul",
    "hash": "119613664762025011662107993215296150717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_pow",
    "hash": "854459153043798152212987350571214632662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::swap_bytes",
    "hash": "109000616303567966126093084792582373950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_be",
    "hash": "790570475888898928910633813325436609873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_le",
    "hash": "12668186065786044651078244427376617885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::trailing_zeros",
    "hash": "118025403372247076915988679171532009803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_add",
    "hash": "24970481110111507115520962030262010013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_mul",
    "hash": "351063953851471332612301417029609653959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::cast_signed",
    "hash": "739574924225659537014475964176759816566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_add",
    "hash": "64540353436507804116669386198881838129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_mul",
    "hash": "1098707419498066974110153631004792115190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_next_power_of_two",
    "hash": "1201893529386065865613030265381718381278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_pow",
    "hash": "124078782218019438154568408504711860523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::count_ones",
    "hash": "1041752668510322190665106823963897575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::div_ceil",
    "hash": "27706029153575178994213122856552361902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_be",
    "hash": "385204734244656096213684970445340389926",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_le",
    "hash": "174128850855336591265574836733174662965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::highest_one",
    "hash": "141737145230320737538132394312521186023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog10",
    "hash": "137468982977476621512897785669074927269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog2",
    "hash": "34213772702428874865800994290925561905",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::is_power_of_two",
    "hash": "1044820054289752951517978811329915185737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_highest_one",
    "hash": "92407160390235855145372874960674530162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_lowest_one",
    "hash": "1808427894572939335710364116300487737889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isqrt",
    "hash": "63509552442574572943288324549458245871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::leading_zeros",
    "hash": "803108651769351160711710050398115264062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::lowest_one",
    "hash": "1123079755941681151116961044058994678535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::midpoint",
    "hash": "1010389557248644196413723575665281423506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::reverse_bits",
    "hash": "1391197329378070692316757879222904704123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_left",
    "hash": "46862217649203762885883563588329344545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_right",
    "hash": "3391138322456967080331356729966170975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_add",
    "hash": "795368529148687638786193531011748673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_mul",
    "hash": "50231072488881582716418878013688096714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_pow",
    "hash": "1226798027248691754917945822015061929457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::swap_bytes",
    "hash": "181296710537259524578115261728499499282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_be",
    "hash": "13552936503209375671917455417783092599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_le",
    "hash": "164579795942569445173352949914922612804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::trailing_zeros",
    "hash": "16961208522228807511332603305895287516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_add",
    "hash": "1165877869008613112462161562392622050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_mul",
    "hash": "9346987660492663566497609088124011020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::cast_signed",
    "hash": "1825377238092728282411354167561105518548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_add",
    "hash": "571699510776550429114364264892571767382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_mul",
    "hash": "165024305981549117018946097085003009765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_next_power_of_two",
    "hash": "178675431183661546427973392190776099790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_pow",
    "hash": "1451203083223115642210594367300145915530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::count_ones",
    "hash": "144266104915937025419633733492097579660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::div_ceil",
    "hash": "174034842665956976195178558880771615060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_be",
    "hash": "183557517706890841347297361696473673823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_le",
    "hash": "7723918577553648524108565898608350922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::highest_one",
    "hash": "81509612116561099984518143418450242532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog10",
    "hash": "153924797365075118633066216816097256834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog2",
    "hash": "120757513115249882321632795805126813021",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::is_power_of_two",
    "hash": "165051422174692560104746339420974414922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_highest_one",
    "hash": "1001725046012373662816056623773493793889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_lowest_one",
    "hash": "152529013531248979063931861977657779529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isqrt",
    "hash": "25082647015411992979335618903740109693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::leading_zeros",
    "hash": "112470404947349979418012764326826349563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::lowest_one",
    "hash": "693404620046866388711423802947131869289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::midpoint",
    "hash": "792203395604517793214558457315433535103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::reverse_bits",
    "hash": "713613319977741973717378570705083922704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_left",
    "hash": "94633199299530753586711111612415568426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_right",
    "hash": "5706736463189182193630834288875024236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_add",
    "hash": "714250838691932206214342275745275149081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_mul",
    "hash": "168733623350539471089888711307084005855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_pow",
    "hash": "711960891818316614018209688204476645335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::swap_bytes",
    "hash": "693325506858566492711076600310704661851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_be",
    "hash": "84074694450917321025347954219966099993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_le",
    "hash": "995312794766745415911837082124934607393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::trailing_zeros",
    "hash": "997452321461119147514825230489337533407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_add",
    "hash": "1233368222414103389717663693708877977894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_mul",
    "hash": "67532313396135293357690930963645381965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::cast_signed",
    "hash": "112992307341362524987368557495772457989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_add",
    "hash": "1573249587946755138113550630233365531906",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_mul",
    "hash": "1185559449883504159613612113560123706025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_next_power_of_two",
    "hash": "1402907575365686766111431761783007272046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_pow",
    "hash": "205299624129077252510152393119342231421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::count_ones",
    "hash": "850972960555612193710888328647059603957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::div_ceil",
    "hash": "5626443027212631375990307817689432791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_be",
    "hash": "1167756513980355241610490941324903650823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_le",
    "hash": "433172410873551823112026089142799494105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::highest_one",
    "hash": "59266472146252904412359515551796949434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog10",
    "hash": "72490371355961874097123965084721395404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog2",
    "hash": "82673335129552629317708046730690637448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::is_power_of_two",
    "hash": "179135857728417645416847982848307114718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_highest_one",
    "hash": "58760796563269724157153444790676211375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_lowest_one",
    "hash": "94641757279511777736997860331193588239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isqrt",
    "hash": "1056766260074426877110042596162850496717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::leading_zeros",
    "hash": "63508941524203719206996976005100287210",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::lowest_one",
    "hash": "428728415277352597313604575038628852063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::midpoint",
    "hash": "96140728345072470595929049319156756239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::reverse_bits",
    "hash": "1580318754443499053315377427233319627045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_left",
    "hash": "60825390552816501649216216703386949206",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_right",
    "hash": "80829523617216911012571339612697689057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_add",
    "hash": "118278505824457841003483894367414143401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_mul",
    "hash": "76738243914548163489361545874417883868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_pow",
    "hash": "104355696554084726716028919035332276796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::swap_bytes",
    "hash": "16961910128211579484777075881128798957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_be",
    "hash": "166000077735845307566849297931632674362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_le",
    "hash": "1757527612248726536515390846244194974896",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::trailing_zeros",
    "hash": "108786397313019465601002585053914768444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_add",
    "hash": "1167296834785934779713515691589128169232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_mul",
    "hash": "93363623733927930315183391992043509563",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_neg",
    "hash": "43457794128505839359110287677652112825",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_pos",
    "hash": "1305237658388792131813056873428290056305",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_neg",
    "hash": "1230811277775279759117523360681768868265",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_pos",
    "hash": "1220052394500090937813581033184319228882",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_small",
    "hash": "165998565266195280713471720520473952783",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_neg",
    "hash": "66887133717809117441613409129051367419",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_pos",
    "hash": "1169904817056018789613772384275730967794",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_neg",
    "hash": "45304841889038149759170054764794261791",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_pos",
    "hash": "1187454406459772464217758674950465821232",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_small",
    "hash": "46760712974898698721978745810316616167",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_neg",
    "hash": "107172600237738434976774861897884115779",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_pos",
    "hash": "1269618013631208868511668711879093578719",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_neg",
    "hash": "94305035392981657078264881836000662454",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_pos",
    "hash": "892765107911014571411197688019628767315",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_small",
    "hash": "1192290069672049831317638538506818778825",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_neg",
    "hash": "1795999660071615998017920562893751790749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_pos",
    "hash": "957462472754487389415403102547879724741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_neg",
    "hash": "22286200722432848626581246264562070348",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_pos",
    "hash": "144791943358762868819336670327758771341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_small",
    "hash": "22243369220852693718336101638351193462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_edge",
    "hash": "22389567737517512031736386545930251421",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_large",
    "hash": "90360527762285771485404622239837346641",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_small",
    "hash": "1511051798458990737510870507531970540614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_edge",
    "hash": "174371363207183926521596181208388952213",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_large",
    "hash": "1161936559242417133517310550758670880537",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_small",
    "hash": "296078822746150730714007497042240323619",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_edge",
    "hash": "55302230198941629127986970754815072579",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_large",
    "hash": "14640598419438698328567962505513674308",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_small",
    "hash": "552783496309489894713826221374578832090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_edge",
    "hash": "72850148591765182257591537048298118134",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_large",
    "hash": "139268647719716395878437625595153562348",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_small",
    "hash": "1734442589725714221810079521167517966420",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_128",
    "hash": "978295691529972615710777105771473784193",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_16",
    "hash": "148521227385928977854949383196325023275",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_32",
    "hash": "1145870437337246005016720553993505737854",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_64",
    "hash": "772272989801635651810226858123665996364",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_i8",
    "hash": "1363551677989618764213199786058720677202",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_isize",
    "hash": "6287460999193683614637808761680806141",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u128",
    "hash": "638162007188815012310501740795034625527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u16",
    "hash": "465264439809250720314966166781016492334",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u32",
    "hash": "1437306861033862795913160065099207500055",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u64",
    "hash": "36898902459745881086201580856370610350",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u8",
    "hash": "529038900862472448614209277263510152201",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_usize",
    "hash": "40190814296089539907264742264715205545",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_128",
    "hash": "2096152872340196991139797838705336618",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_16",
    "hash": "1516581429653441056412679273251509110280",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_32",
    "hash": "176048671937233592502882171011150360094",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_64",
    "hash": "12133500521057328717429606056245672151",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_i8",
    "hash": "111472461963443071413741187336624452194",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_isize",
    "hash": "526648440799983381415148840789894895676",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u128",
    "hash": "64783334219660446077720823894486904125",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u16",
    "hash": "167169132798539458362815820444062178918",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u32",
    "hash": "1385451632486911145711980961573356756253",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u64",
    "hash": "820691958240120011511949793389494687466",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u8",
    "hash": "176568504412158112481067814985869547953",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_usize",
    "hash": "145957964533382946248195308212081371566",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i128",
    "hash": "433846233727625957518333680386655208196",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i16",
    "hash": "1588918479777377761511541463727692780943",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i32",
    "hash": "58763770892653697591450906592803667271",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i64",
    "hash": "111699851436063087216332335628790846145",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i8",
    "hash": "1480863019375749954610431919957236498567",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_isize",
    "hash": "5163554340154637132144927911319255441",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u128",
    "hash": "41014155113201264310220175318984427483",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u16",
    "hash": "61186031386950123914407122427512487395",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u32",
    "hash": "40219519316542203159978383842786600303",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u64",
    "hash": "1037533731165525016017738260254014485885",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u8",
    "hash": "143890643928619152386582719290793902459",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_usize",
    "hash": "1269523272168021231315909973562941075527",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i128",
    "hash": "914689153938437320892870126028664398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i16",
    "hash": "1810366007005092970312498581151830877499",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i32",
    "hash": "943081337850089776816593901224853516528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i64",
    "hash": "11028896280341833502805092072897428529",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i8",
    "hash": "1169326130978060877913072685300282891579",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_isize",
    "hash": "70045512948989007511882379779217046989",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u128",
    "hash": "876190431336195095217253076845020688349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u16",
    "hash": "364900448114200566416808355689112320546",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u32",
    "hash": "38445675184968450014948800187666127813",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u64",
    "hash": "40572586377044279112045628462450933168",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u8",
    "hash": "7578806577025381966449093594442148720",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_usize",
    "hash": "221499258913740633311331170326522676644",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i128",
    "hash": "1688470677847394664115785622605415745586",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i16",
    "hash": "17192073611986051654176760013207331451",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i32",
    "hash": "122717505136635367731181465995291569644",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i64",
    "hash": "183693185292491038955088959024069041229",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i8",
    "hash": "62379603888527556857010123629183336447",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_isize",
    "hash": "1050872999595700449712490649532210135295",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u128",
    "hash": "1046143822979047377716252160397691562416",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u16",
    "hash": "1671613465996985972615732896288931716535",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u32",
    "hash": "1844097684735696196915276681469700166583",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u64",
    "hash": "120491386160550325323277635227403444837",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u8",
    "hash": "71037317680949706992815723264605371593",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_usize",
    "hash": "1139649629437915013410160240048636875920",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i128",
    "hash": "74314497467502229278328685264811654534",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i16",
    "hash": "54141096722457674949819195553185604631",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i32",
    "hash": "619137530099377701716587538608607947577",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i64",
    "hash": "148080742852250417512333166221626769085",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i8",
    "hash": "916661957844428547711378286308117074817",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_isize",
    "hash": "720542486258543101912933730116019325108",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u128",
    "hash": "145426091552482389733326105608142479450",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u16",
    "hash": "7803283403561438242537976701416006098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u32",
    "hash": "64807897293011220501632716140509631310",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u64",
    "hash": "12017335598515125920772958819696542251",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u8",
    "hash": "87330940046732133097170865434988557779",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_usize",
    "hash": "722969831619354407415950930416731123408",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i16",
    "hash": "120064860527527566024068047962621410189",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i8",
    "hash": "35398910902399343801715160036111250632",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u16",
    "hash": "84182628109206920234156657190854353496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u8",
    "hash": "12444508509310409415903647184282963574",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_128",
    "hash": "805145977795735074516306880321097974434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_16",
    "hash": "32094761970704021931719020056251299641",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_32",
    "hash": "395994644281978768810680776831321897252",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_64",
    "hash": "138066586257967660938986140733959534639",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_i8",
    "hash": "15579414236798561794998135810148132280",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_isize",
    "hash": "16259504769628895916516428020459992687",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u128",
    "hash": "1327265872421780932412220965881542219685",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u16",
    "hash": "1344876832478981024713537805930585442385",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u32",
    "hash": "284056394954523328912931644401395494655",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u64",
    "hash": "147272766308520914344001814144070487849",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u8",
    "hash": "750347018674327123817555117183934743496",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_usize",
    "hash": "158777375578944169176233613817279446392",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u128",
    "hash": "122957441976935567422973961359912009178",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u16",
    "hash": "173283050007458017112385047125334164370",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u32",
    "hash": "104601731907400759313038430477433708532",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u64",
    "hash": "43019840651532396622256897185065416893",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u8",
    "hash": "41754235436306708013243075091798998767",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_usize",
    "hash": "18139917280531325219830389969247799549",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::add",
    "hash": "270094252999170086311546006733242136440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::div",
    "hash": "67963160296914708992676158558620209435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::mul",
    "hash": "47545376251115509438487578943349168811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::neg",
    "hash": "95725412220846309792794332117021318440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::rem",
    "hash": "576888632633011791815712311345027209426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shl",
    "hash": "290609851857017803814021177754696512679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shr",
    "hash": "13595682241019900114812996569480761291",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::sub",
    "hash": "1639242911298951059017350988889133653325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "160284473997932241276213519989941255887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "143811446077117883014223497661592844541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "80312031056270363685557836123870648672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "1800054334135899236215633968141510195313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "49268418459686349591413910191042085483",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "174457917214866460163636723103560506880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "1092465394874682731917690579879327977993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "100830747422765764919406574545594917008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "59505157747634733410580638444584532117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "50025861350321990163961210414871894132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "725661364241764510414436654182374033710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "6896775107684531111165470572532221766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "576059748821367451310239166158572681822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "5237754611294344243779526390861143211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "14961524003542163497692870874318372806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "21162955481188993936277304589861886474",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "112689637894070681818041031796651266578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "180839445639474579154187947936936909801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1005065435463336548316671876825414129870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "664471231493710923716024452433039300926",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "1366151615913774976816784035783108792323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "317389162578398910614380376071048521018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "4657223981787872098926240321606353643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "1174689227565116327915030858865663094055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "76418697306163953415481981516508561063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "14257280226559481513428087224111938062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "1370419642495530002510867198544743983625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "136271904473397981613131517695729812734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "111694039523241758774342101472777189139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "1031248453977606829313986222989693450360",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "14536174504863065399285167190416004172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "170984321749245028539206902861470428477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "1710621408861747999011302242697459683170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "137308117767523483341689601288228946603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "153920297030419344151409680875703044860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "161212889606024078287869083068529120064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "580803229855345075217178743595409535037",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "1503122116294145699215710016138118307815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "1442423546811912477314312439775290835910",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "606574534558432584215690293708276976614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "12705346920501398429266926149039727679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "174040247208206583749973901684422972514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "68676909200611059608436265242964053191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "124632122638995403376991625114027808200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "86068400220750383925586692112881039873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "6560618631039101501879811885450006311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "1002239686355854454312468351174326473904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1494909273996762514711006700662495288950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "28531773803664160447372708647914665818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "173846927512796458866169091708923653226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "604690279249440870916610422974482177935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "33150922616999120712296583629028864124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "727365047754235676016007932063302222433",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "1794061693906441141616139928366069207346",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "182712107236892221334620111962501216646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "213399753853403354493448413800619947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "59286786582644434409521697607912467585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "1778148878966078725214687622722505167114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "121855650615763566461860683903098869370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "1539716899236982339211064027130173829349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "493842077078796226614934979349914320640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "1336567717864195803112767865515876574055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "81361426740406679887776825433487098470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "114915236949282391261100920593488524299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "994879733343081357818212003147712407814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "997231513133166986211222576045168779442",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "126258840389346541807274928456415335728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "10959554788011620016875650437518156057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "1223943357166249719511439391157780756867",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "115650805876771533110374333478716684110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1669234676955152556815099993377148032931",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "1158791350173689789312889677248124050530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "36179617101540939815781068824402466904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "261625584777147881917998995785488552613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "8317326120228508895951765230472097020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "14737205037549796182155873303204857044",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "695052899189180491314749928134345487372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "7989041938924995513679076086127169568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "1775985781697660391612102167863047252820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "70431979881194441371961811934331209832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "7125037390910936173264795989066535086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "1791684247945598277516406068406516105518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "1328939168155708088717014479115132577895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "403781921264220890712703622919158395919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "877108828082452915517844603051861721432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "125766230718284178892364452998574706821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "17559856218943863786412998131097605043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "849575096418911091015383807355093622057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "123993534919452612984210207038206837949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "17797570851676764118730219740443324311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "538778232351159239417920821991696057325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "105288196713831812162454482311991075968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "26092857657304114332388313039730959022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "552264232177527114616000923826222269265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "430220839640623946012514903758435134269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "50050139546550781962330129991119971012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1171904650851201155812484701192591947653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "1741028789520803688012772097878559775953",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "542753133195547367314919090959395449144",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1799758100981330944111454993527481801383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "119676810172087891112184671145004506997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "125397691825425483567149667072803449607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "6882678327024598078545084045736118991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "85716764613433684109592385405652622884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "35904459780600768365243496759682638094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "163278464770944217385260356678593768003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "1665441657201858871415189407764637175893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "9731735232217080125981992027080773587",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "1809913652975707116513555310066998024659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "132666771107958118188382193281397689571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "135897826208904249956423098856566247920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "76214635326236382802374573382162593667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "332787285212562737315254784233307459063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "1127949124365126668415913377659437974420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "172483105545072792588808385969065140283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "23924202910612669977018890021429912121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "987986237686540618210739611997649398496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "35883322208227455206921614717366643748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "40167319451978792681786707073793500768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "168715651119589624964003340538467767938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "120040541723310922663127744680371675733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "174373231941977968551294842243898210942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "182308689838162974274636082998632962174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "173310288998783227841199457416240009874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "24333261465511325728677826511355662508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "88884506165820089094039140593592411535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "121938285601185420416720818326313408232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "99253523688733029893035320602279011524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "954714291666907708411926846888241435558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1260245880560005280514854108128030361810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "15196869178859903861262156861813382443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "1107576609062452530014488964410164003590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "97273173404533928116081229982560547994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "1461737250247604602715942659895654813470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "213264219150229058515199704608033811971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "1293657720946868148915136400548853308065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "1040956181986031363310194249121042500992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "393590239114601412161215530471304300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "74919269434401926491098364789457517411",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "58757024895708650208051661947285061216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "1170205526293737731315496598348217917058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "78736189317852783855634457757635013135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "160771921491885592984088129821889178365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "158753071345876521856237692095719872996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "7194661629769639001162732694608713955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "106811963592957713334325992882452194446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "1681421942559540802811198372990989621743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "106984733469549814414434476623475354720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "145133691450986387222953063890009874487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "59336292429018908667541546552253011925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "118098829142139524968843479829962154292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "158297165152863298972507755748784956070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "852099184564305229012673667899996753633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "76507426608070709785486875262340311447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "68636731808608660496849657709955460470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "26089937717852784501309896552897113353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "124616770028975087115610961684051506293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "682054449812052023617670726222226120866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "1252265471678345580918341584803938103570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "23764022986466279061829740984824300883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "1206135100154197036916883496099644820240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "1523941213812812127811070247629159541217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "1378664328255344075414834916100176022466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "139168277465359741157044806474526129229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "97012083619306567378158506436599965913",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "139832724426137660029775100117688138452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "257801234077984269810686821743867930904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "1688056261265940004711326914049521530164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "1425222291984493598111227377614071569471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "1328269868370489823117956738511598753290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "104819637059385927941516107571729553497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "155268622902291845301382179035528416524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "93412924435771172589232459633473541683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1047295449275823059114580056154942427979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "507508192995177284717897930319471898684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "174492083799701036944062127174462857160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "85726912377228827726498562405658830106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "121551437440505361909003451077036139052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "110273315594138898516834316082758270784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1829415594370468598410457374297872098075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "70205176250159643987317936465420660485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "134916819535803653954151893090400670520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "176106785119052108127284007171858334633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "71012450399592209196095735481939858593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "834853402708264862818169675068872255980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "490790801558732207715767693191367739354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "48149559087898492912455982414896985368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "35924491342518750182401160587708998745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "75600107385272771015926556548517741241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "950310926946970556212632151778271828680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "451679007339863275528469281380536542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "18700013504608206687000702938552987726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "162831086167417885765689435798307101969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "4198073345113663456216593394774865846",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "1026506680003726563631385684791638836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "768191477778183033415831287188645938476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "10272008846802581161102549298531430492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "64003400602911569221791713286224017456",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "4290741303233683087238193701091571869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1530018892867449426617084924665345281070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "1516695620063805844414429894593739768966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "255908697593386542014673942873535117473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "27423942645237754715771983247097115628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "8240908548424509372475176213480472574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "128563967089040133546156076871387026186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "807007526343701159412307444626528767962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "49563610756661767101828886142870020156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "1428346463123267206713506582047002772221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "34401669994406202269798171904471109384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "861107286956516767715434499864788147433",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "1766833282146250682111667180015033785612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "511521958544341930613959478793041576298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "483900637371946623516387924777220361859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "177042913624057976312024853021469816007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "174976142269517523626273704601376169801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "141757913438153618097978561807691065179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "1366193571432269117212574334491650306094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "130626355683335040839557240605155052925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "43394651292183017327458546853211727912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "78373745460183296227052928671620126514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "500662443953580221663872214804676677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "25752917381466925773801792006642275012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "98419484071621839057372624187133492782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "95184464776930850016714763221879982964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "1143250464226404546614432804101429114229",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "116127695462832509721552666664932047903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "183792877715393365405145814222811612425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "784762428489493981411789901870509832084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "948904711235517571818343408157498966477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "111780486176906605782838118976222976302",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "869701641900912846813522861207625951071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "40522861778670816284210143373749092596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "20376439840295310611114817653353531728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "14761088624919299183623114139299682507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "53243178897495441648200607505132223252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "1832165465896551523115064667574904413503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "116172686117444426101201989896431091071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "158687430472432728227637163025240612455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "147527668432874214955252804523648632168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "652643610734275827712792135251974671704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "181896339847837003269108097827324098801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "1786106636400869976214939078740743674350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "97428999503138003826656324328187205843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "179412943869772240632254843441403427572",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "1562563906712260748413874937132264017840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "34444099218336712118921038332286584601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "2632542189670294749259235337220455475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "870214965699906884513864826807875977676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1318634895874022560515900383270611561871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "282393639880221679516805130768259263506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1596726219066677653813069076095377071381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194991622686683956413056477898491306729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "42710823871216706123915705707730942050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "155654588307046209917144994360503331911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "9457876467421803761254343461863001784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "98729443335932235149830204225948975263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "69081491910324409955386726007684036321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "98680728026867477664147646356962280416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "12350709029595302025908193839908469726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "680586556865991831017654530707283117361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "559338502501101953610955002099025614485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "2780762494752746483324043926142873170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "16200526897757921488068481687409883347",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "105356210302019270275971908068634737447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "169078027069640678817029364444175405491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "55434287195254603149248703027091948921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "991367692842630010516507822500629818116",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "45724823048140037706254715273923552395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1516324082571279534017975126360436926405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "86831104416763819417249887677583121337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "143714136667056588027576191697957056137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "169554233298214659516573317437752976504",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "3374707726659671019583042008372888851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "823855726706466424518441568165319892778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "374411905255933252513369230601844180181",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "164468077279041311509942523609950713298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1010909670838050183612317846838046901338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "166026620689284326436329394644351701345",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "665986763593194268614907001679648449326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "924861151094267954017097994870119248237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "127098794176462081649007365766203860315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "591716872688561012017490670097932120143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "154447032679384723131972237908683651662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "24141334237626133956851169004962733226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "69869773278600660701559979093947073929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "50646342917347526314819935672210073440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "8824863695558367927125236952378913709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "152928018066310077893771523079575169872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "1409569097911399795212052413327318044114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "111301841518526673341722448628849078367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "51141641354241174251699624253678186330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "697876686495566175111515409582511086180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1596521225683261918313253867757986366458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "1268592556151561881817468538386934994170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "921333999773420538655530028078199787",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "34025235495782917638602824723495651022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "460245291838070667313538885349844162766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1830609953941828964114745376692341932053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "21703381855292043921759263165236342821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "626911736081660889114142373473387174006",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "1537184666241712373811181215483890186391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "8731086444030588811287640972753372773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "57158148051115467248405820356416847951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "17233253787730095262420278264257515612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1677723086938286456811468808995326056524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "1022033598038023696710329100857479151007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::abs",
    "hash": "77052530828072872896919711276257552046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_ones",
    "hash": "173887103532282237935773349205652480304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_zeros",
    "hash": "948467598552350475113529053940817797599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_be",
    "hash": "1269866600284204050611695489233030002054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_le",
    "hash": "61389999257964585193470608109533818154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_negative",
    "hash": "14663460641295998932420549381624726216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_positive",
    "hash": "1457808831754583940915428201728439292632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::leading_zeros",
    "hash": "131286329156930451451692615520615363025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::pow",
    "hash": "1425943131206575521218094466319623096138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::reverse_bits",
    "hash": "877075137848828087113747808879900032992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_left",
    "hash": "1318278049435249267717028514420809782038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_right",
    "hash": "1669278740188936690610897991379030530431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::signum",
    "hash": "111227395361809551898016463225211632648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::swap_bytes",
    "hash": "976038550342044366515896233395268422297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_be",
    "hash": "745355528456306644811947778273001263091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_le",
    "hash": "4598032783182760483879562571860545945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::trailing_zeros",
    "hash": "179839591285413133703386163810674537888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::abs",
    "hash": "56002336661540119399281292098603571781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_ones",
    "hash": "37593997617542375395781979049682364398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_zeros",
    "hash": "1694411614362260229412540253766141880541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_be",
    "hash": "8872999057472150554334472068739540803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_le",
    "hash": "94412538923979817229829043401883845525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_negative",
    "hash": "138788212511033362454637072957641026980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_positive",
    "hash": "80934579109113305966302348756614038446",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::leading_zeros",
    "hash": "1077697222026192607914149927056958999007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::pow",
    "hash": "150979413710046758917561351245408589105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::reverse_bits",
    "hash": "65858787613726429702264044610068576540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_left",
    "hash": "96923682364851290622346230040667324151",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_right",
    "hash": "870239764744779805652364445567524705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::signum",
    "hash": "862656304234622874315239821331206389213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::swap_bytes",
    "hash": "8982201541835312806227081098695352247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_be",
    "hash": "1562444694882096707414102625740197891454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_le",
    "hash": "77429222714469319009460152491764842318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::trailing_zeros",
    "hash": "1042590052933294926218288683555486013857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::abs",
    "hash": "26202376656480624144536994272194868071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_ones",
    "hash": "162490309114073965014997585326704318928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_zeros",
    "hash": "379678188199080647415234187687013733639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_be",
    "hash": "18518495999641923211848593236893017361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_le",
    "hash": "181073387999981746807463237044258601258",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_negative",
    "hash": "95343113107621500505394139789481296027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_positive",
    "hash": "14169389205741237212654932095853684305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::leading_zeros",
    "hash": "842999998259762878712669451308401993654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::pow",
    "hash": "140831208160873486838757730898073650971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::reverse_bits",
    "hash": "82289264656322325353137546510320904358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_left",
    "hash": "45479745356655429689786410367849942454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_right",
    "hash": "1464521716332546877018144614543226093295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::signum",
    "hash": "1116284816864325048716290939150785287734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::swap_bytes",
    "hash": "759227195637226244711980089536267367325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_be",
    "hash": "360977002757418843913439683400434320673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_le",
    "hash": "135321760071703693643762423852955687679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::trailing_zeros",
    "hash": "125798238007755149013512276376570623408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::abs",
    "hash": "1038275862915578613211515083913720795493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_ones",
    "hash": "1105825372858018469617863480331144819727",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_zeros",
    "hash": "127060007088895815918868008220633064645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_be",
    "hash": "960020063250212873313207068704789781215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_le",
    "hash": "147181150009413159103960230516843719484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_negative",
    "hash": "91035451047181429214401671114877342713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_positive",
    "hash": "531909499889884692810445954838331414111",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::leading_zeros",
    "hash": "1602636510891883000015106778759156846971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::pow",
    "hash": "133574959158283429539149114902494411728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::reverse_bits",
    "hash": "966989655271072621217322707615386380897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_left",
    "hash": "146654870276321341793367067284098120651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_right",
    "hash": "133527343896351548355925885931337230370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::signum",
    "hash": "1211445230431787787713212357701299996043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::swap_bytes",
    "hash": "1061701096294462165716895059223355169328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_be",
    "hash": "180824835060405025198562810989902518046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_le",
    "hash": "122439965504497594879874551167971903574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::trailing_zeros",
    "hash": "1566962589729257630217036593289928639183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::abs",
    "hash": "175507095491035819487264824988523718575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_ones",
    "hash": "39449936584797827112758969889373189624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_zeros",
    "hash": "933132373045854075914833258046072168491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_be",
    "hash": "170463699040022283029115081720998766705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_le",
    "hash": "102468473936788592616181626754293276654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_negative",
    "hash": "65935018443309558301372918609516993002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_positive",
    "hash": "557570393643375729811907494819172160198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::leading_zeros",
    "hash": "1555295572760298399213397018594802174869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::pow",
    "hash": "79488843263137541394721830602862101784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::reverse_bits",
    "hash": "145944904433382565919894232149097940540",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_left",
    "hash": "78489918588912513515946574522315676112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_right",
    "hash": "112155484200181362674928970035809882198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::signum",
    "hash": "83680183102115481291733415307059345222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::swap_bytes",
    "hash": "52967256222933149709595488586106307062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_be",
    "hash": "2965116202471478449641031010287321682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_le",
    "hash": "462182775244891524911646703702094470105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::trailing_zeros",
    "hash": "116777735807468315085543514517398297863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::abs",
    "hash": "182917020399195198515944114283098680050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_ones",
    "hash": "897944612975400076414916665457779513774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_zeros",
    "hash": "173109827802225319610597742041729351808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_be",
    "hash": "1771592493090931562217240697639471591635",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_le",
    "hash": "1336834678161620523710185118850631612534",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_negative",
    "hash": "1349845068823476535213347170468252765101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_positive",
    "hash": "233257015288703015414970675610307903528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::leading_zeros",
    "hash": "21395612891761341278722382790792401245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::pow",
    "hash": "24682845590238332779981435367606477434",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::reverse_bits",
    "hash": "13652293423559389059094836099696019943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_left",
    "hash": "1589763338231115411517583752106673318273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_right",
    "hash": "118977944157644700578390070175500379978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::signum",
    "hash": "1789364769812904535415992419064539453711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::swap_bytes",
    "hash": "564538729249454119715614795460588585588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_be",
    "hash": "223424717771630773913466385656063952485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_le",
    "hash": "165245553983660344738134263966085725301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::trailing_zeros",
    "hash": "12364241070217036316429367031387799480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_ones",
    "hash": "1080180899310034869014878322188544074482",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_zeros",
    "hash": "1423823366982016518218234928070956132119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_be",
    "hash": "36388170038594767098153169863626988238",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_le",
    "hash": "947148371467689363415128928857955399379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::is_power_of_two",
    "hash": "224863593498342771711833251994564585863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::leading_zeros",
    "hash": "110010627257406085225174917828889603339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::pow",
    "hash": "717021276963947416014797716411170855716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::reverse_bits",
    "hash": "122458372238376369222375312184854304836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_left",
    "hash": "105765451340182271224481782819457171201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_right",
    "hash": "90025803536760927639568003497542420405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::swap_bytes",
    "hash": "164420054061215949789632368006711940191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_be",
    "hash": "30037862729365105998891906255542238372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_le",
    "hash": "86286959999140502810115709751451994222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::trailing_zeros",
    "hash": "6160187718122442949774296957094921855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_ones",
    "hash": "1299445701594956452816846013203001574786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_zeros",
    "hash": "161931163582872652311835719911966839147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_be",
    "hash": "429323618800938517515549597729165464888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_le",
    "hash": "78070989904813647942284653446014913952",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::is_power_of_two",
    "hash": "120418900353528619645017443640381210284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::leading_zeros",
    "hash": "8232122928032197021487410405828875063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::pow",
    "hash": "176223530295897825913533594697247861830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::reverse_bits",
    "hash": "17688151913404523557976139957787621526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_left",
    "hash": "100611725928484820410238075641211614501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_right",
    "hash": "88744983793202941788224252127882891207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::swap_bytes",
    "hash": "76830914603995250796294728156073438376",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_be",
    "hash": "484608030966383283013123849182354144157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_le",
    "hash": "15789089303956339912740880427005314313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::trailing_zeros",
    "hash": "12471707097042092531157830271036716606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_ones",
    "hash": "106332103022967789038916837004924678448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_zeros",
    "hash": "55055183090573487618423625345936437891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_be",
    "hash": "351260928156887981811987350190835191261",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_le",
    "hash": "1135812211768956426710741918687162472911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::is_power_of_two",
    "hash": "3525698146154881093148224519984725047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::leading_zeros",
    "hash": "46007585034377470271240430003806153078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::pow",
    "hash": "1756914955886539768514579956064680064800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::reverse_bits",
    "hash": "69937288573295473586868613214889267988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_left",
    "hash": "1166065961841383296212587560231692426278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_right",
    "hash": "174334729692761973267007972355486759736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::swap_bytes",
    "hash": "573770162495594552013789490993714272211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_be",
    "hash": "642690631070093216916190095413981568471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_le",
    "hash": "749728390448508753615148192969209622825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::trailing_zeros",
    "hash": "1155629472117604631310885320721361473501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_ones",
    "hash": "1836684976491297891312284690529104329134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_zeros",
    "hash": "94940770590831393663995999897937463652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_be",
    "hash": "3849021428310134204317651706312842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_le",
    "hash": "1972414070382271074668274604695591489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::is_power_of_two",
    "hash": "1364320068900577661117788586080913238243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::leading_zeros",
    "hash": "431338842922948717218320993894273313866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::pow",
    "hash": "1110739800513068608516735298889762665518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::reverse_bits",
    "hash": "32424038664410425739999894684683328377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_left",
    "hash": "46868498346723430288126252319405644769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_right",
    "hash": "46869943458470508836033933256693647718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::swap_bytes",
    "hash": "159923430221326830802825075256983327619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_be",
    "hash": "1092137817602967653913705675232344039104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_le",
    "hash": "1822423228936580794612017158116902885337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::trailing_zeros",
    "hash": "18286623892119345616824131765179286634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_ones",
    "hash": "1589639062078502944812105925945236416377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_zeros",
    "hash": "432384195896053296110398582792126388962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_be",
    "hash": "66566757205840942324735399782330905491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_le",
    "hash": "179431552412066358982393852507845392088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::is_power_of_two",
    "hash": "139444889683039223011269567889936425373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::leading_zeros",
    "hash": "126483654681750846231251908741567004901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::pow",
    "hash": "26090790986530539811444585808052949080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::reverse_bits",
    "hash": "1445228448554030479917592128141595485701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_left",
    "hash": "451116881790286793512252364318505745817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_right",
    "hash": "1125782428040032247713372748468482501161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::swap_bytes",
    "hash": "43840489830573902756604131944957148889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_be",
    "hash": "1702464020640595215411502713514965473100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_le",
    "hash": "40049093504419131193638553592481022120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::trailing_zeros",
    "hash": "48066510452959952851240022276920695352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_ones",
    "hash": "642393737282230723810563992845719147066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_zeros",
    "hash": "1269360353776878620817484673699852687292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_be",
    "hash": "66261684771760056065874284648895706924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_le",
    "hash": "64122617130197506588523495888760511217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::is_power_of_two",
    "hash": "101255329608723848178660439266001841437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::leading_zeros",
    "hash": "180721581234705253561106075746559223090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::pow",
    "hash": "60501418866314461984383257634945968543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::reverse_bits",
    "hash": "695026686866145915518160635715639667713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_left",
    "hash": "181386719709775713009432838095907193453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_right",
    "hash": "1706493799402283190310430865951306600826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::swap_bytes",
    "hash": "113571139497342851623242690773949476193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_be",
    "hash": "1122023747904049693517432822622707102616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_le",
    "hash": "146914345669007062515180738989512009474",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::trailing_zeros",
    "hash": "51638914405331799367388563463227824028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::abs_diff",
    "hash": "477660581458052781816895482388817451986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::bit_width",
    "hash": "146402253616861878125140084928220155597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::borrowing_sub",
    "hash": "1363567922533799422513302025846094841082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_add",
    "hash": "109102234937777945807834977432586760522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul",
    "hash": "109097995778224105812820983366852497349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul_add",
    "hash": "1142640662076761305948383857328923618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::cast_signed",
    "hash": "651242239614552401318235774839779562768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add",
    "hash": "175964077089034843066866434068701873555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add_signed",
    "hash": "1166265166051430696316977265626173790801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div",
    "hash": "1208974288152180704215375554368793201499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div_euclid",
    "hash": "140351750939122796585362716044000485303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_exact_div",
    "hash": "154669955832440197101435563814829597602",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog",
    "hash": "1416860906964928852111231115468699847647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog10",
    "hash": "460070152440720581113986535049791602111",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog2",
    "hash": "1448563383508806316217204433235266829439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_mul",
    "hash": "31541178232944527581832255295758820128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_neg",
    "hash": "1110689311854646726212148084514805887120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_multiple_of",
    "hash": "402507336287403415215360163633787595723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_power_of_two",
    "hash": "1502284157923398594412897848263872247992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_pow",
    "hash": "1837303761928596559714023661400023568257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem",
    "hash": "18851631455989157514422431423103624158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem_euclid",
    "hash": "1162383048216240352010657207781265552834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shl",
    "hash": "940132995258739375517288062412324160469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shr",
    "hash": "1230342575540268314217429424153788895248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_signed_diff",
    "hash": "517330781194557216016236238544605694081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub",
    "hash": "1778782235527761846512290178855805128338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub_signed",
    "hash": "76733295956936322736851020768231787394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_ones",
    "hash": "72414263377159851512491916872009274305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_zeros",
    "hash": "98573614460076770889115738456618145887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_ceil",
    "hash": "1089132815239853697911314191633408622860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_euclid",
    "hash": "1445297445694592482910891467525831643112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_floor",
    "hash": "259313338286352709111661433923456202694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_div",
    "hash": "1692471138131252110012687282118641262267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_shl",
    "hash": "177299909362018552874307252954350155342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_shr",
    "hash": "462119247019165311315951632804013774391",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be",
    "hash": "97769976683701282514131636772498308688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be_bytes",
    "hash": "1152472387732624652716282453783906357932",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le",
    "hash": "1114094612167780042810038293697490295853",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le_bytes",
    "hash": "265999011504713404212336544352480126680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_ne_bytes",
    "hash": "1282852772146119651010982823716979253032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::funnel_shl",
    "hash": "156107679462505106514379337768047757815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::funnel_shr",
    "hash": "303066094683515311817476492621561235097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::highest_one",
    "hash": "290105764870464172799158958927625802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog",
    "hash": "420586265984200183116001123201858397241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog10",
    "hash": "797221058429689826611458899152903286009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog2",
    "hash": "142595290955389571022680567355423000431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_multiple_of",
    "hash": "282018949227425833418165707666038490797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_power_of_two",
    "hash": "72236701535662879721781500837078562581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_highest_one",
    "hash": "44581606145747542201656400633688133562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_lowest_one",
    "hash": "5907656165806068095706130548646151186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isqrt",
    "hash": "103924124360364142272080680091071175998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_ones",
    "hash": "111152233380979339619655996579927794121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_zeros",
    "hash": "395594666358430567015149996812996702097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::lowest_one",
    "hash": "57835545082885998612051309014034521382",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::max_value",
    "hash": "125778427524497887205878327589333002951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::min_value",
    "hash": "80914298955597430462971748571443089167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_multiple_of",
    "hash": "102482784818359649749671067181866887310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_power_of_two",
    "hash": "86475851404683099015346575336100826408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::one_less_than_next_power_of_two",
    "hash": "90446009061889427428467955177835589654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add",
    "hash": "28458177317181383215572604684214577331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add_signed",
    "hash": "164394725589202482197785242156535509771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div",
    "hash": "96865749342661041497639465337334940810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div_euclid",
    "hash": "94720245505109759271342159747788322634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_mul",
    "hash": "1414134969732480211013570371936244676927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_neg",
    "hash": "399596230364844424513118166805378453046",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_pow",
    "hash": "970144392387378244114472441623151896349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem",
    "hash": "196766422011408027517737129890656233311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem_euclid",
    "hash": "127239617459823611898236062231518222588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shl",
    "hash": "56139747842381857131689953631548469872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shr",
    "hash": "147992454266290232908080607238920893788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub",
    "hash": "760750439357779128316535247653507733298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub_signed",
    "hash": "1765855041848105655410572267663019994686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::pow",
    "hash": "172379679931082981411560325726856523363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rem_euclid",
    "hash": "182038072805686292958241358528411350269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::reverse_bits",
    "hash": "84966533834415743927986822085384674960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_left",
    "hash": "321123432722585683965037062835223264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_right",
    "hash": "531798342536286608415970243600202056590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add",
    "hash": "975633181298368677312172907344994547847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add_signed",
    "hash": "181787421255219256254742357137751257860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_div",
    "hash": "66412828231994126232534870946380700281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_mul",
    "hash": "741240520937506624616286290776631250384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_pow",
    "hash": "171842335526161494322037619897191532577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub",
    "hash": "41409116713814693858709559630331115086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub_signed",
    "hash": "91078552900379389313704892490563441653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add",
    "hash": "605474044342141023714038708922979965400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add_signed",
    "hash": "140003024736887035713980794649183573022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div",
    "hash": "1650035600361912302117071857540751775999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div_euclid",
    "hash": "70970245167624651346141470920465808831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_mul",
    "hash": "39917667891949994933596925342205179286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_neg",
    "hash": "1070653575600641849012250771385358630204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_pow",
    "hash": "101016715362158713771493575437362963636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem",
    "hash": "1291373218852412382617846692182833112465",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem_euclid",
    "hash": "44161321723632916645988886732578141445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shl",
    "hash": "56454729387428033946994045335592600018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shr",
    "hash": "161763264443120283966531634687781700871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub",
    "hash": "73686761460235629061557606453366130310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub_signed",
    "hash": "1631219875363776567518047578932784781303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::swap_bytes",
    "hash": "1395533008059601157674296859014073450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be",
    "hash": "981586448550450377113154739646554650086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be_bytes",
    "hash": "72926753316710589728564354951445230961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le",
    "hash": "17340534948967916471742125110342987538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le_bytes",
    "hash": "341393500757334904418277417274581723428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_ne_bytes",
    "hash": "890321462743232891415468133952930593774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_ones",
    "hash": "78992647648971089225076828863292014179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_zeros",
    "hash": "45697839539093761618430990749125607203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shl",
    "hash": "106165712358396407627177147335815294132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shr",
    "hash": "1636200409710640235210017857010956551215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_add",
    "hash": "16542401973518586331729723600158368524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor",
    "hash": "62468179505928643547186831495519549610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_div",
    "hash": "23761708372042478411055573508541770008",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_shl",
    "hash": "716358030272282355112159627339608349280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_shr",
    "hash": "879288563073582331516332900273906985983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_mul",
    "hash": "44421673194637180521913249194705223598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shl",
    "hash": "11296279574086854549744096881986383104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shr",
    "hash": "27457004682448401548577890564065915193",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_sub",
    "hash": "130207763582150828655089801426526668543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::widening_mul",
    "hash": "1710632016629987162711636985148461086855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add",
    "hash": "1070721285420737265716984755023350459195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add_signed",
    "hash": "75909643754524885234659652651659686926",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div",
    "hash": "1484538714217214286911881540340191873243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div_euclid",
    "hash": "71525190083336326472139898232349493492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_mul",
    "hash": "21822756662721801201901179922256359190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_neg",
    "hash": "929085083709900630215063900883832151684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_next_power_of_two",
    "hash": "7679870846495913296957821920683540196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_pow",
    "hash": "107589991311134960912313735082798527845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem",
    "hash": "1823061815155948109410262672631216330133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem_euclid",
    "hash": "183286740425707114161734802249734444935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shl",
    "hash": "805699525510286499115079895689761380820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shr",
    "hash": "1798229698495998708112946194607902874336",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub",
    "hash": "83687072755748549803281083690761715665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub_signed",
    "hash": "5657136799425070807947297159781977924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::abs_diff",
    "hash": "388761889798556235716723493888210262353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::bit_width",
    "hash": "846428544681837338815666563628530836869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::borrowing_sub",
    "hash": "169506460503117718747931431136405775470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_add",
    "hash": "1209224379313669846512533186976648865606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul",
    "hash": "96217162466730035014573476856179468373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul_add",
    "hash": "699720405827958218915862098380396857994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::cast_signed",
    "hash": "39996261440083038369176953496166155741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add",
    "hash": "115091716786889683547916242610714266789",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add_signed",
    "hash": "81337473160688842695510142874223090923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div",
    "hash": "165568186396824839626078853837368068545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div_euclid",
    "hash": "615777558192645800812338959390699500464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_exact_div",
    "hash": "55664379780060418063584216472930274436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog",
    "hash": "51928587908625692263095988436603193195",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog10",
    "hash": "723452237700919118115454846707993349847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog2",
    "hash": "313873727968325125013666468614736109127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_mul",
    "hash": "1386896460222873658110366429505227560805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_neg",
    "hash": "724755906294234784412099895030823762221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_multiple_of",
    "hash": "1528580922029129925012231344278555603031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_power_of_two",
    "hash": "1740849013898306961616944402062322348086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_pow",
    "hash": "75377242658653129997312922323119728705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem",
    "hash": "208927995300493429516997099182832687164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem_euclid",
    "hash": "775144301914194315817386660219334365194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shl",
    "hash": "873310870053090051913996900390143116506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shr",
    "hash": "40740303320527042716603836487458097213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_signed_diff",
    "hash": "32636476520031041767636593852555375450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub",
    "hash": "895489864678134134711783955036361609554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub_signed",
    "hash": "874654255705645857025648666101808099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_ones",
    "hash": "21104535475405429403494343596662102415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_zeros",
    "hash": "175291916043998908945761277167256701076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_ceil",
    "hash": "82664001846913102186549964113478005980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_euclid",
    "hash": "148761139326551148345784056821004401868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_floor",
    "hash": "1426566271101354368718191908837186348127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_div",
    "hash": "936962584117883989310104366465740882885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_shl",
    "hash": "1633331651730579930916942294296276896516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_shr",
    "hash": "97064847705864404457700141292616019476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be",
    "hash": "1296974665896773491711060472797309810764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be_bytes",
    "hash": "47819077797316911709202728681103608232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le",
    "hash": "1670657276770170964417544306407137182872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le_bytes",
    "hash": "167376207975255571886200449911557367914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_ne_bytes",
    "hash": "4463086293634870107475791268773138509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::funnel_shl",
    "hash": "833947176222425898710366204656558878332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::funnel_shr",
    "hash": "176162301139502057257448956381540646370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::highest_one",
    "hash": "62960730709090645696678526412054269781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog",
    "hash": "17552081924340408914891026779155455872",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog10",
    "hash": "28597363376095854282140247802107566550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog2",
    "hash": "80950927649640640883578574174020781058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_multiple_of",
    "hash": "1494985033268311924814880576513142392948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_power_of_two",
    "hash": "130553653383965418314915881300188578075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_highest_one",
    "hash": "1552230926469251683015614693083420657186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_lowest_one",
    "hash": "234093637469465814011670798996044265254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isqrt",
    "hash": "113963217498222552239207886477795694721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_ones",
    "hash": "1625039865732771642010608487581838787341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_zeros",
    "hash": "671874059102009783417338587524839501010",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::lowest_one",
    "hash": "86099828673865683514856148967325782836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::max_value",
    "hash": "1558179479581014264718007084419377395610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::min_value",
    "hash": "101517008116430404288694775072698532072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_multiple_of",
    "hash": "1041334793534034982313566467700114469559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_power_of_two",
    "hash": "170384911506456786355412603886861438614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::one_less_than_next_power_of_two",
    "hash": "1831148663879351562014023179778899584373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add",
    "hash": "73532313635074392944974785695838172453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add_signed",
    "hash": "1071434482088289605111739148969325259112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div",
    "hash": "47712994624497268781200521883772063989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div_euclid",
    "hash": "150706695991844273649822398875478290730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_mul",
    "hash": "1508557820869042035017329617948728186885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_neg",
    "hash": "49475697882698076531992446643753292706",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_pow",
    "hash": "411874906239563579610892114848780246770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem",
    "hash": "437774875030962741915952351463159253318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem_euclid",
    "hash": "1541471802200282841512899699292260296139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shl",
    "hash": "30474761922538610389542732540294708142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shr",
    "hash": "181690629304100758334054747397144218045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub",
    "hash": "230043199525005021015126493782242955113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub_signed",
    "hash": "2649067632922106028292815623713903838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::pow",
    "hash": "154899888620399051831297720276679549423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rem_euclid",
    "hash": "39648482667587434814821091315456749256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::reverse_bits",
    "hash": "14111980400170955278292757340026896305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_left",
    "hash": "84836484853975310796536334833474091750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_right",
    "hash": "157033273534748728913680976659526045604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add",
    "hash": "8783498930247967405540511078117977960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add_signed",
    "hash": "31543495238333862872413405954635261034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_div",
    "hash": "14768668553341481949133724339731695994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_mul",
    "hash": "1007502830336771061217730653248834956092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_pow",
    "hash": "99463637394742513259138036168495345062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub",
    "hash": "112375723384634260046423303149879743248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub_signed",
    "hash": "1672876419731746228013248702367946348552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add",
    "hash": "2670784220571115511941441514880773183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add_signed",
    "hash": "101603560127137905912377420600689050321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div",
    "hash": "90901489539738390182675084986307665173",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div_euclid",
    "hash": "65781790512750239869814693476240749917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_mul",
    "hash": "161819186828419440425569339476466067680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_neg",
    "hash": "104540352544019292062451202749866434853",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_pow",
    "hash": "521168777505841765014063527743340665832",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem",
    "hash": "42204405169484017149281936194470262640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem_euclid",
    "hash": "377874770395443565316199109410632778036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shl",
    "hash": "163277109896786456497550170856568131761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shr",
    "hash": "175208401907772055162801198166759827871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub",
    "hash": "40371671473216045314936644637855295107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub_signed",
    "hash": "169493251004127371574795489324983980366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::swap_bytes",
    "hash": "816297832958388115413690138049006858020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be",
    "hash": "5839590610321107933750519890409312341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be_bytes",
    "hash": "389150683157750612616808396393637031528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le",
    "hash": "72556917280734789119755545817394081519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le_bytes",
    "hash": "288862661715666952118040861578929573849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_ne_bytes",
    "hash": "141752401807057086237127321047183784531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_ones",
    "hash": "1250503675289316319618261251224195497845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_zeros",
    "hash": "151703611317493956141243796914007314464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shl",
    "hash": "239635928966104760401692738810264744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shr",
    "hash": "140582926326312776815276896035065719352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_add",
    "hash": "1530195770348625061718410767804951205478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor",
    "hash": "1646567059477211263013560649947789195895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_div",
    "hash": "170812095112166542479894343631170244095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_shl",
    "hash": "1243442960426854206110757004013776153795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_shr",
    "hash": "46674247793283543567401869868909416288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_mul",
    "hash": "1431296850437285998715223520953061919163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shl",
    "hash": "993579594539518272311098602637771076847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shr",
    "hash": "720730760029994113816700236689047702561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_sub",
    "hash": "54024221755048604141590649326828910940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::widening_mul",
    "hash": "1134997127908479772715504079900486814507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add",
    "hash": "126995290523701752392306498242602668054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add_signed",
    "hash": "363543667676955049112920028920657941944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div",
    "hash": "72262859238395192827450557772073671733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div_euclid",
    "hash": "86970284666680600059803514230396566118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_mul",
    "hash": "1407524366566141016113600274166169712786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_neg",
    "hash": "129906103963281691742986569979058366837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_next_power_of_two",
    "hash": "1418156351896403033410377106220531908192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_pow",
    "hash": "161164755653167446648306386964283049664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem",
    "hash": "58042223525538772558578206009893460087",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem_euclid",
    "hash": "3609227463945202956539061083594857128",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shl",
    "hash": "752694264416004185114722531946185166717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shr",
    "hash": "827672697390450658514618844153577975424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub",
    "hash": "61657048661466205723118784092776608397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub_signed",
    "hash": "80202115824888239709831770302693075441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::abs_diff",
    "hash": "1453362903253315936211007514025857206996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::bit_width",
    "hash": "1841651249970127906510363251689332680842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::borrowing_sub",
    "hash": "1506530766002397543814056136084742236820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_add",
    "hash": "261014684496488860815274184919639441933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul",
    "hash": "108082876752988051148653726485075684100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul_add",
    "hash": "183945521174101749076446328084090130353",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::cast_signed",
    "hash": "595719321748758588812126118823233169107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add",
    "hash": "7339833673235926594506370228278878806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add_signed",
    "hash": "1307392947414997931510107104054235285410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div",
    "hash": "19712148455347997413758064166889633646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div_euclid",
    "hash": "25379028827960431229809752345995966505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_exact_div",
    "hash": "1279652498354364870114724772394092002616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog",
    "hash": "7747390561381518464228210532276804599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog10",
    "hash": "465609840155830433012025387655486857666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog2",
    "hash": "1316789790294380822713332472693854414052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_mul",
    "hash": "141105166115437627477272930219714833415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_neg",
    "hash": "1221072743452183310914084948166031306758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_multiple_of",
    "hash": "1074396654048448223510791412316828764827",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_power_of_two",
    "hash": "93117627856361971110128978420959382752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_pow",
    "hash": "72261111869128669544077983807105770040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem",
    "hash": "455604724793449372310342505980249837420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem_euclid",
    "hash": "1070089801690118221016755843612315889762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shl",
    "hash": "1763657526928913315616943137810345172779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shr",
    "hash": "1014045571235361211012373561960132530808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_signed_diff",
    "hash": "181127121998433497867683755894528852236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub",
    "hash": "70833421622475039834984925334770098167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub_signed",
    "hash": "24933807379038884443563234616489991097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_ones",
    "hash": "1634891392167269841817387283231954265191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_zeros",
    "hash": "275952997142886099113267787628449246915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_ceil",
    "hash": "24020411044656085248586030498591244898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_euclid",
    "hash": "1522815504246554110210597642381481228313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_floor",
    "hash": "413697326632215689513033085729235876864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_div",
    "hash": "1767393526777316741217805446233003687016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_shl",
    "hash": "114926958674279792002790070507453106365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_shr",
    "hash": "78743238479594020519337618769429537295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be",
    "hash": "39448442586791900895129482515152215479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be_bytes",
    "hash": "136265735123059691067824810333128644804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le",
    "hash": "6575402344940026295140722313527073999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le_bytes",
    "hash": "648859472694648661715956129682493922081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_ne_bytes",
    "hash": "484581508578609862114020487117622286497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::funnel_shl",
    "hash": "1831928488281552893915421280945876496933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::funnel_shr",
    "hash": "1718627559103685675185510436000222263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::highest_one",
    "hash": "183755354931711753009491708371495298139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog",
    "hash": "512419192871955805012729258564762073403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog10",
    "hash": "99009339150994087929543971799909813476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog2",
    "hash": "1282254678211740802116912487747935677297",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_multiple_of",
    "hash": "336572485648477330610189770802703719641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_power_of_two",
    "hash": "1002429032954487291714139343589331350940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_highest_one",
    "hash": "176057886629516411312520060663187677481",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_lowest_one",
    "hash": "1772011267510833457117526120637437840678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isqrt",
    "hash": "1015654141026741896117013406774921204679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_ones",
    "hash": "126296937099501001806575582728839336716",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_zeros",
    "hash": "913423096705529582812295291280909896630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::lowest_one",
    "hash": "58165903965748867399444654643912735839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::max_value",
    "hash": "165482016455666282157964304211721585834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::min_value",
    "hash": "475658010241467025914378934411082368702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_multiple_of",
    "hash": "7077102123982813748268171067609854640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_power_of_two",
    "hash": "15934648749771077196983976521736213501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::one_less_than_next_power_of_two",
    "hash": "167936334212727414733128836873282660080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add",
    "hash": "1838931587116817017713713097074245899829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add_signed",
    "hash": "109994362394734708062616252731918986464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div",
    "hash": "1683727786428816161614084243897840059886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div_euclid",
    "hash": "162401622057382630338915310527849520080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_mul",
    "hash": "1745451321050495194918138817064128180120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_neg",
    "hash": "25949604993513903610485000836010644960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_pow",
    "hash": "1306870012588158328312803948388237818803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem",
    "hash": "15491585098345921094594038723912562323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem_euclid",
    "hash": "312186884287297868914801380805020592990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shl",
    "hash": "571237008184872961111813316759003737465",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shr",
    "hash": "147521806708808027952057596709483841460",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub",
    "hash": "5450955403464874012556190186318098803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub_signed",
    "hash": "480884732632175451610346959019486640671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::pow",
    "hash": "409391755725227994312913050941583399662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rem_euclid",
    "hash": "57397587083054177408865191801269094579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::reverse_bits",
    "hash": "150990564627644432059713403304445986981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_left",
    "hash": "31511128114722151455926785629942994921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_right",
    "hash": "613463176573145116111027959992389421964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add",
    "hash": "929648093486504281114026683537649254964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add_signed",
    "hash": "1040663146893247864815519828883128479652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_div",
    "hash": "221121096277583670411956608198751257531",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_mul",
    "hash": "1157811073463123283610280714068374442222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_pow",
    "hash": "180892747837371089694478767795481339326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub",
    "hash": "566679961942012136811560759320696681355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub_signed",
    "hash": "168945332747474461374265014528863459545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add",
    "hash": "1480754015125716458714112585216670697354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add_signed",
    "hash": "795795314393657998716377020635865760329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div",
    "hash": "1403677461751978821811822865568054498633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div_euclid",
    "hash": "47551155900921223681793214551179898983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_mul",
    "hash": "818305419299181379313370587170060178894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_neg",
    "hash": "187409803118950934410612564508087204457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_pow",
    "hash": "1178010192463896498917139257131274859366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem",
    "hash": "65675569686785178974261911364815366810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem_euclid",
    "hash": "90178066620612770602417332730100219289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shl",
    "hash": "1047443518032890216110151639514689392230",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shr",
    "hash": "1733804632665133801010875552480200767814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub",
    "hash": "156979720586745690998916048080652092218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub_signed",
    "hash": "168113216171228877772515903334691804138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::swap_bytes",
    "hash": "26223585139362857097682390085233538231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be",
    "hash": "1747415652182274495113411723681808695778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be_bytes",
    "hash": "802175235802763736112821148706781939339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le",
    "hash": "31812112187012911667727532234732711713",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le_bytes",
    "hash": "23225516709366135662989870180589880445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_ne_bytes",
    "hash": "763757368905007305411830225897455027152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_ones",
    "hash": "77947668249770875246299094704860794108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_zeros",
    "hash": "1201436611401488723311547885830630281817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shl",
    "hash": "110135443192135785394198524432779072759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shr",
    "hash": "173104528634308162152997630665875327510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_add",
    "hash": "130854638335692444805345988580583875499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor",
    "hash": "1509205979857540178714701701431614399599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_div",
    "hash": "1054048433211677639311381894892147448879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_shl",
    "hash": "3221810376628125248436002490567793781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_shr",
    "hash": "993980319014128067410105512652097820183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_mul",
    "hash": "75222320028002803713161001380463895117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shl",
    "hash": "105363741659744331884102463898962387575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shr",
    "hash": "127320175334037829323283841671812449042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_sub",
    "hash": "623932314898806384710942612752481980908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::widening_mul",
    "hash": "120191446255741742986818314756650659835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add",
    "hash": "46095478919112651485037565198280203652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add_signed",
    "hash": "30416513755896713774727588667933906466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div",
    "hash": "573424416759309556214300363666633089101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div_euclid",
    "hash": "72822270409582606873637887505030040976",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_mul",
    "hash": "1095641421678039523417821726387724160702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_neg",
    "hash": "62870448785493894525624117359647437050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_next_power_of_two",
    "hash": "106738313755158105207862928638365516086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_pow",
    "hash": "1410094888082897039813643784399102397767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem",
    "hash": "70354465753213225501376776554842333694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem_euclid",
    "hash": "71487088070792200691472209701701326981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shl",
    "hash": "153108392396413981513481987788874371814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shr",
    "hash": "51170717787290303411248112581561361389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub",
    "hash": "303127917241666984113380325134893912788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub_signed",
    "hash": "180140118399735438949810877066561683117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::abs_diff",
    "hash": "10410473689703668554482628005407803019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::bit_width",
    "hash": "126792742840305218035442401157123323484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::borrowing_sub",
    "hash": "960214347725770245218282403950777735473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_add",
    "hash": "201214952807449142615605010492273830706",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul",
    "hash": "32244147346498853399541988580572365579",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul_add",
    "hash": "117998536721572181153424129200097728114",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::cast_signed",
    "hash": "27045245815239487138989863323869512199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add",
    "hash": "1107808469356821499617652381331539337348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add_signed",
    "hash": "177593009579339160816166999687079108289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div",
    "hash": "1134007249493431806316468850992287472407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div_euclid",
    "hash": "1668147973793522242415818826441974631419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_exact_div",
    "hash": "600217049287523713815582194527679370972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog",
    "hash": "535102360013798563918038026509821621056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog10",
    "hash": "377569369246271093476738038013274682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog2",
    "hash": "100190692607452385808868259468458185041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_mul",
    "hash": "146271844041966271011499267315632990270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_neg",
    "hash": "781996688275858605610580264585837904682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_multiple_of",
    "hash": "163018920700552996843327472952370103878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_power_of_two",
    "hash": "20316767837637004643742295838875000582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_pow",
    "hash": "372774605324920972614555820713458870314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem",
    "hash": "53208037020167880594535795716170844856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem_euclid",
    "hash": "20105813375416715479871671060218276993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shl",
    "hash": "1183078185382978604815270261470990028180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shr",
    "hash": "1049781919000496223017845163922862150115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_signed_diff",
    "hash": "99439971358827945036214300327216244015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub",
    "hash": "24617482615339559914756004717085281567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub_signed",
    "hash": "960904839385295753515710657864051217938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_ones",
    "hash": "324350866661302175918137188280018081134",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_zeros",
    "hash": "56741374948277424112251257584850624786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_ceil",
    "hash": "86900266232708557152549347006943820263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_euclid",
    "hash": "1282246524071971931410823102720301607806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_floor",
    "hash": "67736651607885857572391163415524708722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_div",
    "hash": "1695434107253091578114541742224781619400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_shl",
    "hash": "281491875010662210818285699124577269899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_shr",
    "hash": "4836233766001198215625874070997118569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be",
    "hash": "1140624266355899054612108036483445962695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be_bytes",
    "hash": "113748767177521693304337703153102641816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le",
    "hash": "72355397481088247806792485675036180881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le_bytes",
    "hash": "119512590659044944261306145657365060771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_ne_bytes",
    "hash": "96140319758256573166219708888473423648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::funnel_shl",
    "hash": "628441809159600887014862925896611234355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::funnel_shr",
    "hash": "310290599078507416410647299545461286806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::highest_one",
    "hash": "68762299162425585861199513990972854189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog",
    "hash": "1630548855230933810917518350716343255650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog10",
    "hash": "61699522384534350131780024297082885103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog2",
    "hash": "1706398369713869467116827220962409657688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_multiple_of",
    "hash": "54021697290269831959552990814485871962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_power_of_two",
    "hash": "250202909415829950610667406758720608691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_highest_one",
    "hash": "87336144386647515863328000725089359056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_lowest_one",
    "hash": "893853363930519572411758136284085783450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isqrt",
    "hash": "452593132375603745715835203652214993812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_ones",
    "hash": "790362655428547743611208593463573994170",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_zeros",
    "hash": "592548824112144282714422772314322109198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::lowest_one",
    "hash": "102716477303781279999676464761030466055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::max_value",
    "hash": "163954024883443883281120534033176639637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::min_value",
    "hash": "1279088669544826196835273371975927535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_multiple_of",
    "hash": "104300695617189217616301728363345131100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_power_of_two",
    "hash": "1789145460474611242915488633302047635424",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::one_less_than_next_power_of_two",
    "hash": "1022595336983677424911546289060925851283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add",
    "hash": "100504205420159876791747852419587288345",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add_signed",
    "hash": "1496650480143093217514177524401271215953",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div",
    "hash": "110080074470365596101175583683387724223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div_euclid",
    "hash": "1719251918424185349611696236129171391712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_mul",
    "hash": "17322629881004843585167794697912072088",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_neg",
    "hash": "915588300378054808873741284275890734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_pow",
    "hash": "149977635380179171010201002510224702695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem",
    "hash": "107244060438001496959043040152906430467",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem_euclid",
    "hash": "2292123349923053417320940208537654450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shl",
    "hash": "176472957041820572488861675376031183676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shr",
    "hash": "233450956287642097613565849526110026290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub",
    "hash": "6008126155551471401650957747163895110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub_signed",
    "hash": "166646923747740338209071772385496707153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::pow",
    "hash": "1745244060511239409416771612648325808698",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rem_euclid",
    "hash": "87960788365037385125484281592825380426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::reverse_bits",
    "hash": "7968789607312411069385548009491379640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_left",
    "hash": "1307016191746963152911648197049651189871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_right",
    "hash": "1629194324158507489614227994011084839957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add",
    "hash": "100018278691042368817251048937996555663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add_signed",
    "hash": "55800641925293857404196949857226340049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_div",
    "hash": "841032555500886711215793842505639886439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_mul",
    "hash": "91409020732977937414640348171716471180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_pow",
    "hash": "118227537944997530791417252794732524160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub",
    "hash": "1132630325420268602818413416920963264296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub_signed",
    "hash": "71493900879766730623253127078466706394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add",
    "hash": "57790980483994971103544263139181573946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add_signed",
    "hash": "131077351467494082635282992206328395929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div",
    "hash": "1299294781378758477310934307253277959173",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div_euclid",
    "hash": "25961743352319948436039241546171777039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_mul",
    "hash": "987848202777160513215015718211021584312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_neg",
    "hash": "1004015299151707294315476729343203412479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_pow",
    "hash": "1730404291730262701511445093918511255234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem",
    "hash": "15587009530192003108766531257953356648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem_euclid",
    "hash": "442020366646238718317702379738803743967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shl",
    "hash": "1720660173868567722811691904128989455541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shr",
    "hash": "39106236984078125209371616412746695113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub",
    "hash": "141350659347655857832824137274066308582",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub_signed",
    "hash": "64034721859521311214940530366635511715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::swap_bytes",
    "hash": "535695352498337529512147536315746478699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be",
    "hash": "1505479175580634764626225233492239377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be_bytes",
    "hash": "1048301589878172375912281579800649191837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le",
    "hash": "87738046667509268214242195674063244819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le_bytes",
    "hash": "8871437546863024287266738588269959331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_ne_bytes",
    "hash": "144441599208557328867897490057482238110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_ones",
    "hash": "828272988967978795816624881890751773455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_zeros",
    "hash": "563527892768608328910077037940936518802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shl",
    "hash": "1640626529940660662712596101755229582612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shr",
    "hash": "108435143027882122758906742574633174809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_add",
    "hash": "87221581696529708117747633625843428992",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor",
    "hash": "1254196771101498421216397036414100436388",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_div",
    "hash": "1735913489132311609813099065387266863250",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_shl",
    "hash": "1234254782035449940817044274574090512744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_shr",
    "hash": "643514112325479717912496038192177572854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_mul",
    "hash": "262325362420092972017626329075357607298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shl",
    "hash": "171217592746399518213825504702974536413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shr",
    "hash": "537151917267335587012793016823279191552",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_sub",
    "hash": "146999445823460923837650766748647607806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::widening_mul",
    "hash": "169520961882201194496320957712378488659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add",
    "hash": "118531085298240041968493098956998850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add_signed",
    "hash": "3012272689563936572000917829446471161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div",
    "hash": "1205904568981318414217721251571349254641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div_euclid",
    "hash": "711510756784469853910088993593171244819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_mul",
    "hash": "412955896383147351811784716957447772542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_neg",
    "hash": "38567081061788446624107942493431621350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_next_power_of_two",
    "hash": "8228371211794757164144922102822434451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_pow",
    "hash": "1524974693431587802210176761172321919626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem",
    "hash": "79949375260691302304889995045545870875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem_euclid",
    "hash": "266257575616836260816913993309249302628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shl",
    "hash": "166987003722345357923992787929595196814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shr",
    "hash": "1830816449617676562415119426450220679595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub",
    "hash": "16361334553545228718067153365671107973",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub_signed",
    "hash": "661691245298258333015277824269609903726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::abs_diff",
    "hash": "625199591459185175412880359699047066045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::bit_width",
    "hash": "231623219373014609811489940755796424298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::borrowing_sub",
    "hash": "461780584293771717715133199852404227698",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_add",
    "hash": "1456915684133012640517248865959994044500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul",
    "hash": "1395832502107173045911132235489121959600",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul_add",
    "hash": "87151447482876319214664226159038761691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::cast_signed",
    "hash": "680058370710377964416719151653525845986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add",
    "hash": "89287954886468619252760919414808496479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add_signed",
    "hash": "1552750871398945522910349097356584137086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div",
    "hash": "88120489321813445426735920768597637087",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div_euclid",
    "hash": "631631838080366252413752809144129835520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_exact_div",
    "hash": "745324674617141027913313008114696642971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog",
    "hash": "1571381664606353560710782149081217330959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog10",
    "hash": "13822103596453653070281581351699727858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog2",
    "hash": "34919040261549847775829495697863429161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_mul",
    "hash": "1417200282281422413016632271311610318517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_neg",
    "hash": "703018481426641814511241980309270085674",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_multiple_of",
    "hash": "7276270284601957149003320099615336090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_power_of_two",
    "hash": "45940484870253407153999436732280196886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_pow",
    "hash": "116361748774960427618030639831143364015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem",
    "hash": "41725298388509887864718245851505431350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem_euclid",
    "hash": "445330317005260379810954963294019987326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shl",
    "hash": "1281793017118427087416723674970929412140",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shr",
    "hash": "1841901567411927351510652443848293501891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_signed_diff",
    "hash": "157776528600593450772667847020939817444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub",
    "hash": "59114905596214944275336065890603581369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub_signed",
    "hash": "1263186507827210156110928913220221814730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_ones",
    "hash": "925044406063731944110590835004020453701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_zeros",
    "hash": "47642186769213980967055503143905517271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_ceil",
    "hash": "850572629299251395817453869788592111401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_euclid",
    "hash": "99477988059936339064896591300190397363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_floor",
    "hash": "4316933924915389773121809996608174099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_div",
    "hash": "73844611645906510919005917631294469733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_shl",
    "hash": "137616368584556832945913590399188628547",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_shr",
    "hash": "1622338736032011122011995106619483214795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be",
    "hash": "540165310321703502511999138307056855282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be_bytes",
    "hash": "87888647928384192082422935897307754859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le",
    "hash": "83498975875349382734600394630339507095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le_bytes",
    "hash": "643883367641928581916269398835344917362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_ne_bytes",
    "hash": "178083143881843407467703537041902435399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::funnel_shl",
    "hash": "192015706132112014918039635739058792631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::funnel_shr",
    "hash": "107705136280370870229754310939187636889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::highest_one",
    "hash": "24779084574613246210323497501919642961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog",
    "hash": "86836456205218452634307025595646698392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog10",
    "hash": "85648951089851494703784533428155498814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog2",
    "hash": "316668095730675412811549929869117048413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_multiple_of",
    "hash": "1654710780086898973511379504655720564938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_power_of_two",
    "hash": "1566800472668384411971392039874246630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_highest_one",
    "hash": "11019073767086426466501073293377926623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_lowest_one",
    "hash": "1656405635898920528012207482390000260425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isqrt",
    "hash": "183211338665346715034067577748296679291",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_ones",
    "hash": "31538497591615827358369752843876727293",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_zeros",
    "hash": "74384637998006410418377567666784276209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::lowest_one",
    "hash": "837320189982731540717917765121360279791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::max_value",
    "hash": "25549293038660142601708574290558137999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::min_value",
    "hash": "36827722987268083396631114023316625835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_multiple_of",
    "hash": "908019191666251932315518104633628234723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_power_of_two",
    "hash": "1194979708330238380011973956522286907696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::one_less_than_next_power_of_two",
    "hash": "9375359834159630778878938636260578864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add",
    "hash": "26195867178919098137740125012797303465",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add_signed",
    "hash": "65061488826710469923242362382214261394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div",
    "hash": "799643572275344971716643283602148063155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div_euclid",
    "hash": "168359878286662157478116824140847285464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_mul",
    "hash": "15765558242646906914608850915749449758",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_neg",
    "hash": "31021069904100727751131622555218304620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_pow",
    "hash": "5292850863832233885638156711902614594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem",
    "hash": "416758852151507752114884303263602988439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem_euclid",
    "hash": "97119059648415417746640061626085050720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shl",
    "hash": "1004008772903942435415334255100683369133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shr",
    "hash": "1576386532140036760713108350741851376401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub",
    "hash": "474370991983164181813023260355992609744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub_signed",
    "hash": "26472634960458950743378050549800614298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::pow",
    "hash": "212897309882364465313957097700867667991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rem_euclid",
    "hash": "38350975475541820943534204496976406339",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::reverse_bits",
    "hash": "85807643268411758852207300471235577399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_left",
    "hash": "9073691574396577837447822792891208298",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_right",
    "hash": "162644728621311428602607631939382405678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add",
    "hash": "9013296673325797447210740850794342265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add_signed",
    "hash": "135334058171905908821455077360438938422",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_div",
    "hash": "15793707624814942864088079200935683407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_mul",
    "hash": "104964325342398522413076609058153236007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_pow",
    "hash": "102202932417303602532875785488179169029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub",
    "hash": "1383354714022913411113285630047269281663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub_signed",
    "hash": "63274378042968347603282322490350284180",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add",
    "hash": "58811781297817964318111162285319818978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add_signed",
    "hash": "1388993924888331955518334965519994879636",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div",
    "hash": "159192081120977196933065507708642302226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div_euclid",
    "hash": "32378849777214856358790416685560610767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_mul",
    "hash": "846238516485608483712394564093250519839",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_neg",
    "hash": "355189324473932949512801765216487994911",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_pow",
    "hash": "141801861030446498492139824600161235369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem",
    "hash": "106436410021207709188273376586310062453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem_euclid",
    "hash": "164875275470045668359658219956063170227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shl",
    "hash": "157573242257305239923059338046103827068",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shr",
    "hash": "1547379320180546286312795497243926948310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub",
    "hash": "1307345475949289596011423366383301153023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub_signed",
    "hash": "1791650826281010248712724301876368608054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::swap_bytes",
    "hash": "1676845230522690196216634530789757403404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be",
    "hash": "1672274471294921417312734172758345118936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be_bytes",
    "hash": "157231957496005933952222499061288734981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le",
    "hash": "1680044546482338682013482281226057633291",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le_bytes",
    "hash": "1599089740119937181714497572712978061961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_ne_bytes",
    "hash": "164145227202345072787330352196600650665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_ones",
    "hash": "95721175145751407786973055914346942901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_zeros",
    "hash": "1036982237799398276012691725375682305183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shl",
    "hash": "18211914777234733612749341331678833270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shr",
    "hash": "816385201642874846117711859803111211215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_add",
    "hash": "18305200539080999937692536706112892813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor",
    "hash": "41980680107816792213662023038772750117",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_div",
    "hash": "1538446406733376024010821158479767697214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_shl",
    "hash": "1525986592492355154817524248308992560126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_shr",
    "hash": "1616800836772533141015282402611400971421",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_mul",
    "hash": "11511581521809524721808276934978273174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shl",
    "hash": "119219594017145745644239334786707714511",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shr",
    "hash": "174894696459093223323274227398093797415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_sub",
    "hash": "1532066451777410930217202448181742040419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::widening_mul",
    "hash": "102836227663150559164235370853069637695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add",
    "hash": "14714135266883590143963672068058193156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add_signed",
    "hash": "1772293053969086230214223947448532149168",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div",
    "hash": "13436635590650447113496861041204960546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div_euclid",
    "hash": "9559743602279782930175762916176945268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_mul",
    "hash": "1727082938973752102712343960319431782405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_neg",
    "hash": "48897835088111370151272710824384606059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_next_power_of_two",
    "hash": "1493793962164163978316846231611848680824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_pow",
    "hash": "169703687556833465614623407418616348444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem",
    "hash": "1498098363820876155817465617802670934555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem_euclid",
    "hash": "946333762990929245918275294492242683847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shl",
    "hash": "73680321337777102628895548863965689774",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shr",
    "hash": "868798987916772418226488620617727103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub",
    "hash": "62117014233557603814466131219830999524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub_signed",
    "hash": "1024742144034832932514636020802652468865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::abs_diff",
    "hash": "124679516092357812428249133337169351543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::bit_width",
    "hash": "792475724170927393515177143918136453680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::borrowing_sub",
    "hash": "4849999270755641714714971421931970929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_add",
    "hash": "3277489210423435799437471754656245383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul",
    "hash": "80774378626261463532914357450177519979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul_add",
    "hash": "510404118664130095914780532073600665575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::cast_signed",
    "hash": "1651628048755582532717204684544133677726",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add",
    "hash": "79628754160654265195868607472716161204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add_signed",
    "hash": "69689912787134632629828248549857586278",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div",
    "hash": "906747293762983134410184545910785984286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div_euclid",
    "hash": "129483467755116463367632365028551879547",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_exact_div",
    "hash": "505008777874518261516855753414513776584",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog",
    "hash": "1509394244843405577312733053705693096857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog10",
    "hash": "157682230385057029222012884580308215814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog2",
    "hash": "50583337313053329404845503660603560676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_mul",
    "hash": "143572956432032064744447501745832117320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_neg",
    "hash": "258186376436616724086350202721281453",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_multiple_of",
    "hash": "90227550932728783819512605195290669373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_power_of_two",
    "hash": "141099820436424836822146611347191086185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_pow",
    "hash": "103097111740424398625052208924149574533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem",
    "hash": "1635640350098781440116528961516446286994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem_euclid",
    "hash": "156256841897407490361807514076148995157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shl",
    "hash": "823524258390685650110026138172287926854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shr",
    "hash": "1053472433770054083417475228193117406789",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_signed_diff",
    "hash": "101675195690414354984567290350865287537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub",
    "hash": "979090888644938360611991061608854301815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub_signed",
    "hash": "49083636850541018052013939034941628820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_ones",
    "hash": "137368381448604167703416046205455599816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_zeros",
    "hash": "1194073880222762911211367705057056598551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_ceil",
    "hash": "1716115695399316423118044476678068147651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_euclid",
    "hash": "1384910005739321457712048896118147563864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_floor",
    "hash": "293139811984189872916619012543356967244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_div",
    "hash": "176031486790812250477262565825316534961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_shl",
    "hash": "3825626165345114955256891246669127283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_shr",
    "hash": "110666992471551883801081278572819049256",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be",
    "hash": "1634115123468951551615959254490637102669",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be_bytes",
    "hash": "512556073428270989617335560047319168809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le",
    "hash": "267947006411212101312956730253396124748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le_bytes",
    "hash": "116128528478253092098763148429828096017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_ne_bytes",
    "hash": "44865517427538800504241740979033245306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::funnel_shl",
    "hash": "5735857785464774485375935458645163869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::funnel_shr",
    "hash": "101148799637376095666579640689534038786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::highest_one",
    "hash": "179298479467565868797544630867655632328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog",
    "hash": "1387049698665817112911212442041530342318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog10",
    "hash": "172389643744910030774385733277492502124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog2",
    "hash": "150614045265181541127113376896708745784",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_multiple_of",
    "hash": "80466408942777512049363027701449327301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_power_of_two",
    "hash": "156396365605833484958181337486344432065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_highest_one",
    "hash": "39989797802472111113473541300235732208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_lowest_one",
    "hash": "121332255672511537585054996436757482269",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isqrt",
    "hash": "118968670960484697679299811250457974686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_ones",
    "hash": "1058166667529694514317182505662357257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_zeros",
    "hash": "137727461262685009026677167401224787943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::lowest_one",
    "hash": "4641188255383319942834835150624261732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::max_value",
    "hash": "4486970277308287239471856160566229118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::min_value",
    "hash": "167794184097678297276383051842950995400",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_multiple_of",
    "hash": "1584348761020676436412358580505722170520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_power_of_two",
    "hash": "123260860643644832367151953872796968520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::one_less_than_next_power_of_two",
    "hash": "139345977469636717711512293069058526782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add",
    "hash": "13303575705867660165971022725037666878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add_signed",
    "hash": "908006034650321841016116341488994455335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div",
    "hash": "186484876334454516715035634574681215429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div_euclid",
    "hash": "8629903787972950494645341831479041056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_mul",
    "hash": "761861023504359043615820998596748928032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_neg",
    "hash": "984738569451871459711127972507593233502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_pow",
    "hash": "139926993219949638171144921517447889610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem",
    "hash": "556945981567513907713812354526515034093",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem_euclid",
    "hash": "84481111969905266989279377217271821847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shl",
    "hash": "331514536804098345610957318375719762218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shr",
    "hash": "1072446801189475073811611244687071405208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub",
    "hash": "157526224548632931644224402393760490185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub_signed",
    "hash": "782088032193097822616581212527002793821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::pow",
    "hash": "110569385689116215472222297445961327594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rem_euclid",
    "hash": "234116731022749993410489510568136955487",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::reverse_bits",
    "hash": "1697862409208210514610321586748941059020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_left",
    "hash": "104992319209161994534766136784127036050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_right",
    "hash": "173688168671733271835428001931738365491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add",
    "hash": "163344409514712153181005119158175808957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add_signed",
    "hash": "806354038309892735717262468077186661854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_div",
    "hash": "13339991012339100057074988021940298997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_mul",
    "hash": "1563086521540655781917580885661803727599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_pow",
    "hash": "1689153022244710950213813615044713146578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub",
    "hash": "164529513330108498239508375239415786354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub_signed",
    "hash": "5703789966932716618301900341983714420",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add",
    "hash": "1322036078559688172714443654415625287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add_signed",
    "hash": "797943756547342025918040360566390775561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div",
    "hash": "143798775344748179686380931376751374709",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div_euclid",
    "hash": "1173808784228032929517358896631691276136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_mul",
    "hash": "3608372838833281585745150622414257379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_neg",
    "hash": "1559961212844043619016671730614693038505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_pow",
    "hash": "49831222506809086576211607955806234320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem",
    "hash": "119955445306369492855419599716817181315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem_euclid",
    "hash": "31736370287456951228219347539824959161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shl",
    "hash": "124671804108753423681950683982389733417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shr",
    "hash": "172607056970579871726927099869183409821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub",
    "hash": "38097089191587564234225193629549564544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub_signed",
    "hash": "291801293433262117913390865573861282866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::swap_bytes",
    "hash": "120551370534394090557490525988878896498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be",
    "hash": "161557361643063989525499208221220021359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be_bytes",
    "hash": "962366381157289633214887976485745107153",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le",
    "hash": "112280326375509928016840830407762485781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le_bytes",
    "hash": "64188939572457717285912996117168306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_ne_bytes",
    "hash": "163645895777729786435933963040883048909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_ones",
    "hash": "34848745501402853433440145735131341955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_zeros",
    "hash": "520706692676723386716421387967491016722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shl",
    "hash": "562860031315337891212700022038250126630",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shr",
    "hash": "87724262238900420351530321032641357855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_add",
    "hash": "174107661030119018973646362480685393050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor",
    "hash": "33675937863748577387218057049454129764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_div",
    "hash": "149820606269351826478461319116630545409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_shl",
    "hash": "104008876425712292653244863175083538156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_shr",
    "hash": "580863148931834390711878700730276912762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_mul",
    "hash": "72676205537820890888483093027109999617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shl",
    "hash": "235801083224622589114086298196149531729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shr",
    "hash": "672771047639733910031387706019824471",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_sub",
    "hash": "366503061556370158810229951695642705038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::widening_mul",
    "hash": "16525361272602373073979192758834379268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add",
    "hash": "7249394009779449325411716998498825991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add_signed",
    "hash": "817867605037749158210816128346806071551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div",
    "hash": "83536686595714270246088689312786191870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div_euclid",
    "hash": "180190506352706811421028202463767477771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_mul",
    "hash": "136731688598983939127472435238823692605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_neg",
    "hash": "51265597946994964859113084491107688968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_next_power_of_two",
    "hash": "128510514562436467910846276771783043279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_pow",
    "hash": "1414704955733065724915312559251816101407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem",
    "hash": "992656055547684486617874421316704909271",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem_euclid",
    "hash": "42262476230931759675936506858611550456",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shl",
    "hash": "12870946966867121998618375461097558556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shr",
    "hash": "680456226994577824710449071941321323569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub",
    "hash": "172853077466930782957249088533345327364",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub_signed",
    "hash": "11708782635127670974484500800200337666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "168324783253819805801621372888688116399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "671151847319560701018215481981075756255",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "149082781584790794512390292681071604410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "801711723842885211215133040571952802904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "802824664630066161910740970229786567369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "121489016793061389334949603524338692755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "82702274841451698941498200880918473019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "630579549531177837218150261085642272818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "145214757203443150401834858091661926187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "1403037782065208932310920756937495891530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "1249286509895486637711697768188041528665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "13702798527286088166907092851682506039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "1072105098260801586512034411377152784376",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "343881821157701700913179427274574193092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "87567791308502475475117761061708787275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "115091688206309694655610405742002683338",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "70493415269589840911407610488547624253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "162286681417157734724601659150776552085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "762452374046528571716349262227348707038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "112062649414193849825326272542381297773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "993779571207148722115594003705053999024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "18954759666120045113477312031498919860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "71068714188589246651152651988979469532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "946913328977667275616518185123361014441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62789010701744906472650850523357238811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "152335012584365706195144848729680384529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "124668582575504799408939803164705167623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1492708171079531983013094965107732275320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "99344989961906910859655845314961630218",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "549541315751598218117387823358210034557",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "16238465580334191660585914255923213916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "677985356884401301113759318279784292984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "1541268089957253190510575385654182451781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "497877118493258758613668834176996063914",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "870415280803289242473538355178777286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "1701773229702030296915445469985662737258",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "680397236146226770810854030815808277131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "173489684842167718866931010283630085524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "62517800610442193176771722147009336035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "543240623766636973213910515469458175145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "1660873144418209545818080636269548222040",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "156595562658349734434881179276214446922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "129863209220796457194033943279544426862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "62291126831812023901820230448828087733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "4732443673566484913285756424353572129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "52921484873904469512126541827254085207",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "18331133260686256387866816458979057988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "1257207589859342341616545880198526501589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "155403075995464031659261935548509317562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "182483547220193643062729354911722615756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "51602074703988969461609074501191342665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "179031555685206478911927447634192652404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1407004932897518011114990903027164791364",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "1054672868422697894410651591815545204895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "168717845759057778217951491526419373966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "181490906706048322662275188474944222756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "804467660597404883410679538120573993748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "3164074863750437242096137598284252106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "122994276051120671066072347802900825015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "80411060256395997132784683409512566558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "1583364087458867522313936571739496273209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "613804253440091637012446708164816908863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "765933054495863308518436784066205282811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "1519019611043509476015246892779758175542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "9408117703162072025895171282982462870",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "150564912499151615682447505807881336852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "172676270178508659415463178941348330737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "146285662385775617413755580730185329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "82773598809682727814414461963059998546",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "47163072095902067134962904709017868108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "55660786198300157274543918254569578941",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "131384999329378627482825743846585768949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "159600563012397115158169191805831981702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "777065404425768581011959175123019142312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "158364732532054065582964678273200230282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "8965441533369596039906882550821162120",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "80407205364924958417579345926786121379",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "532957278365025934714957920968287548500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1311692526491819487716087177006343797722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "166682735392443399417558963319560876362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "63652717384354227633302453048762703296",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "27312798479234911189460425113239355800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "161982801780879410626406187099018628043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "139447603458712754254531503151638567812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "33297445294704237614089363601551659682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "15535952777390239167920606516926671066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "765699991276162289616024400385073975520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "55798357473227704063640166939094307101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "102436085750722005748167257087822918776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1179821596889779885716801034468047599493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "895752361961504996511060349181240609445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "15020482063967124925074258144532183955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "113154649403873277517439534482691393947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "38191301642222308995932411119289438108",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "1632948203843806965429637501582170637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "29619687821494627415448968911519738054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "912278885089972387910884997125857195857",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "132131464183242898053361665226008929632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "81098444509782588855809979665442155592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "65301108162698929366520150388672499009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "1538908404277260516313376807691671367567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "1439015802523232478118226729605024574645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "43617880151728355252560734562140138239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "1539759485970142054713727933662912183240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "133831496907118026992239891342147211990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "145572921081843802738491149036163716761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "50162969233313232266109479598995136813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "967894105241719505716962790493025179115",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1081484146589229113012188184673416461789",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1636709926454604578213091624259131050265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "64108743245711202037787803954362645",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "129223838115075689579715832321393059697",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "1833063703470503422311403246938206599647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "7356270647471604151839703163555571584",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "13828591166768864245532035323541931719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "79689035439824619177680624430150056348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "13095369698325716189558774909253987264",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "21626110039750719328664554431696161451",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "16033620677202597350402890661758020631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "48590837664849739216771421219375235884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "14235158014840765511731934812962704004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "1216471662964257344917038090430920283867",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "76734583523146273492961392137744610365",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "814865680336473173514933571682542162655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "137015380029837307718064073611763340415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "1424928122734100753012931713296367354983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "49457433322249139416210185970249529604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "1817816919545809968415916006811613997275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "35783518140094004137034987127560339695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "808577960149976435612942025485322860875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "126264617335796019024849592539874695837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "3027366107925463257245560531320752235",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "1092805189425928652617074466932140093387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "17981752615990499298136473811142053519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "1224377027052335684610783462937683965949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "173494879192004922751592415415852458703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1808525111157882397110158931266951288033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "113855230296861063058702521009421016163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "25925854921164593779319854054356584891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "157839435995156017399682339764070340922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "161052688339746012267912914714523874691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "474503140961616184316426223388279808027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "145409655881216852487260256185527812946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "88190601767374797334450206761987309506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1305635712114170749914644729110422398220",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "1717325501528025176314336167055796456028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "171136016183556377812506942013177488862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "57945856040875724312142610278723011654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "23381364343549621821791546221354899891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "83584055424230045716348238353786218926",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "139736623203037712414796496559828862988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "17347149802863083503811952634388937866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "1199964231682735330117540085751785727162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "1621586547416335021814529076507987565169",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "129005824886542122018782623703197770751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "152572904010276411961561309582673200916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "1264186501434374737515703399939510817084",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "968521429348185937815534435243740139254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "17990399566932005449307484051470137440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "1173556209577962649211474367599331923804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "139109691086333926777681735145112678494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "155711751892745109916021860116561878624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "674643963463319714915978845558632932611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "88342147734740644872303076567853910696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "162474980744612056528502299785908942516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "11605029939844502555198116043305161835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "596881749631924052716085142365067972895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "42890771613235163102982727196084723970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "60426601293081134607924666033392141092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "174792411003192944265387252098278310419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "3512343776184952613232037660410434274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1251702683622325430113070692954749310751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "147529661748660407717433466526953269898",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "15178805659497728927254174286228564044",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16274558858822070837096752753481054041",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "436068081202942861017724835885050026263",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "732470040565630468416249561792086755960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1700849623382955163815505499801924396232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "74638610728849990504816409279874179242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "92578514809098750065212925652394302782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "1789774033442582371018297236537700247886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "133147227684749643705937095968906367176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "17670167784327724209818913061950055485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "1054215510114371097812891513579870277035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "133194749911845173461825688460038458544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "146023300702436841652358200815170214842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "7511952454941105138229093678698861208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "94009024217651140883234589932202850244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "134671464978411915523670864789172525811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "44900453762531727918105887505477461937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "1578759242383345175817168082755811375556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "32630582613874245183968672276459362728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "29317749539136002572118289209529307576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "806135352884552069118268429224580842723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "10721407682884918831805630063525052090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "1134360289385578610012466909826858464182",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "92172694312030063086983090733495713136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "1608962415490608355211979690229707329792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "7933378650786670544422034597762012837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "32482688999566922704205737494425007841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "105535385815324626158272537060506043577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1745480706326655585371797568752494202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "25591994335141990905421433251801351045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "364781917290901765411475135995673675691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "998506757686500870818126966481721643676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "452084717417314229825210377669188570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "133697496764012390194071286368676787214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "60386518664357757013743312210962204782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "7468775359044861415137121014408325378",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1279575228952713429514303776587027223717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "93891249829682413403001266019493126850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "580801864706904810713612501219484194970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "31557838437338651014350819724039333990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "1503317911369566835212463870991867227807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "48786168919914449662773775065868982750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "51483705828896560213196915080048877861",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "137622337684862751632137306901837772131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "47779157758672765531616506764632222011",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "146481532667184591432125108760324316823",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "70882538622553560803831243925501022561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "13914546763197005791776316585934954829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "927015490184192304414152870369762309995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "116862862228974224785202951063539106358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "149484694873581985821082907728379473443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "18799695061624174718408497936483209945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "107097504841700010587033652139473949528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "404142438552485276814330211645925889133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "1665392582805168231411805892827991193584",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1797563922299257481514395342537387795733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1232664104743589596712115969902021851010",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "57225247787185983965204909457167103662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "135542233055689088483025842634966695404",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "65247938765067761336178975721265612015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "1728780230697627925015024555655204187292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "51958139548233455662573717451913391752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "1305541555257259105615288392582497579484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "35006656228427422732569774071318944241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "62886144422950728217752511440859820977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "297812818616026646715676200480648450569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1426116160123859769411400549060330332949",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1810782256440388771112230712516556232143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "151735285927149027945392401018002735869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "71119107808628743087229633429424529349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "86133358390249536151648339153696093276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "425432117655556665517012004686559676928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "18118183770900993548646269409672341503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "375320528578326233615205642124426817748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "1368155256939217087014013807035904314348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "210744487583986827112466715052888676664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "1063534830710142695610947425477549299327",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "3483805432020819083832964793136167956",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "70324337279697562002276677529598071964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "1833560852535885150410297412111819225549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "1471436428887646270111779557440218004246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "135803727399380469564684647277773882640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "64912896531876144553078216550758490869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "178739597373023093572840337935632992251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "481419998558807005213536321657470411198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "161229668551102816687690811448163235902",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1060332369081093278416803641358795332192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "1101037996805259481816654743200328602310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "102971588614566284129214042719567846331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "125747014759854590989915082079444353275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "1715136379622168137511741315245959148304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "620318473051770074015527817309062802782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "165457756386433769868694456081081679705",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "136262612674749242313905733722667122109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "295359559781716298617095086884375789561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "175149826245006324227131403395874374004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "367056766787740618611790857321819453043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "1166428928977154109516346578355828662283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "46868940707494108098058659157028835935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "161634760878607520379735991394776266781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "5587646604057845249123818554820032649",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "6649820541332828502044811921822657462",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "105323424742491480772712839340137217665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "36376422769117538323677222666771970702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "68429478371107741224481049137093822381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "107848965654465868061922123053922820517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "8512170624917149526670933204838494001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "67867403317113166316339397694189263289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "35194556896963060455109740759414516398",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "85017453479679218009769448155376113316",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "7262175998370199897158303242328661639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "115319002962345607467509863880613755107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "97750938258129267603617175685953804499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "8857954076141346800812460642655516248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "431365611117133166516787638901670416348",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "14761294927202996338901493857485928288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "4294311404421850613751071551422179651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "1071365067964362815417558866534321674643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "759536972672785507717111689340107446524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "48702570177844178454420947394415768665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "774246291537976431314881294901573353524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "56820757792792785313849997380612580864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "69999284048919674735625086782813640300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "77952099106443302410212495866294304016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "24685146419192955324566413395765264983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "143367365927611352191451239582267673568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "960659927502531568213007111773239013466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "634656761914514705310124791689993135262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "127775519797099426681488210646636055903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "2754192962604461271203886190370790057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "184244286995292268979511323848687146431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "410794971538582758915141345743455421196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "18735745514407539425137211584251740444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "702889628778147897014923435301124008743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "116518345746244844594489432575065486173",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "762744715977963475511812888388586976137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "1215730810867617678217749307811098416425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "1483653057901826296210537326968203263513",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "1386303450578928788016231067078585155427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "40049208320041808428408962477002988259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "50752774821665331412949566552517882317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "1554347353167191407514887854953119210570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "92322586814124004792830117933097962648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "1784506023810720236015317221469966695377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "146266473798108593212652338597786116762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1026096088965776959117415860453375559696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1069427164488365723918131425839547689201",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "39587374831133846805679236410265111508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "51936661461335253732487803038149492302",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "109844472835207839854799406238527629937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "13848344521171790278120784948390741154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796359520029978944915944819674058376045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "76890881758566050697612803197784355132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "64409663588161488915117101150178674858",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "135989111393499795857876495998217196410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "160336557282095246007924505672359038868",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "313994989677538662110045945664994019083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "1087654268600062111118190382184717349658",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "1003745816684441874912816879236889624743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "35493862594034768246070206498098901620",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "1529705562951510705013563388007840814206",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "72572079796600820215537543732237577090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "148613382319355752789939126376968048519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "95134594470734921017262636791447018385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "77511166838056148395066462372972845373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "170239474356742760312148969162728930989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "104570068531317151716899930461277966322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "1693688407889430451513347640644168517188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "179550496333790258205393620175493697330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1389863252017797444610386392296853152285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "29916252187473384867391369018141062533",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "143870251336729243952948010237772907550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "870473786792573946913474994909193858894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1551670141764110770012947235855274189989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1640758302574869765610362455172967597154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "12841978331956190751781593788369967472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "162023783624471983675307490563325575061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "167663432183766646757875305470946271653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "136347332603405568017016547632285770388",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "60894886407174481322638328660912293988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "91925538998125327316811864341810740622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "116170335443971020641009891208213715786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "1229676791308532478617001791351918090172",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "24266775984087140609777139573012752704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "55937974262022240551469780909015761693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "109861534700708793334663368856380808615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "176183793694039722156835760307031653497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::abs",
    "hash": "1478136122564458359112149582481072438058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_ones",
    "hash": "39692463180451621628674083740605021318",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_zeros",
    "hash": "710041643662544027718016165186343428940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_be",
    "hash": "86007570723609591786197253020379469728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_le",
    "hash": "155500304042389093956360828055493203737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_negative",
    "hash": "597820100489606784213452098324292632954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_positive",
    "hash": "637142414549501312013448340505718395736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::leading_zeros",
    "hash": "88557772710953362292856860635673587653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::pow",
    "hash": "1159878336360470068011384338471066012336",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::reverse_bits",
    "hash": "746658420091821298315743734355479591510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_left",
    "hash": "113591680236542320012984857539225609980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_right",
    "hash": "109381363153674846271245488158804088378",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::signum",
    "hash": "36878139688951708898160607456053177060",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::swap_bytes",
    "hash": "8926521090292459054417714434546029499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_be",
    "hash": "129568687595861126808979306453573191289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_le",
    "hash": "146041862906832582929952080899445087000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::trailing_zeros",
    "hash": "1227093549960931300912944578730596337781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::abs",
    "hash": "58105002673481552584965381084265706571",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_ones",
    "hash": "4539383227858833512940005822713918287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_zeros",
    "hash": "1055478208543714866310745254861278354417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_be",
    "hash": "516583461722175129511945314710374972538",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_le",
    "hash": "26810422670207071049404395442645131118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_negative",
    "hash": "1795893347205131682516814045205866972996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_positive",
    "hash": "16616036384720226363509008187020373489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::leading_zeros",
    "hash": "285072644719110842614622039187594085724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::pow",
    "hash": "131566282899593889449029163204938465017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::reverse_bits",
    "hash": "58947475582586920001186004845952326520",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_left",
    "hash": "178035744362189798415753600256635187586",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_right",
    "hash": "1725518656783882741816237745696336436119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::signum",
    "hash": "138674670475572906417511077575680979167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::swap_bytes",
    "hash": "145639283080255174614748049758880299035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_be",
    "hash": "1417494603152863015212803650291522790464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_le",
    "hash": "1115740025600369596352249833488777817",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::trailing_zeros",
    "hash": "411367088921939018915973243715524945798",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::abs",
    "hash": "175244294985738512477352751085099409923",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_ones",
    "hash": "2213142018376594390384803103011663761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_zeros",
    "hash": "103654616374884143854346517391801260289",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_be",
    "hash": "1390189881363402933513577290743579979920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_le",
    "hash": "229243768373962120650645847617166615",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_negative",
    "hash": "89631352482322415155469913304300961401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_positive",
    "hash": "1456065021622667642413028724318745615018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::leading_zeros",
    "hash": "4127002381933792496953538869935162838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::pow",
    "hash": "846176156888030027013847271633631413764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::reverse_bits",
    "hash": "872393590521465695611039451133973512869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_left",
    "hash": "561924582126458065212676638505449660603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_right",
    "hash": "51637271794723556638111331908012677167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::signum",
    "hash": "306029730563716039616878941779041211203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::swap_bytes",
    "hash": "301619442050753248118332433487471460594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_be",
    "hash": "1197294813713404652813357797925699585831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_le",
    "hash": "71651933068961865547624563127194392802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::trailing_zeros",
    "hash": "108659325596161908924843232410841225157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::abs",
    "hash": "1088579662889119352215320304320515480665",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_ones",
    "hash": "163181210544398655918021261415623078488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_zeros",
    "hash": "8300724898045787490744372747640777427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_be",
    "hash": "1599622690235305582029010327347299437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_le",
    "hash": "73229685307123222072271009496422320311",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_negative",
    "hash": "1231178141927222522112812254725259478429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_positive",
    "hash": "11549102756942101235513263320150736945",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::leading_zeros",
    "hash": "125960380593920961634363172660341457776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::pow",
    "hash": "23329223632696611178541060222420471486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::reverse_bits",
    "hash": "134552552062335717963403597929165473327",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_left",
    "hash": "167722729713017678372358107223634206782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_right",
    "hash": "1034110994626566615414534423295701849688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::signum",
    "hash": "144406540991388634294386711711807487317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::swap_bytes",
    "hash": "133036032336488548923942809483018084951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_be",
    "hash": "128858381779876306365101157534069566343",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_le",
    "hash": "1280800490104244621714033283000901016444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::trailing_zeros",
    "hash": "48832563012042460001826572820184756584",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::abs",
    "hash": "783452929160487606115468802497847773485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_ones",
    "hash": "1737382675324197682016974284688426111681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_zeros",
    "hash": "108760154481842941233457207606009377711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_be",
    "hash": "226677355006598719010627932224787555743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_le",
    "hash": "362663219343656990911932816918100059361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_negative",
    "hash": "4186448796999845868548659728687669828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_positive",
    "hash": "6226033132455403382070693794498335355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::leading_zeros",
    "hash": "170660696426738414408874663127275246106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::pow",
    "hash": "539512634346834744817028011892310006308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::reverse_bits",
    "hash": "461160035484493730815852146447645575921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_left",
    "hash": "50111596432332789055204325644891250105",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_right",
    "hash": "20408680789386412683720603242750667641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::signum",
    "hash": "8892689077064910225248718716009729972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::swap_bytes",
    "hash": "353682595269952577915631515515694411919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_be",
    "hash": "125401732844403513005837353933080088204",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_le",
    "hash": "164177319871444188176822649572062660647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::trailing_zeros",
    "hash": "1558328030358853674115092556524242847304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::abs",
    "hash": "119330807316324925157721495526357867767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_ones",
    "hash": "994490936706233696315521843479536873548",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_zeros",
    "hash": "95015641127821152935000847633203117666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_be",
    "hash": "145185380037394839531281318082727688940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_le",
    "hash": "1160766074951048999212618589450561241845",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_negative",
    "hash": "1037630826963889176313816092684653941539",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_positive",
    "hash": "88208601553115558661009758970801317618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::leading_zeros",
    "hash": "1238871248096913443314559712636723240258",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::pow",
    "hash": "667922439040280664110749162422525528916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::reverse_bits",
    "hash": "624658003449157472314908739864923482234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_left",
    "hash": "1142733534445544457314228281991495294239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_right",
    "hash": "1698317138425504404312355611359931017423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::signum",
    "hash": "647442699281819258410798346578991722484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::swap_bytes",
    "hash": "1123373255879068869117554137031782867996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_be",
    "hash": "42302669768542155938543688160889822058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_le",
    "hash": "9266937989931167215608320426570573585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::trailing_zeros",
    "hash": "51578535813914006244950007872190650530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_ones",
    "hash": "1759950702736978054912603744172253044608",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_zeros",
    "hash": "33754521965720797986012688771127702371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_be",
    "hash": "103395261636408495610318865641143746922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_le",
    "hash": "1151214047088271655911533762994025511892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::is_power_of_two",
    "hash": "150520869732494464659357976382316849367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::leading_zeros",
    "hash": "93793733023827749512167885279725382631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::next_power_of_two",
    "hash": "1793710520539019873911027366174946257038",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::pow",
    "hash": "1392310527923186520512734069878242414535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::reverse_bits",
    "hash": "63704615646593592571084506791339602488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_left",
    "hash": "699481432803545670312797793018086891589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_right",
    "hash": "128152046287816360304612056828239926935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::swap_bytes",
    "hash": "1771103551751727515813555745680634434254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_be",
    "hash": "12224397250978076957352459278787100063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_le",
    "hash": "1557780073835269490612832639015786400441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::trailing_zeros",
    "hash": "775645575743492270712792211804022310233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_ones",
    "hash": "35611490469432827089844712678906925136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_zeros",
    "hash": "453415417039361364515799489053265149946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_be",
    "hash": "89490570397475849978367587430079513986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_le",
    "hash": "122498596704278322505269438824024531673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::is_power_of_two",
    "hash": "32916518867022187754327855785126634773",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::leading_zeros",
    "hash": "1804555905500823280516179053441042035968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::next_power_of_two",
    "hash": "67958863350661066911854284198977202753",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::pow",
    "hash": "173295541033386933787604626818551143879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::reverse_bits",
    "hash": "831919364762220421015051057831949310664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_left",
    "hash": "91450644601339053769703983031073342101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_right",
    "hash": "101721179433918992168757805843859606805",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::swap_bytes",
    "hash": "77636088988060260088254488498897024285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_be",
    "hash": "107222688259166559313571478250951469107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_le",
    "hash": "145882093211765945445754126500778233208",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::trailing_zeros",
    "hash": "181511585528094142629862728104398883613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_ones",
    "hash": "292409295392675692512398069484075951479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_zeros",
    "hash": "1332899678384702530711173673340338095077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_be",
    "hash": "8814418646715902324121528296103768588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_le",
    "hash": "127800150485050125792076161619608639509",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::is_power_of_two",
    "hash": "10240255472305884027369269817509042943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::leading_zeros",
    "hash": "79156415231193814801480619839907675461",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::next_power_of_two",
    "hash": "100866401805415185406999709305393922081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::pow",
    "hash": "120492819929829408009066634132602153851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::reverse_bits",
    "hash": "53649889595698233449598122015034244791",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_left",
    "hash": "864538659262475340814587153521103251082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_right",
    "hash": "179887872741055303417429853839005538785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::swap_bytes",
    "hash": "100755590486079948547163167180591983233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_be",
    "hash": "109577166214461406655954078438441928418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_le",
    "hash": "1061421599978526801712645323294053483948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::trailing_zeros",
    "hash": "193573213142882804411988835648838999951",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_ones",
    "hash": "1501566331184680927715038526834165910834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_zeros",
    "hash": "49114692064581316753062522241975402102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_be",
    "hash": "1727763121094885958016075245184601459351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_le",
    "hash": "572080598987822575811787109879482314767",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::is_power_of_two",
    "hash": "137984442947373436045013388454764423001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::leading_zeros",
    "hash": "494774280342590959713916195424312342591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::next_power_of_two",
    "hash": "312925920732160327612776529961249472825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::pow",
    "hash": "216096399566942103914840308635367699684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::reverse_bits",
    "hash": "46900598157628325383451273167185203081",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_left",
    "hash": "70020304104353320247010961853067990809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_right",
    "hash": "106249701693037429191327165214889687178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::swap_bytes",
    "hash": "103378363161002927712844746713355852377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_be",
    "hash": "14391957756594729178710567709209066720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_le",
    "hash": "120793798490292774094406640204157321851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::trailing_zeros",
    "hash": "1568772466175010560810713313469207332776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_ones",
    "hash": "33073855562407990662992653459669411072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_zeros",
    "hash": "172405268961000687712436696082259736100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_be",
    "hash": "16029898282298777076139780796884444004",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_le",
    "hash": "1401461845066772265413775941349901272106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::is_power_of_two",
    "hash": "5516370371270375126379752721853384237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::leading_zeros",
    "hash": "212173147071851385316774281162113144314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::next_power_of_two",
    "hash": "165098845696406409666677186557752384468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::pow",
    "hash": "1126011612673822614612507888819973271135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::reverse_bits",
    "hash": "1327093878533993719111391927925789002864",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_left",
    "hash": "174199831959121963706591938981135208188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_right",
    "hash": "161973596717082714846459168788045967036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::swap_bytes",
    "hash": "8463517560982536678055292597493806590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_be",
    "hash": "90478311521917342734968273631354904623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_le",
    "hash": "32732160565237976714253886231358849368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::trailing_zeros",
    "hash": "123040231207950145889038460693556092606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_ones",
    "hash": "55933050359025489769006451671985390997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_zeros",
    "hash": "1392189669434857150015873320632245282780",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_be",
    "hash": "43880965552418951128182281202455159469",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_le",
    "hash": "700193607622041046914045782790102022747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::is_power_of_two",
    "hash": "1314334517234751264217659599939051345551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::leading_zeros",
    "hash": "1578490721814261097712855751623226583197",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::next_power_of_two",
    "hash": "271222938513712795217587251462344544428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::pow",
    "hash": "156082382674494705576728288496606213957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::reverse_bits",
    "hash": "128779874347923897479103880356292682417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_left",
    "hash": "146407810919596290025425035362679904897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_right",
    "hash": "123008135569768923892519611448004902032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::swap_bytes",
    "hash": "161677948245603669225456195202321529210",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_be",
    "hash": "956449879691346149714108527147803723855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_le",
    "hash": "1355191351874714684815291904789589205730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::trailing_zeros",
    "hash": "11055390957005367142218087489362255919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Add>::add",
    "hash": "44443695133507866173052989236644601082",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::AddAssign>::add_assign",
    "hash": "1226622271878306014711214817195631634005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Div>::div",
    "hash": "179277414552915012511489650553361328613",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::DivAssign>::div_assign",
    "hash": "1466619326553179173616282000924380930891",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Mul>::mul",
    "hash": "1477690612743275457917915842808636867320",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1028048201790918730315858150758432170523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Neg>::neg",
    "hash": "17379614829186422606212493198166322187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Rem>::rem",
    "hash": "29048993336370097756267479157405173321",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1473475997109972535417167715970632151899",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Sub>::sub",
    "hash": "22272019261683323803400905152375583408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::SubAssign>::sub_assign",
    "hash": "76009413810789812433565163013657527227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Add>::add",
    "hash": "656663271581397563310741794773811775236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::AddAssign>::add_assign",
    "hash": "196973745457136093912532390655138683939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Div>::div",
    "hash": "607357767823900722714988361227709155344",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::DivAssign>::div_assign",
    "hash": "489049920946002559018412753823101084757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Mul>::mul",
    "hash": "30460775194166185987855856242595917692",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::MulAssign>::mul_assign",
    "hash": "55368406257963698105322110987394460663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Neg>::neg",
    "hash": "164840806539152991893600125848246543443",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Rem>::rem",
    "hash": "456530304931751435310666391288470030122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::RemAssign>::rem_assign",
    "hash": "335904285113328987014404974390116111659",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Sub>::sub",
    "hash": "142867308355902062391047573867110195867",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::SubAssign>::sub_assign",
    "hash": "169163488812773952059661101958074693194",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Add>::add",
    "hash": "508271486912745440511615952333843888632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::AddAssign>::add_assign",
    "hash": "18956986065478905248274522268812588148",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Div>::div",
    "hash": "40411134638494638899413497119247190888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::DivAssign>::div_assign",
    "hash": "1233995194335149931011754639753308013918",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Mul>::mul",
    "hash": "112772361378118273376324851843635159707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::MulAssign>::mul_assign",
    "hash": "1220828688087836937512717070067213744387",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Neg>::neg",
    "hash": "32926970026138873229479387231018895957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Rem>::rem",
    "hash": "1077074035826284205215674638304126304918",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::RemAssign>::rem_assign",
    "hash": "267060808248569095511119335864952545525",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Sub>::sub",
    "hash": "27673722025584846169039272051445894009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::SubAssign>::sub_assign",
    "hash": "46228467634741728016612407512115087158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Add>::add",
    "hash": "486506952336466454910641261049628885738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::AddAssign>::add_assign",
    "hash": "1646902801968599935918084062800638997619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Div>::div",
    "hash": "110892709662826101237375107061877207457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::DivAssign>::div_assign",
    "hash": "127556470121600645837364189635958353606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Mul>::mul",
    "hash": "102949047447791174707669251865891123542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::MulAssign>::mul_assign",
    "hash": "238794372394615823111288896987511635444",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Neg>::neg",
    "hash": "109060992173910544547553666489134560572",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Rem>::rem",
    "hash": "4168999617077776579925232765403951205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::RemAssign>::rem_assign",
    "hash": "1177864940717511898716542524319361929757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Sub>::sub",
    "hash": "134957012108515249315205515502635002285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::SubAssign>::sub_assign",
    "hash": "431781121473193876914969833807129757468",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Add>::add",
    "hash": "180939457702266364756387883455748594090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::AddAssign>::add_assign",
    "hash": "1999871034812690435694664659178872696",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Div>::div",
    "hash": "13530624666631948691330061281020655561",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::DivAssign>::div_assign",
    "hash": "113640192987836571414630896461408584847",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Mul>::mul",
    "hash": "72315241419013024954366599269533297735",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::MulAssign>::mul_assign",
    "hash": "2234085422594024569962970703753780960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Neg>::neg",
    "hash": "38254880224299109094957584209368999998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Rem>::rem",
    "hash": "182716850561567425683998683983154797678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1491207352652838106512101190110310121637",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Sub>::sub",
    "hash": "183712329653106417033778184199131496129",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::SubAssign>::sub_assign",
    "hash": "93764636167607197113427241180114661125",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Add>::add",
    "hash": "128898929114319553843582809842619278033",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::AddAssign>::add_assign",
    "hash": "1644197866328340381917189776815391398023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Div>::div",
    "hash": "1182860124965675521214018444737397607073",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::DivAssign>::div_assign",
    "hash": "901272607822794521616185502070289782683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Mul>::mul",
    "hash": "60762647226157463984812188789211220300",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::MulAssign>::mul_assign",
    "hash": "84714985226194901668098704157023505002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Neg>::neg",
    "hash": "138060884963648772472362125532294170054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Rem>::rem",
    "hash": "872477265323748931410034390846620102090",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::RemAssign>::rem_assign",
    "hash": "69272829053533532731508305060564775866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Sub>::sub",
    "hash": "316948154444344853616153856658645809704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::SubAssign>::sub_assign",
    "hash": "482406881103991301910464989784879322994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Add>::add",
    "hash": "176038123912851636717181001177697939738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::AddAssign>::add_assign",
    "hash": "59091337361690296495696656698339938095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Div>::div",
    "hash": "5504465159916226736233644551835612098",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::DivAssign>::div_assign",
    "hash": "116162006915438678092222360406072105553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Mul>::mul",
    "hash": "1361830654905566867612806665866894359978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::MulAssign>::mul_assign",
    "hash": "163393867513561910826001496837052273",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Neg>::neg",
    "hash": "1063506368158562375213024324256626800440",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Rem>::rem",
    "hash": "1455698140165167994816868010447350743132",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::RemAssign>::rem_assign",
    "hash": "372816163441321267312692719832673013825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Sub>::sub",
    "hash": "123706226571764293649022195857975919765",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::SubAssign>::sub_assign",
    "hash": "50434228286183609677801054014415728473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Add>::add",
    "hash": "102300503039285186936401996126082004143",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::AddAssign>::add_assign",
    "hash": "1286344711565208954911442041396815841395",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Div>::div",
    "hash": "394188825106289093612275166131450967405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::DivAssign>::div_assign",
    "hash": "83916736728564446928911693755497753405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Mul>::mul",
    "hash": "1480280019405466309480857819887466736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::MulAssign>::mul_assign",
    "hash": "116273164296678303514326589032284010368",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Neg>::neg",
    "hash": "569787614750004160010776100613042378655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Rem>::rem",
    "hash": "68263926643546691864513921346928148306",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::RemAssign>::rem_assign",
    "hash": "2005829136022826129192926948709026179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Sub>::sub",
    "hash": "96516014671134718329949757920969022478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::SubAssign>::sub_assign",
    "hash": "1489423196006039965505893748480305928",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Add>::add",
    "hash": "77664444813391686578066042580911250377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::AddAssign>::add_assign",
    "hash": "1158381074792105069515382714189996898247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Div>::div",
    "hash": "139860864721840033027850854066502040001",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::DivAssign>::div_assign",
    "hash": "505839498131792058314432207301867876374",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Mul>::mul",
    "hash": "70808776637997449716795958299873086851",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::MulAssign>::mul_assign",
    "hash": "112045764696684393615924347439946418071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Neg>::neg",
    "hash": "3952901743078497551630941128387146276",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Rem>::rem",
    "hash": "1185316329399955436015784821353885604874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::RemAssign>::rem_assign",
    "hash": "167155519982412449337878944689384099049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Sub>::sub",
    "hash": "176587700949268650555220436235253969683",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::SubAssign>::sub_assign",
    "hash": "1094273692647140649811372148382567400097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Add>::add",
    "hash": "58702829733803041278209976036510386047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::AddAssign>::add_assign",
    "hash": "914042721093238250410403807064275377829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Div>::div",
    "hash": "45579142048074889213321230078084515909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::DivAssign>::div_assign",
    "hash": "85212405800446537259012932506649898423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Mul>::mul",
    "hash": "178727180376454345549324156966071132796",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::MulAssign>::mul_assign",
    "hash": "1808485623078224856710645856059773530955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Neg>::neg",
    "hash": "73385635675963071203554325423636870423",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Rem>::rem",
    "hash": "75457982509565385558449066300474734788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::RemAssign>::rem_assign",
    "hash": "939485256855840733415141502227336312222",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Sub>::sub",
    "hash": "34388100492490933128558531691774740632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::SubAssign>::sub_assign",
    "hash": "1067169204404641421916317878375012633942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Add>::add",
    "hash": "1402902597459728935916070669393820481166",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::AddAssign>::add_assign",
    "hash": "787303143716339277712905266112423462558",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Div>::div",
    "hash": "21583290123968285234545601428509381550",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::DivAssign>::div_assign",
    "hash": "58711212094198103298457065561795244361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Mul>::mul",
    "hash": "1842262503462546508817712572233277033184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1295147707920106548811304353011912597124",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Rem>::rem",
    "hash": "1478241970835155501511055888431993250982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::RemAssign>::rem_assign",
    "hash": "119128309620204045384365079817452421882",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Sub>::sub",
    "hash": "117860692007150857879979453393140389874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::SubAssign>::sub_assign",
    "hash": "37171400200190225467619862218546801023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Add>::add",
    "hash": "136932066740021611447653180798913862776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::AddAssign>::add_assign",
    "hash": "1136693712062826788313523590757276345412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Div>::div",
    "hash": "42970800222571564306495992008323959314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::DivAssign>::div_assign",
    "hash": "1140659912304972430411452136862166853840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Mul>::mul",
    "hash": "177198181867662933244066889668312740896",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::MulAssign>::mul_assign",
    "hash": "885132676446520377914249979541314880363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Rem>::rem",
    "hash": "79550056097734619312886036852942532799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::RemAssign>::rem_assign",
    "hash": "8785863816951305058508210548063562603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Sub>::sub",
    "hash": "175056666661777748461314928867213942631",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::SubAssign>::sub_assign",
    "hash": "466018795213947751816917718150518488183",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Add>::add",
    "hash": "147082916948660022139522338496775099983",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::AddAssign>::add_assign",
    "hash": "174355281150286471671830262593496597407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Div>::div",
    "hash": "65203605087481216765956782074874375619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::DivAssign>::div_assign",
    "hash": "900894681384665895317569845695268162327",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Mul>::mul",
    "hash": "167590433297483224656812144139614142495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::MulAssign>::mul_assign",
    "hash": "169802044628672220951674063631105999813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Rem>::rem",
    "hash": "424359451296716518917226365832879427330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::RemAssign>::rem_assign",
    "hash": "98201208198305113017449816946077520777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Sub>::sub",
    "hash": "99176271258766477013272333171532202265",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::SubAssign>::sub_assign",
    "hash": "170544993272943776716324829632816239721",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Add>::add",
    "hash": "1047226150592121619916791738425576155989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::AddAssign>::add_assign",
    "hash": "152986766196414844916519978314917461009",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Div>::div",
    "hash": "138811212228727350724477848972604910203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::DivAssign>::div_assign",
    "hash": "1336996554940776999316248185732470250876",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Mul>::mul",
    "hash": "359819478907929188013602569371333223640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::MulAssign>::mul_assign",
    "hash": "1529107134624838038314045008243897253034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Rem>::rem",
    "hash": "72761304372883324528891952071758675679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::RemAssign>::rem_assign",
    "hash": "71020868718922891295297090674155788062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Sub>::sub",
    "hash": "128926335496488349305282019115669664377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::SubAssign>::sub_assign",
    "hash": "173839817657395971418614100409683771676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Add>::add",
    "hash": "104071935845405627502683988192867621419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::AddAssign>::add_assign",
    "hash": "921818024699677455618018864647058716262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Div>::div",
    "hash": "17398617958855612112693169980447801917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::DivAssign>::div_assign",
    "hash": "1121848682149855291813585908283984167641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Mul>::mul",
    "hash": "1426084362925482196314162655546120958514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::MulAssign>::mul_assign",
    "hash": "1789452120354532371911265561406784465295",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Rem>::rem",
    "hash": "364778951657854310011852463264419495840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::RemAssign>::rem_assign",
    "hash": "88226505168359003336578091489083482501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Sub>::sub",
    "hash": "29874235246931591729627593783721476352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::SubAssign>::sub_assign",
    "hash": "143052136274747400144891423970263416921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Add>::add",
    "hash": "136034500819524922108481081516304886547",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::AddAssign>::add_assign",
    "hash": "1140718361170680638413202916536227675596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Div>::div",
    "hash": "166420124560367274913477064584242996843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::DivAssign>::div_assign",
    "hash": "13211279411104622587249227531073579389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Mul>::mul",
    "hash": "44216514909823486154857943284213338730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::MulAssign>::mul_assign",
    "hash": "65752901451835306846753595962363338559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Rem>::rem",
    "hash": "160795408949865961775843320697525466875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::RemAssign>::rem_assign",
    "hash": "195759120116020759715178538890870988657",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Sub>::sub",
    "hash": "1766965486933727189812269861983304321521",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::SubAssign>::sub_assign",
    "hash": "103739426248503478092450330291434834982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAnd>::bitand",
    "hash": "180888839812469963578187423573149022252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "478971231389937157416326380440003474964",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOr>::bitor",
    "hash": "15880649510421165924462327340646785458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "162095602182665906544506679949106054700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXor>::bitxor",
    "hash": "1232275349043439496317490107459798511825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "175087117160319930449100853395959491635",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::Not>::not",
    "hash": "127683964376859283925683988932427222351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAnd>::bitand",
    "hash": "1793961265973431064515729700594531162990",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1241510405288407974411984324814276534865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOr>::bitor",
    "hash": "117205160468176404582129207928733339495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "69156557079406364369665547120925359150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXor>::bitxor",
    "hash": "1784866493702880405010307828209832009808",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "114319754445131123567849389635670261473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Not>::not",
    "hash": "17678035325146688367592291255783715019",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i16>>::shl",
    "hash": "1051911981647690722111204613777739555606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i32>>::shl",
    "hash": "110102014567663319524818404262982198541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i64>>::shl",
    "hash": "758731034086364857812735993490705200503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i8>>::shl",
    "hash": "531168847392001917816701902598796389016",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<isize>>::shl",
    "hash": "1098986312911094505187177439838502003",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u128>>::shl",
    "hash": "5577814679247007613053440336152216731",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u16>>::shl",
    "hash": "83742444005501111915519486066795361900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u32>>::shl",
    "hash": "9458164198075436098441723664710260292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u64>>::shl",
    "hash": "895618851544763746210299514925838297341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u8>>::shl",
    "hash": "590390251558523788313003853718173739431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<usize>>::shl",
    "hash": "79805846545077512506602781619243730067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl>::shl",
    "hash": "247773998114642927412189136459238751450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "83363938389101778639790775566646208794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1445473320005068861615052336098623747711",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "71901710818760044716359351118633088982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1925007595183906505815502702055857102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1457048255740161770311303287841026547519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "86911545811241002147449785774807519051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "139118577809642484063545915979340874535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1120148614679631851712474838035961886493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "59333154752070655394404653247873226961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "68096445399310962337809330477255015740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "147482162180043816891516668382357786045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "7556668661766596343960853874978314047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i16>>::shr",
    "hash": "84916344515952752311788207558762884282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i32>>::shr",
    "hash": "52435484804804974527887903063871429119",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i64>>::shr",
    "hash": "99200338107386963438875147620934595728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i8>>::shr",
    "hash": "6002511271470047711842111137051231966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<isize>>::shr",
    "hash": "84572228637481824113234247337348394219",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u128>>::shr",
    "hash": "172840407549012038064588194484624315373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u16>>::shr",
    "hash": "98529237184070080603325217213842599989",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u32>>::shr",
    "hash": "565793581731622844414465320972761106167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u64>>::shr",
    "hash": "168160293718402717796006462411306155686",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u8>>::shr",
    "hash": "167313332357784287245486503405016857501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<usize>>::shr",
    "hash": "106187454283532802646410670095037736903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr>::shr",
    "hash": "182375434031114599539512497756359352528",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "18647020375226198568306492128729894470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "803818414561058551017069233093297353384",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "280909251878029845113781147932695349214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1072322582668858946410307969766306208030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "967028155847984257317629590315728698959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "62123004683544042334122393337983403092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "680681089049655304613976866870325197816",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1124038531436754727114334870572731094433",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "476989955395865267113652353744414620663",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "148349359005370492983416662727600259097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "75371176521444391497882480854453679307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "95404696205850427385426410530805114958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAnd>::bitand",
    "hash": "30999621367085913989064922995058555589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "183119649035395466311083314971991810356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOr>::bitor",
    "hash": "958410034813325860813708132645304900385",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1194048836123447585914152821111891812803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXor>::bitxor",
    "hash": "530209102971899771613139995716482225573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "14534946895362681165577647113830344591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Not>::not",
    "hash": "390704660758868529713619147365142652722",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i128>>::shl",
    "hash": "369994512059665529011824533827247579731",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i32>>::shl",
    "hash": "1639290913960759156116682426187809890466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i64>>::shl",
    "hash": "16556233869150050072540551005019625618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i8>>::shl",
    "hash": "1920072071515277101984210099652972766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<isize>>::shl",
    "hash": "1570192154120420937310441844352059545526",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u128>>::shl",
    "hash": "26053435693509470397442453677652520863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u16>>::shl",
    "hash": "436528668831739602863484883866884212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u32>>::shl",
    "hash": "175668710277344790717049921182367096317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u64>>::shl",
    "hash": "83917819824467964607965356447679706718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u8>>::shl",
    "hash": "338217972981689382512099038577953327794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<usize>>::shl",
    "hash": "1239780450572637696116386716012417840287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl>::shl",
    "hash": "86562294690753258401862883002877994286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "108139894333007392088407054213939166924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "153899869152315193032064355613875996109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "180134946943351161466933928062743639522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "150467069344341470639713676978229844677",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "145765022243663327525981714445191795261",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1516275153751637215711181411315279463052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1171037943147285775413080685913671757831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "11878269676799555667997730912130817883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "101933826162340095597050755493018436830",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "1456655223469814776915998521162224515319",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "19067839164712385752831665001148190629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "27219357548888200939455605708237645125",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i128>>::shr",
    "hash": "12057382964003069878124771720455500341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i32>>::shr",
    "hash": "1256409340042216278214447668224584092328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i64>>::shr",
    "hash": "4855085874526357853596980962507078831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i8>>::shr",
    "hash": "129549758049917823815649535830816274403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<isize>>::shr",
    "hash": "136916879351759009275847092297721965458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u128>>::shr",
    "hash": "1844315565305047916917037197446064436370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u16>>::shr",
    "hash": "1394223434116806892811619105111723075215",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u32>>::shr",
    "hash": "274716319226916251113442083492208625184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u64>>::shr",
    "hash": "157177600882174100561634877618458373241",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u8>>::shr",
    "hash": "163150434055219134854227902963864027566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<usize>>::shr",
    "hash": "1800765062640731072818207021641813878113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr>::shr",
    "hash": "591872212869530612416338306096322256878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1082340542743816482711603340217545789507",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "459499356469728970110265743287028469603",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1302279817857854583414174176526989643",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "928151701679396305412687298312203592192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "19499127775214975625941921011030064005",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "72177573456919826245532219479828185527",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "146357978976679609376362584762161285691",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1740785398940159915311336406693563965267",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "394587160039029921714366589990787237054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168768552310252957874622463938008876967",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "702084249891481971616688585986828147322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1162679549120175703215547779223070739050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAnd>::bitand",
    "hash": "650044328517567129113752435107124188048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "523172257735532328410814092662594886432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOr>::bitor",
    "hash": "18325128366124804776304968433652290530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "563689526491549462312349431393450620873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXor>::bitxor",
    "hash": "27847127737280982298448831176809313783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "161512554564293508671022529456522544118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Not>::not",
    "hash": "7673007499254698290421491074594689023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i128>>::shl",
    "hash": "372311767662588850914962226310870392516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i16>>::shl",
    "hash": "73933326459529212161103129326366366838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i64>>::shl",
    "hash": "945692740491802532516018972435014904337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i8>>::shl",
    "hash": "127284191918108322810994354230432984396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<isize>>::shl",
    "hash": "166321779917433172976781337389312292866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u128>>::shl",
    "hash": "84916113287272664946116860756496215350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u16>>::shl",
    "hash": "60693524282621363113855407251761051106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u32>>::shl",
    "hash": "95569891536194112417990256218041626095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u64>>::shl",
    "hash": "49102357936995576999148573322335668801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u8>>::shl",
    "hash": "158071309878467722208845899662268064375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<usize>>::shl",
    "hash": "127326226923293594714402772329831927248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl>::shl",
    "hash": "115924809352986079492091746732207053045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "98598243525298719369833084251205034922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "5043021829551019955307616851817362747",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "97970598415413255698288556835718214161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "162156145419285016963941393087307618633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "141436038589986961691348712749643181981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1945107935776758139505761860965820103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "602531937561273793810416282539112713337",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "675844158209124258512529760667288112736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1442165165511903602517824575001507841849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "193903806064003679113566531225636948611",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "67858588031009218683476456680220132025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "77317202335624914285205463009906169736",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i128>>::shr",
    "hash": "456288907330992092510475190493236783962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i16>>::shr",
    "hash": "111754207126526766211742199700332401485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i64>>::shr",
    "hash": "105560726995714340898671671697877890712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i8>>::shr",
    "hash": "1778482807745585723151711071786303547",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<isize>>::shr",
    "hash": "46824558396391075394133281167811439576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u128>>::shr",
    "hash": "62394613565502557831164743745815044594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u16>>::shr",
    "hash": "63193189775272741887688234090540009590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u32>>::shr",
    "hash": "6085411744444831555751785705114369522",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u64>>::shr",
    "hash": "970523756054894816718027193809522169566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u8>>::shr",
    "hash": "1982978121002814698728983659544162953",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<usize>>::shr",
    "hash": "1252052816599646751916304726329220275217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr>::shr",
    "hash": "1827190494142028610312458171742585639234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "159625308452030148557683645364724176960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "768788867936880734310297679208696962768",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "109642174482252228310588668556024668328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "970751713481959125514679021117052854938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "185861858140891289917530776264281708224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "2858329227941886526873854772282381792",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1367072615336776444510120125888338253351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "136285508211340574525627896169264205909",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "104540169487069478378765314881949094651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113268035535056379856637557233958677472",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1576059130050384470911293747112190065091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "179296206631014686195005660766763394118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAnd>::bitand",
    "hash": "177130259178368690396729436287782876554",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "92882203864182182873350311004168437437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOr>::bitor",
    "hash": "1251816211255550521312426977523193617803",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "152021507572025898891965891497268639569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXor>::bitxor",
    "hash": "92045038203233898566524957035306722228",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "557078001531630199912064711572310358392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Not>::not",
    "hash": "895189105872042485310848603794885148381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i128>>::shl",
    "hash": "519886691618675496512472538252030165644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i16>>::shl",
    "hash": "600615754133054323114097439753133105226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i32>>::shl",
    "hash": "88143148239519780834881409085594168064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i8>>::shl",
    "hash": "1502636840613491635213427928807402919287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<isize>>::shl",
    "hash": "923936075760432042913220817899822884807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u128>>::shl",
    "hash": "111478624590468670187088100192306220699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u16>>::shl",
    "hash": "56752266533731922342260253612077938022",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u32>>::shl",
    "hash": "1164382060108326787316293534434865127647",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u64>>::shl",
    "hash": "126499948389464426157703256714979285668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u8>>::shl",
    "hash": "215926913750976314314068960078188379447",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<usize>>::shl",
    "hash": "310908990363402840213294445644379965674",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl>::shl",
    "hash": "133086992157339230893167096127497255732",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "12022878947101614564287908552213206934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "30123396312511948915366517312336076979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "638730999575703380617188084555849314122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1217762814122437976313182829545440985626",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "334873923646372835711511981573344062594",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "171676398080742981299424224295233571809",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "162614080508702718738798474103051710211",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1259268014087360420011611684771853658785",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "372109983934819602616853292906523361675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "164294904009126686317481259368574742723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "303849986522885022816895171834573922284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "4873473886976984715686454178756620308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i128>>::shr",
    "hash": "122365134876934392045583807237646072549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i16>>::shr",
    "hash": "785121155105854338814422036466866947632",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i32>>::shr",
    "hash": "70476468952767819045644687821285988757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i8>>::shr",
    "hash": "108064687474438328212422910312087279159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<isize>>::shr",
    "hash": "115888423558453966127052454938741917186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u128>>::shr",
    "hash": "541746987242881221315467975113861720213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u16>>::shr",
    "hash": "72016824465103687715830593610750451690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u32>>::shr",
    "hash": "984934232578002877118130435142307114962",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u64>>::shr",
    "hash": "18615051785657418998105309652196250887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u8>>::shr",
    "hash": "252076705605397521315528966773778893585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<usize>>::shr",
    "hash": "182334890493823297886561690050581993760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr>::shr",
    "hash": "64323871058965727704958960261292247532",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "15541455504005157713039772872834355506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "154246902498121656678561234135209622361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1711363271878871031416326473484662138184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "629938562882551976515434068473019460031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1387440559648143154715489911502773094979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "6349366645910570185696228170527570916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1277302577812576879817916744075541774693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "174367599262246686849412450417936204822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "139045564333225764262391973990296542059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "125468399431457930326653850093260157867",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "81519386163857207772552616680129146329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "804100658757004607312580641724776428737",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAnd>::bitand",
    "hash": "265934978426920325916139362043655563972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "187656684940978225016253050002036561123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOr>::bitor",
    "hash": "1038439527947300424913485084014949533102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "5450037425521674909577390011047896829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXor>::bitxor",
    "hash": "235161805994662708410335021936686730330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "15141007315562777526300561672575058394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Not>::not",
    "hash": "1537246348192884380817198491291708678007",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i128>>::shl",
    "hash": "1500222601461225284011832209505507953980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i16>>::shl",
    "hash": "127788797766387834265333094192172909614",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i32>>::shl",
    "hash": "876235355238578336118280187620191125577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i64>>::shl",
    "hash": "530570851229112537916340369895843732996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<isize>>::shl",
    "hash": "173405338315610398805406335749852954840",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u128>>::shl",
    "hash": "182574574704852282226519848780600798700",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u16>>::shl",
    "hash": "346432348359634357810611753614394803704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u32>>::shl",
    "hash": "628821373677192073115424274188373035854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u64>>::shl",
    "hash": "1477471625163490621112228502358591359135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u8>>::shl",
    "hash": "1180349748674282520415885034699269524954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<usize>>::shl",
    "hash": "1606409143407086665411344928646153381243",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl>::shl",
    "hash": "134388452439948460947565307447803923567",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "175953538873950220399780597119695289401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1167003380555467295713232357533484137535",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1569672052333385953617317644114812707678",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "1401783655487088490715473219237431444699",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "43694178837655065098507930732722649717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "81212066706277228045835755535670554742",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "10009080133801249209206330620284505960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "157677295055230541791791240253338165399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "668883006836114865313569556620229909277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "124132922445684848416224827673667408259",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "39009543811048322152485258776391493287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "962687785728676651912193198008104208542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i128>>::shr",
    "hash": "13222223846942633966469387293813757454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i16>>::shr",
    "hash": "129354384357152128994023349724798298718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i32>>::shr",
    "hash": "440495384250601219917573140621983067495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i64>>::shr",
    "hash": "43353337102038939705025310351928996745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<isize>>::shr",
    "hash": "1631066441864363168615667381643584165156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u128>>::shr",
    "hash": "15069049925476723758863568158100110495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u16>>::shr",
    "hash": "75512060347123581438434446194896001055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u32>>::shr",
    "hash": "822231302293652279812725886846301741897",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u64>>::shr",
    "hash": "48692503252786750910817176032854459638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u8>>::shr",
    "hash": "764391322216929091916149774401401124429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<usize>>::shr",
    "hash": "3033423382609026958834303599617874497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr>::shr",
    "hash": "875301376810742097310968926539412077305",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "95759869150350915395931148901724047094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "966573987564931707017359187861522454667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "115230667055948088454393139001470862292",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "168176285236441151926312375282462478137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1091082086919245787312340753575872961032",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1579416481525834184311006498817808888954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "162176833042729613188518167084402371982",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "3851098092345842197412019227477802363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1526741996395734916812177274703204838375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "13646406535042712152794047470294216622",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1257251827191501629917477858341469208838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "53827271385891498898001380351226400171",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAnd>::bitand",
    "hash": "76432713787776865871390085984946573323",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "570033010102498626916392611870710373476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOr>::bitor",
    "hash": "1323797199755613456415087515572321384502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "651287959015088433815609945310032982203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXor>::bitxor",
    "hash": "241120474533219045010068829348993239515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1666658215730000042116961826414410846042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Not>::not",
    "hash": "67465127472702371406606122427792653881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i128>>::shl",
    "hash": "124252566629162540710211192826211941778",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i16>>::shl",
    "hash": "20407857733618364992738031189710182728",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i32>>::shl",
    "hash": "138030836316318330562705735004424424551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i64>>::shl",
    "hash": "690869730633248965014633810433932065133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i8>>::shl",
    "hash": "15797597993320895974122687561255552224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u128>>::shl",
    "hash": "1354521478861213832417369059715475099588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u16>>::shl",
    "hash": "5290613153892006742932393402090598920",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u32>>::shl",
    "hash": "73044831548130434963339717085621650239",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u64>>::shl",
    "hash": "108057653085261391483904948960105328058",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u8>>::shl",
    "hash": "1445128940321687963511513948550196397843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<usize>>::shl",
    "hash": "1108913661172951105713458460969346870843",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl>::shl",
    "hash": "1335078385529779343411326551404773804995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "409274026799394035318142342381754427094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "97696315587218349949731581860100477770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1074217503505370800214103044388330466680",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "169715040062927096011126536896115620000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "17565826884387431223646560914014227551",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "9683412502234847984414239394166788790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "19522654744549055613155489562102960063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "177059723492227865776533243919827248565",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1587223423242235282517648148242404892437",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "142015009514126465491366015343125854399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "156241664859030108363248602002617615015",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign>::shl_assign",
    "hash": "87042012756659532117718515910945786415",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i128>>::shr",
    "hash": "14398438736517685926909515444084201162",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i16>>::shr",
    "hash": "1697961557145322975113608464033088978107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i32>>::shr",
    "hash": "367164258728188495417286818328852304887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i64>>::shr",
    "hash": "84362255641806963116400185139711593383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i8>>::shr",
    "hash": "87832914315465300562381055478756435810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u128>>::shr",
    "hash": "164816886859396541954681472477225506407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u16>>::shr",
    "hash": "136688853923481111711046403475651137213",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u32>>::shr",
    "hash": "158454290273284830745964738137700027277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u64>>::shr",
    "hash": "135777831227197261636397131917100822104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u8>>::shr",
    "hash": "855915505936532129878383965975151651",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<usize>>::shr",
    "hash": "140083736536507792678573490579968389476",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr>::shr",
    "hash": "97603112602427614806458485286914582838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "633033568981137758111529831047668315802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "69523313764541147078545550611566451610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "18413833995721936053569619699773900797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "844770127360393136610758605775174070762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "111507185457589686111050260274356354970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "343850695580523517716617606970814942217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1186049160652638151215329780278637040919",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "652179450612552890316734168878977202822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "393495215948651898416378032098946644896",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "370654684617466413012581098721631117893",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "135587522201197448211467079381551232901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign>::shr_assign",
    "hash": "167027232061063640710519469352000458165",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAnd>::bitand",
    "hash": "698683589886308818816517921220151373414",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "123017279453042730449152307198036222275",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOr>::bitor",
    "hash": "177851452712269505323409598312676865030",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "837803172349769495414167924563365128710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXor>::bitxor",
    "hash": "663730877907690999916441226851998822783",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1796958685945818952113461391853864300285",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Not>::not",
    "hash": "58051596585258972945980051594985678051",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i128>>::shl",
    "hash": "112495606245423211109883350240530298314",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i16>>::shl",
    "hash": "96686797552048085984574146579993005860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i32>>::shl",
    "hash": "39137622506336967938731668104704170779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i64>>::shl",
    "hash": "1287011823963922977317571017329766960624",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i8>>::shl",
    "hash": "4348935130766861177116042714398442100",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<isize>>::shl",
    "hash": "1657539756365399379415109198607340425139",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u16>>::shl",
    "hash": "164911093200342327824872613281736554723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u32>>::shl",
    "hash": "1336946185925578093713438611242629189694",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u64>>::shl",
    "hash": "182616157802369360283050352765235265077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u8>>::shl",
    "hash": "101567652060558363396060830755476229342",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<usize>>::shl",
    "hash": "1333121520770841230913836652975325703751",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl>::shl",
    "hash": "21065839941386437356566846014298232799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "560601792088403816411193390335817606510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "7286423301850060633738383931602569260",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1225897943844593006512182713127596218031",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "24430215384470987569351338536717158801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "624728818333329451717911659287261981332",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "167199075836402970079881338460500719590",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "54640285621692748396618279601558470638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "44923138085046037111022094778969555085",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "15703922009065763410487786272660294980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "135397585856537308549041378875272120980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "92645675095284498027762993550272452185",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1315306681532292427014257992496562735101",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i128>>::shr",
    "hash": "665011930864485544418402139627349278519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i16>>::shr",
    "hash": "710561866590987664815244306066189390488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i32>>::shr",
    "hash": "146166504108819161152238247312375191991",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i64>>::shr",
    "hash": "1671831135230185286313848274305846604976",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i8>>::shr",
    "hash": "1765941086975858800012517978772437594578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<isize>>::shr",
    "hash": "154074820181499543705973179981078971176",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u16>>::shr",
    "hash": "27723917931885615359683619149726644776",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u32>>::shr",
    "hash": "1074290691146986455913220414394998355820",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u64>>::shr",
    "hash": "188154924526487045617977071600152927877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u8>>::shr",
    "hash": "36228608325673870544611055550960056098",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<usize>>::shr",
    "hash": "31489583802490444244369012944294891814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr>::shr",
    "hash": "1494106883292313936017579750248879702568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "12538550557066233502563259039350679244",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "797308284339715255613418674503815214363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "70375929778438969709980457220685585862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1271101983074831800811928802481427999605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "58200750323953636002458604086138734842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "205528280389973032011324337459939170426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "28874133311605197234469741603507629317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1365992578558262081812445854956193194163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "134889430978504513464157262520049825282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "14671811483515516939338431445299183761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "165631479488509255547765512481609374237",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "4139114608543593465567357386321147577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAnd>::bitand",
    "hash": "173427564344180055716436903422574280366",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "29251664065752521517947747337802533290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOr>::bitor",
    "hash": "150746008680852917955868139213269468543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "161315285151589141234139981392983931158",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXor>::bitxor",
    "hash": "1154461855422818694111067968965886474884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "221041606764486233011969717250576302894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Not>::not",
    "hash": "468617947150591468914297928418923287178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i128>>::shl",
    "hash": "63627388099872270336521154994503857838",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i16>>::shl",
    "hash": "684001467647245617918111725261451659152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i32>>::shl",
    "hash": "1669401695199587978914625328020029874055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i64>>::shl",
    "hash": "611031479428844733517002708644253628012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i8>>::shl",
    "hash": "57556201932280956439107937247171399155",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<isize>>::shl",
    "hash": "9162740072896255169130977666831784748",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u128>>::shl",
    "hash": "138073773879659261103890470062109767232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u32>>::shl",
    "hash": "364936906377227211710947794863491976999",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u64>>::shl",
    "hash": "669351057927740328411077596574964227577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u8>>::shl",
    "hash": "432879750867627762912436726342858514036",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<usize>>::shl",
    "hash": "54092777277852142899682146768365027715",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl>::shl",
    "hash": "144756502957481607414489579177398107801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1406955408444701256111693382016776816107",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1058219818070999166014991462144549347067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "62503935392705689254675010456476929601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "104214552772085738944678747200355186885",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "109713009650072312299500846064429597253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "253112130907389083615677765139831725740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "612447828583840436610398310341857587136",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1013952304263165487311098424980538170498",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1122984055125181539213721305062412680717",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "158742375869050510124352468199391193569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "3803938892909682109784623515605622405",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "56275673718564273696484231190939685272",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i128>>::shr",
    "hash": "847317206451198360614320017276115616486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i16>>::shr",
    "hash": "916260449698083443410594158701379820685",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i32>>::shr",
    "hash": "67472990855912439212773902503127889495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i64>>::shr",
    "hash": "415192957626502827118286029751148023882",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i8>>::shr",
    "hash": "1072667847943323394213084003568220842541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<isize>>::shr",
    "hash": "85926974754168598625479074701509468247",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u128>>::shr",
    "hash": "107922163026461907622643163844699676150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u32>>::shr",
    "hash": "485915223492594619514764989821076116849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u64>>::shr",
    "hash": "11092255168326787065490666672631908883",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u8>>::shr",
    "hash": "1547561459444795339216932138971012945854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<usize>>::shr",
    "hash": "17925727503641095687826717515893544103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr>::shr",
    "hash": "76970808753788104168506652157955678317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1710507000627251318217465679030598917644",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "464282397391528237411216701692161467288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1293416623542554936617896794202181489993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "179604938547372205751081475871288037418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "42244867104792319844988093148019317367",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "117389570474324209365120953252940910618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "76313130287868757993611291085463300695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "26808161971584114193425476363374287495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1610079363733730907615162535182860274050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "113461780143352055122598279533395549933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "18272134386115547414357290305965859397",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "102804061524072660142537794353836993328",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAnd>::bitand",
    "hash": "1673863980281935094918086807947924435950",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "142306829594416791405668441502308780360",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOr>::bitor",
    "hash": "1362525230579241954911680216599631237669",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1139148345620831428749659470558028569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXor>::bitxor",
    "hash": "162208078896197843325103381628613305541",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "578707714099568739917051142064995408895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Not>::not",
    "hash": "172880903987547070335734359297523817745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i128>>::shl",
    "hash": "163705261862499430953598653880423335223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i16>>::shl",
    "hash": "1102260420914714551311105865199798307623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i32>>::shl",
    "hash": "14658350123571528263100094820429056192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i64>>::shl",
    "hash": "381776224518002643512122732329189411596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i8>>::shl",
    "hash": "1588446216658386288611057521989552313464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<isize>>::shl",
    "hash": "1090946927338323267715155563495299349901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u128>>::shl",
    "hash": "8947519438040413384360350613695683109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u16>>::shl",
    "hash": "286866382675375066014873368496479884381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u64>>::shl",
    "hash": "7909490610206413864354209015194717573",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u8>>::shl",
    "hash": "66070526653236084614750203993133760938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<usize>>::shl",
    "hash": "1702223401998509807117309042873300208634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl>::shl",
    "hash": "885492306666178193413077054527521590248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "218810956684961630113862449150705416625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "55499629409874667589637106196084782063",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1382813912018031450316645779169515714281",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "6844341869731607847896563335664042930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "130766201658280833194116820848475759214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "164199954366957163696610442239128843299",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "42742387108541224211116046274951688012",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1261336879352056997711017667141534454157",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "1361296407650342816717256880582955857537",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "201589564017521372411717175795657527759",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1605030014331966010913476043509743416723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "219933464340008248817578467515520077714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i128>>::shr",
    "hash": "57373957725973100585366874644162041628",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i16>>::shr",
    "hash": "852549275396991398513602816091127487672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i32>>::shr",
    "hash": "168882209805648853906718556383339671394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i64>>::shr",
    "hash": "114151450368156592083078753702505281935",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i8>>::shr",
    "hash": "21197608907701827619662023498180176744",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<isize>>::shr",
    "hash": "1114353026237248819611668801423260902028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u128>>::shr",
    "hash": "22606564707713544165005318799459670979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u16>>::shr",
    "hash": "71782951134938861159557261428222646596",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u64>>::shr",
    "hash": "78888514238505564456476879798635885301",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u8>>::shr",
    "hash": "143728921758734510162608205387835078441",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<usize>>::shr",
    "hash": "72565183847859785915776875246161852946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr>::shr",
    "hash": "364690327770845926311867381198481136970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "265206472096378688811464819093910062855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "120406625836379378058796161130064288929",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "543079161144690968712141468935017447690",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "137356413575533408421046968379415822062",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "22492555266214795268197165756263134310",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "238846472373105996315820829218373102598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1433588639731021201310072703606111492529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1794355800322051165816389096918864638419",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "23451861148311286067215987617742168866",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "781036565853835770816006593157324073092",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1581789081223100552812132101437735419093",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "636711106934505501813840520987223402477",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAnd>::bitand",
    "hash": "1808562075960099839614038510097164394688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "5979574480440437904684316671733277667",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOr>::bitor",
    "hash": "1135559399325654492218132048801409445489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "93116706388311722292643752338495899418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXor>::bitxor",
    "hash": "722130409549399173514301067504257831340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "16292966239304108680212321696710145693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Not>::not",
    "hash": "133629259423682831247158747001292226448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i128>>::shl",
    "hash": "10742574220998421618164493741967838356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i16>>::shl",
    "hash": "1810680995021524971216217492950855755413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i32>>::shl",
    "hash": "177076017682049724264467080469411679501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i64>>::shl",
    "hash": "5358813538842901138456648486059178191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i8>>::shl",
    "hash": "1181683109011583069315934210827444322396",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<isize>>::shl",
    "hash": "1012888877497360212017794266500799651834",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u128>>::shl",
    "hash": "166839037157192174061613727125412486429",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u16>>::shl",
    "hash": "536820189421080754712620582316871731723",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u32>>::shl",
    "hash": "259973385383139492817527305682536745599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u8>>::shl",
    "hash": "99852920796402937142214643074814974245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<usize>>::shl",
    "hash": "141775538301465149417667422620012041668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl>::shl",
    "hash": "41960749435837042785043983981024960568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "96326310862744023696124703171630059045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1022499256757808816217404588271470260969",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "541719514153374163117771795689359840199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "36647015297322078648244062429472910308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "169092947638381073414535368241586453818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "16778022640344321393039402103940771965",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "880231602657740389814315252212361168416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "57538796077081138176423928859925250270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "399855870144741934617492186703231598118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "434577352903522908611082001490974500485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "804903437495049546312861832205175626026",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "748221215514892494510195499569996773109",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i128>>::shr",
    "hash": "797079848154364800310070961530742669837",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i16>>::shr",
    "hash": "797670007140260239112778945298424786489",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i32>>::shr",
    "hash": "824440218948136033814484786368757470593",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i64>>::shr",
    "hash": "1532732045950840639110649831760588508373",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i8>>::shr",
    "hash": "601168048160620772915506101840192520804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<isize>>::shr",
    "hash": "178838280612050467917366734706707007617",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u128>>::shr",
    "hash": "7867226877433661838288505582398719656",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u16>>::shr",
    "hash": "1710710212269797832010941849776964585966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u32>>::shr",
    "hash": "74922203822057127656700924308741580812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u8>>::shr",
    "hash": "34656551857064113291646292482060839714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<usize>>::shr",
    "hash": "11513606239542329399581391988681075078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr>::shr",
    "hash": "1321124021882285062611644025059940489284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "92697703381866720187405754226116935270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "233885649068252243811399278606348730895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "63508606017509845554721294486848460710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "58050929176070166775917707775551867516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1240740044971777801913632054307021580771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "16571689904232535752738239570861536966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1186775781334651035115679196608955393569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "150473795165838453116951120386625814508",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "951667255078741195410747375718965760873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "168604736978726548471257515182036441142",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "134851092662173306928213753976820176072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "107255870892426289868753924860462801280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAnd>::bitand",
    "hash": "163055073906346081982558935553484599094",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1522427492371917782218325836342021640496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOr>::bitor",
    "hash": "59695870353254306817249476797728848578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "139814459349455595639552591847916859779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXor>::bitxor",
    "hash": "289612724989721365516133400572838343886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "176236439661713818449535612280479753431",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Not>::not",
    "hash": "99837276899522761007121209212334173819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i128>>::shl",
    "hash": "508667239327231633915387578354016325960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i16>>::shl",
    "hash": "916041512222775024514460395009486318408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i32>>::shl",
    "hash": "155970302844763628402121285289327002392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i64>>::shl",
    "hash": "808934360180627873017254552452460267355",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i8>>::shl",
    "hash": "62057211226735332512679192507681922078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<isize>>::shl",
    "hash": "677367843074027646015523656261420592049",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u128>>::shl",
    "hash": "166255109411838319513926387049157415921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u16>>::shl",
    "hash": "43967345708014526809974059569206849403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u32>>::shl",
    "hash": "1403862266853799578611691161760208135067",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u64>>::shl",
    "hash": "182309797498385172963915336734868443334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<usize>>::shl",
    "hash": "480140163070194193115677616825326340672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl>::shl",
    "hash": "116624148708669674639855630566004052147",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "11271401955760429538406934173652122000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1967066170555311172902577438438373586",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "97795971475833611536171633277841531212",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "167983383936283971011444513208329454821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "19615257899991107717181453945251554361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "88975326402766764279516329941158194023",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "162950429530235688712252269372311567955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "25573692665680057105876398649788821308",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "315633406897775510116243366687859250766",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "31876747051981091357950187070812260511",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "138297592999071778325741884403528883445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1531456666341757137512469269875571476111",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i128>>::shr",
    "hash": "754197432425754410112401480428816434684",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i16>>::shr",
    "hash": "87526084686295297193720898425541111029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i32>>::shr",
    "hash": "1824545850793668501711727416187395106257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i64>>::shr",
    "hash": "354532329683367467211198523713108491855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i8>>::shr",
    "hash": "9419146855454227805718331080452770349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<isize>>::shr",
    "hash": "1624867880203725226817828487864175243873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u128>>::shr",
    "hash": "11454160539387169877769659196592548743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u16>>::shr",
    "hash": "1556640042171270433314688230839185696488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u32>>::shr",
    "hash": "81753001705480145513172101527899601807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u64>>::shr",
    "hash": "17726076552561092217250030753296431577",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<usize>>::shr",
    "hash": "26866794836986693268015963595740135946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr>::shr",
    "hash": "836788694656239547112464699888023079113",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1311843228785684573808852424257497906",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "364937954481968752015681319714456548393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "166987764041380645782048529335165995757",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "68036368165516142543844703208850786807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "17363132347426779319981909448914141018",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "179264596804976352131270333756314081054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "33813079874299572728089705370012881865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "11122122109670600636735097380991263406",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "135220035808320771312875625592081576708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1338317524739320523217785338509239830842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "892605463085677581810911371553207703625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1073798466548681669113311383960904352501",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAnd>::bitand",
    "hash": "16771476367484425796694558168446815942",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "622081157005077260314759493815852452203",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOr>::bitor",
    "hash": "1275051197829266829712766665742757903591",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1703766482140987019715402094983961130279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXor>::bitxor",
    "hash": "119701704121378852088213748178095036811",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "62264876436565555709202518453233799836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Not>::not",
    "hash": "30973535777796014528485311002999565280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i128>>::shl",
    "hash": "95500265818439564612581777440464755977",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i16>>::shl",
    "hash": "742941193128237660316037769766674984828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i32>>::shl",
    "hash": "1615970477525004432516242022432635199216",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i64>>::shl",
    "hash": "59611195679488938916128027125139791052",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i8>>::shl",
    "hash": "177143839742673294728788100357317693915",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<isize>>::shl",
    "hash": "99715262891713471154158783227161473159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u128>>::shl",
    "hash": "250763384606542192814743560506138038410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u16>>::shl",
    "hash": "106246458764779885921481007994418318733",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u32>>::shl",
    "hash": "1028395694229329958516090929334568287186",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u64>>::shl",
    "hash": "1047943483571934702513549839785730526760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u8>>::shl",
    "hash": "1045939082103161190915320270118623077777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl>::shl",
    "hash": "155993972515903955041553233337320267286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1798402194881908881514013292263900727821",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "763656029763328247114383701792110493317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "791513032780282592516564941643373820903",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "602677369170419498318233987375284819718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1009325097354152099015471812228154680959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "170875579274450377035829601805437319514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "38762452606098379476904398359350750675",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "104304635410177571013494581739861066473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "104133625539030463513839758016185806196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "386275648075037302311568212055613367065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "30293361389874947074637051168295788430",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign>::shl_assign",
    "hash": "21972549607832508981574660158419350251",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i128>>::shr",
    "hash": "264101220513686804911847415151110636412",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i16>>::shr",
    "hash": "971221643427394612911384775283819999354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i32>>::shr",
    "hash": "101155205964421464167338163848358930954",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i64>>::shr",
    "hash": "908682508045369252912303319007563102045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i8>>::shr",
    "hash": "1668650657427923235312253167138902188502",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<isize>>::shr",
    "hash": "1647436777064542551313081228223107843490",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u128>>::shr",
    "hash": "117726796073459770036093351975115627254",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u16>>::shr",
    "hash": "1700838212683236656576759255800517381",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u32>>::shr",
    "hash": "238818209493624794013391137017349333459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u64>>::shr",
    "hash": "30758204697238112064420236563153216739",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u8>>::shr",
    "hash": "127574341745270831528413377486926428409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr>::shr",
    "hash": "25420271673514437128898122906823010824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1830922351316872807016196223995710910484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "79002835650453447117736181593637260619",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "875279787195796434612647828141516335313",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "27478393509062300006994688139224682862",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "369265034820782587012795877669193768034",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "62758935646192353173722640446958259706",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "131845519455823243369929893867164896326",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "365368886707563193912397097748007777042",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "74521995352015400644579075353776479604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "133266491362746914119536632728346726752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "35942176761691364015496357013195269719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign>::shr_assign",
    "hash": "69369011543899827447321548414184154640",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as clone::Clone>::clone",
    "hash": "366974912920839386515801963218903644372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "14407072510473362121585929695509736529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::PartialEq>::eq",
    "hash": "105868480734732351109523174461050716086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "134659546361337577875790172492877718078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "128962435070927530405362365736539223639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "880099753416866301016817688796490528363",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by",
    "hash": "481835834712446476615556589325864506358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next",
    "hash": "130717245747538899593395990241756055369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint",
    "hash": "1501910614844152319711596790706136212807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::assume_range",
    "hash": "212928144464252219117278275833446446061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::end",
    "hash": "884246074448727927914595282961940941192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::len",
    "hash": "975615807404907599012293873143289411403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::new_unchecked",
    "hash": "1754912251153572666416298790825990122972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_back_unchecked",
    "hash": "29356523737092853011866069791552391450",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_unchecked",
    "hash": "992275621815851552413461958853915402745",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::start",
    "hash": "27547235193633795771352944920978011050",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_prefix",
    "hash": "84614053864276317792721518336362996588",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_suffix",
    "hash": "159736813722695483973676959462633832720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::zero_to",
    "hash": "97912592448095803783191936410021855138",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_new_unchecked",
    "hash": "551150047287067492413662467301369738002",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_back_unchecked",
    "hash": "611240389652421777516492856752231003841",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_unchecked",
    "hash": "64505434520711949542857550635786310384",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as clone::Clone>::clone",
    "hash": "51752851975167651917599410809504188585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "69470044579129534834211368379959643874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::PartialEq>::eq",
    "hash": "523097387427171583516900264263599857045",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as default::Default>::default",
    "hash": "81626075067298248429457633037843071814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ops/range.rs",
    "func": "ops::range::RangeInclusive::<usize>::into_slice_range",
    "hash": "146790947205902300248608006721818154078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::unwrap_failed",
    "hash": "1262555611173615611410428101371636009066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/option.rs",
    "func": "option::verify::verify_as_slice",
    "hash": "603695963447420385816543023160687634184",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_borrowed::do_panic",
    "hash": "1645495813651905710317384676894446331484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic",
    "hash": "1430470370884318312717936216829810381597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf16_raw::do_panic",
    "hash": "50194068989826417513262414267046561248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf8_raw::do_panic",
    "hash": "135085831257420105511932492454364625470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f128::<impl f128>::clamp::do_panic",
    "hash": "595747874060528004517536504946918089652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f16::<impl f16>::clamp::do_panic",
    "hash": "1673143151664441944315476498617789092184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f32::<impl f32>::clamp::do_panic",
    "hash": "243042516448317789313744200396098639652",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "f64::<impl f64>::clamp::do_panic",
    "hash": "1209088804198072644811957527234417305581",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "num::from_ascii_radix_panic::do_panic",
    "hash": "93649413116036234455532399336081095145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic",
    "hash": "889244612801541051010065396547615219077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_index_fail::do_panic",
    "hash": "135085831257420105511932492454364625470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panic/location.rs",
    "func": "panic::location::Location::<'_>::caller",
    "hash": "1113032932815665948217565294476098756403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_bounds_check",
    "hash": "651629759445340984711754508896219849575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_cannot_unwind",
    "hash": "242181715916107705416384707665609293091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_add_overflow",
    "hash": "1072673519469559488813453527349548976770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed",
    "hash": "349657222904462149212616592995763522873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_drop",
    "hash": "1335467998759013293416653527462738356104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_panic",
    "hash": "6671996234787244407531471198066377601",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed",
    "hash": "830335467169936691315054046533870997056",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_drop",
    "hash": "1088979907211123224115851570164170819682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_panic",
    "hash": "1805829311917702760813547210256212675351",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed",
    "hash": "5007351754840108096785729122042516196",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_drop",
    "hash": "73430812404311502652626868957646901800",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_panic",
    "hash": "1143565852981359394518134118974303400454",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_by_zero",
    "hash": "159758387025722397652298960757191525578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_overflow",
    "hash": "150205495392768814893023078285399970790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none",
    "hash": "280580742645108837215018195653929072234",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_drop",
    "hash": "158599826685426328796537051658922303818",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_panic",
    "hash": "129292076861084820858170453651868860807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_mul_overflow",
    "hash": "127306522968094690215901836632143286926",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_neg_overflow",
    "hash": "91143579459581669531697410698845229475",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_by_zero",
    "hash": "25276774499438944304038182962141356458",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_overflow",
    "hash": "1112274134915535276716097379666871971188",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shl_overflow",
    "hash": "1023896071097414870617009867557788509225",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shr_overflow",
    "hash": "176071303351409588245568559702828443159",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_sub_overflow",
    "hash": "55567374554354043818187702774263751884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_in_cleanup",
    "hash": "856776841529391899418036583055339103886",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_invalid_enum_construction",
    "hash": "174929186839566475118118415843146646641",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_misaligned_pointer_dereference",
    "hash": "296491233653931873216873915023315331650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_null_pointer_dereference",
    "hash": "167632833524046317173183025505928308152",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<char as pat::RangePattern>::sub_one",
    "hash": "182202136871620119058416612859792439689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i128 as pat::RangePattern>::sub_one",
    "hash": "140164494952204276411648706300720823480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i16 as pat::RangePattern>::sub_one",
    "hash": "105998612755238696655088065384021415403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i32 as pat::RangePattern>::sub_one",
    "hash": "983576327331519625115308999581175676358",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i64 as pat::RangePattern>::sub_one",
    "hash": "150428404543917121117464579673009406448",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<i8 as pat::RangePattern>::sub_one",
    "hash": "44177566075423880992795450320764088995",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<isize as pat::RangePattern>::sub_one",
    "hash": "404100250587638018395211382191844804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u128 as pat::RangePattern>::sub_one",
    "hash": "63754671697029845595357406698988459439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u16 as pat::RangePattern>::sub_one",
    "hash": "11262317534095294962308077424672234703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u32 as pat::RangePattern>::sub_one",
    "hash": "1428131936787081256416683696467038957775",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u64 as pat::RangePattern>::sub_one",
    "hash": "1565108409483976607115835108203948307997",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<u8 as pat::RangePattern>::sub_one",
    "hash": "1441041020557446667713170728401427957987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/pat.rs",
    "func": "<usize as pat::RangePattern>::sub_one",
    "hash": "1754449521587902717915913943946728451978",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as clone::Clone>::clone",
    "hash": "1175343087208465347513466616613459906017",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1575422666862478312614030415211857333506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Ord>::cmp",
    "hash": "1546445554760545130515472529981863323764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialEq>::eq",
    "hash": "1687043565489565286816393188563214506807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp",
    "hash": "13493593393868133915439552907779913455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from",
    "hash": "20513780087903973198521921833167300687",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from",
    "hash": "135822678618903137623256077141474105209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as default::Default>::default",
    "hash": "1413009431915819452017776810764645880771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as ub_checks::Invariant>::is_safe",
    "hash": "1574783854124112156816797958374362129069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as clone::Clone>::clone",
    "hash": "12559740367480838507886035148901052375",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "964894992477855073313140429528301903390",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq",
    "hash": "71611202058661207025593126105578681869",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from",
    "hash": "5988075202567892016019814834317464944",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from",
    "hash": "58511434068774707116799979293247780545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_nonzero",
    "hash": "201181288689639124415825169679319142024",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_usize",
    "hash": "112152844438854238887994758767167519478",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::log2",
    "hash": "567128593324850714615319747611018204654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::mask",
    "hash": "78637598139928331936532242289687422514",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::max",
    "hash": "170995228381040670003312121577996373865",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new",
    "hash": "5589667399286252701694525062377909418",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new_unchecked",
    "hash": "21093895404218893828635808083668477303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::_alignment_can_be_structurally_matched",
    "hash": "11571527646908301998114980104259248248",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i128",
    "hash": "24378972103282188338602146948983867765",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i16",
    "hash": "5403424686293964588207842170352614522",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i32",
    "hash": "151161786406764971174764361204914955092",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i64",
    "hash": "1026994685333348501715108286405423567107",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i8",
    "hash": "104200414260660875343505627150462665435",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_isize",
    "hash": "1737468268915337892511526479720930742502",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i128",
    "hash": "943117377842273804212939319951882803792",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i16",
    "hash": "139447093217467590821178168344459048988",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i32",
    "hash": "2060659146994186448483926069446019349",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i64",
    "hash": "851682017743884050010694002390746906511",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i8",
    "hash": "1235532126615987443915226350749123209372",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_isize",
    "hash": "13035917269981900708990080440799243480",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_1",
    "hash": "20601783594900680517187110068887431671",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_2",
    "hash": "728227016512068827112197145607903162863",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_3",
    "hash": "52050042659994573459903318935147902962",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_4",
    "hash": "31560582946591254677043755014738230745",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u128",
    "hash": "746746631753381166117550254654147835679",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u16",
    "hash": "119158953351561054579450522065603022903",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u32",
    "hash": "53760093930606955641836989198212897884",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u64",
    "hash": "10180354813210838504803662293548907180",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u8",
    "hash": "59898716349608459557173485803192759100",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_usize",
    "hash": "1647280777340246113610881398782595083245",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_1",
    "hash": "793401180758539773917292874654788172751",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_2",
    "hash": "53742766388504021252493059630567771061",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_3",
    "hash": "182262128575167861999408458836424256010",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_4",
    "hash": "98586678946447750752269092090749233299",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u128",
    "hash": "1200270305287164927410058168549039895037",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u16",
    "hash": "12479805257343390096371730358888938559",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u32",
    "hash": "1027538818150801802915966856064366787852",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u64",
    "hash": "59055924678771916781802696048054271268",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u8",
    "hash": "20052143715285626456773523947873075181",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_unit",
    "hash": "27755815101827743269032863364984913043",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_usize",
    "hash": "121196335235469006168028983903821761841",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_fixed_offset",
    "hash": "97186925759116069064811300471585599076",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128",
    "hash": "136363886037300846613117393094694505216",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128_arr",
    "hash": "7046576001581713783144221555881783966",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16",
    "hash": "7118346933658904828282507079504301468",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16_arr",
    "hash": "246296305538040555716556217004764809264",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32",
    "hash": "204143480916080166817400385682526885196",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32_arr",
    "hash": "7838007210567666626932911787925458563",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64",
    "hash": "174383670835428923815651979982637318501",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64_arr",
    "hash": "1274255124183218655017316378834997997707",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8",
    "hash": "211423843426584658416243573582339115874",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8_arr",
    "hash": "105037665247534022616592581053945312158",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize",
    "hash": "124907194822216855488242138944214213209",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize_arr",
    "hash": "101406177117956080895041891587796716656",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1",
    "hash": "23324723120304423215529619058284144921",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1_arr",
    "hash": "180545224268007923858513369168348127457",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2",
    "hash": "56802808286802217532025773283987051110",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2_arr",
    "hash": "70342340555454450401296754947010407399",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3",
    "hash": "95797818820910553727409038187661760165",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3_arr",
    "hash": "154623283103177780252328165714929865925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4",
    "hash": "77413441680916361799119541328773945909",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4_arr",
    "hash": "40030313877980185486524724568939057747",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128",
    "hash": "930183225157280103015786427508930642273",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128_arr",
    "hash": "172101655847464786964565247266849239557",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16",
    "hash": "14712212053401984366892199195080892398",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16_arr",
    "hash": "86482105080763418292104249783478975991",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32",
    "hash": "1111719550068955953014234346319408938421",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32_arr",
    "hash": "3852411830819074538293280039540178673",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64",
    "hash": "768183617426977597910850509693266425999",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64_arr",
    "hash": "340291480555470070112918811518813965876",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8",
    "hash": "175056917062171716389352305487841674558",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8_arr",
    "hash": "145140180865982848445368548142355447222",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_unit",
    "hash": "115554606131167408651270916464148298193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize",
    "hash": "26383701298976843787771044309017787849",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize_arr",
    "hash": "944839677355361130415939023556869951526",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i128",
    "hash": "1291523108699946670216264928244896109590",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i16",
    "hash": "123505040062138743795118916833813748393",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i32",
    "hash": "122140744281266828711165838732244953251",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i64",
    "hash": "41234365689025954767234928270782189016",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i8",
    "hash": "104696812041853707359450444322658058096",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_isize",
    "hash": "1156468705774215071517211346855355014160",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i128",
    "hash": "5910605124305884324509179916999848945",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i16",
    "hash": "2348819450468592024824885962117286530",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i32",
    "hash": "74653950251518703942953480784384660596",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i64",
    "hash": "480300508285031676214015146509303983453",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i8",
    "hash": "657703751665952723117665768834565795137",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_isize",
    "hash": "1761579748710586113615645641518799457653",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_1",
    "hash": "123815696069383312810857468023597809826",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_2",
    "hash": "74655104875797973942625997810714753927",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_3",
    "hash": "16270627097820093884281613055539334522",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_4",
    "hash": "689499662194131526293375287099736170",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u128",
    "hash": "165438755900098119159869058766680769528",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u16",
    "hash": "34486065095755740606526678761114422988",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u32",
    "hash": "1547876917038485294813644644210907129564",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u64",
    "hash": "120037590665983628093080432222542303822",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u8",
    "hash": "136457907771588194916601945805696224223",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_usize",
    "hash": "25918501536490290891917055243514481953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_1",
    "hash": "16431758308009215023633382008143968270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_2",
    "hash": "1720162793253161848710772889596938228293",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_3",
    "hash": "1783079215917337546716019504149491298328",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_4",
    "hash": "28489890205245780139394056575087342686",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u128",
    "hash": "1547819484801453751317152202354335566387",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u16",
    "hash": "334193335012104886215962039648371314668",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u32",
    "hash": "167148343386754651378189448150738905019",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u64",
    "hash": "78428438282591301188010509924860497741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u8",
    "hash": "5758779406398519215350989592173519782",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_unit",
    "hash": "1193818945691361270417024473035956336924",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_usize",
    "hash": "1237106881651056641112039332445716977323",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i128",
    "hash": "188047418180831180711902421689212301276",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i16",
    "hash": "1633682396522121735612356145723473575070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i32",
    "hash": "153842219895430388545059919379913521090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i64",
    "hash": "89884755953752322128351948484017908054",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i8",
    "hash": "174906575824537592708683136716686686208",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_isize",
    "hash": "96678511228203431529267529108650295956",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i128",
    "hash": "868564576626806531111469063768755027805",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i16",
    "hash": "125301178508270942959642098143637340596",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i32",
    "hash": "905034405554463270218420813480087122292",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i64",
    "hash": "166399150030870428551042427679845244170",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i8",
    "hash": "708787111655018623216437155366221766114",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_isize",
    "hash": "88652669145050251623976045448122686916",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_1",
    "hash": "16394694383342093613304642854014811860",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_2",
    "hash": "1773484550992551848313820439174340993596",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_3",
    "hash": "132888298829399956997001271553034930591",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_4",
    "hash": "1339587087855458359917337173918433313949",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u128",
    "hash": "129070376069402803006136324325156573416",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u16",
    "hash": "1594269705876519449612463495080659799646",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u32",
    "hash": "5312123777048913581804574045755903408",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u64",
    "hash": "1166662954048649648210818197331054636542",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u8",
    "hash": "100101391443628155622968637173576433150",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_usize",
    "hash": "76033624781896850326593928496647479434",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_1",
    "hash": "113065787831048219636581531228219605789",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_2",
    "hash": "54594366941828837714794864031827040978",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_3",
    "hash": "821520009053866531117942002252301346173",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_4",
    "hash": "1099929471490525031916237004998233242771",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u128",
    "hash": "123347750423220404916686798111889017074",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u16",
    "hash": "1298550148451662559715765676384174285046",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u32",
    "hash": "1091618605666519560977152054453535026",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u64",
    "hash": "1210173071631259570811947826001430385850",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u8",
    "hash": "121084363166154994593962731711563975192",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_unit",
    "hash": "83960961587898161311387790883433462849",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_usize",
    "hash": "19061813428272808454452533405461409245",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::mod_inv",
    "hash": "108552149900633290919250115311635650035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_4096",
    "hash": "79960339727296275310120088971814287324",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_5",
    "hash": "1594273380168666918211653958339539558906",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u128",
    "hash": "906696522058765939640305994096978782",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u16",
    "hash": "501386688500562718215251562959911811432",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u32",
    "hash": "18753049033670640243137675020340195938",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u64",
    "hash": "2580034910833183861995554197389253417",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u8",
    "hash": "37753601881989613465390300769001760293",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_zst",
    "hash": "741420905741926919816461221084091505560",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_read_u128",
    "hash": "9189318630482811198436165825288278472",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i128",
    "hash": "1225058859332654686915343012290055364323",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i16",
    "hash": "225263257377834180512839695335965336868",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i32",
    "hash": "131641803850848972393945424299137226587",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i64",
    "hash": "41196169136325756887466081275636925338",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i8",
    "hash": "628612951554325358511004822458005600173",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_isize",
    "hash": "174250107078362942131479616582748327435",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i128",
    "hash": "426889827848881136610703093807801631462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i16",
    "hash": "1389521840351974206913793909203666149842",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i32",
    "hash": "150391134192738638511128158446480715896",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i64",
    "hash": "135809944121671944017500412630781591465",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i8",
    "hash": "152225341052153715391927639464044742483",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_isize",
    "hash": "79789611935551514303717576808409000189",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_1",
    "hash": "59025788928682123904590479595754598783",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_2",
    "hash": "35365952355383679703933745422236921162",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_3",
    "hash": "125897282599024644952260768071744096430",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_4",
    "hash": "749155249560078221815413498716871789064",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u128",
    "hash": "1422808764951216521414161721420206513582",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u16",
    "hash": "73860589978791133276840448020019057378",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u32",
    "hash": "1089837989641359339314152913230884864742",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u64",
    "hash": "76320777823520776132995037591980261488",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u8",
    "hash": "1668405419219546548811784610233456254144",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_usize",
    "hash": "534569877555243725512495862825364214955",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_1",
    "hash": "833971696448055140417033273403062800397",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_2",
    "hash": "174910067642508273115992436300935443665",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_3",
    "hash": "93616678964679226644780075466009243976",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_4",
    "hash": "8628073869663565971979369896682246621",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u128",
    "hash": "132980434347356332967597480581029969665",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u16",
    "hash": "1289546471538436096810904423487246501805",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u32",
    "hash": "193476301367624134713894000774653052419",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u64",
    "hash": "40162204215524079369647961900334072091",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_unit",
    "hash": "52083606150981257978297048643392783358",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_usize",
    "hash": "143529452853856391121957243183732636085",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_fixed_offset",
    "hash": "11537031812629539490465119033259574991",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128",
    "hash": "56158919715692262665462658458411540363",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128_array",
    "hash": "984355253353515736714136176391181716889",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16",
    "hash": "141716849880080949915324171303007206691",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16_array",
    "hash": "95971196339470803343014018359598911634",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32",
    "hash": "153499920449259145313445468450498651215",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32_array",
    "hash": "136380772199167834155107736029208493713",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64",
    "hash": "100547574322079671474200175989194716090",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64_array",
    "hash": "129740549087832663709869222480120532022",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8",
    "hash": "76801883134847308875364513958246698253",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8_array",
    "hash": "1330662669589741111517488916051286750886",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize",
    "hash": "52795014284837081544039230517347680498",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize_array",
    "hash": "2036035889415038982205423506996593049",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1",
    "hash": "420786154769115663912107743038427007912",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1_array",
    "hash": "1183237907522793555210473570697363200467",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2",
    "hash": "562803483949000767710141001651911413854",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2_array",
    "hash": "89460945724694988357074482412302684325",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3",
    "hash": "364520328586134828510206175591252963084",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3_array",
    "hash": "29780534093869106688123295087413526001",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4",
    "hash": "37653481240061149462861563706704071404",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4_array",
    "hash": "932623404360267272615633282005080420439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128",
    "hash": "1330268577521217136316640490492300545271",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128_array",
    "hash": "105712811091170409017363398889741269544",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16",
    "hash": "102025239660720336551014215732886442926",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16_array",
    "hash": "154627514217363595744885690369786759026",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32",
    "hash": "5465834378740486430141649484668228269",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32_array",
    "hash": "132296625542364656382088882198937478302",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64",
    "hash": "21383236006437084324701134432338603538",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64_array",
    "hash": "1469140554257910621510377684736473045404",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8",
    "hash": "1348404172470812856911917374065601363702",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8_array",
    "hash": "146365726277122337632032527934303986683",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_unit",
    "hash": "565957972217767163114685095598082032803",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize",
    "hash": "744970826678860625115057848175721790730",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize_array",
    "hash": "1380903213325385638411663397785864515703",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i128",
    "hash": "1370281056526266039511196108876415036469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i16",
    "hash": "10392457230559930561333500952358620014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i32",
    "hash": "130693839495708883842070224509988762937",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i64",
    "hash": "146611623844208030961919573838743590506",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i8",
    "hash": "1083998866835514093915212757781624201547",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_isize",
    "hash": "19509102763667211072586910652003682458",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i128",
    "hash": "157799927669902885011321842749960948953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i16",
    "hash": "191068287798997490230375738111027615",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i32",
    "hash": "1400877089851337990215210129004324857117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i64",
    "hash": "69299448969839356742825825330665424895",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i8",
    "hash": "1038683948702357312290215405067442578",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_isize",
    "hash": "1483394535952618341510656686980081138712",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_1",
    "hash": "60179200869891045518212363749548364120",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_2",
    "hash": "165363424265825589610684726018285422437",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_3",
    "hash": "258862598950970942444120712048762765",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_4",
    "hash": "1372384537834551357515635421652937842648",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u128",
    "hash": "1365091487064734640215133719560382396655",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u16",
    "hash": "1421891151266583691312977231994471652428",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u32",
    "hash": "30834329555713541235805658577274495481",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u64",
    "hash": "100658490672932571717126696011991051814",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u8",
    "hash": "95251306914582936569869354916456297404",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_usize",
    "hash": "1289638972761098773415039206087510380248",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_1",
    "hash": "5374758654202854540766343230843542630",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_2",
    "hash": "58256361962448563229664961598816032959",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_3",
    "hash": "145323460713002736797582899281109464285",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_4",
    "hash": "26643584920713167475730562439511588418",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u128",
    "hash": "43279838578615217251399336379145465411",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u16",
    "hash": "1654880532762978911710206757204211883128",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u32",
    "hash": "320259749515245936015253932718104689262",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u64",
    "hash": "1112583328545354290516576663960476792633",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_unit",
    "hash": "400555426951755646211161181503123468371",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_usize",
    "hash": "82875404471854182266803971068585473748",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i128",
    "hash": "215751489292664137011485737985302581225",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i16",
    "hash": "1177956766529870228516054577753425270460",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i32",
    "hash": "25573867020384810237505269671527270006",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i64",
    "hash": "488203224211399545217439640177148103179",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i8",
    "hash": "6258535741132454916696281294317931214",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_isize",
    "hash": "1724923637743863089333354308077926157",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i128",
    "hash": "1390548932572871757413130961949178166970",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i16",
    "hash": "50491605395610235685704275104756476847",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i32",
    "hash": "1425465596284170668711757353392638422015",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i64",
    "hash": "24007242214135727008199816938928373658",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i8",
    "hash": "1691038263178977946614008546599557897270",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_isize",
    "hash": "19340132481500735329637552440401194043",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_1",
    "hash": "1556563755310473555514363120565862889275",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_2",
    "hash": "113560446122526944452711216260519157745",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_3",
    "hash": "10099897655538829799532827223722051424",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_4",
    "hash": "727905828405457114414070501580168464804",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u128",
    "hash": "71688120277702235549394029532577581602",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u16",
    "hash": "44047073719155628409236325294863067461",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u32",
    "hash": "143789579587996604956897857897599562192",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u64",
    "hash": "606540560585664053810744336603540808417",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u8",
    "hash": "10404085964080849514150112228492596183",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_usize",
    "hash": "108666641729112044562867739565061274515",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_1",
    "hash": "1319255429975103034411342581801402519196",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_2",
    "hash": "9680810796879998664770176434906014134",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_3",
    "hash": "14829178270505709603495411515868481693",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_4",
    "hash": "830179862003133341514413068897792611778",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u128",
    "hash": "1304505363015306683813788970643928601389",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u16",
    "hash": "18470767735447681284696757424635639231",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u32",
    "hash": "68162850577464091131420323259195076555",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u64",
    "hash": "695580918901585306217279487712767768992",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_unit",
    "hash": "1690422979133768938214882154651673584658",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_usize",
    "hash": "128063412266943049589659428605456185400",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::SampleStruct as ptr::non_null::verify::SampleTrait>::get_value",
    "hash": "1019146490540347874218323195995021106427",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::non_null_check_drop_in_place::Droppable as ops::drop::Drop>::drop",
    "hash": "27749331284307847912374479770917710724",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_dangling_proof",
    "hash": "47743126764091703621891906390367224410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_proof",
    "hash": "78900859252264105111487333437400890359",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_proof",
    "hash": "159705708041952069616833647944241207532",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_add",
    "hash": "420605830056680869515974274855814005789",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_addr",
    "hash": "130093778392243443377304689612105181391",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset",
    "hash": "20704973453826629753419982795738570224",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset_negative",
    "hash": "814377563824180822964174731579755471",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut",
    "hash": "1488445502182209041810399005679984155746",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut_ptr",
    "hash": "90449939735544265753974389740584337670",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_non_null_ptr",
    "hash": "78089691912210059478952202627563398925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ptr",
    "hash": "1077672158311193949716929962587177665080",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ref",
    "hash": "499200822589825878116397146413864370192",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_mut",
    "hash": "1768135785683302425110634107005836394495",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_ref",
    "hash": "899997358846557600617115386310672158014",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice",
    "hash": "1023400435627534628517693545146496957500",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice_mut",
    "hash": "1407652595649923467814524316170828664953",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_cast",
    "hash": "155225448489665439367137811980972310879",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from",
    "hash": "170311441420160978188358977036488695384",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from_nonoverlapping",
    "hash": "1060511098665910233611656512114246236022",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to",
    "hash": "367957433254628259710260039298589700027",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to_nonoverlapping",
    "hash": "24662442362472342872973585826006660653",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_drop_in_place",
    "hash": "17492594024563461912619638431987487067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_from_raw_part_trait",
    "hash": "1431861985627818240215180392146937552152",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
    "hash": "182958456325323925503627787767890623489",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to",
    "hash": "1435310952953623243912626725765389530344",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to_no_power_two",
    "hash": "25590931988544704029045884850996433386",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_empty",
    "hash": "1106253657980520960818402961250973945263",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_len",
    "hash": "10353315677767497631641687400237716584",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_map_addr",
    "hash": "160037378932111955612176355416515222410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new",
    "hash": "2365092280006484965573016964914890209",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new_unchecked",
    "hash": "866319762174552242311834032177299098131",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset",
    "hash": "1357759824265521873013431431776737148177",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset_from",
    "hash": "11683219021876176857057361399504881660",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read",
    "hash": "1772603888048457662415179584956706221242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_unaligned",
    "hash": "1711252794170300212137387146363510980",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_volatile",
    "hash": "1457285732413800839818139826554943405339",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_replace",
    "hash": "854311642950958319812065937843685416310",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_slice_from_raw_parts",
    "hash": "1182515193897595833612276104859727447853",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub",
    "hash": "486814508245432048818258797698613750410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub_ptr",
    "hash": "95612124459665603106674815491900835112",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_swap",
    "hash": "45194115054504809653277240561811519360",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_to_raw_parts",
    "hash": "127629994005741233545933339098654130078",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_with_addr",
    "hash": "827763875283647041112602132726603092841",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i128",
    "hash": "1675867685336527471617490163359414295582",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i16",
    "hash": "134037114199271473125552769784457922088",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i32",
    "hash": "20550485458886704879154779920256216219",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i64",
    "hash": "5996008289760164186768531762150265435",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i8",
    "hash": "141762381439420111279888640589905364070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_isize",
    "hash": "133454350227498814613265337010468161903",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u128",
    "hash": "719410024517425566917283359631257220290",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u16",
    "hash": "21706801699479164575506181458838771695",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u32",
    "hash": "794812731824585114617623038167097728025",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u64",
    "hash": "134810662489997925914393305536076089099",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u8",
    "hash": "21444934917621798696573134836459638917",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_unit",
    "hash": "735503254880505684117219369107601916414",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_usize",
    "hash": "1407245644109756920317352552722548010522",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i128",
    "hash": "385333409479032999415157513254369252341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i16",
    "hash": "49704501297255974643968046478730959545",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i32",
    "hash": "83712150681418300810309963122096523838",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i64",
    "hash": "66621296849926788219209927246655471892",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i8",
    "hash": "153980097574857228253734990750592326899",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_isize",
    "hash": "1272401620781961757615298327131591730838",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u128",
    "hash": "121901548647677736145926361536620676719",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u16",
    "hash": "138157991522619077158010743484523059939",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u32",
    "hash": "1321273973043926785513524910214939673359",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u64",
    "hash": "3174100670676787056836953621848085803",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u8",
    "hash": "1632993609542584779417130594964619644319",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i128",
    "hash": "355127289096127365812965366038860729075",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i16",
    "hash": "1288552316697768069915801367944722108355",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i32",
    "hash": "11854671461130490854099260244157419052",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i64",
    "hash": "831389239201422920413914411956979593772",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i8",
    "hash": "18247938127562451930181718890715177239",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_isize",
    "hash": "325143694437271957312738269942624555217",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u128",
    "hash": "1306827881944808207018163434696885925887",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u16",
    "hash": "1355651694430799719310736898728138754627",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u32",
    "hash": "926445222641707593010934037926528068412",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u64",
    "hash": "126460271927535291946113926261209895279",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u8",
    "hash": "686046450322223564513516563972397548093",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_unit",
    "hash": "149118874729081431217607228471447265298",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_usize",
    "hash": "14085689883607820985555298617755059533",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unit",
    "hash": "124191420240434277096479095596090040640",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_usize",
    "hash": "678966488827762845014624084969452393171",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i128",
    "hash": "168066581497404648741051991964763136067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i16",
    "hash": "145729153125010881314000652268352410765",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i32",
    "hash": "1789367845803087046111375960102395834524",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i64",
    "hash": "1469740602164727749514512542634998340462",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i8",
    "hash": "86682706334999567624317416800409210335",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_isize",
    "hash": "1072224036315006507116283331513141959325",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u128",
    "hash": "13139053153515251427818203380548454726",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u16",
    "hash": "918752227777554370115013883996445047244",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u32",
    "hash": "694801804169629469017367822599853625397",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u64",
    "hash": "136184428499440595685702685154719054242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u8",
    "hash": "1714538511966791796416024906629157562526",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_unit",
    "hash": "169414439867613612547377369631709630925",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_usize",
    "hash": "27868292252258585014194329240512828785",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_slice_is_aligned_check",
    "hash": "865387162892180275511481896112514052461",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_mut",
    "hash": "873126951582098601110578282741258463425",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_non_null_ptr",
    "hash": "831016235601497219512943774543026617439",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ptr",
    "hash": "1405788671072538885511354644788479331124",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ref",
    "hash": "1032220721821748906010805429228134183294",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_cast",
    "hash": "671434073709498886513845215740489049012",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new",
    "hash": "941048437777879100716884564257367247041",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new_unchecked",
    "hash": "1166163788602461075615081779163807482614",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/range.rs",
    "func": "range::RangeInclusive::<usize>::into_slice_range",
    "hash": "34664134052203930611533160760242062974",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape",
    "hash": "1227194532305185117716552313218085751352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeByte as clone::Clone>::clone",
    "hash": "432433793620906686316774388443650435673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/cmp.rs",
    "func": "slice::cmp::as_underlying",
    "hash": "693274662990856667216361442076956176163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range",
    "hash": "2678347348651272452533961971221377515",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range_unchecked",
    "hash": "10029674899459793172135362115653879702",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_slice_range",
    "hash": "172097603123921000372200129642840113352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_index_fail",
    "hash": "135085831257420105511932492454364625470",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_back_by",
    "hash": "1187710546335976188614304752099898921098",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_by",
    "hash": "158945051310877278925467271078162077571",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_ref",
    "hash": "9101193394918824067157999748627195259",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_slice",
    "hash": "316137960438328883112336034097913912496",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_clone",
    "hash": "162677718851928846962961680349148474035",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_count",
    "hash": "6936146616008262881423052267319086776",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_default",
    "hash": "233904501555950248913296163408117751007",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_is_empty",
    "hash": "53006693725866444196779317728829829002",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_len",
    "hash": "15760130649211221069671744165904406583",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_new_iter",
    "hash": "1299662630785176164417952890486492091638",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next",
    "hash": "52638447086428979949919096091261786884",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back",
    "hash": "1725229977024456128013853459350544096155",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back_unchecked",
    "hash": "372047298179564104612984925722505719511",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth",
    "hash": "143119552701581048454948269973418621027",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth_back",
    "hash": "161491732670944121328827849553533022598",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_post_inc_start",
    "hash": "223948237061271441412762286080360982531",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_pre_dec_end",
    "hash": "1747277712308599332915823021154361994058",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_size_hint",
    "hash": "118994964216174387423291279215800888312",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_back_by",
    "hash": "1198560457597663309712061900477940159801",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_by",
    "hash": "144343743735818762989010940775851807931",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_ref",
    "hash": "120258791648546796664689011896584444039",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_slice",
    "hash": "54618489949762068415340868273734944817",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_clone",
    "hash": "6948695592398510131400622843038211646",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_count",
    "hash": "90827148686540691887036998942479723162",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_default",
    "hash": "585195479348251339316113030284295358217",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_is_empty",
    "hash": "1409301151248206171814944564924534798815",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_len",
    "hash": "62953464505680121413660113537480786126",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_new_iter",
    "hash": "160224245330718726533489070675779386367",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next",
    "hash": "87018786776382468802718705713448508773",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back",
    "hash": "931568177951592438014050764120652385250",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back_unchecked",
    "hash": "90922864447609502984639097701774074304",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth",
    "hash": "1135265549987372529415653717122198077404",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth_back",
    "hash": "842476192582529083316209797038766322436",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_post_inc_start",
    "hash": "63225103714366716991278089039954138138",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_pre_dec_end",
    "hash": "1391082829568610273210014289114134193673",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_size_hint",
    "hash": "569942040001868299513725244254282197792",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_back_by",
    "hash": "1157802225337725403017999340369554131890",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_by",
    "hash": "79317047292080060638690406679111333876",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_ref",
    "hash": "18299987114720759114133112159940983130",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_slice",
    "hash": "325415604309431466214685951502933798085",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_clone",
    "hash": "5529653589319876167185359005966113001",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_count",
    "hash": "814984788547148395916581460789872076919",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_default",
    "hash": "109756216743640981414812035613239263911",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_is_empty",
    "hash": "103135461970512503324700398673680997116",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_len",
    "hash": "173157711130625986181847926827033318914",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_new_iter",
    "hash": "7124331854334060582351755279017689436",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next",
    "hash": "425535216055706648511109146361580028372",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back",
    "hash": "117784836625534496059897284473019123011",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back_unchecked",
    "hash": "176527068178255970602685476675553885408",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth",
    "hash": "179774647672414707315099761174849068822",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth_back",
    "hash": "1521416988141123127816971300792211689671",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_post_inc_start",
    "hash": "288683721434344811116765201960246845589",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_pre_dec_end",
    "hash": "769131396398397010214015928133777014650",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_size_hint",
    "hash": "1522462774591294883616509131000295182112",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_back_by",
    "hash": "152878303574556360508658435783728138548",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_by",
    "hash": "220248158049128440114864687554782929036",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_ref",
    "hash": "9087749591117635593845400949220566191",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_slice",
    "hash": "8814681059444215315841035252507237723",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_clone",
    "hash": "87301706440864893197530390900782799180",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_count",
    "hash": "1662394400692241355012150690545674955675",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_default",
    "hash": "1094296016572940979813626034064453640357",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_is_empty",
    "hash": "17462143470756896455671802853712588620",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_len",
    "hash": "707550934383362916010691475530082853645",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_new_iter",
    "hash": "877097146050422012518379217908582374513",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next",
    "hash": "1164220567353328206716316157194864139384",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back",
    "hash": "1759664457454523048515518840841926735136",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back_unchecked",
    "hash": "46503981109716283786340904165062684834",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth",
    "hash": "69587773727301051717602681396786660674",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth_back",
    "hash": "131626529903502786575842331980366944332",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_post_inc_start",
    "hash": "861085852421299083517066620380791953749",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_pre_dec_end",
    "hash": "456233539236460235515886174777475684003",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_size_hint",
    "hash": "107861676353711021549947447947414981205",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/memchr.rs",
    "func": "slice::memchr::contains_zero_byte",
    "hash": "95696153499528458313901596214115751145",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "1228444505496224592614798147834278536958",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "103141837994909276101307811560806947523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "22422257990286609754819917724897024679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1266155675522051681915137248298477575410",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "61488236212443953624987984202698020524",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1453372801078840626314522683458257578133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "81805920622333531514188832837209734000",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "614652956106608365818241199567215031096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as clone::Clone>::clone",
    "hash": "1645257322150250706911612999179300336998",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "80766861920359694945860867830537583790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::PartialEq>::eq",
    "hash": "523691030050819918113531301549014319341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "167253307782899958291861455937204858096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "117485000197088428992304232441809614102",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::align_to_offsets::gcd",
    "hash": "363889497422173309816468671539791367786",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail",
    "hash": "140982359780642897435796885648050766452",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_bool",
    "hash": "55503984885242698534905484022971000750",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_char",
    "hash": "98597837962186605018506378855409225040",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u128",
    "hash": "74945013360780525035992201764910838301",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u16",
    "hash": "109822934381840478253541782284112614750",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u32",
    "hash": "84190902693531640771263036606688937562",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u64",
    "hash": "57754865128879717243697963305067272341",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u8",
    "hash": "1267024555549677268717015960556939768694",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_unit",
    "hash": "99970725208368747158729640492722853253",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_bool",
    "hash": "5548431688118278907862766038972623227",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_char",
    "hash": "1560923699714915077316750369385062853473",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u128",
    "hash": "21617258581199252294042520048550439157",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u16",
    "hash": "15510425286973354311333001700263453410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u32",
    "hash": "179003165787065234451398547280750132454",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u64",
    "hash": "134687552185054982774768549144438341512",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u8",
    "hash": "30794217217969435485522924426804605122",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_unit",
    "hash": "718480789106894340518393386091078499870",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_bool",
    "hash": "148797798902725432061853713779269936950",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_char",
    "hash": "269094450312867579718035578381235442846",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u128",
    "hash": "56905855550476724818093224626172886801",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u16",
    "hash": "1072811858785545426514563465042651271482",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u32",
    "hash": "286961854900464410013331098493429891510",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u64",
    "hash": "757128881867957676116277695395281398193",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u8",
    "hash": "75082527993053039291889540052391551169",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_unit",
    "hash": "1524053858163922581111221101169504998820",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_bool",
    "hash": "183733009522511479016487708224336832395",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_char",
    "hash": "1611934023728693750615500464668774986869",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u128",
    "hash": "1527473288990004411816878276221870374110",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u16",
    "hash": "149415062384123581426152172923532679856",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u32",
    "hash": "39202930666466352584052793495928366904",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u64",
    "hash": "6492083510135174199348505626802107305",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u8",
    "hash": "178872572686345275314608143442685118376",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_unit",
    "hash": "1521465002531141026417031170683749141331",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_bool",
    "hash": "1079767956585194133118282071291457884851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_char",
    "hash": "13670502203827174669800198313280905851",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u128",
    "hash": "106335455777802312829598281677557469921",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u16",
    "hash": "9306630832907254362728679115085859307",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u32",
    "hash": "32668061935997704912426913040264815699",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u64",
    "hash": "330005132904454258211868577295726763999",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u8",
    "hash": "66326583856419220987212276726199258370",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_unit",
    "hash": "63530766598130885238877965061345580667",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_bool",
    "hash": "1819069429282240040512237686320361066344",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_char",
    "hash": "68574643604950781731675348988225273844",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u128",
    "hash": "144003175007889402321084767109118263469",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u16",
    "hash": "54551801756637186063053511612341185410",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u32",
    "hash": "164495919276521297038876547083886697701",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u64",
    "hash": "96579487002876614428115229505063052541",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u8",
    "hash": "1749233203025452119312753118831466919617",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_unit",
    "hash": "124476772647223749521696390328102934654",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_bool",
    "hash": "349450974164996381014023928633764590262",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_char",
    "hash": "13210354761123873854423306031046528035",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u128",
    "hash": "12444260251215195512882941108480676334",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u16",
    "hash": "1338286759122552121415087963123763219911",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u32",
    "hash": "6066600643378591000389128035274174162",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u64",
    "hash": "63804047124696350702920363697718959695",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u8",
    "hash": "61078281484065880725473736058121460321",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_unit",
    "hash": "8712614014883076648596234668567330338",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_bool",
    "hash": "58997329354569046204910188491185916626",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_char",
    "hash": "182760278051639584417121589919620835282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u128",
    "hash": "166892202331592320983468706923290864785",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u16",
    "hash": "72213461857783433085498909911531646876",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u32",
    "hash": "16967986383007615363825769172815970361",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u64",
    "hash": "61604646292790815554913588543693006885",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u8",
    "hash": "99066629626614643212721659206757970095",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_unit",
    "hash": "26789411970145096974925365790062378956",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_bool",
    "hash": "97651165493489446202192824722156947242",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_char",
    "hash": "10333463262999711121507134572128873748",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u128",
    "hash": "742158896253978309512381540162884849424",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u16",
    "hash": "99168061185340299322304520670377755282",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u32",
    "hash": "1134207522410759782214499460987380449475",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u64",
    "hash": "35361948580777500902423168495386919666",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u8",
    "hash": "43887346596270048799431082683140665875",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_unit",
    "hash": "87937241916232826015107970767192776933",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_bool",
    "hash": "811115795039644051317416366327872984741",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_char",
    "hash": "736221272397678146918220075061977474843",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u128",
    "hash": "126084837004242436242677545702001803840",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u16",
    "hash": "1317851940326564822114876510768411862551",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u32",
    "hash": "116208499636160330461375575405811105327",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u64",
    "hash": "95830174434008055057739552665441912625",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u8",
    "hash": "44030390564982056382551389764205059719",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_unit",
    "hash": "666679542835086977810530475280253356011",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_bool",
    "hash": "154984233732961201188540989986156956924",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_char",
    "hash": "108133371202353950312073415821802350070",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u128",
    "hash": "83418297973688099491561884320937169571",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u16",
    "hash": "578473546757031254417391743349137275637",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u32",
    "hash": "116780400936538949510436531837695519067",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u64",
    "hash": "1344873515333075322117234013606648917719",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u8",
    "hash": "171752381010709199759158319238318590240",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_unit",
    "hash": "209367236863566641710171572135339709267",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_bool",
    "hash": "528406284313791089117531857550278101924",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_char",
    "hash": "17153589316958285997117384595306646627",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u128",
    "hash": "141610744842996817042062304474048814453",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u16",
    "hash": "134049064443152770709843968212526250731",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u32",
    "hash": "86312369064285101045408945506678506923",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u64",
    "hash": "1129598215139937556615772317459224297256",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u8",
    "hash": "596934711445711492112673647165276286458",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_unit",
    "hash": "45986592811688591755605672984804818631",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_bool",
    "hash": "1069077509476797959614291746790365293811",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_char",
    "hash": "141443474861854371813691965893062019505",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u128",
    "hash": "124580478749543495623046135636356130827",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u16",
    "hash": "145356294904863685217180734507311469077",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u32",
    "hash": "1326604427048758719212826688727865313828",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u64",
    "hash": "23819898432995511137918340977427563263",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u8",
    "hash": "1789461356470708293911874592640858161132",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_unit",
    "hash": "133843088739980552862732572186353312518",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_bool",
    "hash": "480579373408690057915436990731358964387",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_char",
    "hash": "628102608509193565916560813585275226182",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u128",
    "hash": "1243807139636637836215116697554224755668",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u16",
    "hash": "1264401605486500765616921625701049164025",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u32",
    "hash": "839713409945753017017870214712046108816",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u64",
    "hash": "10789927000619609054970933589511714742",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u8",
    "hash": "99980980531932368321056608094194669265",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_unit",
    "hash": "99639692649170326479887762119768642693",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_bool",
    "hash": "9883118540778966686760633548747967332",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_char",
    "hash": "1601966527159153256417931770307408627278",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u128",
    "hash": "1745159885854375644912532616600659621214",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u16",
    "hash": "8511077810877677125061712824640947447",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u32",
    "hash": "47807646039538070891891298060872942106",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u64",
    "hash": "620913200391860070413323451807945362984",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u8",
    "hash": "93491136053427036324219096756698898657",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_unit",
    "hash": "1162028095817037083011791556057108802559",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_bool",
    "hash": "560829407513030057015780438361682019378",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_char",
    "hash": "28568368616090889110783778997822155521",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u128",
    "hash": "56418178565215468828807610266511969419",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u16",
    "hash": "349186687201630076510718273631119455373",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u32",
    "hash": "87464467984597854756403938573420545991",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u64",
    "hash": "119043300857047203719951108061323058021",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u8",
    "hash": "727912577853377456718309501884061986598",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_unit",
    "hash": "1309265623800672024717140249805278970196",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::check_reverse",
    "hash": "632705688901986289812916136332146991448",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/slice/rotate.rs",
    "func": "slice::rotate::const_min",
    "hash": "1270438461514171088810672205753921848361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/shared/smallsort.rs",
    "func": "slice::sort::shared::smallsort::panic_on_ord_violation",
    "hash": "717316864195020333212717142816164069242",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone",
    "hash": "12096648276996378769624952880035353568",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::len",
    "hash": "118910770894669336584356273918917991833",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_sorted",
    "hash": "76436199708318685525846013368064223359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_unsorted",
    "hash": "1168707756219652878515544949458091231518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::sorted",
    "hash": "50677806787826745946156566879001363075",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_depth",
    "hash": "85298211748592681657233721310451156743",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_scale_factor",
    "hash": "1628703494335621906815442504341024779752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::sqrt_approx",
    "hash": "255144267985817360714545772341429243057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::contains_non_continuation_byte",
    "hash": "133774208422544204712385208594916672852",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/count.rs",
    "func": "str::count::sum_bytes_in_usize",
    "hash": "58675320035953499899532680283682396280",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as clone::Clone>::clone",
    "hash": "1421737906428699755616519336785560782860",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "100999279390663379189465280175234214979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::PartialEq>::eq",
    "hash": "1363812817795777260510003772117541250262",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as clone::Clone>::clone",
    "hash": "101189444776046950154912782937031422029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1287375361982080621115781447982573194934",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::PartialEq>::eq",
    "hash": "373733674965495327516276036462381068725",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::error_len",
    "hash": "1425690459290491886310479508103895905570",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::valid_up_to",
    "hash": "28759182975857547098651469533205323676",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::BytesIsNotEmpty as clone::Clone>::clone",
    "hash": "1134462621956276629212356351043471815287",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDebugContinue as clone::Clone>::clone",
    "hash": "1542207383255327621116904855085895476103",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDefault as clone::Clone>::clone",
    "hash": "182649462031515700183352668661070243072",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeUnicode as clone::Clone>::clone",
    "hash": "921511568084263858117305124753064771755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsAsciiWhitespace as clone::Clone>::clone",
    "hash": "690259270114141726215596604235015012549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsNotEmpty as clone::Clone>::clone",
    "hash": "37158827771850946497299676093189518975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::IsWhitespace as clone::Clone>::clone",
    "hash": "34849895375469610708345764686731926756",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::LinesMap as clone::Clone>::clone",
    "hash": "1001019627481923202716785672502496702184",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "<str::UnsafeBytesToStr as clone::Clone>::clone",
    "hash": "211392954465144897813203494630722967946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &mut str>::default",
    "hash": "1201451347459645491210659365263903205279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &str>::default",
    "hash": "93123451915686974738005182859496240660",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<char as str::pattern::Pattern>::as_utf8_pattern",
    "hash": "202979102918754469511973505088746121106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::EmptyNeedle as clone::Clone>::clone",
    "hash": "846787316198935758617725690966544171763",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching",
    "hash": "1296411750804674058315087202364841236804",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "921040717020639707211435762660647759802",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "313548882690528367412077569528013544642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching",
    "hash": "25147898751268070724297523336675951399",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "84124346961803484191975811234606759065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "44839495425802162711973928630568384066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as clone::Clone>::clone",
    "hash": "1087573110898129658217802012511246865689",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "816649430859910242810748878991678979217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::PartialEq>::eq",
    "hash": "945101538962586226417160114872795629174",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::StrSearcherImpl as clone::Clone>::clone",
    "hash": "228562707203156515418360423522431696086",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::TwoWaySearcher as clone::Clone>::clone",
    "hash": "174247123207391243897841276514992390901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::TwoWaySearcher::byteset_contains",
    "hash": "179238937216206703897978799586879197334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/traits.rs",
    "func": "str::traits::str_index_overflow_fail",
    "hash": "1789720728005117086117481954200849255673",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::contains_nonascii",
    "hash": "174654506174121724337210882592953964221",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_acc_cont_byte",
    "hash": "109849097723912452994088294171860151303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_char_width",
    "hash": "96426103444183050012757094728170995506",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_first_byte",
    "hash": "486164287917427656918200146926298480057",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_is_cont_byte",
    "hash": "947833919457653120214810965083035955432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/str/validations.rs",
    "func": "str::validations::verify::check_run_utf8_validation",
    "hash": "172045965964011674729113904519434668813",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as convert::From<bool>>::from",
    "hash": "183480036313976757114502341016561568095",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as default::Default>::default",
    "hash": "77194354903380178842099972487523234876",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as convert::From<i16>>::from",
    "hash": "1390699090808924332613530735333409168710",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as default::Default>::default",
    "hash": "126720378461473377831823973410860973047",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as convert::From<i32>>::from",
    "hash": "128300385337130257105246557084559968650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as default::Default>::default",
    "hash": "123819081500919018024942381772108216070",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as convert::From<i64>>::from",
    "hash": "149922496550824659497469292071733927252",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as default::Default>::default",
    "hash": "136083815203825241637091344202382538518",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as convert::From<i8>>::from",
    "hash": "165910124782043737768347651341038190307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as default::Default>::default",
    "hash": "961887678138615738013213558253087234496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as convert::From<isize>>::from",
    "hash": "169144502923794993883156966670827314027",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as default::Default>::default",
    "hash": "117161719007966132596122485611561155987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as convert::From<u16>>::from",
    "hash": "66052561460742635107846476068615902953",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as default::Default>::default",
    "hash": "933388147289001780413406129767875797638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as convert::From<u32>>::from",
    "hash": "163234900553873999704183523530953099435",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as default::Default>::default",
    "hash": "105494198926166595724617908193003543788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as convert::From<u64>>::from",
    "hash": "1312626222195427513214618604430400407873",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as default::Default>::default",
    "hash": "165692194027836701956555904614327301179",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as convert::From<u8>>::from",
    "hash": "255190968918494276011417301107197121304",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as default::Default>::default",
    "hash": "267490552675877162917869251727357077688",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as convert::From<usize>>::from",
    "hash": "144905704654143405715709221267126083104",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as default::Default>::default",
    "hash": "191617777696669396414020252915485761096",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as clone::Clone>::clone",
    "hash": "138806279762024948818653661609024359708",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "74197694593619435539840984910913147793",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::PartialEq>::eq",
    "hash": "1817167665889363590415326472386877373790",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::as_ptr",
    "hash": "121688814344096181017057708891062891331",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_and_swap",
    "hash": "495268567909487488317734646410461089703",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange",
    "hash": "26390982529271784035353113031141869164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange_weak",
    "hash": "26022529509928354922302895264644774425",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_and",
    "hash": "11820930757082158272571165899914201268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_nand",
    "hash": "90085362725237813472262833885930880",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_not",
    "hash": "546131849496313178011178244589907773884",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_or",
    "hash": "14089071085555203616664473404114397517",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_xor",
    "hash": "58451948492497898931880582248136801712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::from_mut",
    "hash": "80811973616330115478542452007388027916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::get_mut",
    "hash": "37634861235939031522440502746263462764",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::into_inner",
    "hash": "15779969696117419224261908141634397317",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::load",
    "hash": "155469962834761107207525044850038410970",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::new",
    "hash": "33523035405396149479057659157941778464",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::store",
    "hash": "1333151912453279659910677642624636164672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::swap",
    "hash": "1186837886665340036310854247971353381586",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::as_ptr",
    "hash": "1339395999388907312310576405176734719459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_and_swap",
    "hash": "1689398495003496806510884178233129117156",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange",
    "hash": "656567864643108061115281458953899545917",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange_weak",
    "hash": "58238234079294318827320794471684278701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_add",
    "hash": "6231029031017420608660691780144721607",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_and",
    "hash": "1060134512576348741611023128172537937230",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_max",
    "hash": "101163339341392443469611328150985650585",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_min",
    "hash": "183114595770452467408331407356445597598",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_nand",
    "hash": "13835537038674592231410079600483420536",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_or",
    "hash": "865395510868147845515020723133918723562",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_sub",
    "hash": "168068830315996040549541450758106045167",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_xor",
    "hash": "205533764592581511017576732620420811648",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::from_mut",
    "hash": "53245388079943555054297760547168187303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::get_mut",
    "hash": "125293009523217431157364634562538276812",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::into_inner",
    "hash": "82229364009974126301567229095406876729",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::load",
    "hash": "1424333719746734882015434110092803809516",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::new",
    "hash": "92052699474022208084225203520430334039",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::store",
    "hash": "1643345048075347310610713521219230744829",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::swap",
    "hash": "1375208921563392623913578357094437251714",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::as_ptr",
    "hash": "1496365407142197646112131664991684839485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_and_swap",
    "hash": "92391894751832356941147107174595477199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange",
    "hash": "154480556883490956752052075195591310961",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange_weak",
    "hash": "47865696766802781541441022822609824133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_add",
    "hash": "1105390160265954637511261655162003558654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_and",
    "hash": "72204579825759849479308684289771821146",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_max",
    "hash": "574508702489890650211043210287082752257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_min",
    "hash": "38211690340976460723038237575472195324",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_nand",
    "hash": "64834246728059003061410598269044521979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_or",
    "hash": "182736255645024045153934613767591091069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_sub",
    "hash": "88829005254270337083440763239640735505",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_xor",
    "hash": "1823342472519513846213217239693459266312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::from_mut",
    "hash": "19176211438916117581530514187549226815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::get_mut",
    "hash": "132643386063786238172600768997476935646",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::into_inner",
    "hash": "57238607885402733357010334838924765503",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::load",
    "hash": "1969804397892361197685335491396292788",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::new",
    "hash": "27081867414146386771938015066039252877",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::store",
    "hash": "67592265403174455910554587924944184187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::swap",
    "hash": "649889826594661145316311275095899401947",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::as_ptr",
    "hash": "143322171513352979912789184405332078240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_and_swap",
    "hash": "556676825183391007917920331125064051226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange",
    "hash": "31133594805691386165631990934000900718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange_weak",
    "hash": "122823032307601570314441966253243791466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_add",
    "hash": "272551141712030292715746850606080645484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_and",
    "hash": "14279643926424081294303089803468481486",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_max",
    "hash": "437319032378696486912275725432084314054",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_min",
    "hash": "79210069418198684835333597187396483943",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_nand",
    "hash": "104292702082508379565368560658756211762",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_or",
    "hash": "18804872546243996406217719726381019854",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_sub",
    "hash": "16628066103794448438681654218144119695",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_xor",
    "hash": "122247853962379394765249617933104531131",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::from_mut",
    "hash": "9760743691588683516039270280272319797",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::get_mut",
    "hash": "94916408657378639458976312608230732227",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::into_inner",
    "hash": "1450539802471684106717328729938004891625",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::load",
    "hash": "54489716973274860912142430020881635163",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::new",
    "hash": "1659932332489153899415569731327817142118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::store",
    "hash": "1099632363975037517312226490269751159479",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::swap",
    "hash": "51548092555631658525513383948487351720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::as_ptr",
    "hash": "1725386462132852612217279003201763210359",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_and_swap",
    "hash": "116003436865475053205110498703064296761",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange",
    "hash": "73402926376432772396239611897301327061",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange_weak",
    "hash": "1745382703204144795418222631248377018666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_add",
    "hash": "76286108815107911753769786868974156730",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_and",
    "hash": "120899604917176939289751005514595942545",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_max",
    "hash": "979569363695760166811190253186768683936",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_min",
    "hash": "1650506831147904503410756123801216563335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_nand",
    "hash": "41771965439526454964595287126831149831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_or",
    "hash": "109689519437300226636282787543932077849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_sub",
    "hash": "122328114520740743507306081370568098871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_xor",
    "hash": "168540417206222161798924042985938840912",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::from_mut",
    "hash": "592868509475640136411352269973481960966",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::get_mut",
    "hash": "1681049552469594178514563921993693683495",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::into_inner",
    "hash": "66292284965614873583355856843126212612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::load",
    "hash": "174562057817949307309910821028700273029",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::new",
    "hash": "1467736163636022935517388696677851679519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::store",
    "hash": "139092122786511685054509081533593624083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::swap",
    "hash": "263948286409613123015595261536343069842",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::as_ptr",
    "hash": "13910016399645784139211801868996462077",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_and_swap",
    "hash": "41705190640287818811760271683920116118",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange",
    "hash": "1683474708508640095313694329297677950955",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange_weak",
    "hash": "285039381820374825314833180985760254856",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_add",
    "hash": "525364549062755322917091832716306215769",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_and",
    "hash": "102021218410251606341311425991139686825",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_max",
    "hash": "995826128885058942318062701578570214940",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_min",
    "hash": "110500109557506646606866302732709861402",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_nand",
    "hash": "442088978196647818533342514218471894",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_or",
    "hash": "103732590843675405406069653898456854091",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_sub",
    "hash": "8447784838468857103957352924743630930",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_xor",
    "hash": "154875083266576136144797143820410580002",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::from_mut",
    "hash": "1566021026704008960815971719804630704076",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::get_mut",
    "hash": "892983945372058975515025100458667584755",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::into_inner",
    "hash": "805365164067964953615445124634867455",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::load",
    "hash": "160222129349327646424272639105841110794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::new",
    "hash": "705531003585396564516271851765920148035",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::store",
    "hash": "1508981671876664075110638919228187219089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::swap",
    "hash": "7505336172437500223382167722079416828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::as_ptr",
    "hash": "1822706864054809360912913983969355748957",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_and_swap",
    "hash": "1644624033456079060418221013118313115927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange",
    "hash": "11823869159420499714826734323149829161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange_weak",
    "hash": "1376756212119857496012396665141783663871",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_add",
    "hash": "105696818546215066693899082898033035633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_and",
    "hash": "153537465088664271223753480374936774393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_max",
    "hash": "135709057610685333205872093919713758612",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_min",
    "hash": "632987616490173009111671748601139014217",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_nand",
    "hash": "62547665038049542112310916915709298491",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_or",
    "hash": "143597982920697528133740683844806810875",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_sub",
    "hash": "586634133519882306814865559949823830372",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_xor",
    "hash": "1480953770433581619512970689348151602850",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::from_mut",
    "hash": "1683964454827637811496697369693151544",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::get_mut",
    "hash": "4398183138136407146253241963804207698",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::into_inner",
    "hash": "143224493949054719637773868900205606801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::load",
    "hash": "375343008422066623617646854933328974303",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::new",
    "hash": "88944344107845666266753268259586543650",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::store",
    "hash": "20677157240576225259421564579312865361",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::swap",
    "hash": "155976670875266732214633353053647189466",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::as_ptr",
    "hash": "116516572848855192974927077182074358616",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_and_swap",
    "hash": "15874788163948836846654641626863977428",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange",
    "hash": "830100029168948844211152000670680752480",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange_weak",
    "hash": "73301158824324411307867738829282622312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_add",
    "hash": "132849318312835538265636009279313245065",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_and",
    "hash": "1641429762503660147411584152505815275799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_max",
    "hash": "15586131832175244621975591394026645488",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_min",
    "hash": "143372790220607206553601492245973519097",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_nand",
    "hash": "56158950265846579034814546423917824253",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_or",
    "hash": "174972658867215916003388500029126139089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_sub",
    "hash": "1030719517233494368612086380097564822257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_xor",
    "hash": "73193102466360248834067293076620616933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::from_mut",
    "hash": "1014385851223172695412922617192874103580",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::get_mut",
    "hash": "119417724614537034271642284298921435214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::into_inner",
    "hash": "1313660148465758584513572415279072764200",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::load",
    "hash": "736101567060003603011727427427565240655",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::new",
    "hash": "31949396091396867647784003705395332836",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::store",
    "hash": "1768707747565715859514179369627772295394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::swap",
    "hash": "66140416290759237677020517908044043719",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::as_ptr",
    "hash": "183760083631496014579577644903777517682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_and_swap",
    "hash": "156989571882450212918103880726312396288",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange",
    "hash": "1683280361881335322118041636597934726828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange_weak",
    "hash": "99293852772972268401477357203017871362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_add",
    "hash": "445844282615491771810554765171938540459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_and",
    "hash": "223350427695004378215631879645549925240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_max",
    "hash": "915451801959788919414565168979178171106",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_min",
    "hash": "894874558845724310614507996986413273307",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_nand",
    "hash": "461172335973478282613882920444081829556",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_or",
    "hash": "77537293832588971569997256856831867654",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_sub",
    "hash": "164891117897958315479356920944376411150",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_xor",
    "hash": "1776362064983864764117158004346542004604",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::from_mut",
    "hash": "84465905651632883993468714922249164781",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::get_mut",
    "hash": "15150595313468364253883093930038213071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::into_inner",
    "hash": "143353151445904644109807180002940322154",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::load",
    "hash": "97257504723509323771948685079851490048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::new",
    "hash": "169414543725501785021905775102441655828",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::store",
    "hash": "17446478880034958792572149031304863064",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::swap",
    "hash": "12201576252727452598787744557082459559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::as_ptr",
    "hash": "44962881435219453294262245430345634499",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_and_swap",
    "hash": "1085963699248298509217152908170982201290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange",
    "hash": "839934187784337593118410390136689207855",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange_weak",
    "hash": "67350430297268832856646282668688938629",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_add",
    "hash": "644724092954820333812534858481801286574",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_and",
    "hash": "78819603936390738965249023203333264972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_max",
    "hash": "647137134957448904316832182395898779693",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_min",
    "hash": "261562478833135422410615713316409140975",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_nand",
    "hash": "241140017121392975813535114855575242205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_or",
    "hash": "133234731054537465387211754311166518569",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_sub",
    "hash": "61301771664244995538584506128304235549",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_xor",
    "hash": "1435533942469053260411374409956253581043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::from_mut",
    "hash": "1427360540425358960814639393591877545274",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::get_mut",
    "hash": "36848979535305996375293095106441185937",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::into_inner",
    "hash": "1274535296987158264711712667772154115078",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::load",
    "hash": "313460019744114332217421184840711408921",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::new",
    "hash": "33494894833435412184081304241642050609",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::store",
    "hash": "146168048642617543219827212372080555378",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::swap",
    "hash": "107697168020513165089799659240401458610",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::as_ptr",
    "hash": "38467453737813427074865472631072879028",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_and_swap",
    "hash": "1421492662883377976213615832272951435890",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange",
    "hash": "92394621627569425225493848352538981813",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange_weak",
    "hash": "458919095880990300818384030136806341519",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_add",
    "hash": "538293317470652505417283245535151825772",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_and",
    "hash": "122197004819901791455407596896011920394",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_max",
    "hash": "148905278940405551546648390246135226819",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_min",
    "hash": "122625310055648306174452938349823570981",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_nand",
    "hash": "1459482989046830008212114148808473974459",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_or",
    "hash": "2579824926538058726873038488613140053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_sub",
    "hash": "161684922385774771047617459727082441121",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_xor",
    "hash": "77133745853836448615059186166719704282",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::from_mut",
    "hash": "142750460233884830789238343055447335232",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::get_mut",
    "hash": "15807723761047912926348714456997257642",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::into_inner",
    "hash": "158930515513466007335199152589329932605",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::load",
    "hash": "1098257996474174523212906824205861338794",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::new",
    "hash": "1118806953883867199917543866095473041638",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::store",
    "hash": "1542302297021493590518260282650281656795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::swap",
    "hash": "626345171721832955817081769639367838968",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::compiler_fence",
    "hash": "61816238058714215121027766931201528575",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::fence",
    "hash": "1142800993023095142010879166427662838664",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::spin_loop_hint",
    "hash": "38906680715908058917663610032328129497",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::strongest_failure_ordering",
    "hash": "218040197053474425313489559789487598257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::LocalWaker::noop",
    "hash": "82330340410293162775645493601862073801",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/task/wake.rs",
    "func": "task::wake::Waker::noop",
    "hash": "1445662231951511073214825586059219916892",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as clone::Clone>::clone",
    "hash": "65687076940585733208123776482047119439",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1642312843313896828910665233548320572284",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Ord>::cmp",
    "hash": "101117025658366857787145716466479498445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialEq>::eq",
    "hash": "50260268632718934194550421386752020750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialOrd>::partial_cmp",
    "hash": "1301409580026502721616319800882117348826",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as default::Default>::default",
    "hash": "453018381280335662813148794855191092916",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Add>::add",
    "hash": "1468500430948389805612793182986986372682",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::AddAssign>::add_assign",
    "hash": "118449760006827326584381242673800687822",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Div<u32>>::div",
    "hash": "86649624748919835673996107896448397844",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "1213560651703085267315674033876454247831",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Mul<u32>>::mul",
    "hash": "64521436450510455529147717070054965350",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "102177293326984857017668383699988145408",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Sub>::sub",
    "hash": "144005461553081272516920981537668983236",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::SubAssign>::sub_assign",
    "hash": "341183917255275206512366849014604542807",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::Duration as ub_checks::Invariant>::is_safe",
    "hash": "788531292674870834010462035230957022933",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as clone::Clone>::clone",
    "hash": "155714902894008261069968758999815409878",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "108545549794693267415403588934678840523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::PartialEq>::eq",
    "hash": "85566024078542249467487241721543527233",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as clone::Clone>::clone",
    "hash": "1193007111090462156017855007416548484597",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1709300075504538552510219866853163139900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq",
    "hash": "1683444906971388816513571978098658055133",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ops::arith::Mul<time::Duration> for u32>::mul",
    "hash": "135083817727946146502895983517785106555",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::<impl ub_checks::Invariant for num::niche_types::Nanoseconds>::is_safe",
    "hash": "528675514942257179111086169806688306465",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::abs_diff",
    "hash": "1442555894656010093714043208592481048053",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_micros",
    "hash": "571930634199669245812812567819354344963",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis",
    "hash": "363585868887122075111608777546152278592",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f32",
    "hash": "497683366917813053612024896607012068226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f64",
    "hash": "17072118692122935153724602333653534924",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_nanos",
    "hash": "492805612452909684314175956217960078901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs",
    "hash": "1659014498554188890211696833608412047370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f32",
    "hash": "164296188866052955065756432173486900160",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f64",
    "hash": "1539174715707996134512003445079987591066",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_add",
    "hash": "255927815559859791310564965779945117231",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_div",
    "hash": "64065652119616599329668026644562958122",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_mul",
    "hash": "148935481511164687498598577987343039059",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_sub",
    "hash": "30865517623296820242125127388989837889",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f32",
    "hash": "386929958223544744816026537144745604330",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f64",
    "hash": "59170630740196932735985538530362951356",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f32",
    "hash": "113618253473932908675101696377449591383",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f64",
    "hash": "566998441624981470196255550272734055",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_days",
    "hash": "89556180249329041691424059385874639079",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_hours",
    "hash": "668214541815501826812824501992068812044",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_micros",
    "hash": "713582765544168457416896353134350734653",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_millis",
    "hash": "103201209251474754949132317369828318810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_mins",
    "hash": "2767698577014075749183141505457057841",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos",
    "hash": "388956341027180722217190897267579790662",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos_u128",
    "hash": "11725528255258239541336149167943878445",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs",
    "hash": "1270888124877289178512994789532778292810",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f32",
    "hash": "177906866070853672687290820933938640904",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f64",
    "hash": "1445332938421675535913703409704926869020",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::from_weeks",
    "hash": "107686632415754588454502824225580487863",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::is_zero",
    "hash": "115997484158910770201044246611455284681",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f32",
    "hash": "78230396439614375038587524504815180413",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f64",
    "hash": "1327283203726982782015006845041297730083",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::new",
    "hash": "139912470536809363494673058867656572576",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_add",
    "hash": "26987673243199973568628368442156599984",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_mul",
    "hash": "25983389140208680191225416176091395457",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_sub",
    "hash": "9373347243258015669666909608343260209",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_micros",
    "hash": "272178737756230533013362761810336437979",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_millis",
    "hash": "184084505959136145138783942518865749352",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_nanos",
    "hash": "10424362034996055643434835461049705887",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f32",
    "hash": "21680412091426583056388143363237493354",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f64",
    "hash": "743058827048769857215767848919097415849",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros",
    "hash": "1500806244352001035316941212917677970620",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros_panics",
    "hash": "91023807530894708278356727872506837930",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis",
    "hash": "151489447269711348661477349496520278465",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis_panics",
    "hash": "6143786960558242383214779933718203411",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos",
    "hash": "177166232877229594449642370607073597666",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos_panics",
    "hash": "65416581173855060643566630819425149946",
    "proof_kind": "Standard"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs",
    "hash": "162003314325105373499398192907972343767",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs_panics",
    "hash": "32558327227564083596892495855212001423",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add",
    "hash": "1457586567028342372415125273789690911752",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add_panics",
    "hash": "633103074770953917113486042212872899184",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div",
    "hash": "702035015246942318115828742292519280248",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div_panics",
    "hash": "1016970083013622864217931250909423910250",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul",
    "hash": "105393491468886204273874121710067102117",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul_panics",
    "hash": "1287422757634056058917731923144601988856",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub",
    "hash": "693496925929746207911714757984967802273",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub_panics",
    "hash": "72902704828159297616321928659426628585",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new",
    "hash": "50904339032993996945573855326771100756",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new_panics",
    "hash": "463551004640211070018229112372759971386",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros",
    "hash": "150322008004598577487641208908193224966",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros_panics",
    "hash": "119641483155254237508865999669830794778",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis",
    "hash": "19205501294254897471210215883475885892",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis_panics",
    "hash": "45416347634123577573456291645167751262",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos",
    "hash": "487275906319144166817655548786244603211",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos_panics",
    "hash": "36485220270542255188822625827033868809",
    "proof_kind": "Contract"
  },
  {
    "crate": "core",
    "file": "core/src/time.rs",
    "func": "time::duration_verify::safe_duration",
    "hash": "423692759101271074216001775298543884859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<() as ub_checks::Invariant>::is_safe",
    "hash": "54229515427671017203573246548975151329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<bool as ub_checks::Invariant>::is_safe",
    "hash": "182722051273606271987746517691852152938",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<char as ub_checks::Invariant>::is_safe",
    "hash": "1081562602022881188015408144074574949189",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f128 as ub_checks::Invariant>::is_safe",
    "hash": "127228044158492861747752718659586352270",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f16 as ub_checks::Invariant>::is_safe",
    "hash": "105748599607233514519553006644461093268",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f32 as ub_checks::Invariant>::is_safe",
    "hash": "120767812080352783216107881982502785135",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<f64 as ub_checks::Invariant>::is_safe",
    "hash": "1806276576190033820011008268836508626484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i128 as ub_checks::Invariant>::is_safe",
    "hash": "916483211580342228710324704543716633888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i16 as ub_checks::Invariant>::is_safe",
    "hash": "1538333059248075123817032651458329291536",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i32 as ub_checks::Invariant>::is_safe",
    "hash": "170476200549671209213763477215045762164",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i64 as ub_checks::Invariant>::is_safe",
    "hash": "73620221259828008709094330883095046370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<i8 as ub_checks::Invariant>::is_safe",
    "hash": "401681340604920745717635283291834687048",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<isize as ub_checks::Invariant>::is_safe",
    "hash": "515005617658304496815492393738995269543",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "527301041467884922111309565656307235599",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "98672616218528724113768882390038008401",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "87977286206191110206643684053945734595",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "84580457401506839910573102725714505987",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u128 as ub_checks::Invariant>::is_safe",
    "hash": "94118465921562944226287477600564225099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u16 as ub_checks::Invariant>::is_safe",
    "hash": "70720233014418988245990419244415294484",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u32 as ub_checks::Invariant>::is_safe",
    "hash": "31561592644670893263830489280600757704",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u64 as ub_checks::Invariant>::is_safe",
    "hash": "2706062861711493498336665932180657436",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<u8 as ub_checks::Invariant>::is_safe",
    "hash": "1002077497726722440517247562423742030908",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "154911443990380340341563367924870465980",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "1504286091581735299715570781132246701377",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "<usize as ub_checks::Invariant>::is_safe",
    "hash": "922315106903690419814131998191411440948",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::precondition_check",
    "hash": "23184571205716217225614482003446684283",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check",
    "hash": "159594069581531789011709166901887061080",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::precondition_check",
    "hash": "611027897215340775410757839603478111815",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked::precondition_check",
    "hash": "54503986970663360841733369066593556777",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::precondition_check",
    "hash": "36990817497430174858508344623774643994",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::precondition_check",
    "hash": "819756211280848030917202637728825520633",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::precondition_check",
    "hash": "462496214091525272510245178029608029500",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_div::precondition_check",
    "hash": "145126924729889287522049382498611235362",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_shl::precondition_check",
    "hash": "946498911554894010914958743765271357707",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_shr::precondition_check",
    "hash": "53498761147578157846591433266554313779",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::precondition_check",
    "hash": "94876663206214506511788127831422996110",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::precondition_check",
    "hash": "296038769496830662214301124012635465240",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::precondition_check",
    "hash": "639213041384143299412472874012685103589",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::precondition_check",
    "hash": "1434075782646840572111789523358979796712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::precondition_check",
    "hash": "174042585508986416617660946888425031671",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::precondition_check",
    "hash": "113009601942372281715446455691046804740",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_div::precondition_check",
    "hash": "1296273249942940337730729662324722701",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_shl::precondition_check",
    "hash": "34366935100386265459122173544791868099",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_shr::precondition_check",
    "hash": "1825117748982287242515883557528791895606",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::precondition_check",
    "hash": "39317311992874109371392498625150161712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::precondition_check",
    "hash": "1763457347854730278010791330142057168192",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::precondition_check",
    "hash": "451050507114875989711710292215673176523",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::precondition_check",
    "hash": "152391837972505780595218381861151573770",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::precondition_check",
    "hash": "120219406016938087116571420254433745741",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::precondition_check",
    "hash": "4412660026663050312243195869970252771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_div::precondition_check",
    "hash": "10505078970311123930882116269448439175",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_shl::precondition_check",
    "hash": "113291000945532942906670913577838172127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_shr::precondition_check",
    "hash": "156131801292649536493844926749305144621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::precondition_check",
    "hash": "1329144825560947311411483932612107408795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::precondition_check",
    "hash": "965344269916418163612697396371420899493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::precondition_check",
    "hash": "83864649680311463985923863666741975649",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::precondition_check",
    "hash": "104668067831597211141308874342415216161",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::precondition_check",
    "hash": "8563787985785130989741250513141995939",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::precondition_check",
    "hash": "52534361981216603118415697033987295199",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_div::precondition_check",
    "hash": "180350414041332661502832666801029001202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_shl::precondition_check",
    "hash": "125486450988261810564773720403769515493",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_shr::precondition_check",
    "hash": "16611374181414236636102402670462342416",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::precondition_check",
    "hash": "118348320477469522036768987964670653432",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::precondition_check",
    "hash": "115716117628477669929203223052205666369",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::precondition_check",
    "hash": "99954832581836719901477192095880938245",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::precondition_check",
    "hash": "1755502805661379314112954397795313937814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::precondition_check",
    "hash": "649424055411082397514464587621869540888",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::precondition_check",
    "hash": "170733428769270561404948032069790886799",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_div::precondition_check",
    "hash": "1444683077308111897813840415415686059835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_shl::precondition_check",
    "hash": "201103208247637345315064232572900821127",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_shr::precondition_check",
    "hash": "762758108836419645916782153794637054370",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::precondition_check",
    "hash": "667366691144783084717296391552838535389",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::precondition_check",
    "hash": "53945542929679482339075968324753287349",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::precondition_check",
    "hash": "101613137868787226606841504361612987449",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::precondition_check",
    "hash": "15983336801039951913250560404603906346",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::precondition_check",
    "hash": "1716369493386064962410074630091196085720",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::precondition_check",
    "hash": "159171154281921540722366608288539265279",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_div::precondition_check",
    "hash": "24047933512687297654064050248548056782",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_shl::precondition_check",
    "hash": "176166717439791389812202357692266863972",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_shr::precondition_check",
    "hash": "98785481565076462373924694068178756760",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::precondition_check",
    "hash": "45068207360885924745428300505193176874",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::precondition_check",
    "hash": "1283868160390231989212228490164833471738",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::precondition_check",
    "hash": "9508364354112296981399287395200226859",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::precondition_check",
    "hash": "1672051552963669334612274854264882773190",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::precondition_check",
    "hash": "159866135421812369497273339248680314071",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::precondition_check",
    "hash": "154546003680155971614176765009984816492",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::precondition_check",
    "hash": "144371151299134544665747470923399781496",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_div::precondition_check",
    "hash": "156883012200115115009019641236843204325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_shl::precondition_check",
    "hash": "1233030073022346168515975283072994654393",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_shr::precondition_check",
    "hash": "1733145844509866504116091403475342274409",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::precondition_check",
    "hash": "947125308644106041311143935573733040392",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::precondition_check",
    "hash": "1180631169818708816811822795842182901246",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::precondition_check",
    "hash": "151349367228647654595978734012280807043",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::precondition_check",
    "hash": "65798445016174401336482671232243630137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::precondition_check",
    "hash": "112954101278082009685742498530365011169",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::precondition_check",
    "hash": "33002039904374885837506948116844495529",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_div::precondition_check",
    "hash": "1051427163791693029413420168160281324806",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_shl::precondition_check",
    "hash": "158065245356642544017529700292537484473",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_shr::precondition_check",
    "hash": "1276994079214032273513820477542322649371",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::precondition_check",
    "hash": "1054956364627708745215908263932519299879",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::precondition_check",
    "hash": "1660735051761607358112447996714284735890",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::precondition_check",
    "hash": "127104483639895110166963688282032920277",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::precondition_check",
    "hash": "1307874078937886401610898106651478159890",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::precondition_check",
    "hash": "55765016491441786647715013701178401123",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::precondition_check",
    "hash": "631932988604919839111867753265063873322",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_div::precondition_check",
    "hash": "909981329508830857910622136502981167814",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_shl::precondition_check",
    "hash": "182360158511399378426714956243893303553",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_shr::precondition_check",
    "hash": "1610032954212411097913534544924129105137",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::precondition_check",
    "hash": "55197325134507993096517774866738055126",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::precondition_check",
    "hash": "95376923757539084981700148865030636187",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::precondition_check",
    "hash": "409912244308098444814848962941189151214",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::precondition_check",
    "hash": "17507883686148831056122605745425702461",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::precondition_check",
    "hash": "1071119608820694394412795685970399229191",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::precondition_check",
    "hash": "132540848090193909426125295302422288069",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_div::precondition_check",
    "hash": "111907554689056561588069285169841103403",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_shl::precondition_check",
    "hash": "1005939190992600179214540089899693670202",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_shr::precondition_check",
    "hash": "1283067962276576342312911581335685082417",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::precondition_check",
    "hash": "521871732295291476715041293288084069224",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::precondition_check",
    "hash": "42536355813579869066270754273717016712",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::precondition_check",
    "hash": "39135782121499863123394420862152781900",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::precondition_check",
    "hash": "136094532834077236122881027109506357025",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::as_ascii_unchecked::precondition_check",
    "hash": "60862708504990940004958112708298831718",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::precondition_check",
    "hash": "1655209669618753209114659502170458211993",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::precondition_check",
    "hash": "9457061962326494122175736846000356833",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_div::precondition_check",
    "hash": "1437047342721623055913966078875870000312",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_shl::precondition_check",
    "hash": "80178363974875253237211321054224309771",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_shr::precondition_check",
    "hash": "158263946527487832654457459216895161925",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::precondition_check",
    "hash": "1428051928006254497317369756388621251824",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::precondition_check",
    "hash": "1100035070551588567412445098518638381426",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::precondition_check",
    "hash": "1801251900274456326617258345541323083327",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::precondition_check",
    "hash": "162420490716835998378776944854920882988",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::precondition_check",
    "hash": "126048648882406442003602795325732745334",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::precondition_check",
    "hash": "72028803983074264237384277111892451013",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_div::precondition_check",
    "hash": "89042125804003855903735880090728633178",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_shl::precondition_check",
    "hash": "69103587692283916210716365304306356485",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_shr::precondition_check",
    "hash": "285411630723551985213469211609272632922",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::precondition_check",
    "hash": "156195739738533797174115933199089991795",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::precondition_check",
    "hash": "751430375535915475213291365246285005986",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::precondition_check",
    "hash": "173360433394887496432963616352310636542",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::precondition_check",
    "hash": "60020754642282354823285669083003912494",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check",
    "hash": "947925086076299054212540105876296384566",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::precondition_check",
    "hash": "887235042902537721816254572592014930578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::precondition_check",
    "hash": "719065370181632267310362651566044974881",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::precondition_check",
    "hash": "178390828132391436389433453402564282927",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked::precondition_check",
    "hash": "147417290197272725234607004164769047407",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check",
    "hash": "14016260068480027401406123416246766621",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_mut_unchecked::precondition_check",
    "hash": "1262268302406396300513565250820649213634",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_unchecked::precondition_check",
    "hash": "56448737519681294968960799914289695112",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::swap_unchecked::precondition_check",
    "hash": "74402658018052786310281099043124569565",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "151177604553563121726407199103432119959",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "124410959810549361578538764137673623205",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "1129281868751164994310653221266111116623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "36629814751342447939025170327808884335",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::check_language_ub",
    "hash": "739520556846959085018120036998133255835",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::is_valid_allocation_size",
    "hash": "154579918799348646172273891119983850679",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/printable.rs",
    "func": "unicode::printable::is_printable",
    "hash": "786119695351140024618147837431294376639",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::new",
    "hash": "573025224078501084417397699761968621329",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::prefix_sum",
    "hash": "921093343429125213217757377270116064946",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::start_index",
    "hash": "156172685843180766086305544173360207623",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup",
    "hash": "1471888513641357803312149500959467165734",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup_slow",
    "hash": "28596088568221288116703206007351906510",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup",
    "hash": "817559091560041711417512502626784452960",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup_slow",
    "hash": "51532302753653117942140540050696586668",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup",
    "hash": "857257636319848069314493331107337276226",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup_slow",
    "hash": "1776353786224281014317432309134453497971",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_lower",
    "hash": "1469867097302331626115000252918213985290",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_upper",
    "hash": "100936873364593785231065773565317995559",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup",
    "hash": "15849010870464984048864164604391696901",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup_slow",
    "hash": "107740066738047614867773599753519807340",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::lowercase::lookup",
    "hash": "1157224849513048318018302938097598385341",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup",
    "hash": "735995549454532901913549390902177097618",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup_slow",
    "hash": "42572729431468523111759174297303064198",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::uppercase::lookup",
    "hash": "1409956307354019319310708619245300637672",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::white_space::lookup",
    "hash": "42593226902273250284228501629666851752",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/unit.rs",
    "func": "<() as unit::IsUnit>::is_unit",
    "hash": "60009806958671010299771237522837022530",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as clone::Clone>::clone",
    "hash": "1327929531609356065517204324501461754600",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "150703601434187997555206513987575240181",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::Ord>::cmp",
    "hash": "136680446439551588517856423832967346666",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::PartialEq>::eq",
    "hash": "53744150406742469729306363567975176089",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "<wtf8::CodePoint as cmp::PartialOrd>::partial_cmp",
    "hash": "136154664814711847142723019100956680223",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_char",
    "hash": "137222369825588898039407712901858202996",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_u32",
    "hash": "454135070385098702717272521775929610325",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::from_u32_unchecked",
    "hash": "84266730152490042238903478970182342750",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_char",
    "hash": "1189918018438978849911664646497500300315",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_char_lossy",
    "hash": "7702331115819199525842002868071102286",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_lead_surrogate",
    "hash": "388237804488073114613264943938159388895",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_trail_surrogate",
    "hash": "535046854504337501613727064195263232257",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::CodePoint::to_u32",
    "hash": "65147526689743014514214870929002969578",
    "proof_kind": "Auto"
  },
  {
    "crate": "core",
    "file": "core/src/wtf8.rs",
    "func": "wtf8::decode_surrogate",
    "hash": "16261241472119900705985823798939400202",
    "proof_kind": "Auto"
  }
]
