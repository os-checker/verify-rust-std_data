[
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/lib.rs",
    "func": "<DebugFile as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/addr2line-0.25.0/src/line.rs",
    "func": "line::LazyLines::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/algo.rs",
    "func": "<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::from_checksum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.1/src/lib.rs",
    "func": "Adler32::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::AArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::Arm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::LoongArch as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::MIPS as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::PowerPc64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::RiscV as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "<arch::X86_64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::AArch64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::Arm::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::LoongArch::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::MIPS::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::PowerPc64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::RiscV::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/arch.rs",
    "func": "arch::X86_64::register_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DebugTypeSignature as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwarfFileType as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::DwoId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Encoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Format as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::LineEncoding as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Register as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::SectionId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "<common::Vendor as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::initial_length_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::Format::word_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::is_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/common.rs",
    "func": "common::SectionId::xcoff_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAccess as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAddr as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwAte as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwCfa as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwChildren as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDefaulted as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDs as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwDsc as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEhPe as rustc_std_workspace_core::ops::BitOr>::bitor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwEnd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwForm as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwId as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwIdx as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwInl as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLang as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLnct as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLne as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwLns as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacinfo as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwMacro as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOp as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwOrd as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwRle as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSect as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwSectV2 as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwTag as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwUt as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVirtuality as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "<constants::DwVis as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAccess::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAddr::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwAte::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwCfa::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwChildren::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDefaulted::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDs::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwDsc::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::application"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::format"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_absent"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_indirect"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::is_valid_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEhPe::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwEnd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwForm::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwId::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwIdx::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwInl::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::default_lower_bound"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLang::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLnct::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLne::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwLns::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacinfo::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwMacro::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOp::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwOrd::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwRle::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSect::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwSectV2::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwTag::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwUt::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVirtuality::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/constants.rs",
    "func": "constants::DwVis::static_string"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as endianity::Endianity>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/endianity.rs",
    "func": "<endianity::RunTimeEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/leb128.rs",
    "func": "leb128::low_bits_of_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::Abbreviations as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCache as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AbbreviationsCacheStrategy as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "<read::abbrev::AttributeSpecification as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Abbreviations::empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AbbreviationsCache::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::form"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::implicit_const_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::AttributeSpecification::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::Attributes::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/abbrev.rs",
    "func": "read::abbrev::get_attribute_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "<read::aranges::ArangeEntry as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/aranges.rs",
    "func": "read::aranges::ArangeEntry::range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Augmentation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::AugmentationData as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::BaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::CieOffsetEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::Pointer as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "<read::cfi::SectionBaseAddresses as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_eh_frame_hdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_got"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::BaseAddresses::set_text"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::direct"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/cfi.rs",
    "func": "read::cfi::Pointer::pointer"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::IndexSectionId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "<read::index::UnitIndexSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::dwo_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/index.rs",
    "func": "read::index::IndexSectionId::section_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::ColumnType as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::FileEntryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "<read::line::LineRow as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::apply_line_advance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::basic_block"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::column"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::discriminator"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::end_sequence"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::epilogue_begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::file_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::is_stmt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::isa"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::line"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::op_index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/line.rs",
    "func": "read::line::LineRow::prologue_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "<read::lists::ListsHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/lists.rs",
    "func": "read::lists::ListsHeader::size_for_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/loclists.rs",
    "func": "<read::loclists::LocListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::Error as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "<read::StoreOnHeap as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::<impl common::Register>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/mod.rs",
    "func": "read::Error::description"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<read::reader::ReaderOffsetId as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u32 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::ones_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderAddress>::wrapping_add_sized"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<u64 as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::checked_sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_i16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u16"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::from_u8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::into_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/reader.rs",
    "func": "<usize as read::reader::ReaderOffset>::wrapping_add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::Ord>::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::Range as rustc_std_workspace_core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RangeListsFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "<read::rnglists::RawRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::Range::add_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_base_address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/rnglists.rs",
    "func": "read::rnglists::RawRange::is_end"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/unit.rs",
    "func": "read::unit::allow_section_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/util.rs",
    "func": "<read::util::sealed::CapacityFull as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::Value as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "<read::value::ValueType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::abs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::convert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_f64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::from_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ge"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::gt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::le"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::lt"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::mul"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::ne"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::neg"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::not"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::reinterpret"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::rem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shift_length"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::shra"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::sub"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::to_u64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::value_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::Value::xor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::ValueType::from_encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::mask_bit_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/gimli-0.32.0/src/read/value.rs",
    "func": "read::value::sign_extend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMask as rustc_std_workspace_core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "<control::bitmask::BitMaskIter as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::any_bit_set"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::invert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::leading_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::lowest_set_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::nonzero_trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::remove_lowest_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/bitmask.rs",
    "func": "control::bitmask::BitMask::trailing_zeros"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "<control::group::sse2::Group as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_empty_or_deleted"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::match_tag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/group/sse2.rs",
    "func": "control::group::sse2::Group::static_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "<control::tag::Tag as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_full"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::is_special"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/control/tag.rs",
    "func": "control::tag::Tag::special_is_empty"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/lib.rs",
    "func": "<TryReserveError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/map.rs",
    "func": "map::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::Fallibility as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::ProbeSeq as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "<raw::TableLayout as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::alloc_err"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::Fallibility::capacity_overflow"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::ProbeSeq::move_next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::RawTableInner::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::TableLayout::calculate_layout_for"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::bucket_mask_to_capacity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::capacity_to_buckets"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/raw/mod.rs",
    "func": "raw::h1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.5/src/set.rs",
    "func": "set::assert_covariance"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::in6_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::ipv6_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::itimerval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arphdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arpreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::arpreq_old as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::epoll_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::fd_set as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::file_clone_range as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in6_rtmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in_addr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::in_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreq_source as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::ip_mreqn as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf32_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Ehdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Phdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Shdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::Elf64_Sym as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous__kernel_fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf32_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rel as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_elf64_rela as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_ifru_map as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::__c_anonymous_sockaddr_can_tp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::af_alg_iv as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::arch::generic::termios2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::arpd_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::can_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::can_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::canfd_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::canxl_frame as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::cpu_set_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dirent64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_cmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dmabuf_token as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::dqblk as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::epoll_params as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_fid as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_info_header as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_event_metadata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanotify_response as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fanout_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_condition_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_constant_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_envelope as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_ramp_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_replay as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_rumble_effect as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ff_trigger as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::fsid_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::genlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf32_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::Elf64_Chdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__exit_status as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::__timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::msqid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::semid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sigset_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::sysinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::timex as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::clone_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::flock64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ipc_perm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::max_align_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::ptrace_rseq_configuration as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::shmid_ds as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::siginfo_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::stat64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::statvfs64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::cmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_error as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fanotify_event_info_pidfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos64_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::fpos_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::iocb as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mallinfo2 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::mbstate_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_mmap_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::nl_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ntptimeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_peeksiginfo_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::ptrace_sud_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::sem_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::seminfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::tcp_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::termios as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::timespec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::gnu::utmpx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::hwtstamp_config as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_ifreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::in6_pktinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::inotify_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_absinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_id as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_keymap_entry as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::input_mask as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::itimerspec as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_discarded as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_encode_ext as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_freq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_michaelmicfailure as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_missed as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_mlme as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmkid_cand as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_pmksa as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_priv_args as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_quality as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::iw_thrspy as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::j1939_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mnt_ns_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mount_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::mq_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::msginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlattr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsgerr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::nlmsghdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::open_how as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::packet_mreq as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pidfd_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::posix_spawnattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrier_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_barrierattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_cond_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_condattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutex_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_mutexattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlock_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::pthread_rwlockattr_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_caps as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_clock_time as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_event as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_extts_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_pin_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ptp_sys_offset_precise as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::regmatch_t as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::rlimit64 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sched_attr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_authinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_initmsg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_nxtinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_prinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_rcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sctp_sndrcvinfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_data as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_addfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_resp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::seccomp_notif_sizes as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sembuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::signalfd_siginfo as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_extended_err as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sock_txtime as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_alg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_nl as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_pkt as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_vm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::sockaddr_xdp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_ccm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aes_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_128 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_aria_gcm_256 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_chacha20_poly1305 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_ccm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls12_crypto_info_sm4_gcm as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tls_crypto_info as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket2_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket3_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_auxdata as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_bd_ts as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_hdr_variant1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_req3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_rollover_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_stats_v3 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::tpacket_versions as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::ucred as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_abs_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_erase as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_ff_upload as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_setup as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::uinput_user_dev as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_desc as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_mmap_offsets_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_options as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_ring_offset_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_statistics_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xdp_umem_reg_v1 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_completion as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::linux::xsk_tx_metadata_request as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sched_param as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sock_filter as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_in6 as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_ll as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_storage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::sockaddr_un as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::statx as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::statx_timestamp as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::linux_like::utsname as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::pollfd as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::rlimit as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::rusage as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::timeval as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::tms as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::utimbuf as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "<unix::winsize as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::htonl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::htons"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_LEN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::CMSG_SPACE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_COPIED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPOPT_NUMBER"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::IPTOS_ECN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::KERNEL_VERSION"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::QCMD"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::SIGRTMAX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::SIGRTMIN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WCOREDUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WEXITSTATUS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFCONTINUED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFEXITED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFSIGNALED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WIFSTOPPED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WSTOPSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::WTERMSIG"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::W_EXITCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::W_STOPCODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_CLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_JUMP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MISCOP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_MODE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_RVAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_SRC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::BPF_STMT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ALLOC_SIZE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_CLR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_COUNT_S"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_EQUAL"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ISSET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_SET"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::CPU_ZERO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF32_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_INFO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_SYM"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::ELF64_R_TYPE"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_PREC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::IPTOS_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::NLA_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_ADDRCLASS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_LOCALADDR"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::RT_TOS"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_INDEX"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_PRIO_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_RTX_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_SET_POLICY"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::SCTP_PR_TTL_ENABLED"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::TPACKET_ALIGN"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::major"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::makedev"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::linux_like::linux::minor"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::ntohl"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/macros.rs",
    "func": "unix::ntohs"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "<unix::linux_like::linux::gnu::sifields_sigchld as core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_pid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_status"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_stime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_uid"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_utime"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/gnu/mod.rs",
    "func": "unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::sifields"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/linux/mod.rs",
    "func": "unix::linux_like::linux::FUTEX_OP"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IO"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.174/src/unix/linux_like/mod.rs",
    "func": "unix::linux_like::_IOC"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "<arch::all::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::confirm"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::has_needle"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::has_zero_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/memchr.rs",
    "func": "arch::all::memchr::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::DefaultFrequencyRank as arch::all::packedpair::HeuristicFrequencyRank>::rank"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "<arch::all::packedpair::Pair as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/packedpair/mod.rs",
    "func": "arch::all::packedpair::Pair::index2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "<arch::all::rabinkarp::Hash as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::add"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::del"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/rabinkarp.rs",
    "func": "arch::all::rabinkarp::Hash::roll"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::ApproximateByteSet as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::FinderRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::Shift as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::SuffixOrdering as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "<arch::all::twoway::TwoWay as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::ApproximateByteSet::contains"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/all/twoway.rs",
    "func": "arch::all::twoway::SuffixKind::cmp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "<arch::x86_64::avx2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/memchr.rs",
    "func": "arch::x86_64::avx2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "<arch::x86_64::avx2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/avx2/packedpair.rs",
    "func": "arch::x86_64::avx2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::One as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Three as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "<arch::x86_64::sse2::memchr::Two as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::One::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Three::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/memchr.rs",
    "func": "arch::x86_64::sse2::memchr::Two::new_unchecked"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "<arch::x86_64::sse2::packedpair::Finder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::is_available"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::min_haystack_len"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/arch/x86_64/sse2/packedpair.rs",
    "func": "arch::x86_64::sse2::packedpair::Finder::pair"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "<memmem::FinderBuilder as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/mod.rs",
    "func": "memmem::FinderBuilder::prefilter"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterConfig as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::PrefilterState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRev as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "<memmem::searcher::SearcherRevKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterConfig::is_none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_effective"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::is_inert"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::skips"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/memmem/searcher.rs",
    "func": "memmem::searcher::PrefilterState::update"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::all_zeros_except_least_significant"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::clear_least_significant_bit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::count_ones"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::first_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::has_non_zero"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::last_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "<vector::SensibleMoveMask as vector::MoveMask>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::SensibleMoveMask::get_for_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86avx2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m256i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::and"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::cmpeq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::movemask"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::or"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.5/src/vector.rs",
    "func": "vector::x86sse2::<impl vector::Vector for rustc_std_workspace_core::arch::x86_64::__m128i>::splat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::DecompressorOxide::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::fast_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::HuffmanTable::tree_lookup"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::State::begin"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::end_of_input"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::num_extra_bits_for_distance_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::reverse_bits"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::undo_bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/core.rs",
    "func": "inflate::core::validate_zlib_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/inflate/mod.rs",
    "func": "inflate::TINFLStatus::from_i32"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.9/src/lib.rs",
    "func": "MZFlush::new"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::AixMemberOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/archive.rs",
    "func": "<archive::Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::AddressSize as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::Architecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::BinaryFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::ComdatKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::FileFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationEncoding as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::RelocationKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SectionKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SegmentFlags as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SubArchitecture as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "<common::SymbolScope as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::AddressSize::bytes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::Architecture::address_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::BinaryFormat::native_object"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/common.rs",
    "func": "common::SectionKind::is_bss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "<elf::Ident as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "elf::ef_e2k_flag_to_mach"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/elf.rs",
    "func": "elf::ef_e2k_mach_to_flag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::BigEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::Endianness as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::from_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as endian::Endian>::is_big_endian"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/endian.rs",
    "func": "<endian::LittleEndian as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::DyldCacheSlidePointer5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatArch32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatArch64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::FatHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::PtrauthKey as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::RelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "<macho::ScatteredRelocationInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::key"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer3::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::addr_div"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::diversity"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::high8"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::is_auth"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::key_is_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::DyldCacheSlidePointer5::runtime_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel_family"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/macho.rs",
    "func": "macho::cpu_subtype_intel_model"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeaderBigobj as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::AnonObjectHeaderV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::Guid as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAlpha64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAlphaRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArchitectureEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArchiveMemberHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArm64RuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageArmRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolCrc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunction as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolFunctionBeginEnd as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolTokenDef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageAuxSymbolWeak as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBaseRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBoundForwarderRef as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageBoundImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageCoffSymbolsHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageCor20Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDataDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDebugDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDebugMisc as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDelayloadDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation32V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocation64V2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageDynamicRelocationTable as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveConfig64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEnclaveImport as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageEpilogueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageExportDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFileHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageFunctionEntry64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchBase as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchHashes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageHotPatchInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageImportByName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageImportDescriptor as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLinenumber as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigCodeIntegrity as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageLoadConfigDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageNtHeaders32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageNtHeaders64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOptionalHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOptionalHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageOs2Header as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImagePrologueDynamicRelocationHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageRelocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDataEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirStringU as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectory as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageResourceDirectoryString as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageRuntimeFunctionEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSectionHeader as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbol as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolEx as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageSymbolExBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageThunkData32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageThunkData64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageTlsDirectory32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageTlsDirectory64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImageVxdHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::ImportObjectHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::MaskedRichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "<pe::NonPagedDebugInfo as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data1"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data2"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data3"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::Guid::data4"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::ImageDelayloadDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/pe.rs",
    "func": "pe::ImageImportDescriptor::is_null"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/archive.rs",
    "func": "<read::archive::ArchiveOffset as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::AnonObjectHeaderBigobj as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::is_type_bigobj"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::machine"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_sections"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::number_of_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/file.rs",
    "func": "<pe::ImageFileHeader as read::coff::file::CoffHeader>::pointer_to_symbol_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "<read::coff::import::ImportType as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::import_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/import.rs",
    "func": "read::coff::import::<impl pe::ImportObjectHeader>::name_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/relocation.rs",
    "func": "read::coff::relocation::<impl pe::ImageRelocation>::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "<read::coff::section::SectionTable<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::coff_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/section.rs",
    "func": "read::coff::section::<impl pe::ImageSectionHeader>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbol as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::number_of_aux_symbols"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::raw_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::section_number"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::storage_class"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::typ"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "<pe::ImageSymbolEx as read::coff::symbol::ImageSymbol>::value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/coff/symbol.rs",
    "func": "read::coff::symbol::<impl pe::ImageAuxSymbolWeak>::default_symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::Crel as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorHeader as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::CrelIteratorState as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "<read::elf::relocation::RelocationSections as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/relocation.rs",
    "func": "read::elf::relocation::Crel::symbol"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::Version<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "<read::elf::version::VersionIndex as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_global"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_hidden"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/elf/version.rs",
    "func": "read::elf::version::VersionIndex::is_local"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV2 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV3 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/dyld_cache.rs",
    "func": "<read::macho::dyld_cache::RelocationStateV5 as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch32 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cpusubtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/macho/fat.rs",
    "func": "<macho::FatArch64 as read::macho::fat::FatArch>::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressedFileRange as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::CompressionFormat as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::FileKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectKind as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectMap<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::ObjectMapEntry<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMap as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationMapEntry as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::RelocationTarget as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SectionIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolIndex as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "<read::SymbolSection as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::CompressedFileRange::none"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::encoding"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::has_implicit_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::kind"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::set_addend"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::Relocation::target"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/mod.rs",
    "func": "read::SymbolSection::index"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/data_directory.rs",
    "func": "read::pe::data_directory::<impl pe::ImageDataDirectory>::address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders32 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::file_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::is_valid_optional_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::optional_header"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageNtHeaders64 as read::pe::file::ImageNtHeaders>::signature"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader32 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::address_of_entry_point"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::base_of_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::check_sum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::dll_characteristics"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::file_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::image_base"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::loader_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::major_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_image_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_linker_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_operating_system_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::minor_subsystem_version"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::number_of_rva_and_sizes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::section_alignment"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_code"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_headers"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_heap_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_image"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_initialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_commit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_stack_reserve"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::size_of_uninitialized_data"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::subsystem"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/file.rs",
    "func": "<pe::ImageOptionalHeader64 as read::pe::file::ImageOptionalHeader>::win32_version_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData32 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::address"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::is_ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::ordinal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/import.rs",
    "func": "<pe::ImageThunkData64 as read::pe::import::ImageThunkData>::raw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::Relocation as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/relocation.rs",
    "func": "<read::pe::relocation::RelocationBlockIterator<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "<read::pe::resource::ResourceName as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::data_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::has_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::is_table"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::<impl pe::ImageResourceDirectoryEntry>::name_or_id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::id"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/resource.rs",
    "func": "read::pe::resource::ResourceNameOrId::name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/rich.rs",
    "func": "<read::pe::rich::RichHeaderEntry as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::contains_rva"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_address_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/pe/section.rs",
    "func": "read::pe::section::<impl pe::ImageSectionHeader>::pe_file_range_at"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/traits.rs",
    "func": "<read::traits::NoDynamicRelocationIterator as rustc_std_workspace_core::iter::Iterator>::next"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "<read::util::ByteString<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "<read::util::Bytes<'_> as rustc_std_workspace_core::default::Default>::default"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/util.rs",
    "func": "read::util::align"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_algntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_bsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cpuflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_cputype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_data_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_datapsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_debugger"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_dsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_entry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_maxstack"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_mflag"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_modtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sndata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snentry"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_snloader"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntbss"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntdata"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntext"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_sntoc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_stackpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_text_start"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_textpsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_toc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_tsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_vstamp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::AuxHeader32 as read::xcoff::file::AuxHeader>::o_x64flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader32 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_magic"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nscns"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_nsyms"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_opthdr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_symptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::f_timdat"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/file.rs",
    "func": "<xcoff::FileHeader64 as read::xcoff::file::FileHeader>::is_type_64"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel32 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rsize"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_rtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_symndx"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/relocation.rs",
    "func": "<xcoff::Rel64 as read::xcoff::relocation::Rel>::r_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader32 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_flags"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_lnnoptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_name"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nlnno"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_nreloc"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_paddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_relptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_scnptr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_size"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/section.rs",
    "func": "<xcoff::SectionHeader64 as read::xcoff::section::SectionHeader>::s_vaddr"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux32 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_parmhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_scnlen"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smclas"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_smtyp"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snhash"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_snstab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::CsectAux64 as read::xcoff::symbol::CsectAux>::x_stab"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux32 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_auxtype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_fname"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::FileAux64 as read::xcoff::symbol::FileAux>::x_ftype"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol32 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_numaux"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_sclass"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_scnum"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::n_value"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/read/xcoff/symbol.rs",
    "func": "<xcoff::Symbol64 as read::xcoff::symbol::Symbol>::name_offset"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::AuxHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::BlockAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::BlockAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::CsectAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::CsectAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::DwarfAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::DwarfAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::ExpAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FileHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FunAux32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::FunAux64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Rel32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Rel64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SectionHeader32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SectionHeader64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::StatAux as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Symbol32 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::Symbol64 as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/object-0.37.2/src/xcoff.rs",
    "func": "<xcoff::SymbolBytes as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<SizeLimitExhausted as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "<TryDemangleError as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_alphanumeric"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/lib.rs",
    "func": "is_ascii_punctuation"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "<v0::ParseError as rustc_std_workspace_core::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::HexNibbles::<'s>::try_parse_str_chars::{closure#2}::{closure#0}::utf8_len_from_first_byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::ParseError::message"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-demangle-0.1.26/src/v0.rs",
    "func": "v0::basic_type"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<EscapeError as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<char>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::From<rustc_std_workspace_std::num::NonZero<u8>>>::from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<char>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<MixedUnit as rustc_std_workspace_std::convert::TryFrom<u8>>::try_from"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::clone::Clone>::clone"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<Mode as rustc_std_workspace_std::cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<[u8] as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<rustc_std_workspace_std::ffi::CStr as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as CheckRaw>::char2raw_unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::char2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::hex2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::nonzero_byte2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "<str as Unescape>::unicode2unit"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "EscapeError::is_fatal"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::in_double_quotes"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "Mode::prefix_noraw"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "char2byte"
  },
  {
    "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-literal-escaper-0.0.5/src/lib.rs",
    "func": "simple_escape"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as clone::Clone>::clone"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/arbitrary/pointer.rs",
    "func": "<kani::arbitrary_ptr::AllocationStatus as cmp::PartialEq>::eq"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/mem_init.rs",
    "func": "kani::mem_init::MemoryInitializationState::new"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<isize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "/home/runner/work/verify-rust-std/verify-rust-std/kani_build/library/kani_core/src/models.rs",
    "func": "<usize as kani::rustc_intrinsics::ToISize>::to_isize"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::allocate_zeroed"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::deallocate"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::grow_zeroed"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::alloc::Allocator>::shrink"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "<alloc::Global as core::default::Default>::default"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::alloc_impl"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::Global::grow_impl"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::__alloc_error_handler::__rdl_oom"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::alloc_zeroed"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::exchange_malloc"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::ct_error"
  },
  {
    "file": "alloc/src/alloc.rs",
    "func": "alloc::handle_alloc_error::rt_error"
  },
  {
    "file": "alloc/src/boxed.rs",
    "func": "<boxed::Box<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/boxed/thin.rs",
    "func": "boxed::thin::WithHeader::<H>::new_unsize_zst::max"
  },
  {
    "file": "alloc/src/bstr.rs",
    "func": "<bstr::ByteString as core::default::Default>::default"
  },
  {
    "file": "alloc/src/collections/binary_heap/mod.rs",
    "func": "collections::binary_heap::BinaryHeap::<T, A>::rebuild_tail::log2_fast"
  },
  {
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "alloc/src/collections/btree/map.rs",
    "func": "<collections::btree::map::UnorderedKeyError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "alloc/src/collections/btree/mem.rs",
    "func": "<collections::btree::mem::replace::PanicGuard as core::ops::Drop>::drop"
  },
  {
    "file": "alloc/src/collections/btree/node.rs",
    "func": "collections::btree::node::splitpoint"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as collections::btree::set_val::IsSetVal>::is_set_val"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::Ord>::cmp"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialEq>::eq"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "alloc/src/collections/btree/set_val.rs",
    "func": "<collections::btree::set_val::SetValZST as core::default::Default>::default"
  },
  {
    "file": "alloc/src/collections/linked_list.rs",
    "func": "collections::linked_list::assert_covariance"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveError as core::convert::From<collections::TryReserveErrorKind>>::from"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "<collections::TryReserveErrorKind as core::convert::From<core::alloc::LayoutError>>::from"
  },
  {
    "file": "alloc/src/collections/mod.rs",
    "func": "collections::TryReserveError::kind"
  },
  {
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::verify::check_vecdeque_swap"
  },
  {
    "file": "alloc/src/collections/vec_deque/mod.rs",
    "func": "collections::vec_deque::wrap_index"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::CString as core::default::Default>::default"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::clone::Clone>::clone"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulErrorKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for boxed::Box<core::ffi::CStr>>::default"
  },
  {
    "file": "alloc/src/ffi/c_str.rs",
    "func": "ffi::c_str::<impl core::default::Default for rc::Rc<core::ffi::CStr>>::default"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::RawVecInner::with_capacity"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::alloc_guard"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::capacity_overflow"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::handle_error"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::layout_array"
  },
  {
    "file": "alloc/src/raw_vec/mod.rs",
    "func": "raw_vec::min_non_zero_cap"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "<rc::Rc<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "rc::data_offset_align"
  },
  {
    "file": "alloc/src/rc.rs",
    "func": "rc::rc_inner_layout_for_value_layout"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<bool as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<char as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<core::ascii::Char as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<i128 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<i16 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<i32 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<i64 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<i8 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<isize as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<string::FromUtf16Error as core::error::Error>::description"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::convert::From<char>>::from"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<string::String as core::default::Default>::default"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<u128 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<u16 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<u32 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<u64 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<u8 as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "<usize as string::SpecToString>::spec_to_string"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::new"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::try_with_capacity"
  },
  {
    "file": "alloc/src/string.rs",
    "func": "string::String::with_capacity"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<core::ffi::CStr> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "<sync::Arc<str> as core::default::Default>::default"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::Weak::<T, A>::upgrade::checked_increment"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::arcinner_layout_for_value_layout"
  },
  {
    "file": "alloc/src/sync.rs",
    "func": "sync::data_offset_align"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<bool as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<char as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<bool> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i128>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i16>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i32>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i64>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<i8>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<isize>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u128>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u16>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u32>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u64>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<u8>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::num::NonZero<usize>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<bool>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<core::option::Option<core::option::Option<bool>>> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i128> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i16> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i32> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i64> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<i8> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<isize> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u128> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u16> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u32> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u64> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<u8> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<core::option::Option<usize> as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f32 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<f64 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i128 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i16 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i32 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i64 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<i8 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<isize as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u128 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u16 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u32 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u64 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<u8 as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/is_zero.rs",
    "func": "<usize as vec::is_zero::IsZero>::is_zero"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::insert_mut::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::remove::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::split_off::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::Vec::<T, A>::swap_remove::assert_failed"
  },
  {
    "file": "alloc/src/vec/mod.rs",
    "func": "vec::verify::verify_swap_remove"
  },
  {
    "file": "alloc/src/vec/set_len_on_drop.rs",
    "func": "vec::set_len_on_drop::SetLenOnDrop::<'_>::new"
  },
  {
    "file": "backtrace/src/backtrace/libunwind.rs",
    "func": "<backtrace_rs::backtrace::libunwind::Bomb as core::ops::Drop>::drop"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::clone::Clone>::clone"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "backtrace/src/print.rs",
    "func": "<backtrace_rs::print::PrintFmt as core::cmp::PartialEq>::eq"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "<backtrace_rs::symbolize::gimli::Cache as core::default::Default>::default"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::Cache::new"
  },
  {
    "file": "backtrace/src/symbolize/gimli.rs",
    "func": "backtrace_rs::symbolize::gimli::clear_symbol_cache"
  },
  {
    "file": "backtrace/src/symbolize/gimli/elf.rs",
    "func": "backtrace_rs::symbolize::gimli::elf::debug_path_exists"
  },
  {
    "file": "backtrace/src/symbolize/gimli/libs_dl_iterate_phdr.rs",
    "func": "backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries"
  },
  {
    "file": "backtrace/src/symbolize/gimli/mmap_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::mmap::Mmap::map"
  },
  {
    "file": "backtrace/src/symbolize/gimli/parse_running_mmaps_unix.rs",
    "func": "backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps"
  },
  {
    "file": "backtrace/src/symbolize/gimli/stash.rs",
    "func": "backtrace_rs::symbolize::gimli::stash::Stash::new"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "<float::cmp::Result as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_ge_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/cmp.rs",
    "func": "float::cmp::Result::to_le_abi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u128_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u32_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f128_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f32_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/conv.rs",
    "func": "float::conv::int_to_float::u64_to_f64_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f128 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f16 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f32 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::eq_repr::is_nan"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::exp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::from_parts"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::imp_frac"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::is_subnormal"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/float/traits.rs",
    "func": "<f64 as float::traits::Float>::to_bits_signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::i256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "<int::big::u256 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::<impl int::traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::i256::unsigned"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/big.rs",
    "func": "int::big::u256::signed"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i128_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i32_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/mul.rs",
    "func": "int::mul::i64_overflowing_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/asymmetric.rs",
    "func": "int::specialized_div_rem::u128_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/binary_long.rs",
    "func": "int::specialized_div_rem::u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/delegate.rs",
    "func": "int::specialized_div_rem::delegate::u128_divide_sparc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u128_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u32_by_u32_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::u64_by_u64_div_rem"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/mod.rs",
    "func": "int::specialized_div_rem::zero_div_fn"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u32_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/specialized_div_rem/norm_shift.rs",
    "func": "int::specialized_div_rem::u64_normalization_shift"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<i8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u128 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u16 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u32 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u64 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/int/traits.rs",
    "func": "<u8 as int::traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__adddf3::__adddf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addsf3::__addsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::add::__addtf3::__addtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqdf2::__eqdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqsf2::__eqsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__eqtf2::__eqtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gedf2::__gedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gesf2::__gesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__getf2::__getf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtdf2::__gtdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gtsf2::__gtsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__gttf2::__gttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ledf2::__ledf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lesf2::__lesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__letf2::__letf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltdf2::__ltdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__ltsf2::__ltsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__lttf2::__lttf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nedf2::__nedf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__nesf2::__nesf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__netf2::__netf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unorddf2::__unorddf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordsf2::__unordsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::cmp::__unordtf2::__unordtf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfdi::__fixdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfsi::__fixdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixdfti::__fixdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfdi::__fixsfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfsi::__fixsfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixsfti::__fixsfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfdi::__fixtfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfsi::__fixtfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixtfti::__fixtfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfdi::__fixunsdfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfsi::__fixunsdfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunsdfti::__fixunsdfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfdi::__fixunssfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfsi::__fixunssfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunssfti::__fixunssfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfdi::__fixunstfdi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfsi::__fixunstfsi"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__fixunstfti::__fixunstfti"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdidf::__floatdidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatdisf::__floatdisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatditf::__floatditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsidf::__floatsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsisf::__floatsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatsitf::__floatsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattidf::__floattidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattisf::__floattisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floattitf::__floattitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundidf::__floatundidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatundisf::__floatundisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunditf::__floatunditf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsidf::__floatunsidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsisf::__floatunsisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatunsitf::__floatunsitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntidf::__floatuntidf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntisf::__floatuntisf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::conv::__floatuntitf::__floatuntitf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divdf3::__divdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divsf3::__divsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::div::__divtf3::__divtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extenddftf2::__extenddftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfdf2::__extendhfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhfsf2::__extendhfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendhftf2::__extendhftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsfdf2::__extendsfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__extendsftf2::__extendsftf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::extend::__gnu_h2f_ieee::__gnu_h2f_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__muldf3::__muldf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__mulsf3::__mulsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::mul::__multf3::__multf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powidf2::__powidf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powisf2::__powisf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::pow::__powitf2::__powitf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subdf3::__subdf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subsf3::__subsf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::sub::__subtf3::__subtf3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__gnu_f2h_ieee::__gnu_f2h_ieee"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfhf2::__truncdfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncdfsf2::__truncdfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__truncsfhf2::__truncsfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfdf2::__trunctfdf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfhf2::__trunctfhf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "float::trunc::__trunctfsf2::__trunctfsf2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_add::__rust_i128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_addo::__rust_i128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_sub::__rust_i128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_i128_subo::__rust_i128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_add::__rust_u128_add"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_addo::__rust_u128_addo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_sub::__rust_u128_sub"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::addsub::__rust_u128_subo::__rust_u128_subo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapdi2::__bswapdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapsi2::__bswapsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::bswap::__bswapti2::__bswapti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzdi2::__clzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzsi2::__clzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::leading_zeros::__clzti2::__clzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muldi3::__muldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulodi4::__mulodi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__mulosi4::__mulosi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__muloti4::__muloti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__multi3::__multi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_i128_mulo::__rust_i128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::mul::__rust_u128_mulo::__rust_u128_mulo"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divdi3::__divdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmoddi4::__divmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodsi4::__divmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divmodti4::__divmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divsi3::__divsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__divti3::__divti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__moddi3::__moddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modsi3::__modsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::sdiv::__modti3::__modti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashldi3::__ashldi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlsi3::__ashlsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashlti3::__ashlti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrdi3::__ashrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrsi3::__ashrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__ashrti3::__ashrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrdi3::__lshrdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrsi3::__lshrsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::shift::__lshrti3::__lshrti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzdi2::__ctzdi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzsi2::__ctzsi2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::trailing_zeros::__ctzti2::__ctzti2"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivdi3::__udivdi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmoddi4::__udivmoddi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodsi4::__udivmodsi4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivmodti4::__udivmodti4"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivsi3::__udivsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__udivti3::__udivti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umoddi3::__umoddi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodsi3::__umodsi3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "int::udiv::__umodti3::__umodti3"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceil::ceil"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf128::ceilf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf16::ceilf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::ceilf::ceilf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysign::copysign"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf128::copysignf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf16::copysignf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::copysignf::copysignf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabs::fabs"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf128::fabsf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf16::fabsf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fabsf::fabsf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdim::fdim"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf128::fdimf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf16::fdimf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fdimf::fdimf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floor::floor"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf128::floorf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf16::floorf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::floorf::floorf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fma::fma"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf128::fmaf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaf::fmaf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmax::fmax"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf128::fmaxf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf16::fmaxf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaxf::fmaxf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf128::fmaximumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf16::fmaximumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmaximumf::fmaximumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmin::fmin"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf128::fminf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf16::fminf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminf::fminf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimum::fminimum"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf128::fminimumf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf16::fminimumf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fminimumf::fminimumf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmod::fmod"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf128::fmodf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf16::fmodf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::fmodf::fmodf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rint::rint"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf128::rintf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf16::rintf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::rintf::rintf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::round::round"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf128::roundevenf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf16::roundevenf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundevenf::roundevenf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf128::roundf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf16::roundf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::roundf::roundf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf128::sqrtf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf16::sqrtf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::sqrtf::sqrtf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::trunc::trunc"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf128::truncf128"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf16::truncf16"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/macros.rs",
    "func": "math::full_availability::truncf::truncf"
  },
  {
    "file": "compiler-builtins/compiler-builtins/src/probestack.rs",
    "func": "probestack::__rust_probestack"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::acos"
  },
  {
    "file": "compiler-builtins/libm/src/math/acos.rs",
    "func": "math::libm_math::acos::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::acosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosf.rs",
    "func": "math::libm_math::acosf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/acosh.rs",
    "func": "math::libm_math::acosh::acosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/acoshf.rs",
    "func": "math::libm_math::acoshf::acoshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86.rs",
    "func": "math::libm_math::arch::x86::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::get_cpu_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/detect.rs",
    "func": "math::libm_math::arch::x86::detect::load_x86_features"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fma_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_fallback"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/arch/x86/fma.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf_with_fma4"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::asin"
  },
  {
    "file": "compiler-builtins/libm/src/math/asin.rs",
    "func": "math::libm_math::asin::comp_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::asinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinf.rs",
    "func": "math::libm_math::asinf::r"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinh.rs",
    "func": "math::libm_math::asinh::asinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/asinhf.rs",
    "func": "math::libm_math::asinhf::asinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan.rs",
    "func": "math::libm_math::atan::atan"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2.rs",
    "func": "math::libm_math::atan2::atan2"
  },
  {
    "file": "compiler-builtins/libm/src/math/atan2f.rs",
    "func": "math::libm_math::atan2f::atan2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanf.rs",
    "func": "math::libm_math::atanf::atanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanh.rs",
    "func": "math::libm_math::atanh::atanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/atanhf.rs",
    "func": "math::libm_math::atanhf::atanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrt.rs",
    "func": "math::libm_math::cbrt::cbrt_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/cbrtf.rs",
    "func": "math::libm_math::cbrtf::cbrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceil"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ceil.rs",
    "func": "math::libm_math::ceil::ceilf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/copysign.rs",
    "func": "math::libm_math::copysign::copysignf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/cos.rs",
    "func": "math::libm_math::cos::cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosf.rs",
    "func": "math::libm_math::cosf::cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/cosh.rs",
    "func": "math::libm_math::cosh::cosh"
  },
  {
    "file": "compiler-builtins/libm/src/math/coshf.rs",
    "func": "math::libm_math::coshf::coshf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erf.rs",
    "func": "math::libm_math::erf::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc1"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfc2"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erfcf"
  },
  {
    "file": "compiler-builtins/libm/src/math/erff.rs",
    "func": "math::libm_math::erff::erff"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp.rs",
    "func": "math::libm_math::exp::exp"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10.rs",
    "func": "math::libm_math::exp10::exp10"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp10f.rs",
    "func": "math::libm_math::exp10f::exp10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2.rs",
    "func": "math::libm_math::exp2::exp2"
  },
  {
    "file": "compiler-builtins/libm/src/math/exp2f.rs",
    "func": "math::libm_math::exp2f::exp2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expf.rs",
    "func": "math::libm_math::expf::expf"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1.rs",
    "func": "math::libm_math::expm1::expm1"
  },
  {
    "file": "compiler-builtins/libm/src/math/expm1f.rs",
    "func": "math::libm_math::expm1f::expm1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/expo2.rs",
    "func": "math::libm_math::expo2::expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabs"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fabs.rs",
    "func": "math::libm_math::fabs::fabsf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdim"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fdim.rs",
    "func": "math::libm_math::fdim::fdimf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/floor.rs",
    "func": "math::libm_math::floor::floorf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fma.rs",
    "func": "math::libm_math::fma::fmaf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmax"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmaxf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fmin"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmin_fmax.rs",
    "func": "math::libm_math::fmin_fmax::fminf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fmaximumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimum"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum.rs",
    "func": "math::libm_math::fminimum_fmaximum::fminimumf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fmaximum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_num"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fminimum_fmaximum_num.rs",
    "func": "math::libm_math::fminimum_fmaximum_num::fminimum_numf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmod"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/fmod.rs",
    "func": "math::libm_math::fmod::fmodf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexp.rs",
    "func": "math::libm_math::frexp::frexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/frexpf.rs",
    "func": "math::libm_math::frexpf::frexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::hypot"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypot.rs",
    "func": "math::libm_math::hypot::sq"
  },
  {
    "file": "compiler-builtins/libm/src/math/hypotf.rs",
    "func": "math::libm_math::hypotf::hypotf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogb.rs",
    "func": "math::libm_math::ilogb::ilogb"
  },
  {
    "file": "compiler-builtins/libm/src/math/ilogbf.rs",
    "func": "math::libm_math::ilogbf::ilogbf"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::j0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::pzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::qzero"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0.rs",
    "func": "math::libm_math::j0::y0"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::j0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::pzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::qzerof"
  },
  {
    "file": "compiler-builtins/libm/src/math/j0f.rs",
    "func": "math::libm_math::j0f::y0f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::j1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::pone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::qone"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1.rs",
    "func": "math::libm_math::j1::y1"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::common"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::j1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::ponef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::qonef"
  },
  {
    "file": "compiler-builtins/libm/src/math/j1f.rs",
    "func": "math::libm_math::j1f::y1f"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::jn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jn.rs",
    "func": "math::libm_math::jn::yn"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::jnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/jnf.rs",
    "func": "math::libm_math::jnf::ynf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cos.rs",
    "func": "math::libm_math::k_cos::k_cos"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_cosf.rs",
    "func": "math::libm_math::k_cosf::k_cosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2.rs",
    "func": "math::libm_math::k_expo2::k_expo2"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_expo2f.rs",
    "func": "math::libm_math::k_expo2f::k_expo2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sin.rs",
    "func": "math::libm_math::k_sin::k_sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_sinf.rs",
    "func": "math::libm_math::k_sinf::k_sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::k_tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tan.rs",
    "func": "math::libm_math::k_tan::zero_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/k_tanf.rs",
    "func": "math::libm_math::k_tanf::k_tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexp"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/ldexp.rs",
    "func": "math::libm_math::ldexp::ldexpf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma.rs",
    "func": "math::libm_math::lgamma::lgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::lgamma_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgamma_r.rs",
    "func": "math::libm_math::lgamma_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf.rs",
    "func": "math::libm_math::lgammaf::lgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::lgammaf_r"
  },
  {
    "file": "compiler-builtins/libm/src/math/lgammaf_r.rs",
    "func": "math::libm_math::lgammaf_r::sin_pi"
  },
  {
    "file": "compiler-builtins/libm/src/math/log.rs",
    "func": "math::libm_math::log::log"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10.rs",
    "func": "math::libm_math::log10::log10"
  },
  {
    "file": "compiler-builtins/libm/src/math/log10f.rs",
    "func": "math::libm_math::log10f::log10f"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1p.rs",
    "func": "math::libm_math::log1p::log1p"
  },
  {
    "file": "compiler-builtins/libm/src/math/log1pf.rs",
    "func": "math::libm_math::log1pf::log1pf"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2.rs",
    "func": "math::libm_math::log2::log2"
  },
  {
    "file": "compiler-builtins/libm/src/math/log2f.rs",
    "func": "math::libm_math::log2f::log2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/logf.rs",
    "func": "math::libm_math::logf::logf"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::combine_words"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::get_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_high_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/mod.rs",
    "func": "math::libm_math::with_set_low_word"
  },
  {
    "file": "compiler-builtins/libm/src/math/modf.rs",
    "func": "math::libm_math::modf::modf"
  },
  {
    "file": "compiler-builtins/libm/src/math/modff.rs",
    "func": "math::libm_math::modff::modff"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafter.rs",
    "func": "math::libm_math::nextafter::nextafter"
  },
  {
    "file": "compiler-builtins/libm/src/math/nextafterf.rs",
    "func": "math::libm_math::nextafterf::nextafterf"
  },
  {
    "file": "compiler-builtins/libm/src/math/pow.rs",
    "func": "math::libm_math::pow::pow"
  },
  {
    "file": "compiler-builtins/libm/src/math/powf.rs",
    "func": "math::libm_math::powf::powf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2.rs",
    "func": "math::libm_math::rem_pio2::rem_pio2::medium"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2_large.rs",
    "func": "math::libm_math::rem_pio2_large::rem_pio2_large::floor"
  },
  {
    "file": "compiler-builtins/libm/src/math/rem_pio2f.rs",
    "func": "math::libm_math::rem_pio2f::rem_pio2f"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainder.rs",
    "func": "math::libm_math::remainder::remainder"
  },
  {
    "file": "compiler-builtins/libm/src/math/remainderf.rs",
    "func": "math::libm_math::remainderf::remainderf"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquo.rs",
    "func": "math::libm_math::remquo::remquo"
  },
  {
    "file": "compiler-builtins/libm/src/math/remquof.rs",
    "func": "math::libm_math::remquof::remquof"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rint"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/rint.rs",
    "func": "math::libm_math::rint::rintf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::round"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/round.rs",
    "func": "math::libm_math::round::roundf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundeven"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/roundeven.rs",
    "func": "math::libm_math::roundeven::roundevenf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbn"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/scalbn.rs",
    "func": "math::libm_math::scalbn::scalbnf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/sin.rs",
    "func": "math::libm_math::sin::sin"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincos.rs",
    "func": "math::libm_math::sincos::sincos"
  },
  {
    "file": "compiler-builtins/libm/src/math/sincosf.rs",
    "func": "math::libm_math::sincosf::sincosf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinf.rs",
    "func": "math::libm_math::sinf::sinf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinh.rs",
    "func": "math::libm_math::sinh::sinh"
  },
  {
    "file": "compiler-builtins/libm/src/math/sinhf.rs",
    "func": "math::libm_math::sinhf::sinhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrt"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/sqrt.rs",
    "func": "math::libm_math::sqrt::sqrtf16"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::i256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::Ord>::cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Add>::add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::BitOr>::bitor"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Not>::not"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shl<u32>>::shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Shr<u32>>::shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as core::ops::Sub>::sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "<math::libm_math::support::big::u256 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for i128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::<impl math::libm_math::support::int_traits::HInt for u128>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/big.rs",
    "func": "math::libm_math::support::big::u256::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Round as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "<math::libm_math::support::env::Status as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::overflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_flag"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_inexact"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::set_underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::underflow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/env.rs",
    "func": "math::libm_math::support::env::Status::with"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::clone::Clone>::clone"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "<math::libm_math::support::feature_detect::Flags as core::cmp::PartialEq>::eq"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fma::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::arch::x86::fma::fmaf::initializer"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::contains"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::empty"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::insert"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/feature_detect.rs",
    "func": "math::libm_math::support::feature_detect::Flags::test_nth"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f128 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f16 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f32 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::DFloat>::narrow"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::copysign"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::fma"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_infinite"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_nan"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::is_sign_negative"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::normalize"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::Float>::to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "<f64 as math::libm_math::support::float_traits::HFloat>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f32_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_from_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/float_traits.rs",
    "func": "math::libm_math::support::float_traits::f64_to_bits"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::dec_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::hex_digit"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr2_round"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::shr_odd_rounding"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/hex_float.rs",
    "func": "math::libm_math::support::hex_float::u128_ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<f64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<i8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<isize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u128 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u16 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u32 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::DInt>::lo"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u64 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_hi"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::HInt>::zero_widen_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<u8 as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<i8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<isize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u128>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u16>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u32>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u64>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<u8>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::CastInto<usize>>::cast_lossy"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::abs_diff"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::borrowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::carrying_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::checked_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_bool"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::from_unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::ilog2"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::is_zero"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::leading_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::logical_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::overflowing_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::rotate_left"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::signed"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::trailing_zeros"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::unsigned_abs"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_add"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_mul"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_neg"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shl"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_shr"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/int_traits.rs",
    "func": "<usize as math::libm_math::support::int_traits::Int>::wrapping_sub"
  },
  {
    "file": "compiler-builtins/libm/src/math/support/mod.rs",
    "func": "math::libm_math::support::cold_path"
  },
  {
    "file": "compiler-builtins/libm/src/math/tan.rs",
    "func": "math::libm_math::tan::tan"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanf.rs",
    "func": "math::libm_math::tanf::tanf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanh.rs",
    "func": "math::libm_math::tanh::tanh"
  },
  {
    "file": "compiler-builtins/libm/src/math/tanhf.rs",
    "func": "math::libm_math::tanhf::tanhf"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::s"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::sinpi"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgamma.rs",
    "func": "math::libm_math::tgamma::tgamma"
  },
  {
    "file": "compiler-builtins/libm/src/math/tgammaf.rs",
    "func": "math::libm_math::tgammaf::tgammaf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::trunc"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf128"
  },
  {
    "file": "compiler-builtins/libm/src/math/trunc.rs",
    "func": "math::libm_math::trunc::truncf16"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as clone::Clone>::clone",
    "hash": "496361397305541987815761963300824507205"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "572460315787212802716938184107150245094"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as cmp::PartialEq>::eq",
    "hash": "596922001861043606417685470218689080796"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::Layout as ub_checks::Invariant>::is_safe",
    "hash": "10147069087142747339252401653777419820"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as clone::Clone>::clone",
    "hash": "1113551955139914019912351471266862104138"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "56621545095509963083550060022289660144"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "<alloc::layout::LayoutError as cmp::PartialEq>::eq",
    "hash": "1423091394081508912713164485785072695336"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align",
    "hash": "82799262185095168543382988207314564309"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::align_to",
    "hash": "112070373011602212988080488454786759178"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::alignment",
    "hash": "178083628553700210304822376361638690666"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::inner",
    "hash": "60951165365694386095377414391825195927"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#0}::{closure#1}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#2}::{closure#2}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::array::{closure#3}::{closure#0}::inner"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::dangling",
    "hash": "16363849038488286684155291275386599616"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend",
    "hash": "176763474683698403475250752798557221085"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::extend_packed",
    "hash": "1488584688483166448017371951787987558780"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align",
    "hash": "15882998538083310200809354200222308872"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked",
    "hash": "25589607788188000327075167611606263150"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::from_size_alignment",
    "hash": "1628875806215483567415952590565783337775"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::is_size_align_valid",
    "hash": "32463275158753040711220179444734430899"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::max_size_for_align",
    "hash": "31265288173249298141030810952705142187"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::pad_to_align",
    "hash": "56966640690257550801884691981535971452"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::padding_needed_for",
    "hash": "1175571543018820958012748968480695158531"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat",
    "hash": "897366240775750084513118020583696181050"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::repeat_packed",
    "hash": "1477532754565346156917274132988066532201"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size",
    "hash": "16792438445250782424997839011548376369"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::Layout::size_rounded_up_to_custom_align",
    "hash": "815727926531042108615829035158363428525"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align",
    "hash": "31033865434651922848371528298695943858",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_align_to",
    "hash": "456458309061581909113302930450433990239",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_array_i32",
    "hash": "91732498777216260206933578953163248096",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_dangling",
    "hash": "8099671395576121937298256536140599987",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend",
    "hash": "91660216624034764177871239904293730069",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_extend_packed",
    "hash": "5082570024707158642388104273419514887",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_i32",
    "hash": "70485684730904184246370880418826665091",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_for_value_raw_i32",
    "hash": "6518611974836982248615474858916494547",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_new_i32",
    "hash": "115172146627603271794296603321990453592",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_pad_to_align",
    "hash": "79468020645102292769407207003006558060",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_padding_needed_for",
    "hash": "138056739567684905675765438819130626674",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat",
    "hash": "149101213352679776423362592571662484775",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_repeat_packed",
    "hash": "143133520800759174184534622726261606963",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/alloc/layout.rs",
    "func": "alloc::layout::verify::check_size",
    "hash": "67674773528021539009447080729115185804",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as clone::Clone>::clone",
    "hash": "136967993912998722816452880736108564422"
  },
  {
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "47643605788857154564153876146795716033"
  },
  {
    "file": "core/src/alloc/mod.rs",
    "func": "<alloc::AllocError as cmp::PartialEq>::eq",
    "hash": "148388022535791089910019746875723228346"
  },
  {
    "file": "core/src/arch.rs",
    "func": "arch::breakpoint",
    "hash": "99650591390125918952171517249803128775"
  },
  {
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as clone::Clone>::clone",
    "hash": "170531687123144806402793495255944458794"
  },
  {
    "file": "core/src/array/mod.rs",
    "func": "<array::TryFromSliceError as error::Error>::description",
    "hash": "44413225818574331337948843903340848369"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::empty",
    "hash": "225559420643399376912976676095844365966"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::EscapeDefault::new",
    "hash": "89429183355173050947974656781433359425"
  },
  {
    "file": "core/src/ascii.rs",
    "func": "ascii::escape_default",
    "hash": "74631051240262689468463518349994093872"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as clone::Clone>::clone",
    "hash": "24284322473105926213635605160797389006"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "42126986618009538933141798016674099315"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp",
    "hash": "994478426816071566713177718488984277349"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq",
    "hash": "1838377635509746679113139451266128260702"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp",
    "hash": "89041687051232611341588178858570521457"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash",
    "hash": "91161792688912637816741412973571994153"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from",
    "hash": "460754875409818075311218109147683798069"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from",
    "hash": "9190237307454527483307505261347378009"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from",
    "hash": "16767255326446540741255753475592972567"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from",
    "hash": "165952888469698201982835618290855177319"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from",
    "hash": "81507130243715763813234633684250184003"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from",
    "hash": "57636706911875709316690822947670656595"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::as_str",
    "hash": "510814656671112845416018433094675825143"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit",
    "hash": "35093749363916964267425644110568159662"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked",
    "hash": "169824299250937540188006184745768084167"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::eq_ignore_case",
    "hash": "8474967368952336192149377276047046175"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::escape_ascii",
    "hash": "692307024058288866913398110897889380347"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8",
    "hash": "113010127514654522688326963268232009031"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::from_u8_unchecked",
    "hash": "652182000514958061713215128671564018150"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphabetic",
    "hash": "102810893620674454355554095895576033903"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_alphanumeric",
    "hash": "100954617539852592976055104253189690628"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_control",
    "hash": "131150649038766600873321809681714752802"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_digit",
    "hash": "121661552707666710724681835846027394861"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_graphic",
    "hash": "962487887671998327713277097258024841786"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_hexdigit",
    "hash": "1475243638360512931614651111303323113540"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_lowercase",
    "hash": "888700841235484803815668842342323072987"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_octdigit",
    "hash": "1188188008314883856215033307472355802872"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_punctuation",
    "hash": "384132814460451951899513135315207844"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_uppercase",
    "hash": "50134831687237308086188651150573481900"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::is_whitespace",
    "hash": "110249826618346356218071194113530130239"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_lowercase",
    "hash": "83234711472407171711325604750332775038"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::make_uppercase",
    "hash": "552070069009805841512734422392112845077"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_char",
    "hash": "1691152665580368143613246611251988920077"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_lowercase",
    "hash": "69304354428431815233618986233860069125"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_u8",
    "hash": "69096650655933370018490819206330130737"
  },
  {
    "file": "core/src/ascii/ascii_char.rs",
    "func": "ascii::ascii_char::AsciiChar::to_uppercase",
    "hash": "416922516970944761517386443286930730461"
  },
  {
    "file": "core/src/bstr/mod.rs",
    "func": "<&bstr::ByteStr as default::Default>::default",
    "hash": "699327119150500604918116525523942161642"
  },
  {
    "file": "core/src/bstr/mod.rs",
    "func": "<&mut bstr::ByteStr as default::Default>::default",
    "hash": "23817497238136392418611277327210111045"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRef::<'_>::new",
    "hash": "131955648055179509721615701383312232548"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::BorrowRefMut::<'_>::new",
    "hash": "807231880963030247117989080824939214170"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::assert_coerce_unsized",
    "hash": "57948524407887067901109013448472541979"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::is_reading",
    "hash": "32248880528759840584053932239783595705"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::is_writing",
    "hash": "73974500527097648084659887106375495461"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_borrowed",
    "hash": "179547798399309444676853479569071604024"
  },
  {
    "file": "core/src/cell.rs",
    "func": "cell::panic_already_mutably_borrowed",
    "hash": "150338660114488783258863317636312411"
  },
  {
    "file": "core/src/cell/lazy.rs",
    "func": "cell::lazy::panic_poisoned",
    "hash": "113473294404597135359431152123578737047"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as clone::Clone>::clone",
    "hash": "171365728717536704896446481359394264108"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "368140116035331235613325190596333708692"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharErrorKind as cmp::PartialEq>::eq",
    "hash": "177063661780785252423408722092092037909"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as clone::Clone>::clone",
    "hash": "31609552141844199255480222683540723351"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "153523236205672729514167045417932161054"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::CharTryFromError as cmp::PartialEq>::eq",
    "hash": "174809113808358433704169590876546120896"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as clone::Clone>::clone",
    "hash": "14836587422793329715981305412461422738"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "178347688514033679618021094156745993324"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as cmp::PartialEq>::eq",
    "hash": "864681540520101244011584127002316060101"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "<char::convert::ParseCharError as error::Error>::description",
    "hash": "22726388861655761457318423133714441534"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u128>::from",
    "hash": "42008396276546041352960514068639392308"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u32>::from",
    "hash": "745284784608407050016933018147827298794"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<char> for u64>::from",
    "hash": "37589655947410760725557791464149005424"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::From<u8> for char>::from",
    "hash": "68581623244024013215145596633238016545"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u16>::try_from",
    "hash": "156624961976772660211979491646386880019"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<char> for u8>::try_from",
    "hash": "1024041853509086322513200810774238855048"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::<impl convert::TryFrom<u32> for char>::try_from",
    "hash": "1748371436040095441216167856253937238932"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::char_try_from_u32",
    "hash": "1604728690055160952112805876084968020503"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_digit",
    "hash": "53998945451140795262504128944950679924"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32",
    "hash": "154298988610307766005376931578626802732"
  },
  {
    "file": "core/src/char/convert.rs",
    "func": "char::convert::from_u32_unchecked",
    "hash": "41383713628633421263462321199817100925"
  },
  {
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as clone::Clone>::clone",
    "hash": "405465150481525966516332611585025160102"
  },
  {
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "81394615689143958369445495001064697623"
  },
  {
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq",
    "hash": "131268768477483122599416739165079655388"
  },
  {
    "file": "core/src/char/decode.rs",
    "func": "<char::decode::DecodeUtf16Error as error::Error>::description",
    "hash": "194409924504005494312814481781281792956"
  },
  {
    "file": "core/src/char/decode.rs",
    "func": "char::decode::DecodeUtf16Error::unpaired_surrogate",
    "hash": "1674574963561327427468567710642111416"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii",
    "hash": "20133431693186319101701398000479206439"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked",
    "hash": "1197208089503891191413366037213136371056"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::eq_ignore_ascii_case",
    "hash": "153906962229337013017224477843347534251"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug",
    "hash": "155864819959133861733001480449214488789"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_debug_ext",
    "hash": "1811249689799481359216660092675083467554"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_default",
    "hash": "180754671982862478675205476030639179173"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::escape_unicode",
    "hash": "116677899287461358152960082788141186897"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_digit",
    "hash": "155940296473502134027473616656745922788"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32",
    "hash": "851713455162133371814618411629640330696"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::from_u32_unchecked",
    "hash": "155901538808744086688349983395935771456"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphabetic",
    "hash": "130298799978281354975364169609929461002"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_alphanumeric",
    "hash": "24702533988976707567229486957754815396"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii",
    "hash": "1371280236591051584311905525484020770097"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphabetic",
    "hash": "1795435089814042338915565227006031313262"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_alphanumeric",
    "hash": "84377483129410354018263649797024837452"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_control",
    "hash": "114080027764717232045303494274524130023"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_digit",
    "hash": "119074481161565982774145887418379610022"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_graphic",
    "hash": "682292110242456351717944349352364561670"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_hexdigit",
    "hash": "936903684394028893611111711078601307884"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_lowercase",
    "hash": "1228495537054714227416876571324465595579"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_octdigit",
    "hash": "174609995863238735905439908528115576768"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_punctuation",
    "hash": "1168280077360395784715938358292219112037"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_uppercase",
    "hash": "75192597763840636289907384411943310117"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_ascii_whitespace",
    "hash": "26383700588788637014920292009710386029"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_control",
    "hash": "95545563699463481793473025130304841729"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_digit",
    "hash": "86872436166798052128679596085550927702"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_grapheme_extended",
    "hash": "183609539343686506685894128945261601132"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_lowercase",
    "hash": "27041061765019149121569069891376887883"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_numeric",
    "hash": "1371428492225876959917959140684196095879"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_uppercase",
    "hash": "384478851352405187712906850877166469681"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::is_whitespace",
    "hash": "29482343462038012121821388472690701117"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf16",
    "hash": "15844204844651226593172936704391873211"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::len_utf8",
    "hash": "1306831287927976661618300510990738434635"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_lowercase",
    "hash": "90870067166150736165504186807309436349"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::make_ascii_uppercase",
    "hash": "39982804989401968947772316028543368772"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_lowercase",
    "hash": "1839459436011528688312162557257495744527"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_ascii_uppercase",
    "hash": "64265844896043853108720304439488785781"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_digit",
    "hash": "20379945532074098176485949599773979338"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_lowercase",
    "hash": "1293136573388317790713740777771800676536"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::<impl char>::to_uppercase",
    "hash": "1179037484935359762514845398822872449312"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf16",
    "hash": "720039401277718266815314291424395701883"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::len_utf8",
    "hash": "56302926392345337717408510197239954979"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::as_ascii_clone",
    "hash": "77072508870014494836566958644751984169"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_ascii_char",
    "hash": "53809241962419103135605156273721354827",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/char/methods.rs",
    "func": "char::methods::verify::check_as_ascii_non_ascii_char",
    "hash": "141360649337835056381152247614357760288",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as clone::Clone>::clone",
    "hash": "10486023920332570182467179786394335738"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "46851638055582297706310272382787317958"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "1117738263471513248215655220313224572675"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "177084258698979094443484885746728471898"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "843688098555341735712003099175304025498"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "150343238963613412377852886539720881603"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by",
    "hash": "1000892515896781277410166249749684544791"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::count",
    "hash": "37767543244513699032939618267859907443"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::last",
    "hash": "9943534872956141927532582708091965914"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::next",
    "hash": "153525926671364574298910298815266034133"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint",
    "hash": "167444345722906694513898973406523986483"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as clone::Clone>::clone",
    "hash": "60245323099406333517630980067351833742"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "961585837856853460114574936748120969144"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "172641877185201905985652986467261587027"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "1023835184129534876311663621189078990495"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "115090621843084127843247505231282176713"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "862312415415839409090126147720451310"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "1781649409716748809810087671469831870188"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::count",
    "hash": "351786564032501159414971951714639720166"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::last",
    "hash": "82245262202189375998427234290499806772"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::next",
    "hash": "823740223678272863810031255099227758222"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "4156179631930450817855955598169348554"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as clone::Clone>::clone",
    "hash": "10698942148155068109773636662450573079"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "1332815571590977410011183044651136888061"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "155031599671288837908209635344189902180"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty",
    "hash": "67862835333270545626599544688691543548"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "40401663711834673071095577645224429028"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked",
    "hash": "161368895475220282676338793136475913351"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by",
    "hash": "83983823903856544384023206918977014867"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::count",
    "hash": "176576856603594518734996545202951599099"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::last",
    "hash": "114071796280952503775962847237058693594"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::next",
    "hash": "67340952604567515352571738177005338457"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint",
    "hash": "141939450576053975945558457959247057601"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as clone::Clone>::clone",
    "hash": "1671738176818381395112355054565376543341"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "167041428790450939854784985380731586581"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "<char::TryFromCharError as cmp::PartialEq>::eq",
    "hash": "1617051635676498971917638526871573056588"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::CaseMappingIter::new",
    "hash": "24240613016331417108371935771453936944"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::backslash",
    "hash": "41831993833598303754555361859762839820"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::printable",
    "hash": "111306436546440123701793324078278082257"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDebug::unicode",
    "hash": "80863024818786943831053917301093020701"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::backslash",
    "hash": "144907008666932042151785127804175294051"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::printable",
    "hash": "47881713426907707498406719690797449414"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeDefault::unicode",
    "hash": "253993273090696304015404888865117831956"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::EscapeUnicode::new",
    "hash": "767478264985507686912006806518806087645"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_digit",
    "hash": "61263073051263009535106749765277258197"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32",
    "hash": "116462743266217565068583304588975541054"
  },
  {
    "file": "core/src/char/mod.rs",
    "func": "char::from_u32_unchecked",
    "hash": "326064339013302728611931461673781805316"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for bool>::clone",
    "hash": "992210670660557052717692031073466937692"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for char>::clone",
    "hash": "131312470926044644438109007101277589116"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f128>::clone",
    "hash": "150517071612577193227536709140232675817"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f16>::clone",
    "hash": "168073301519092071728853370148432197385"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f32>::clone",
    "hash": "168953517072040749458925425989315377212"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for f64>::clone",
    "hash": "2327893578640695588287385634197386371"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i128>::clone",
    "hash": "443016077767453171311605158626475583826"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i16>::clone",
    "hash": "70197851268689423239883335976777905595"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i32>::clone",
    "hash": "120006659302801322587093066882982362135"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i64>::clone",
    "hash": "44228057381391023252991703757392612817"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for i8>::clone",
    "hash": "165707420444858971677143125808921471960"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for isize>::clone",
    "hash": "12918679082085429382036354022293919330"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u128>::clone",
    "hash": "74678983919804110469361567180519368440"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u16>::clone",
    "hash": "136573688779298861815308837592726944084"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u32>::clone",
    "hash": "263109410116140819612625176175758472015"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u64>::clone",
    "hash": "112492662014827434774552690556694109550"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for u8>::clone",
    "hash": "24294774985545309645585097529543785041"
  },
  {
    "file": "core/src/clone.rs",
    "func": "clone::impls::<impl clone::Clone for usize>::clone",
    "hash": "785725095747135041315180009333490720462"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as clone::Clone>::clone",
    "hash": "90425822625855064204257424541273964700"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "160539712783477915091652974049586435553"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::Ord>::cmp",
    "hash": "1464642642282031549015568910828516882983"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialEq>::eq",
    "hash": "81385294222362714685518950164453635767"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "<cmp::Ordering as cmp::PartialOrd>::partial_cmp",
    "hash": "1388268969447585772417283629813201389620"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::as_raw",
    "hash": "181009869758296371464394283723152239762"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_eq",
    "hash": "750205775792431101415667253845816695408"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ge",
    "hash": "2777644495037972377563816926796478408"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_gt",
    "hash": "166890247701193880058341773395997776392"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_le",
    "hash": "167519763643874639086552159219872198284"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_lt",
    "hash": "1200570305511299659210501566474989567671"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::is_ne",
    "hash": "766664379484502688614844355112785842260"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::reverse",
    "hash": "1978340327759291174615985978028875668"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::Ordering::then",
    "hash": "10995632437524331266280078966261459574"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for ()>::cmp",
    "hash": "1707948925342611811613394157653914455311"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::clamp",
    "hash": "1814417065346235821214556276877587891953"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::cmp",
    "hash": "80386058079484890473634863961324842729"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::max",
    "hash": "88235331103495295243143247034391180586"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for bool>::min",
    "hash": "645428958825175479314426615303968939362"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for char>::cmp",
    "hash": "60781470217526102963610385287279976834"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i128>::cmp",
    "hash": "15127432761889074433322963899846642164"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i16>::cmp",
    "hash": "12634982400198153335618836896365321431"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i32>::cmp",
    "hash": "46489561819967951214045237103392664622"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i64>::cmp",
    "hash": "10436405171744302504267274923569342957"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for i8>::cmp",
    "hash": "1777835704063727361110005647405088134471"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for isize>::cmp",
    "hash": "12830781968796055498487701291165720995"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u128>::cmp",
    "hash": "592429824916280994817463648054834099697"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u16>::cmp",
    "hash": "1154732805061261086316943746587043812656"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u32>::cmp",
    "hash": "6805562217973734478490858430748473698"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u64>::cmp",
    "hash": "1760939583897139814713605003700582214168"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for u8>::cmp",
    "hash": "425105891909073573315044798826893775875"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::Ord for usize>::cmp",
    "hash": "181664272175242433525604547462516925447"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::eq",
    "hash": "95533671585904158611130484724537740099"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for ()>::ne",
    "hash": "166608148279346657861793342869713748417"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::eq",
    "hash": "70427948873935355416827870863385308449"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for bool>::ne",
    "hash": "152049237396916448694060004510316925190"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::eq",
    "hash": "161110257280051412412943306079497681034"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for char>::ne",
    "hash": "106917086340111399384600229155823776043"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::eq",
    "hash": "370138285688401878813456119369768655552"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f128>::ne",
    "hash": "3442378773329840421385757888826804887"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::eq",
    "hash": "945731251824160227910189090095738544869"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f16>::ne",
    "hash": "468911333765529061212624884115263298328"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::eq",
    "hash": "1248785821547782218915867961775690017041"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f32>::ne",
    "hash": "1350782116030529033614577912239184017078"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::eq",
    "hash": "58344802776475633714712455592447826673"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for f64>::ne",
    "hash": "113880771791740357011992836271255440838"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::eq",
    "hash": "14471288902722331606847681323232522417"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i128>::ne",
    "hash": "1060154038226998286216710555655210591779"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::eq",
    "hash": "166736664629971473344247814829027580980"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i16>::ne",
    "hash": "136604659424783686917915859806509708028"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::eq",
    "hash": "119533542978034467149073226193148015288"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i32>::ne",
    "hash": "388265421066681176412398837795544591375"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::eq",
    "hash": "96099211955268874736077071022599885205"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i64>::ne",
    "hash": "200422588237478944117641667731182642120"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::eq",
    "hash": "875601412784210131718276889574946375285"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for i8>::ne",
    "hash": "13315169927892037018691425174998062906"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::eq",
    "hash": "41980120191636332023231860724890747352"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for isize>::ne",
    "hash": "579753997953585305313004579573971904511"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::eq",
    "hash": "167604581721067505095211763037527842993"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u128>::ne",
    "hash": "88338480048185876945798680692646529878"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::eq",
    "hash": "377691149689623775011313779246785124838"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u16>::ne",
    "hash": "91566938394692061039517349348529995686"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::eq",
    "hash": "145493908791982296621902181110000221268"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u32>::ne",
    "hash": "141639006291974369729087215146806716843"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::eq",
    "hash": "762484418174721663513071567709372013136"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u64>::ne",
    "hash": "11293106596483861775141744023472237905"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::eq",
    "hash": "1450824968137209211015779136914157765236"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for u8>::ne",
    "hash": "51636801256341637554784577925576614271"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::eq",
    "hash": "1782302304995581167317710885657120714674"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialEq for usize>::ne",
    "hash": "85792036019305539388993190639874432031"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp",
    "hash": "481848622958427755215622040832637036865"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_ge",
    "hash": "96715930275415769335031960517473033188"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_gt",
    "hash": "923523310424690069812599729628491854338"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_le",
    "hash": "418682862275585926012161562489450885186"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::__chaining_lt",
    "hash": "940171424860425995814647091214242086937"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::ge",
    "hash": "46144128939355064097639108250560536981"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::gt",
    "hash": "33847258703311650271083399382247633739"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::le",
    "hash": "458271136842117706217276803581770208515"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::lt",
    "hash": "177986631779574733109336428765516127901"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp",
    "hash": "716997028830661694011796539128563477628"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_ge",
    "hash": "740788416702714199613267943925362325222"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_gt",
    "hash": "84497076238279701504083800783027162727"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_le",
    "hash": "150816562276481661097121297145352983155"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::__chaining_lt",
    "hash": "70370012376706429009699925551288272240"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::ge",
    "hash": "115845779474978302149326081182666711635"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::gt",
    "hash": "27464486329205563319059954608346530954"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::le",
    "hash": "29399544173234286516250172372022568167"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::lt",
    "hash": "845915572689517095810811562632250973966"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp",
    "hash": "16334836567730210505551551526395007175"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_ge",
    "hash": "117613590937063169849042026326500791821"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_gt",
    "hash": "1819198397626780329117040547940359807584"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_le",
    "hash": "25926495796132696674403687947456600062"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::__chaining_lt",
    "hash": "1069990900065509106912100498295311685244"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::ge",
    "hash": "15522028978004082846981294955395371730"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::gt",
    "hash": "492202639907847916710152258254409100198"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::le",
    "hash": "59628854693577909496311186624048565979"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::lt",
    "hash": "19117276426211829076391765445807410304"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp",
    "hash": "1815664266981489737113402272082945995154"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_ge",
    "hash": "99405824326100423708842870906277652105"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_gt",
    "hash": "108024689800551389544507217112588122231"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_le",
    "hash": "16820860370372406063930419681556800111"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::__chaining_lt",
    "hash": "1775859351444964552617677168679229419295"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::ge",
    "hash": "10611143504966458192628386753851210593"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::gt",
    "hash": "139155397783443337426236103406395773732"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::le",
    "hash": "68239283477435776908241051453706648949"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::lt",
    "hash": "1061002925669712021510016737281779589944"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp",
    "hash": "988110199595170090917627795730948375780"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_ge",
    "hash": "135497409390298892941387615083765724521"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_gt",
    "hash": "59597030505896045955847489439582858323"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_le",
    "hash": "752751152857444936810927769809606072440"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::__chaining_lt",
    "hash": "74727569009287661464753216156551932485"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::ge",
    "hash": "49541252460666553723061375806976148893"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::gt",
    "hash": "882704453705029831010376520650796820355"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::le",
    "hash": "1523980280795349683314117917048396502116"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::lt",
    "hash": "137341974267225224783476237159069937154"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp",
    "hash": "1254065715006899625915433044188791391376"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_ge",
    "hash": "94697431603898732326261197955941043624"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_gt",
    "hash": "131650117923760461329379867783943218558"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_le",
    "hash": "577553391281462814912363593345319568521"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::__chaining_lt",
    "hash": "1687358592588909147211815499552829603818"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::ge",
    "hash": "45271393141798313394956660130176037728"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::gt",
    "hash": "88927337427816338503166949773880167660"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::le",
    "hash": "459368653219459395617333872799488605365"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::lt",
    "hash": "138579983205479114723779152623755929283"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp",
    "hash": "162779558321015009093346501682129433354"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_ge",
    "hash": "1641294568622836405411476787553683376334"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_gt",
    "hash": "177158756738941789888723685136361310143"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_le",
    "hash": "140340060057163334433880060915082824385"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::__chaining_lt",
    "hash": "905158838618347914012219664647901773392"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::ge",
    "hash": "599980259638309638812506812075274452364"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::gt",
    "hash": "165179676901472827987175168580177382029"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::le",
    "hash": "351053897445565529311635441418527599745"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::lt",
    "hash": "74312715405162337543897983677940537863"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp",
    "hash": "134525511732497957329582039819696423375"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_ge",
    "hash": "181613509099016959422226942318922609275"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_gt",
    "hash": "820049759790579890559588441992676697"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_le",
    "hash": "880706433408310678513422123547481737256"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::__chaining_lt",
    "hash": "428835507365594885415672661872009836897"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::ge",
    "hash": "1732978976447357501814064447512990357867"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::gt",
    "hash": "556001566055259830713508366928416379428"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::le",
    "hash": "83748309144765297396476272197807477197"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::lt",
    "hash": "86765439921093133115818795479068985975"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp",
    "hash": "577578447440368423510134432044596646134"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_ge",
    "hash": "1801305242173308260810321700632109207769"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_gt",
    "hash": "995615866337046229512847490456263020130"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_le",
    "hash": "939876374440385550516830589217407685794"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::__chaining_lt",
    "hash": "96743819303129056823212008030301131034"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::ge",
    "hash": "822209411059178811411738182647169593356"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::gt",
    "hash": "1753277955491848042235272554220023584"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::le",
    "hash": "1149217496702643737515477100830515189321"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::lt",
    "hash": "72866606584684199024038485936480259390"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp",
    "hash": "27639053730036507806071017704325378782"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_ge",
    "hash": "50563072144972663082306625944901347582"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_gt",
    "hash": "751624963216988866716686147305280003062"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_le",
    "hash": "1180966671477735829417237196154146940074"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::__chaining_lt",
    "hash": "151338378448831623696997858561961148059"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::ge",
    "hash": "1674292926848043962915104530992456746654"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::gt",
    "hash": "558522322774706845810264038543989882764"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::le",
    "hash": "1358654074792053602715568425588791662501"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::lt",
    "hash": "1579658759496127426612764035094764908373"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp",
    "hash": "1209202321388837223312746935221885412198"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_ge",
    "hash": "96722017861165658106580572334038937179"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_gt",
    "hash": "7173338313278372227725503357514307611"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_le",
    "hash": "155673470246347708543027576728535679540"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::__chaining_lt",
    "hash": "110547119876277577047984017827448229190"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::ge",
    "hash": "46015712664438046457545391408762807570"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::gt",
    "hash": "11991660048720761018068570044269276667"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::le",
    "hash": "46671902400475213332485578733836225001"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::lt",
    "hash": "112374389592555562024282276568465615709"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp",
    "hash": "86440266228165565072098669736418164385"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_ge",
    "hash": "16829533090099790047014626745109447809"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_gt",
    "hash": "104902526147554905835956711236479297717"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_le",
    "hash": "102277181390000583873358786420766193318"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::__chaining_lt",
    "hash": "735902133714379059516293232668150165062"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::ge",
    "hash": "59288172803193779643041890255256666672"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::gt",
    "hash": "49361390810689964601888279413791624107"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::le",
    "hash": "127303108117156304959351780705454371329"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::lt",
    "hash": "39451531328385938409665468750821888874"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp",
    "hash": "76566854881545058036390263276715891081"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_ge",
    "hash": "894210604522517629717823772497954989309"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_gt",
    "hash": "124946811122946624488094395484159765580"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_le",
    "hash": "58670807220142836644717750142606647337"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::__chaining_lt",
    "hash": "74802500347781448344346603634129792226"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::ge",
    "hash": "146164972244403508116370047436492765113"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::gt",
    "hash": "68643762020680161854362643853425049318"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::le",
    "hash": "1407227748083415894016740434254720669213"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::lt",
    "hash": "1326135750167585731917405189369452690072"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp",
    "hash": "523064080485044476314576339484092822552"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_ge",
    "hash": "228629042248555076312618766278853733106"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_gt",
    "hash": "1298370547588804036213724470077897146842"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_le",
    "hash": "588545745294890421613192918462821533531"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::__chaining_lt",
    "hash": "11820014001968407982368516256548353140"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::ge",
    "hash": "400496564369738839516535843282634752069"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::gt",
    "hash": "10546568475297235155373654952236486549"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::le",
    "hash": "1793180910255621118014183821978019999936"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::lt",
    "hash": "569006077262986796812405551728371512007"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp",
    "hash": "685327836985971946916160555393567465581"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_ge",
    "hash": "1579250420701118900710168605561327877941"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_gt",
    "hash": "82294347986273591595153326234605870180"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_le",
    "hash": "775311084723556220516813535529567924995"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::__chaining_lt",
    "hash": "147049941845541747910462649680116804100"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::ge",
    "hash": "1531529736665207119716166291560277808459"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::gt",
    "hash": "12528475020952855554167519081534612346"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::le",
    "hash": "1400700966637783537377421359389119848"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::lt",
    "hash": "519478665170207159314235095145570757294"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp",
    "hash": "1192641073804577010310285964520157779467"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_ge",
    "hash": "857844663024694541118186137517365877058"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_gt",
    "hash": "12370542599093364016791675946147168422"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_le",
    "hash": "182579170162745840527225014150705743665"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::__chaining_lt",
    "hash": "77158235682473012431949814052770038968"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::ge",
    "hash": "162474784347592091378009919548002171067"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::gt",
    "hash": "93293463678004156444643960708769643119"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::le",
    "hash": "1635424469768243193210820870458831414354"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::lt",
    "hash": "611270727318963213014367260156185100224"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp",
    "hash": "168900127585083247168956971728051834320"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_ge",
    "hash": "770516739823199404112824944427013586159"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_gt",
    "hash": "36667720701978141827722550069166493485"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_le",
    "hash": "1569149333154995373511746175391786240094"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::__chaining_lt",
    "hash": "175433382729453092167758286414633968973"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::ge",
    "hash": "73527523988569783602102024796077831883"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::gt",
    "hash": "152959407567938785186651631479627980"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::le",
    "hash": "724836357911680015512121746717596905240"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::lt",
    "hash": "163161463220985676922487198705762823548"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp",
    "hash": "172230459108234399314891540542249579747"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_ge",
    "hash": "149223366847955232596911525047452600426"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_gt",
    "hash": "167376731704959584228868914197879182898"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_le",
    "hash": "506853157818464931212918232761040166623"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::__chaining_lt",
    "hash": "88028189651278051408830712806053197939"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::ge",
    "hash": "173788179684934136127388591490263943778"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::gt",
    "hash": "65389877135230032264810649823121115526"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::le",
    "hash": "483924836696802214316937133767840489344"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::lt",
    "hash": "589599466487462365011430963401962118509"
  },
  {
    "file": "core/src/cmp.rs",
    "func": "cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp",
    "hash": "140678886297489132731707166121255708219"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "104645809721132181797906762590267398330"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "8023970907095989704276639322950386670"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "232968566798214283211204030686519019843"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "27133674446622583104544140659385726962"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "3138849830595365569243951442802936292"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1355202289786862825516795043210504194066"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "53177374013905520475699424449867687109"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "987555472572847348213140933808811495384"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "15520376107058158186112237704526656096"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "331685395097612591415917264667233091837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "1358951474125502637613500749732987608976"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "59632430052737913194970061834448045790"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "156526944514267291632122689926823097428"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "1672221897635423274913239074598017934282"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "13607085157180235356636283754394344661"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "126422360828334567894577061511871149983"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "1009432972437108716812987692861299312818"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "4725077828742083599105603741327269473"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "45646783076199412359409811363389464714"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "459655098080368586414507122940362306305"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "11845216794843064399313413384828626611"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "74146962033086120291915426466271744279"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "1673969507463349892011111801319033881970"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "423885036603263068113361670471350216824"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "937109494029547821715234152191843318432"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "1553307208789351860115355921770651057302"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "1429299620908338075014313702547998070836"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "771041875102364999916462533125202592523"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "171795881185875465414074266379462444569"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "433217024667135467518316060115943119747"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "160565106807054621071282291645677741871"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "1470956311439537598110459724683720426537"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "65731246925644696934856407599237578737"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "10361514182516830586311056802023248209"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "516530732577510545412242209739878205405"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "475705343462094729612718125333464535927"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked",
    "hash": "179173884401072707644385948483662316837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked",
    "hash": "119354821557448859904040034442997881115"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked",
    "hash": "6999572538113449661059197870109341295"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked",
    "hash": "315153674182468961111217010164988680621"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked",
    "hash": "1304649266690126680811593930808672186249"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked",
    "hash": "1773594820681244921511671176079392821311"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked",
    "hash": "216083910128422010114630775282900300721"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked",
    "hash": "17084707338546741741121608714745997389"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked",
    "hash": "81810731966206247211176993605058494411"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked",
    "hash": "112299292669929511591411854884171213933"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked",
    "hash": "78463614180193921349834417693563167"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked",
    "hash": "632001788644297369312280620011296799930"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f128>::from",
    "hash": "169499486111328441341902132431860918323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f16>::from",
    "hash": "121027486325888045289663780658314509999"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f32>::from",
    "hash": "89867285317038440229144367099657965206"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for f64>::from",
    "hash": "99518640921432298018277839597719502612"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i128>::from",
    "hash": "1658235192932366261518007713684117252907"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i16>::from",
    "hash": "22304758524366249987691790968716618988"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i32>::from",
    "hash": "280805014964050700912169948615407105381"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i64>::from",
    "hash": "153306278928193306056301347996194154595"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for i8>::from",
    "hash": "564380175134863027112651749934656634667"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for isize>::from",
    "hash": "111724889664099101948248635628951630020"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u128>::from",
    "hash": "58762342094590519437977285022729587148"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u16>::from",
    "hash": "129800118454390365765793947221223742359"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u32>::from",
    "hash": "140604209654851365412584410592372684238"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u64>::from",
    "hash": "170055653864310189887550439491465367060"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for u8>::from",
    "hash": "58950932328618933201263964759186971590"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<bool> for usize>::from",
    "hash": "963253227260598933211795104465033374113"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f128>::from",
    "hash": "123276761184889488639386163381694903557"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f16> for f64>::from",
    "hash": "74283438840217278611723663844546048312"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f128>::from",
    "hash": "64477791768121525854013349904387144546"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f32> for f64>::from",
    "hash": "165929183147946052862199188388218178056"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<f64> for f128>::from",
    "hash": "1060208708364164823514119613087072998035"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f128>::from",
    "hash": "160358999880098461615179087185129938509"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f32>::from",
    "hash": "630508961134544622315798378117189923178"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for f64>::from",
    "hash": "1167545917869555188912412243823044795817"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i128>::from",
    "hash": "76455948149767713956143810956638697781"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i32>::from",
    "hash": "20147766713047165234210449459826327267"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for i64>::from",
    "hash": "275488299469010845415070749268949839323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i16> for isize>::from",
    "hash": "119314318711051503573167991393458435649"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f128>::from",
    "hash": "176485926200918736498621377422617270312"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for f64>::from",
    "hash": "90516512292197100518064091052765966037"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i128>::from",
    "hash": "31559739315062481178790767226288922385"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i32> for i64>::from",
    "hash": "156554156491648331224401065674498596561"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i64> for i128>::from",
    "hash": "92010848244502159099128660670400395993"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f128>::from",
    "hash": "22792513849966657775609877564916992688"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f16>::from",
    "hash": "1632510739764135776416770462406736725090"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f32>::from",
    "hash": "1219422724536156992813016522879841904985"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for f64>::from",
    "hash": "120843190307228223952566926146402128467"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i128>::from",
    "hash": "135411453032870744328046302927213578416"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i16>::from",
    "hash": "24396974564185562532366962222805054317"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i32>::from",
    "hash": "20710474545703772848379868827749162840"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for i64>::from",
    "hash": "92042612225053664491065408973344468510"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<i8> for isize>::from",
    "hash": "633743124218259680115754853666043848983"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1746386714975169257912125903366480963854"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "163574889798271926693893907458584400021"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "63955838135402545571524721207969444591"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from",
    "hash": "135855592930521124915091582991878620218"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1553430871918413027217186325063386647532"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "78492553958532566543202827407846756886"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "1799291365289261398410193420852454261390"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "905423570732412480411665731420006229028"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "791071914564086938115356906408318276019"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "48815717319405452417262389881966680333"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "123978512488736385499913886865609331060"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "85701750962092016183581508135634475838"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from",
    "hash": "95194220124041046826703376387819706044"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from",
    "hash": "6836694354037934306073462665840663981"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from",
    "hash": "46193168341278246210322013012637733691"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from",
    "hash": "4636605682545618931199918401431428085"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from",
    "hash": "1343041686102392927313760968707062583898"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from",
    "hash": "610723539507626695415496380039480168880"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from",
    "hash": "1105550187515652133611390560724752538275"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from",
    "hash": "149983973359804256505418935246993735597"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1044817774169681594211063645285189539577"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from",
    "hash": "256487992478169406716091248207294697322"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from",
    "hash": "89332420748032270903811893781268075526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from",
    "hash": "163639033728850269217915029067367812101"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from",
    "hash": "1079601507184925478113894790145484177086"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from",
    "hash": "158571024974431019479856666781961988061"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from",
    "hash": "181059120867212495408679746715159633358"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from",
    "hash": "1458103842904542065816818284057200379123"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from",
    "hash": "1157596714928758707117924709897231469988"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from",
    "hash": "52192494336143705614716689736359030567"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from",
    "hash": "94735947249315700463502172023625698934"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from",
    "hash": "618033112077133468317697568889151214381"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from",
    "hash": "143386989678729617766257437373199136933"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from",
    "hash": "75846196505255659982562536984673691038"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from",
    "hash": "1672316488423798935017816801038361335210"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f128>::from",
    "hash": "562194086862439935245995168508162656"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f32>::from",
    "hash": "155789093369966321169509658900080554776"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for f64>::from",
    "hash": "68241714160244360617037207926269447339"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i128>::from",
    "hash": "97771062388913858744829391296931220660"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i32>::from",
    "hash": "1563204396402915773012814441047597431917"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for i64>::from",
    "hash": "12045195906953911407538182316735424993"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u128>::from",
    "hash": "146290415326837624636098528861711721175"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u32>::from",
    "hash": "1637504128198553811811907163309050527767"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for u64>::from",
    "hash": "979744626790626107016585518742475904053"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u16> for usize>::from",
    "hash": "45755338440053891812429711640309937578"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f128>::from",
    "hash": "165984256412243452612830245535095224568"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for f64>::from",
    "hash": "776632528900133821513938421793638605521"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i128>::from",
    "hash": "93923030188443385283773228721067602021"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for i64>::from",
    "hash": "3315907138516050951981334628859113769"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u128>::from",
    "hash": "36787856561611067110089391995236705344"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u32> for u64>::from",
    "hash": "760097703502802382315361126308995570139"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for i128>::from",
    "hash": "793061261019347037111108738184855012526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u64> for u128>::from",
    "hash": "56951603559244675691839205791944033772"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f128>::from",
    "hash": "186531940693735054711135899436008455526"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f16>::from",
    "hash": "168888067907863543079926227659046498337"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f32>::from",
    "hash": "4532086591800769762197380511597302"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for f64>::from",
    "hash": "549336093093947997611765495117997964409"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i128>::from",
    "hash": "297649710808979078413352983451017320127"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i16>::from",
    "hash": "111180667598921743685992000036412244379"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i32>::from",
    "hash": "922356456228504723114073297667898781296"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for i64>::from",
    "hash": "1036453617802973864713120458044464563957"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for isize>::from",
    "hash": "292974616399036809910762372929709220015"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u128>::from",
    "hash": "454628356395109779013386601113508722175"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u16>::from",
    "hash": "172029007956524447138647039784998313654"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u32>::from",
    "hash": "54493571497412513993532529605325121170"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for u64>::from",
    "hash": "1104070005455154866310932058437342070110"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::From<u8> for usize>::from",
    "hash": "117083133034458006019709376097028492273"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i16>::try_from",
    "hash": "1648440427134705257318128891117623113765"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i32>::try_from",
    "hash": "57371076085649788910079148224158134817"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i64>::try_from",
    "hash": "32236777160852090745753782330131328900"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for i8>::try_from",
    "hash": "579601115975957244611282247470170254191"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "9423879641483683775678206461278031516"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u128>::try_from",
    "hash": "17426065350869934332297511257511811819"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u16>::try_from",
    "hash": "663818770610276746016914530156446007606"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u32>::try_from",
    "hash": "40187534362511675503141809301677966125"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u64>::try_from",
    "hash": "64072337125967396035177493141211387707"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i128> for u8>::try_from",
    "hash": "207354843359055262616594593096442659708"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for i8>::try_from",
    "hash": "134717541656321807446267797046707202230"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "172207119073677209762693689757495207571"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u128>::try_from",
    "hash": "20562568229095356937776199697252446119"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u16>::try_from",
    "hash": "1676610157369019384118388282697552599227"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u32>::try_from",
    "hash": "4745058768695616792291524111906417914"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u64>::try_from",
    "hash": "1104387417150906435317562116397182751715"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i16> for u8>::try_from",
    "hash": "327783016939886007314267766398560473892"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i16>::try_from",
    "hash": "107085080414088378663688163617137983603"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for i8>::try_from",
    "hash": "58568493857542873561183839021246386492"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "97550695117456206996059227230410891024"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u128>::try_from",
    "hash": "265143764294472959611322839460857105750"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u16>::try_from",
    "hash": "1024742476765853774512537154307721785418"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u32>::try_from",
    "hash": "1214258652200928387411644436693302022198"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u64>::try_from",
    "hash": "43051497508229891258796790964554543970"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i32> for u8>::try_from",
    "hash": "116838725589658364762125035485285727797"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i16>::try_from",
    "hash": "153780951155558721015437149287925217182"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i32>::try_from",
    "hash": "170893640849866870013320546763209559534"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for i8>::try_from",
    "hash": "1628626192709927457215446911846678011665"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "671287930299377241118200065682367311867"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u128>::try_from",
    "hash": "12347047319095417544613540064008554164"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u16>::try_from",
    "hash": "331746598191774729294266502155956269"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u32>::try_from",
    "hash": "1819306933160722863915649585674466048362"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u64>::try_from",
    "hash": "30364256522356033629547477061861832796"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i64> for u8>::try_from",
    "hash": "139480405490734276433600265903957443502"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "173367336041009551872238416534680411318"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u128>::try_from",
    "hash": "65362576066578981902730629759366001754"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u16>::try_from",
    "hash": "1350361953724208130417151583100329499783"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u32>::try_from",
    "hash": "98610930938884894194207706284260829137"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u64>::try_from",
    "hash": "1526465213544786899717693063630663289991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<i8> for u8>::try_from",
    "hash": "122426802191913116261775547109355814783"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1825420723562771654812145794738997460124"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<isize> for usize>::try_from",
    "hash": "1073839281058824192715244142859096339340"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "56688890989795717316699137104511631709"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "35552313656523861707115511975277912461"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "452437527200219176513102134348491828420"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "828701678084255702210189758578165327225"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "87596896705354945256067672485600195602"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "261351240606639923717572155331258993669"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "57178709749591563851978094498257197901"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "139325908272992211051490682294201296632"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1701237672629809087216464881371623470534"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "227797874061998603413111188134284074388"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "862850096372767138111014954428879518991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "201946718839577550917367066718283228479"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "2832623621249025276034884748445107007"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "139345035755545228156124307895264200752"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "29631268296449581799056590582941671825"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "171461987384859697854182319750417151894"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "518867244223077980717977732808463244174"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "89729635653873958217496970978359879503"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1419588900469377108617644134495396081949"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "78734060333753871342152418771693777744"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "37042130516558344515923698294325639764"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1554960977865040423917100907870466540858"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "436979004096220246514635548491454152996"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "170581981529254640411030392803143135696"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "273649063031975628116741353827604198561"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "173868876125021615985476822978637377102"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "63175942068952159591168694066699477799"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "1294968161685925437116601659678772437356"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "805639189237678275110038899164714400805"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "571809638227135982214432977330212482991"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "1465489463920758107412501987590795822623"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "744054504323061711810321851914674409326"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "531414119571784700613206023079366362651"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "173006344199651525311691978169631326017"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1045247213082923280715130303149690940837"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "100650507288846067258458047148638683035"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1836337785897305933217262337111235573644"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1489129049011999706918405838905345472484"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1531975158659148841711516502040175135419"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "112394683531969896567426186210752111626"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "986825195395845984911205155327320449613"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1590485008860373863910276496116764351241"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1776991728536589868199518872488255871"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "685836762778029631115910423101780850594"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "107095263389102620626768869781027330608"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "890092371766177686810409334465246737844"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "146312559699773007622544552009615825513"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "4763075284655070307904995504298744350"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1681676599640038872011747977080123456234"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "1242481551072628316915512261705235319104"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "117137888702393773216952557399194615778"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "805201543677881476317538472412800174073"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "68875462316181416331536585103420182440"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "1506638107178108919217274766906760228336"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "1024252286242379272710908211035860240869"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "89879828359422433722141122985971138885"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "98551199570134493007422849399306417897"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "1674060715517182559314859319076966800313"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "118806224387787117847994935089619477849"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "413647411656909177313848203084974899141"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "518620648389259331215502140092624889182"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "100957291625481724773531050700453723376"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "35723489289864618197992285182888392434"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "60898620821634341261109262977410343352"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "172978975470686143658589802984674947249"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "291147606102468155314884594988466736425"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "76129794724908303049664026375168379349"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "130552490730120137959516437384284852551"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "412792437831080741014435182411097174809"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "519550136779250103412336501750558077429"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "93112463600018028118672031009747010971"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "1317709240407428463810298827491551012061"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "22737239521980039879960059807523730595"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "16285549188760470179826872834501061677"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1479692522549344176610125972271777486834"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "110082906674369862446047936291741825088"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "167722936146595090254640251119002943"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "107920644920695466482782738017438742956"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "752790086380457453010241954594513398634"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "2581351375427990243973252659315773998"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "152593951674249374705393792527452536958"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "558704048517007400818055909941121337839"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "9615699306100380228960774206904857831"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "76212358642258177947690974175761207492"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "62511749258418618915938620109275721800"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "24243490551929798997247523025299597036"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from",
    "hash": "1449979455423596788014575997436727739698"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from",
    "hash": "561184447553336337614048774042700431085"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from",
    "hash": "119655130813660621655929628507313273383"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from",
    "hash": "896541231339498170510079791237161097273"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from",
    "hash": "128824826153541333607212686996946894382"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from",
    "hash": "67190252894986867610195863792369878416"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "1116766652358425314716659157302834481317"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "505613796739108573512627803889664708336"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "88428820266395826057908102209722721836"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "1032404236700685869118398384442215442474"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "1560629172465800907914036174644148294691"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i128>::try_from",
    "hash": "390770214790186559411834147578732368809"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i16>::try_from",
    "hash": "93426809728397366303543273977105843990"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i32>::try_from",
    "hash": "602943172868394542613844184175034943009"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i64>::try_from",
    "hash": "179008779449983437091596949336666904985"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for i8>::try_from",
    "hash": "363189746573401770911310784132397071575"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from",
    "hash": "23314860940095620174701214611245930778"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u16>::try_from",
    "hash": "1584593348221997933011744510795317710240"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u32>::try_from",
    "hash": "88303092668766361546914851026231046300"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u64>::try_from",
    "hash": "11830142148038897192255285402558708649"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u128> for u8>::try_from",
    "hash": "90180796952726386715878245817925120693"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i16>::try_from",
    "hash": "10004529097507706481542446409947599866"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for i8>::try_from",
    "hash": "15733787489259700817844341718509400400"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from",
    "hash": "743206856989196889011423443237375150392"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u16> for u8>::try_from",
    "hash": "80762578035657791516125743247843026541"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i16>::try_from",
    "hash": "94525729506074059318013509443263497354"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i32>::try_from",
    "hash": "388808953162228763618018298114923949056"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for i8>::try_from",
    "hash": "68796540814256247905408593365735931199"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from",
    "hash": "1665486667534726385110011920226795965704"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u16>::try_from",
    "hash": "918000332450224975711802885814461250465"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u32> for u8>::try_from",
    "hash": "166811418013046279073093856618903131335"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i16>::try_from",
    "hash": "1722178707731510957315264728164901043196"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i32>::try_from",
    "hash": "597529325210209860118135157063230695045"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i64>::try_from",
    "hash": "7419361017006092112513129750745276427"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for i8>::try_from",
    "hash": "7055193698800828081886562530313184188"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from",
    "hash": "709018667218716697410607293259767979360"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u16>::try_from",
    "hash": "162899586579000157195866698175681094505"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u32>::try_from",
    "hash": "151846175080625439655902950511741597121"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u64> for u8>::try_from",
    "hash": "175996073136983204412335091967390271438"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for i8>::try_from",
    "hash": "1279110621096543747316373680784557893632"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from",
    "hash": "301140861951499263014654553689763857834"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for isize>::try_from",
    "hash": "600621346239527097511770572551774702702"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from",
    "hash": "466173937589316805610604787157900284994"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from",
    "hash": "66907187184110992349653756908092799986"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from",
    "hash": "107408800399540756474202051384460095548"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from",
    "hash": "1418239820774328069610076206113302634577"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from",
    "hash": "1228258648650347290612800603987974658728"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from",
    "hash": "543262562578205611814193723889232631679"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from",
    "hash": "122085557220775341787511152675116298323"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from",
    "hash": "4307877510365205454425647418747522694"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from",
    "hash": "555398377518491148512957939749234754468"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from",
    "hash": "652212298019392608912549456137359936972"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from",
    "hash": "1172119524553988337617398079248353918347"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from",
    "hash": "96798180925420721018056525112873849275"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from",
    "hash": "68758122080752529809216273094162089755"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from",
    "hash": "18066454308382927611913990146408759428"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from",
    "hash": "5611684546568068855586755296971535363"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from",
    "hash": "1524281003722226624511371742394924592513"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from",
    "hash": "32838617444700463276308796765747166928"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from",
    "hash": "57457231475241045428520990672147539287"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from",
    "hash": "150765206764874660127129072204862408110"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from",
    "hash": "15519626459282008615333282337255286231"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from",
    "hash": "1528045041929917897412045260380486138842"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from",
    "hash": "1070469087219879266417019146462179115889"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from",
    "hash": "474570109389326982913026890033024351395"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from",
    "hash": "70861105468698357887314581219043050057"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from",
    "hash": "152999639096192617077964207081594502297"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from",
    "hash": "1106227520373337467013331685168717139413"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from",
    "hash": "133972935025809312823015529711251662923"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from",
    "hash": "6734548723577847434255491373897134147"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from",
    "hash": "1799224867767978147914580182141645091078"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from",
    "hash": "675617733325397884916970407630178141644"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from",
    "hash": "39395206794071075456210322357749485373"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from",
    "hash": "181475049314471990327144514877801889251"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from",
    "hash": "113636303611599948422952134073415732634"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from",
    "hash": "740279432569025443711574644820610176575"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from",
    "hash": "44104660874855087623733736036848372911"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from",
    "hash": "52447312959119204751725989402363811285"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i128::check_float_to_int_unchecked",
    "hash": "88530868724279568667690192194845886909",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i16::check_float_to_int_unchecked",
    "hash": "34937355308854661236992592332817910784",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i32::check_float_to_int_unchecked",
    "hash": "866541447816502054912562032127620832860",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i64::check_float_to_int_unchecked",
    "hash": "138373315061481331911912108179999526304",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::i8::check_float_to_int_unchecked",
    "hash": "9178839463185631346212959247776766673",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::isize::check_float_to_int_unchecked",
    "hash": "153087535703317381546148665235596763679",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u128::check_float_to_int_unchecked",
    "hash": "1350855398323535927312055908456031659862",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u16::check_float_to_int_unchecked",
    "hash": "1053457698283725077411487014210877623165",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u32::check_float_to_int_unchecked",
    "hash": "527874524859557861913566566362714989078",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u64::check_float_to_int_unchecked",
    "hash": "964798959500214880115376060161869130001",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::u8::check_float_to_int_unchecked",
    "hash": "35429821651242858315152125474851240011",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f128::usize::check_float_to_int_unchecked",
    "hash": "183188123196729138387605726561533167824",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i128::check_float_to_int_unchecked",
    "hash": "113223270409152893518509518672844447374",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i16::check_float_to_int_unchecked",
    "hash": "1533528307502051054413214677737584025110",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i32::check_float_to_int_unchecked",
    "hash": "908175138871389675610914728856061593867",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i64::check_float_to_int_unchecked",
    "hash": "992539163780421552917856858738409016597",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::i8::check_float_to_int_unchecked",
    "hash": "128874261959128961458487827307593671030",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::isize::check_float_to_int_unchecked",
    "hash": "73317654769012584602737184228451032682",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u128::check_float_to_int_unchecked",
    "hash": "8982355473561687972977749639660351519",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u16::check_float_to_int_unchecked",
    "hash": "80945763592437188410998903105536209660",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u32::check_float_to_int_unchecked",
    "hash": "176678704181631845159017129684940753887",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u64::check_float_to_int_unchecked",
    "hash": "1660554092039560497817644312880993843729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::u8::check_float_to_int_unchecked",
    "hash": "173407710967318616544491279187982197438",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f16::usize::check_float_to_int_unchecked",
    "hash": "143092465587914219029334990995531049939",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i128::check_float_to_int_unchecked",
    "hash": "197966129096194832916869832491042583730",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i16::check_float_to_int_unchecked",
    "hash": "508229385435827294913033546054855595534",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i32::check_float_to_int_unchecked",
    "hash": "37651300251186217991254701539855198553",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i64::check_float_to_int_unchecked",
    "hash": "848962969435961826110040469863291105593",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::i8::check_float_to_int_unchecked",
    "hash": "84107363055613053617323532694246893163",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::isize::check_float_to_int_unchecked",
    "hash": "716756287195649674712950607459613883280",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u128::check_float_to_int_unchecked",
    "hash": "21614938335965082986577398341803308603",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u16::check_float_to_int_unchecked",
    "hash": "63190341987848641551201006341949638817",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u32::check_float_to_int_unchecked",
    "hash": "43733581848502671836923054706674290194",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u64::check_float_to_int_unchecked",
    "hash": "1575194128635146137710813345945610759434",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::u8::check_float_to_int_unchecked",
    "hash": "33047794355457212807824452327195256694",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f32::usize::check_float_to_int_unchecked",
    "hash": "1066725978560580403212699325481029466310",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i128::check_float_to_int_unchecked",
    "hash": "52800164587388004312900774711505584488",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i16::check_float_to_int_unchecked",
    "hash": "250817743473464570016813864515390769827",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i32::check_float_to_int_unchecked",
    "hash": "31267851871438388428778643376736349897",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i64::check_float_to_int_unchecked",
    "hash": "1842258398104253673976819690325217462",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::i8::check_float_to_int_unchecked",
    "hash": "195569492040264218118366152443981267465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::isize::check_float_to_int_unchecked",
    "hash": "1458177127419950318015846951753921067693",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u128::check_float_to_int_unchecked",
    "hash": "1653366236408853068512779978574107249902",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u16::check_float_to_int_unchecked",
    "hash": "134723722253154524317571006801252557484",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u32::check_float_to_int_unchecked",
    "hash": "1574548892426867394515069780828494204409",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u64::check_float_to_int_unchecked",
    "hash": "8205965162915302766429770821299503552",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::u8::check_float_to_int_unchecked",
    "hash": "15911070659092428833546264193462677442",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_f16_to_int_unchecked::f64::usize::check_float_to_int_unchecked",
    "hash": "56126109615173025358359401053540563819",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1490043866182962496410519377617261701654",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1512682335390822523014642370900440680723",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "162343736348910202711251756182939607173",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "498934875599059849215064535229905672207",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1230175783467441650416664453944918064886",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "119043962795656791464196909630089455180",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "55771745069446383713860969673896242637",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "362673543082350114058249871287273574",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "47291425301556270349130281876614088257",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "74198402964319593779906366392179126985",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "121201862018492622925553692880743600234",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "570808155606063690610135416035367228741",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1488550614197472947010961668827454701872",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1131320072586251872310366507877836984446",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "147474895419364418838821639901324469166",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "40933182261251908058847714659144246322",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1736526805704794613715690217310181480865",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "81162648901205168292681926934793947293",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "75590907570479439512211034953686099214",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1169670235095471102012481413356773053683",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "472841556116521576211134788705093001096",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "86506591546277109801645279171728060289",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "141454793632653526923237052083759885546",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "21377073432352612966593799836742803661",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1589634322986289073517983081041919152632",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "398754540355501628311155394966082466268",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1360015744302975930914874057415151563006",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "219656428812614107310288687203970926252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "25733842095408948751088853536088383087",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "578429420346231142111076636068614189613",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1547956518232791617510154168984224777328",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "18175024704030126205726393011844695707",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "46500306444434531761350363584074988832",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "108839428240866891815022283060526789095",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "42262211600411138312237534611202590759",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i16::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "112607549209541659663525596254715926330",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "485406038336117896413667497439523408054",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "888963594558818724910270850326404958058",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "119696622792080471082850173776731710365",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "19693888672553017088300337179715378222",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "16772443069473167515475623376166845912",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1657225562836929616611192568888842731742",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "638312626582093345515862677655217173926",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "80614408703716950889913553510588199083",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "757820973650599196540128125003692756",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "95997164055951007055693278551408992534",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "273664596971752870111368939687830759316",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "106710119814932918893408997543045080752",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "27161615814049912801891574747280690698",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "14653652578028555214424320920767057290",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "180593261405466491989760348824332503979",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "141293339745059681865029253686174006074",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i32::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "715761945400760126512503881120151638015",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "56950054690538114515732353854926664492",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1312283556018479176717178837770298617454",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "386239367533201641810445864591566575709",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "16077691907999592122862039188521300390",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "87084816880320826704022588961151415664",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1203596871309373881512133910584066882963",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1221926021441776628618069113492632436180",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "1216570912327242851013807538911022048186",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1520940693129361079314472818900298707676",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "2355603529608569954425382996111823114",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "28663723375152209408914002924383906854",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "1300028095099494290318026225211079199032",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "250247900460378244913099497684469090721",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "357423877049234779912256129042795868797",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "126295917721251027018258817400817542660",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "30221298440664091002960563890085629192",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "118467806813683370372036484893108841507",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1122900618928449435812974903469078309307",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i64::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "431268919147649301013858012694806257042",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int",
    "hash": "175307940015555953985993790377139708318",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "83345097625035219534347838630294255123",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "1597718318486495562613670449900625692304",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "161158628369971398898948561588636660564",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "131204490151348485211659171515828431690",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "167586532706395104117483962685243624460",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "7916910202128726861356524129554352236",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "894946326981746090811850535009445340339",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "933818914997611312912258651745860620928",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "170239640226640410871753424585452723983",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "543727334455172736213454165887443635410",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_i8::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "464090628720223014415101499123023492999",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int",
    "hash": "19642551586613339849401704670723223390",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i128::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1232869925960947437613800579720021787640",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "559595694841835204217195732557886747807",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "80203732525105406035103261766209444509",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "833194119004828464513209879229079362532",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "16610512543045241165338208177974196957",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "1083609127860275490915274908446269217173",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1457264786404812063718042400967177016865",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1024338635684535417016490751882421498948",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "153581946955902168832182010213279760023",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "1057345205011614705513645576897547489027",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1620084706421352421712293985049339500538",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "102120595559601976758798122861248895929",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "29368749893985347328232800126428708630",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "165795941704038067053321084450598217468",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "153342596568337994971139100707944919970",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int",
    "hash": "333359962162572510811235640827429422295",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "169028547478643569017484031907659189603",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "106636215882626272416026573887712315712",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "154338327045853177335648086076754095663",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int",
    "hash": "77870397977596202134067539732277330733",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u128::usize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "9509027525604296080209903004407275976",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "87566264951347737514349762607189797476",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "167598924396853225988396761353730018896",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1199666463273912054913008701216453015144",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1483346268659177732714466479441937994300",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1476991863083149305616338455251730703553",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "41853588558290600903162902241036526694",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u16::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1410523274991072050113779784597185199129",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "103006206644438477591074040206151178248",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "85286618211984236464104525721429462150",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "777636112701483465113263799731091482604",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "1084979671816994941716319878193509983556",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1386548982057341549817882612980017486370",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "693087034061786417816178188933037750778",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::isize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1740242130529642432313746291587974912361",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "83246912993289369301950426380567087235",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "4048094755414981235231147232182514006",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1333187944077718947814987049477264851661",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "32050316871225711287017658144941025165",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u32::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "99266346043159030043745218701199167785",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int",
    "hash": "131935426833436023775344026290998699744",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "604907185119081528110308038568251150097",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int",
    "hash": "385060873103151622311919681678287678985",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "430513659570213732913962840230205588641",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int",
    "hash": "16679135970534624321701248835646890314",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i64::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "43947403319395065312434894810472172554",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int",
    "hash": "1810886341480776076513935789166896607821",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::i8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "881365294932971870846241244470410253",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int",
    "hash": "710340039904079021914078284246835009508",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::isize::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "808582559662756704013811551797827490",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int",
    "hash": "27165177783075253561309193095823711737",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u16::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "833055250923171896916262061512343973040",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int",
    "hash": "82321664891154858876351670820214571739",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u32::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "124340509553500008403220733096944190266",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int",
    "hash": "19713131167829203926358754170473965541",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::u8::check_nonzero_int_try_from_nonzero_int_should_panic",
    "hash": "144452849947885860445251694266560503279",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/convert/num.rs",
    "func": "convert::num::verify::check_nonzero_int_try_from_u64::usize::check_nonzero_int_try_from_nonzero_int_infallible",
    "hash": "1117306059588556512710673693347938014067",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/default.rs",
    "func": "<() as default::Default>::default",
    "hash": "1641017948997700669811928738779300543931"
  },
  {
    "file": "core/src/default.rs",
    "func": "<ascii::ascii_char::AsciiChar as default::Default>::default",
    "hash": "1355385689591148813412755507269004038750"
  },
  {
    "file": "core/src/default.rs",
    "func": "<bool as default::Default>::default",
    "hash": "1259604175243604340917474789954571448793"
  },
  {
    "file": "core/src/default.rs",
    "func": "<char as default::Default>::default",
    "hash": "55026836298874973784068783167200100617"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f128 as default::Default>::default",
    "hash": "92439428603273541609873121037032569752"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f16 as default::Default>::default",
    "hash": "8415086234807879924178119119760582126"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f32 as default::Default>::default",
    "hash": "32063903642083389658479455455606300318"
  },
  {
    "file": "core/src/default.rs",
    "func": "<f64 as default::Default>::default",
    "hash": "107156129481394305114580491187157810997"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i128 as default::Default>::default",
    "hash": "145196636081620453911994545452783714128"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i16 as default::Default>::default",
    "hash": "148114350853145757599185174625260173753"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i32 as default::Default>::default",
    "hash": "113928791536637390395452445097543489282"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i64 as default::Default>::default",
    "hash": "174286527209052435998943855575772441704"
  },
  {
    "file": "core/src/default.rs",
    "func": "<i8 as default::Default>::default",
    "hash": "11865443656350994263681869277645455734"
  },
  {
    "file": "core/src/default.rs",
    "func": "<isize as default::Default>::default",
    "hash": "96266121735540093708064402022624475000"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u128 as default::Default>::default",
    "hash": "50271238545447465213651547102634888342"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u16 as default::Default>::default",
    "hash": "1472469912927882540412389015371339217570"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u32 as default::Default>::default",
    "hash": "7249932160501414073040925749971875131"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u64 as default::Default>::default",
    "hash": "1396567977910257078410393043945253075424"
  },
  {
    "file": "core/src/default.rs",
    "func": "<u8 as default::Default>::default",
    "hash": "132950719979418258437989319043339290155"
  },
  {
    "file": "core/src/default.rs",
    "func": "<usize as default::Default>::default",
    "hash": "450125020115412950616526907187850183756"
  },
  {
    "file": "core/src/error.rs",
    "func": "<cell::BorrowError as error::Error>::description",
    "hash": "510136764373985244912737915545543166200"
  },
  {
    "file": "core/src/error.rs",
    "func": "<cell::BorrowMutError as error::Error>::description",
    "hash": "1746692356846081627815750262527383486404"
  },
  {
    "file": "core/src/error.rs",
    "func": "<char::convert::CharTryFromError as error::Error>::description",
    "hash": "1581348495398491442615413626820064239012"
  },
  {
    "file": "core/src/error.rs",
    "func": "<fmt::Error as error::Error>::description",
    "hash": "922543298193393322811621057549836086666"
  },
  {
    "file": "core/src/escape.rs",
    "func": "<escape::AlwaysEscaped as clone::Clone>::clone",
    "hash": "139233075400840351973377705193650263286"
  },
  {
    "file": "core/src/escape.rs",
    "func": "<escape::MaybeEscaped as clone::Clone>::clone",
    "hash": "1210027043406670453912522412879094624561"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<&ffi::c_str::CStr as default::Default>::default",
    "hash": "125192325966601138301742834819538164943"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone",
    "hash": "31024586583452060645402774213747119513"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "10368727472499092065350054613666766240"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq",
    "hash": "38669453271809137693239104062023444811"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone",
    "hash": "171086068637151978713637145424930769794"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1353286978302046238012184070815106183528"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq",
    "hash": "560201708851812746310413836404261918381"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_as_ptr",
    "hash": "22956479711261471389323509591739943802",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_bytes",
    "hash": "43638323307148142392632580414383358404",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_count_bytes",
    "hash": "79541663329936286762354245336437515541",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_until_nul",
    "hash": "11693953814131848179234916016313569897",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul",
    "hash": "126956737778088596827806093608000153445",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_bytes_with_nul_unchecked",
    "hash": "113273720254993740947754516570823306465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_from_ptr_contract",
    "hash": "74371126860057043608875739274446757580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_is_empty",
    "hash": "239072979448637631412005641810452145846",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_strlen_contract",
    "hash": "264771923508448919716761425121020509175",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes",
    "hash": "964264723878394083610765619910817162151",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_bytes_with_nul",
    "hash": "177134079554627397079602396610491647003",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ffi/c_str.rs",
    "func": "ffi::c_str::verify::check_to_str",
    "hash": "44146571284831521194195440055978235674",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/fmt/builders.rs",
    "func": "<fmt::builders::PadAdapterState as default::Default>::default",
    "hash": "133438993749786418975081779688101424321"
  },
  {
    "file": "core/src/fmt/float.rs",
    "func": "<f16 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "8246268209796435722379529790473473487"
  },
  {
    "file": "core/src/fmt/float.rs",
    "func": "<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "1065186499448035638317749211649016980429"
  },
  {
    "file": "core/src/fmt/float.rs",
    "func": "<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential",
    "hash": "57982084108616540251335685452592835324"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as clone::Clone>::clone",
    "hash": "949933277357635034817033886019775465889"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "161736499032773948147655440716661616267"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Alignment as cmp::PartialEq>::eq",
    "hash": "693127976097806227713055903680315546456"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as clone::Clone>::clone",
    "hash": "68364546269700947173802582735230192731"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "173272974346276222372730838695784429780"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::DebugAsHex as cmp::PartialEq>::eq",
    "hash": "131485102347411508914924383098081768973"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as clone::Clone>::clone",
    "hash": "676398042415718002617733528281866554931"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "119878107762227995855645804836879172931"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::Ord>::cmp",
    "hash": "53919207465822889849145459886470100133"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialEq>::eq",
    "hash": "49398226526534286664003726266625563133"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as cmp::PartialOrd>::partial_cmp",
    "hash": "161070339876259781638699466210201531852"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Error as default::Default>::default",
    "hash": "49406943391607132334976086968857212332"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as clone::Clone>::clone",
    "hash": "12736863895554354768668374978350251457"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "3547905315239382217577811389249927554"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as cmp::PartialEq>::eq",
    "hash": "6923405384405869910854734067444227347"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::FormattingOptions as default::Default>::default",
    "hash": "1667634645016252840714389043874442041083"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as clone::Clone>::clone",
    "hash": "37132691559878721919148842765420895935"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1339384028133438946512738011090490761562"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<fmt::Sign as cmp::PartialEq>::eq",
    "hash": "1430514102210281342416366886706214717858"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "<str as fmt::Debug>::fmt::needs_escape",
    "hash": "68572826183919335837817089549156590860"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::align",
    "hash": "1749354356376422432110307264409629560948"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::alternate",
    "hash": "151153004383103749825501044609728229855"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::debug_as_hex",
    "hash": "62839711437577524708506997228648878501"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::fill",
    "hash": "1258466857914554525112404871973680747085"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_align",
    "hash": "44257266364374505814542935723980878695"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_alternate",
    "hash": "81096776979822556312447313106298354138"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_debug_as_hex",
    "hash": "1007635971142344987514295548255952187820"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_fill",
    "hash": "5716626970934786175859895309300189883"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_precision",
    "hash": "14903543624694794243644002717478558678"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign",
    "hash": "1700489761868660815915398471550652319959"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_sign_aware_zero_pad",
    "hash": "328628537468202230111672272339340595869"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::get_width",
    "hash": "181831848611102157229741539624360873752"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::new",
    "hash": "110497420964184345517185892364398759782"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::precision",
    "hash": "609345375596785062010930383674907450365"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign",
    "hash": "72916511211497231887588557565037944246"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::sign_aware_zero_pad",
    "hash": "9471248752469056744755692047549633450"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::FormattingOptions::width",
    "hash": "761309898377323598712764498040321780982"
  },
  {
    "file": "core/src/fmt/mod.rs",
    "func": "fmt::PostPadding::new",
    "hash": "967906768493376431218217451737112282259"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as clone::Clone>::clone",
    "hash": "21483039221435453972665708502990571503"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as cmp::PartialEq>::eq",
    "hash": "106123686530702497646305451323506545008"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Binary as fmt::num::GenericRadix>::digit",
    "hash": "56507031465115750281848834825106400566"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as clone::Clone>::clone",
    "hash": "12473791797282849918434588733115824248"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as cmp::PartialEq>::eq",
    "hash": "145651790758674632366076850516154107377"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::LowerHex as fmt::num::GenericRadix>::digit",
    "hash": "83119533503094526233034328672810137608"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as clone::Clone>::clone",
    "hash": "115749476005323578854142061694952054076"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as cmp::PartialEq>::eq",
    "hash": "962137508406470477412546080992257944152"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::Octal as fmt::num::GenericRadix>::digit",
    "hash": "1507301018089970743417533401450896085993"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as clone::Clone>::clone",
    "hash": "38260434461136939117512831059229037016"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as cmp::PartialEq>::eq",
    "hash": "1195557181325442015314298754361578561783"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<fmt::num::UpperHex as fmt::num::GenericRadix>::digit",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::from_u8",
    "hash": "179596825703162650194232437395748809699"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u128",
    "hash": "81867771660019911504058916502715546917"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u64",
    "hash": "107627581469253905712729309644671068549"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::to_u8",
    "hash": "226641302341512490815789068220105504858"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i128 as fmt::num::DisplayInt>::zero",
    "hash": "645794586237513478815755528874422050"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::from_u8",
    "hash": "110565826494781583854904644151803737681"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u128",
    "hash": "10785345000376337336338232877203709437"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u64",
    "hash": "88374301533913864388355245196272041"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::to_u8",
    "hash": "106824186235262607683051944883341823447"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i16 as fmt::num::DisplayInt>::zero",
    "hash": "1105990829238409800018116831198701396105"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::from_u8",
    "hash": "914710929246533066010895311625933901"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u128",
    "hash": "1398525015659678153115409819348784456463"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u64",
    "hash": "31528243534017794215180567259690564072"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::to_u8",
    "hash": "126722224763264864576320319484472641841"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i32 as fmt::num::DisplayInt>::zero",
    "hash": "343026365572676977116833158488183130496"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::from_u8",
    "hash": "27586364025022875207270923950417507484"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u128",
    "hash": "181937109562580967739439952403656342175"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u64",
    "hash": "117923392848755852194791179607868684477"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::to_u8",
    "hash": "177163130884121540566783802596098732418"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i64 as fmt::num::DisplayInt>::zero",
    "hash": "44044612377730889019400762292114830440"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::from_u8",
    "hash": "452921303328409852013190468833235411644"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u128",
    "hash": "1646917861537813182817945728969793511934"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u64",
    "hash": "1243559317127956501316845144423847274238"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::to_u8",
    "hash": "85362201666451096427729889227261122452"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<i8 as fmt::num::DisplayInt>::zero",
    "hash": "281892827860983328086004817885481012"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::from_u8",
    "hash": "1295516833133844440311764361894146954899"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u128",
    "hash": "1244023015733499492614557460730106105710"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u64",
    "hash": "695076486773919916613223730718600344379"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::to_u8",
    "hash": "1649503925171212229510782262239869037103"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<isize as fmt::num::DisplayInt>::zero",
    "hash": "248837952516486105816017100420724160339"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::from_u8",
    "hash": "40881527775503614816384520597310395851"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u128",
    "hash": "1408696294028931333117630574978558889437"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u64",
    "hash": "383265287871291476410782025746627027021"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::to_u8",
    "hash": "1505634471760507711616697373477210934147"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u128 as fmt::num::DisplayInt>::zero",
    "hash": "301317791835993052612029269238643682487"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::from_u8",
    "hash": "113300360601603711317753218038969623773"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u128",
    "hash": "157771273249643528313056680908438373581"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u64",
    "hash": "940107905766016216213717931819359015632"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::to_u8",
    "hash": "127422485754702836426048484396928248775"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u16 as fmt::num::DisplayInt>::zero",
    "hash": "177015337230654335527510608574068762225"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::from_u8",
    "hash": "85954746138896127215759194079554738885"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u128",
    "hash": "101025388209556114494472781984855765885"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u64",
    "hash": "317331044711612061515539882421995785548"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::to_u8",
    "hash": "147140364761497764245859604611097836389"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u32 as fmt::num::DisplayInt>::zero",
    "hash": "1596895408968513533410088921895846228595"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::from_u8",
    "hash": "699988741828812171816919635797946004028"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u128",
    "hash": "1721553306886979284418429066345995955093"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u64",
    "hash": "637356932435343758515739643664788759363"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::to_u8",
    "hash": "145257116896513946759488132603421108453"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u64 as fmt::num::DisplayInt>::zero",
    "hash": "1487349895209621112518352867299838993517"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::from_u8",
    "hash": "1614155235129332897612781648493212048372"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u128",
    "hash": "626482840313891867615868959404539109291"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u64",
    "hash": "91261535068212530131266343117418887953"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::to_u8",
    "hash": "810779466093592108212241617885987307171"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<u8 as fmt::num::DisplayInt>::zero",
    "hash": "1176244076798003428316453342148484779703"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::from_u8",
    "hash": "333503161900192217410133775895059271310"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u128",
    "hash": "133116115619548336575135044979747950586"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u64",
    "hash": "95529145233991005345708016070132930724"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::to_u8",
    "hash": "977977810725717435416157756407215105699"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "<usize as fmt::num::DisplayInt>::zero",
    "hash": "426926030610698055116572534213832017223"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl i128>::format_into",
    "hash": "1202029841538700425014280076603910737077"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::<impl u128>::format_into",
    "hash": "1580753438374565816517429480769451556452"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::div_rem_1e16",
    "hash": "40544811145827937368673091878647490410"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i16>::format_into",
    "hash": "84664032902510514498305343063568544544"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i32>::format_into",
    "hash": "395796975633808679817851936144869253467"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i64>::format_into",
    "hash": "744116434795676093314762574036034308614"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl i8>::format_into",
    "hash": "105872075047850117804128925109535425998"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl isize>::format_into",
    "hash": "247807979829745208316417436557431480206"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u16>::format_into",
    "hash": "21198564452475130939180097298338416735"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u32>::format_into",
    "hash": "715714450148073809114769933357174662461"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u64>::format_into",
    "hash": "1711968820349071024710344697999729142393"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl u8>::format_into",
    "hash": "12269154785705781735797923540419841121"
  },
  {
    "file": "core/src/fmt/num.rs",
    "func": "fmt::num::imp::<impl usize>::format_into",
    "hash": "98285231060649819356587903033138448733"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Count as clone::Clone>::clone",
    "hash": "16432163450257192910914417452888814256"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "<fmt::rt::Placeholder as clone::Clone>::clone",
    "hash": "13856458598373439783008439106923676377"
  },
  {
    "file": "core/src/fmt/rt.rs",
    "func": "fmt::rt::Argument::<'_>::from_usize",
    "hash": "82016910586940048445210612840299719945"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as clone::Clone>::clone",
    "hash": "729431727515516928316884739914147083396"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as default::Default>::default",
    "hash": "105765775612306812655307722311750347413"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds",
    "hash": "868064445043489607811164299378606193509"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds",
    "hash": "7714062618732410328420276121713546785"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as clone::Clone>::clone",
    "hash": "174968378739393928969492211993992442922"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as default::Default>::default",
    "hash": "1328937377141865787512552815631324994607"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds",
    "hash": "861318036454280593810717080558955929367"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds",
    "hash": "687194285185903284211231867142410108432"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as clone::Clone>::clone",
    "hash": "95620334819702389005339191457108390312"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as default::Default>::default",
    "hash": "100200264247319181653449235600797502525"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher as hash::Hasher>::finish",
    "hash": "1504636537368343389320588580699501062"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as clone::Clone>::clone",
    "hash": "151769330301846837917348614205501440430"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as default::Default>::default",
    "hash": "1119924145557919911117293526856015127881"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher13 as hash::Hasher>::finish",
    "hash": "1662604949317360090914651674921933548939"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as clone::Clone>::clone",
    "hash": "19695590951941112316974926909354830117"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::SipHasher24 as default::Default>::default",
    "hash": "102964840426276221454490142310328643729"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "<hash::sip::State as clone::Clone>::clone",
    "hash": "1637122904317349869211768753213355252930"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new",
    "hash": "916738469449689401810391852189637934540"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher13::new_with_keys",
    "hash": "7921703394754115758157091811316342943"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new",
    "hash": "1479624457191888706812898701716412606747"
  },
  {
    "file": "core/src/hash/sip.rs",
    "func": "hash::sip::SipHasher::new_with_keys",
    "hash": "1727461879075364124413803524743258423051"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::assert_unchecked",
    "hash": "11139495935450220752286966752445431093"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::cold_path",
    "hash": "1547242663687159300612407002770139592705"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::likely",
    "hash": "391088610639912630915813066956655080557"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::spin_loop",
    "hash": "954029970349922584815046598015006073521"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::unlikely",
    "hash": "15237400862765987367141944666788539735"
  },
  {
    "file": "core/src/hint.rs",
    "func": "hint::unreachable_unchecked",
    "hash": "25768524018977866517055903022448790318"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd<bool>>::bitand",
    "hash": "849273981837432312712670093030097953969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitAnd>::bitand",
    "hash": "594283616958126885418028526615885370368"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr<bool>>::bitor",
    "hash": "1434007832942205722416845053285226144620"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitOr>::bitor",
    "hash": "164583037593129541231505813078699826458"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor<bool>>::bitxor",
    "hash": "910031483020441519311725062479241913719"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::BitXor>::bitxor",
    "hash": "802915823227230750611729589397344753007"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&bool as ops::bit::Not>::not",
    "hash": "786768799071607289911366557785820470093"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add<f128>>::add",
    "hash": "150734088712702375873316635545406628462"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Add>::add",
    "hash": "48743589649587071547367390118819008306"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div<f128>>::div",
    "hash": "1088823091153420296110041836365998962059"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Div>::div",
    "hash": "158934684836384884286359048825989137787"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul<f128>>::mul",
    "hash": "516619550450084752012508724887826628307"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Mul>::mul",
    "hash": "159347321073536600826308659258936283931"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Neg>::neg",
    "hash": "525072739215935281816622901800902070563"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem<f128>>::rem",
    "hash": "1358034593409945495214892466821943208080"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Rem>::rem",
    "hash": "1339565486583600090111264181806206112800"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub<f128>>::sub",
    "hash": "1511536902173047312814262746032408235813"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f128 as ops::arith::Sub>::sub",
    "hash": "98874843599525853591600903120749350910"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add<f16>>::add",
    "hash": "838469733892056683612079955917471344682"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Add>::add",
    "hash": "1841474426916596303516537199155923499374"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div<f16>>::div",
    "hash": "27507641513712482257380681723651270203"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Div>::div",
    "hash": "167302104138072167811239066317718945253"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul<f16>>::mul",
    "hash": "694035861457922612713718772615843891453"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Mul>::mul",
    "hash": "174358870790380816899105811909901465499"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Neg>::neg",
    "hash": "506828155445131363911664751862701283268"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem<f16>>::rem",
    "hash": "932891962822683067410269100878794963362"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Rem>::rem",
    "hash": "18494595614172475454523820681509261439"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub<f16>>::sub",
    "hash": "179147437016630771632917149002936821531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f16 as ops::arith::Sub>::sub",
    "hash": "260218049820011534310667253547325483882"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add<f32>>::add",
    "hash": "8285679543605836359422237897389504688"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Add>::add",
    "hash": "7234096193461930449728465801108410703"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div<f32>>::div",
    "hash": "1315434297600162870016863025013568165770"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Div>::div",
    "hash": "615992101738913005110836641809334222738"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul<f32>>::mul",
    "hash": "172602620616419097517854347738848268288"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Mul>::mul",
    "hash": "183610656418418444354074059009761762391"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Neg>::neg",
    "hash": "441835757701704491816313159449345204539"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem<f32>>::rem",
    "hash": "1565718786735910039515051152663251304895"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Rem>::rem",
    "hash": "1601626462837879054113422015816694009128"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub<f32>>::sub",
    "hash": "511592181304474493313937079724343548021"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f32 as ops::arith::Sub>::sub",
    "hash": "39420620806515089722048462715552276382"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add<f64>>::add",
    "hash": "39642383623673637041145216883619324437"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Add>::add",
    "hash": "37776606450267466632008517383993980448"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div<f64>>::div",
    "hash": "937025046677218706013015432155840387763"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Div>::div",
    "hash": "65476514391635531028863235306500089502"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul<f64>>::mul",
    "hash": "42369206153753697402892062966026520567"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Mul>::mul",
    "hash": "221007817759338161812713024475755727629"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Neg>::neg",
    "hash": "145015077320239828422140730344035984655"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem<f64>>::rem",
    "hash": "5107391538730475167237192828999567373"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Rem>::rem",
    "hash": "76336931376943372387019105198505517651"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub<f64>>::sub",
    "hash": "1278529512623238382316309155264127439864"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&f64 as ops::arith::Sub>::sub",
    "hash": "45457534554158256144156171668717288164"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add<i128>>::add",
    "hash": "59356903034845263776953120631869882809"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Add>::add",
    "hash": "92038461815688045367135448920323103069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div<i128>>::div",
    "hash": "27640075778122670365589896289769812173"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Div>::div",
    "hash": "38761779875059844102401953047475890752"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul<i128>>::mul",
    "hash": "91728513591659191114792993965453815965"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Mul>::mul",
    "hash": "331519353197531434010123811214613839842"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Neg>::neg",
    "hash": "510999052925298150511306811051056248022"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem<i128>>::rem",
    "hash": "766980192972387154112294403260795923342"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Rem>::rem",
    "hash": "157196737606456147278607495945026602006"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub<i128>>::sub",
    "hash": "28477665511610845461258746857886437133"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::arith::Sub>::sub",
    "hash": "94494922863560539155045880584374379695"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd<i128>>::bitand",
    "hash": "790695885281306003112136359350662519786"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitAnd>::bitand",
    "hash": "211361566604117531716842588404836066671"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr<i128>>::bitor",
    "hash": "1412467486070804744313267789291189020960"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitOr>::bitor",
    "hash": "17827083030489379299469316044439761435"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor<i128>>::bitxor",
    "hash": "124187837336978456082347578611398909780"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::BitXor>::bitxor",
    "hash": "60293838043294817119160450214044828791"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Not>::not",
    "hash": "139330972927194757595168192137196922183"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "34787329793710572414943694914770495750"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "40135675681240293543733274479739255817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "222422725388806790610637519884725851141"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "659234454923441548813287150684313513633"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "82670709943692623145456181195648679661"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "158726996404378365838860509566804161513"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "834204684861733238116654243245232434426"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "13233364956199610408261879724106465209"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "1328204752411807168014949939821879779856"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "174624396098059026612483814730179481785"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "91058208176320398867990481316411205669"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i128>>::shl",
    "hash": "16461945617171153712674104277124903770"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i16>>::shl",
    "hash": "35256693696253677472451362655512878401"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i32>>::shl",
    "hash": "22348042632002382323735013957987362213"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i64>>::shl",
    "hash": "125974200542768838515829094960708991815"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<i8>>::shl",
    "hash": "1153532856143256497115488019223197385775"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<isize>>::shl",
    "hash": "147574433586033633971769619546272555769"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u128>>::shl",
    "hash": "544356717007082668815718715020238119634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u16>>::shl",
    "hash": "186723374553797155412667296716566984964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u32>>::shl",
    "hash": "137219950692415380882075624668402878235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u64>>::shl",
    "hash": "38467019447377148622429046527146191959"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<u8>>::shl",
    "hash": "1316536435451406929613470987013236451614"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl<usize>>::shl",
    "hash": "607444558570990350813492949618995897598"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shl>::shl",
    "hash": "44156055558880457739164447813631062678"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "340125557326033169417168845882781444398"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "499190443582897402414403937569329886074"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "46845567343325197638521052588720951720"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "135252914386512302677403753895481527220"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "1833046194474603095913585556379827306151"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "266668672960059848610841586639740633277"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "84701341120209677413430689739294374645"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "179461468226380643702431052415083542244"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "911559047852397483717824747619463608569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "856541120099618396516730870154005587709"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "124988052035116046659912596545409012051"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i128>>::shr",
    "hash": "145782083579923640402398320462416382444"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i16>>::shr",
    "hash": "1202245391540833042315579452019463865565"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i32>>::shr",
    "hash": "618876691638791070010949438702425594008"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i64>>::shr",
    "hash": "5670202159691073617875745050819124871"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<i8>>::shr",
    "hash": "146987204570741990244631255792450730921"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<isize>>::shr",
    "hash": "111623510969115443332478864925428698665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u128>>::shr",
    "hash": "289830712464922617413941138331828464355"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u16>>::shr",
    "hash": "322119901225963298710225317581369666608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u32>>::shr",
    "hash": "35344632796393595246536098937331089255"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u64>>::shr",
    "hash": "728491113820131132210138537328402324247"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<u8>>::shr",
    "hash": "76043348167499991246510533855000152525"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr<usize>>::shr",
    "hash": "99009831042480973821566081122354335643"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i128 as ops::bit::Shr>::shr",
    "hash": "153572721574056739569402292159531626764"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add<i16>>::add",
    "hash": "180625724882422631225361024365236649135"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Add>::add",
    "hash": "1495087919811998773216548948816473081972"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div<i16>>::div",
    "hash": "380028010344915156517184988105846077336"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Div>::div",
    "hash": "175136012285134480605134099357136295952"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul<i16>>::mul",
    "hash": "106535646641510603516919545801850977618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Mul>::mul",
    "hash": "1588757204600028479017814881317524678842"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Neg>::neg",
    "hash": "792108822461749048816915794579970146748"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem<i16>>::rem",
    "hash": "122446722524785246215981258357033755697"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Rem>::rem",
    "hash": "1753071987461696638616934162911162172646"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub<i16>>::sub",
    "hash": "1399748410117604722114646693496909543264"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::arith::Sub>::sub",
    "hash": "134980826387476516903334817393668421177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd<i16>>::bitand",
    "hash": "1388557260051326563018143721142282218171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitAnd>::bitand",
    "hash": "763835290149120213611701725259663373086"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr<i16>>::bitor",
    "hash": "104941489421180304169905605900677423812"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitOr>::bitor",
    "hash": "166285278848201870501139053973020345813"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor<i16>>::bitxor",
    "hash": "140817350032446418221042934663338719702"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::BitXor>::bitxor",
    "hash": "40580075613794029711508931036573606408"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Not>::not",
    "hash": "84492137878833802858184130519437725307"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "115422840645117167722704276612047811985"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "95564882912847643695343278035216594628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1407761721439875445914541302494027617861"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "126675952124944187098714418856918394991"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "83291587436232611375845631764163287372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "405864220467869977812841606100956913243"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "110097492899298735071926897406851524992"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "109199209966412202917669206455341731885"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "1065576582490732341918195363946683138594"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "763121882740517363912194546598452899925"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "61689403782834303547717515795187161764"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i128>>::shl",
    "hash": "104200139029542607621997689695942855634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i16>>::shl",
    "hash": "5736300211778645686377767275687702287"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i32>>::shl",
    "hash": "1198478980409911529714374780428393489952"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i64>>::shl",
    "hash": "14990740438481642153632385423875208391"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<i8>>::shl",
    "hash": "96193744876175338523834851098138498935"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<isize>>::shl",
    "hash": "57776562451807222011318797937480189799"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u128>>::shl",
    "hash": "658536840445874869217288338463143419630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u16>>::shl",
    "hash": "101430477792987038824443702740757691901"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u32>>::shl",
    "hash": "1700483623808249447112872838182722827018"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u64>>::shl",
    "hash": "28709857311683464024771918921219274356"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<u8>>::shl",
    "hash": "161785171618958726478932063787405389652"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl<usize>>::shl",
    "hash": "150179699108470982383145902526402445112"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shl>::shl",
    "hash": "686758973519583257132706096521230401"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "674035630318135171817960235394671282032"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "153885480913953446774993914840712216586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "127634846268108927127520144691827346460"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "10359221089335916640876208574329493072"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "6894909801838869715392346777404228967"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "114007495542242841877859643231898798348"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "722511716713205369416266616607951383344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1101587367480302119815053073951140085045"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "39816062890286525823151777221529824855"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "1815322857006304416811963677736494038548"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "83898001026585934676424821346479212490"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i128>>::shr",
    "hash": "1521259803401701614913896110874162127900"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i16>>::shr",
    "hash": "1648489013573719427612868993032770694605"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i32>>::shr",
    "hash": "534925797322739354915690410213643032621"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i64>>::shr",
    "hash": "109913863093049247554565660772517522270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<i8>>::shr",
    "hash": "75294723173078662729672188243109929990"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<isize>>::shr",
    "hash": "925379950692908398111860463916877579273"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u128>>::shr",
    "hash": "10353039224994532803679365624375538603"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u16>>::shr",
    "hash": "806788500473087455313952061467345183550"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u32>>::shr",
    "hash": "669668499965854989610854633992902042900"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u64>>::shr",
    "hash": "1416468711805129021213946685900564228211"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<u8>>::shr",
    "hash": "1120951106502119417197856551571965844"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr<usize>>::shr",
    "hash": "65843136678916396053107993639540471531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i16 as ops::bit::Shr>::shr",
    "hash": "161330129741765503129429327314168381952"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add<i32>>::add",
    "hash": "136394363169608446513607841976950766958"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Add>::add",
    "hash": "16261489240121584258173534418364782582"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div<i32>>::div",
    "hash": "206368803239537692913072543589924370459"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Div>::div",
    "hash": "45748503908924382917237749225688725684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul<i32>>::mul",
    "hash": "141740863986225727717401093382344611524"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Mul>::mul",
    "hash": "79730148720441121077859488497235755591"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Neg>::neg",
    "hash": "747266068083169770616888135348319769711"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem<i32>>::rem",
    "hash": "23937727806146899416198902653438685012"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Rem>::rem",
    "hash": "681226895720176959413210737998005926476"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub<i32>>::sub",
    "hash": "1788361742681766730314414539122951783496"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::arith::Sub>::sub",
    "hash": "138249512236134656704531573561198261930"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd<i32>>::bitand",
    "hash": "1420966109407111877017162675530981144479"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitAnd>::bitand",
    "hash": "4196337913168129202648845617398299819"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr<i32>>::bitor",
    "hash": "77606104928170954229880878718536351263"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitOr>::bitor",
    "hash": "204333323147609099217355643723197902038"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor<i32>>::bitxor",
    "hash": "1205607838308721642017042526748227857279"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::BitXor>::bitxor",
    "hash": "498283934867418573316998882630085713312"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Not>::not",
    "hash": "16461903476409690338582539214838886832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "143281976153010079001631945055396014872"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "703539794426156946611023120847470813664"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "24551614338995887456070021480301213410"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "756966799501523409715943526088594262531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "111474991246544257594565824246339000372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "875760806796777072312263920858597993679"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "73718541462616054110178861112397957683"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "135145030939474692972364232811319236479"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "16285012730222921994663760277870679087"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "25870167863659688541883874093596516621"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "1093605563168552251112452846864585773143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i128>>::shl",
    "hash": "1337270167945277734510599063161869646035"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i16>>::shl",
    "hash": "566294954201424863815799199436291318336"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i32>>::shl",
    "hash": "154556419607768458877565882069976175043"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i64>>::shl",
    "hash": "182602748091585819409225259613122120868"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<i8>>::shl",
    "hash": "172914720423229974026062330578799657194"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<isize>>::shl",
    "hash": "16408075916368148281534250332425094932"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u128>>::shl",
    "hash": "1025606111320915503513071258235639559509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u16>>::shl",
    "hash": "130777470291654379364084960403320595706"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u32>>::shl",
    "hash": "32367446402957737713903437762421794374"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u64>>::shl",
    "hash": "36926978110087369791166722133243882167"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<u8>>::shl",
    "hash": "90853889689437614013641979735672576095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl<usize>>::shl",
    "hash": "163719188837822646916429950518077782249"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shl>::shl",
    "hash": "43199306351601195703991254745355853944"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "115381141326929812127977398299472962069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "16409992452599224659392375425552094777"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "530665309791922574014010405352629958884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "118240004854362424079960472024499230109"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "134080289299012974392244658884362073796"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "1829503111658927619915013095217928719086"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "172357351773644875313367740319938073409"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "144404874982794221549481085332039386142"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "853497994815329295917329151548586326260"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "106860607268556807446458723375681195632"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "1198875761080809491812071919096231636265"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i128>>::shr",
    "hash": "174954566423936585081995468654804412981"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i16>>::shr",
    "hash": "1717986264131829674414635980136453931946"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i32>>::shr",
    "hash": "109588636601105518609304207994517156805"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i64>>::shr",
    "hash": "24166718600701733422006479264382818647"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<i8>>::shr",
    "hash": "640363939790580031413401029269568213359"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<isize>>::shr",
    "hash": "119662508175815697316009283060083612038"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u128>>::shr",
    "hash": "1799782617493848186014902615103311687184"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u16>>::shr",
    "hash": "1142102757901718967111584534272595500454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u32>>::shr",
    "hash": "518437046688845386110575920202149119344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u64>>::shr",
    "hash": "5893956164775345424827236812793518779"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<u8>>::shr",
    "hash": "77158969848249748789401517888013167860"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr<usize>>::shr",
    "hash": "30150131581903391092834024606644759233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i32 as ops::bit::Shr>::shr",
    "hash": "441910921312385647012917424684126492499"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add<i64>>::add",
    "hash": "569716933377551497410356190760007137878"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Add>::add",
    "hash": "9182249811911754569478474279677410713"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div<i64>>::div",
    "hash": "70623903494590808133537913282029023559"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Div>::div",
    "hash": "1166488837260680044313223350277311823898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul<i64>>::mul",
    "hash": "7518726482184116073595231459843991967"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Mul>::mul",
    "hash": "95875250767409644073751626285920060592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Neg>::neg",
    "hash": "1379762105626473656315595715421496099926"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem<i64>>::rem",
    "hash": "93519071558378856252303180314178294063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Rem>::rem",
    "hash": "878732588216254653916229977613851836282"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub<i64>>::sub",
    "hash": "144455337927013320769765169979921844016"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::arith::Sub>::sub",
    "hash": "116699338628859660106413576638626835859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd<i64>>::bitand",
    "hash": "941474227417978639210133614759525371036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitAnd>::bitand",
    "hash": "62474340271063386573815783224464984198"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr<i64>>::bitor",
    "hash": "886905955001556036117021599713103005587"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitOr>::bitor",
    "hash": "1439619911401816232312944638218814758413"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor<i64>>::bitxor",
    "hash": "66344967951572380468921237366704444204"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::BitXor>::bitxor",
    "hash": "102339184548146765587432146718475187263"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Not>::not",
    "hash": "18218331224514545584614990878236270607"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "1060125169110096750815289134847316064973"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "99071078756579199815240244869261830005"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "82452148153672411392678966969912889150"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "127230024919257612332050108412517098492"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "48864661863477547416791881564462892491"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "125347355241747846683919322421819956368"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "1310559773102204442716234086576827118263"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "1073317777345282957510342506745713790490"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "75573696989180253010684174016432022757"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "663861520665060813115733323236062228821"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "69070458038205784689827718305545767915"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i128>>::shl",
    "hash": "854150891931726784212591987425150294650"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i16>>::shl",
    "hash": "233214692425751686414117708289507460898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i32>>::shl",
    "hash": "69757401595763887601429755688899822776"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i64>>::shl",
    "hash": "1259945983124123633910160230589842025532"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<i8>>::shl",
    "hash": "653012573796102237613013880806971011628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<isize>>::shl",
    "hash": "958633019165192753410496617057226460175"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u128>>::shl",
    "hash": "44560705117146686985700103963515251660"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u16>>::shl",
    "hash": "82321978592664473046467481987131948098"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u32>>::shl",
    "hash": "166690246670554513095028021763408980869"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u64>>::shl",
    "hash": "1273465568867526200115131735921584141364"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<u8>>::shl",
    "hash": "13974000625847083101541609840235156637"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl<usize>>::shl",
    "hash": "24504619837815911642693593024023966214"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shl>::shl",
    "hash": "178725947796433309882215141344267772502"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "148532720271184657419099466188259842495"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "1809142296671159193412427988041721826446"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "135546684257563355925922245143847090365"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "1181462812435523424112730296583251522143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "146848469436630635747247081718153643306"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "23083838144312391639662899645641291652"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "32020104088777865134477017900851131426"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "1312431306221350021716942803039579930296"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "172022903812196821292214279969316775754"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "115526746348690364515344855924073642939"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "172839854557263220762839340211301507291"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i128>>::shr",
    "hash": "1683695118325443949310176961168813562231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i16>>::shr",
    "hash": "1454086287735205467613146096198873527718"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i32>>::shr",
    "hash": "1127630767158560447310077069964570097026"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i64>>::shr",
    "hash": "81177180691559284536167044948589358252"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<i8>>::shr",
    "hash": "850001768409059552516230246817225026009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<isize>>::shr",
    "hash": "1675215487061111334248499679157772196"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1271335842464553524014685748906193224356"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u16>>::shr",
    "hash": "668054657492381907814974967777492606228"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u32>>::shr",
    "hash": "1751542696513625310313787409009599441455"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u64>>::shr",
    "hash": "1411909658284510149769846292000649461"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<u8>>::shr",
    "hash": "1229871027071405355515263694836076690137"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr<usize>>::shr",
    "hash": "1399301232781119873314305924149454408428"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i64 as ops::bit::Shr>::shr",
    "hash": "113154554050818607548153221501633667833"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add<i8>>::add",
    "hash": "1264102965814257930431864421878080896"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Add>::add",
    "hash": "13419864085841191446836654426387630291"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div<i8>>::div",
    "hash": "130769716440817994497768153941503702294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Div>::div",
    "hash": "69572650421885012771597474073670249146"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul<i8>>::mul",
    "hash": "21430650708440308545191564106484065036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Mul>::mul",
    "hash": "82095950668766200348879496361331729184"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Neg>::neg",
    "hash": "180678055079774847161704787670641589430"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem<i8>>::rem",
    "hash": "1014189411073880324914167605209060761007"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Rem>::rem",
    "hash": "285156925985861660514915185175961958005"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub<i8>>::sub",
    "hash": "40309242310655762315543031636769497117"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::arith::Sub>::sub",
    "hash": "160053565633642965919608349235889048233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd<i8>>::bitand",
    "hash": "171957340431479634341802923351326822211"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitAnd>::bitand",
    "hash": "159768839005827678104596441582096987357"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr<i8>>::bitor",
    "hash": "152710829955858797242896636735620845585"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitOr>::bitor",
    "hash": "775115989743786683115768014410993750538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor<i8>>::bitxor",
    "hash": "870878235150738097117580495452821880739"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::BitXor>::bitxor",
    "hash": "14700225918531495820727285332082151618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Not>::not",
    "hash": "68320858804198841287990899924367949737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "94697065938048961807267344922746063071"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "396937621727845767512842511046204069168"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "5255667069156509394375211834576304001"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "80033893288645100512443891690712818327"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "22091797325567968873189330526653897975"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "1799734207235454576717460585013286618593"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "47296369494750060464121650331852191946"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "49658232848483223118273564688082588571"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "141742873067717789633569473671012233427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "818736945271837422415391411791962369772"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "164643364829694808414959834047785009700"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i128>>::shl",
    "hash": "1004049889558422540617024176150911964501"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i16>>::shl",
    "hash": "130050495428401734315910047614343436836"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i32>>::shl",
    "hash": "19141369675351911306092356546785702750"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i64>>::shl",
    "hash": "81936708657403969561042133599911909011"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<i8>>::shl",
    "hash": "1233024606855064563310737219735746353276"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<isize>>::shl",
    "hash": "83809828649655019316195102703997575136"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u128>>::shl",
    "hash": "695374948700855342112213181228822510558"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u16>>::shl",
    "hash": "245636181380418489210792609711784662383"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u32>>::shl",
    "hash": "171707254476142555782420938705669915579"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u64>>::shl",
    "hash": "131475882957642460542986362053063125875"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<u8>>::shl",
    "hash": "1507727661591801080016261312332212847990"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl<usize>>::shl",
    "hash": "1305147525600237596510911984054208980047"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shl>::shl",
    "hash": "655383470916631294918266337848126643548"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "156683222410102008358451247531582463"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "128863614465341170386520195666193805509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "138634457434694672814326196285612912996"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "72318216995344962633480443032477845439"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "95292614729590711905368346638898440314"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "18002709974746666813688760930672605305"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "160071347626688326682524521228914099376"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "119502855418943431426007951595230932862"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "27152126021029588322639867875489656103"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "1724179668426277382315940546982449807616"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "600229398564394420714134201718120419273"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i128>>::shr",
    "hash": "122544883778263875216179986716008137714"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i16>>::shr",
    "hash": "315249276692336577618061605646804950757"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i32>>::shr",
    "hash": "33972102547334724066842679966972359634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i64>>::shr",
    "hash": "94594897425650508719495348455238299810"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<i8>>::shr",
    "hash": "96707445697632588369275468281299327925"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<isize>>::shr",
    "hash": "46300282968666636354483480478387496036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u128>>::shr",
    "hash": "28942638782639343810647221417197792057"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u16>>::shr",
    "hash": "629867181726033917313543853111145719534"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u32>>::shr",
    "hash": "108742137138799441288334704146402859612"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u64>>::shr",
    "hash": "1072949940389569736113037539403586484606"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<u8>>::shr",
    "hash": "107528284066905475163935239212965004036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr<usize>>::shr",
    "hash": "67807241529705756675012375038223605687"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&i8 as ops::bit::Shr>::shr",
    "hash": "277176184242569821101869992895797358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add<isize>>::add",
    "hash": "754355199787310393414118395326098467238"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Add>::add",
    "hash": "173441206000114605673542451080832279896"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div<isize>>::div",
    "hash": "949943255865029451016165596128448379598"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Div>::div",
    "hash": "11075698450225143915769244667126975397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul<isize>>::mul",
    "hash": "158951274132919467216643316253123578483"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Mul>::mul",
    "hash": "1073847020685486157317066206994119652603"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Neg>::neg",
    "hash": "1493450488276188135714692974495959967218"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem<isize>>::rem",
    "hash": "693075145254779558814645466611591146985"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Rem>::rem",
    "hash": "114811335948177227225417540001932649555"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub<isize>>::sub",
    "hash": "95362978430721758182027279367238679782"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::arith::Sub>::sub",
    "hash": "32002058439088534245639204035536694299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd<isize>>::bitand",
    "hash": "1009251052930649495914457775096853537333"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitAnd>::bitand",
    "hash": "1060580525253110813913579500298993558960"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr<isize>>::bitor",
    "hash": "315168891975756136813673125377262580229"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitOr>::bitor",
    "hash": "1174393000257344078712260881529416795401"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor<isize>>::bitxor",
    "hash": "11025058299042625418125157054166175722"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::BitXor>::bitxor",
    "hash": "88815823156280792051133511727553871210"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Not>::not",
    "hash": "1044874008866175470510214167617046846913"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i128>>::shl",
    "hash": "35409636148082998243278736436246658751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i16>>::shl",
    "hash": "1209912696392752889316128583754855297733"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i32>>::shl",
    "hash": "1439549193571207852017167820899088523939"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i64>>::shl",
    "hash": "96992169966932707911731661645390680128"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&i8>>::shl",
    "hash": "181085588386287600752938931667196097251"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u128>>::shl",
    "hash": "35977692854488599816485743656895810360"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u16>>::shl",
    "hash": "827886212044275840913733086451559207635"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u32>>::shl",
    "hash": "13881577741279192084127157207606603240"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u64>>::shl",
    "hash": "1560602076040655765116678406943992477289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&u8>>::shl",
    "hash": "90860321343609582144775711749707866594"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<&usize>>::shl",
    "hash": "460946717547613661918179071727541874780"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i128>>::shl",
    "hash": "365885222377759885111784603512344538544"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i16>>::shl",
    "hash": "58002997322375621848788266142302446028"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i32>>::shl",
    "hash": "1460493698667703190412789566123080663300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i64>>::shl",
    "hash": "55270702544518605711323626938655480656"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<i8>>::shl",
    "hash": "1277442264945232655610814681807971154816"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<isize>>::shl",
    "hash": "633677752376807670712691592562637261283"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u128>>::shl",
    "hash": "520571363166209446314149238204244985178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u16>>::shl",
    "hash": "122676155438772136962755350195183687824"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u32>>::shl",
    "hash": "439896474470264457614399602675696759528"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u64>>::shl",
    "hash": "1277423417960814438814866186675356068601"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<u8>>::shl",
    "hash": "520202181323425448117976520906121749583"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl<usize>>::shl",
    "hash": "162503633296452453413307769291634998663"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shl>::shl",
    "hash": "365342103236545054512620999263437534228"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i128>>::shr",
    "hash": "108289328314231913325561981425985143507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i16>>::shr",
    "hash": "127912119272683159178048023295982198867"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i32>>::shr",
    "hash": "32536270038799893183459338271133641150"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i64>>::shr",
    "hash": "1190179158831573022015698070420557492900"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&i8>>::shr",
    "hash": "144986380233347879085288564117342856177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u128>>::shr",
    "hash": "22364332256469676765615344965954708139"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u16>>::shr",
    "hash": "1499448437446204102610712646724683930277"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u32>>::shr",
    "hash": "432532836187731364710687340103917676557"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u64>>::shr",
    "hash": "1549049777029914312315242492923620941249"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&u8>>::shr",
    "hash": "1274140737847281223818201875555812290981"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<&usize>>::shr",
    "hash": "162161877667168207235588024563026109262"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i128>>::shr",
    "hash": "65933691177151932126035479382076163431"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i16>>::shr",
    "hash": "144336909619233070275067163241876262063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i32>>::shr",
    "hash": "8289641688488109924960981276721233243"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i64>>::shr",
    "hash": "1388697718322892874815284390632778844104"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<i8>>::shr",
    "hash": "27353426187713801597465553612191795894"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<isize>>::shr",
    "hash": "588463157392386804316140511210056639575"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u128>>::shr",
    "hash": "57667518131171221747216067539957818423"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u16>>::shr",
    "hash": "142206195917307363176862330183111398294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u32>>::shr",
    "hash": "922683395716428956110631548304742658457"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u64>>::shr",
    "hash": "37496124711913892133857414293324917050"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<u8>>::shr",
    "hash": "437130113537356425913940809323347949174"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr<usize>>::shr",
    "hash": "779138679626515231615654149810118169687"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&isize as ops::bit::Shr>::shr",
    "hash": "14668395746254847347418664398389054474"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "174029755825658677769635420453613990688"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "127710355699837713314379134897621319628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "18015345083669396910899068540949791889"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "1210002567991476418110796521782401352158"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "1540014520562296672111596193865238244518"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "95811824975919538403499048281837716878"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add",
    "hash": "1158845125550767015514055094965604609653"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "1393106771282626870917536205209561271624"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div",
    "hash": "1045949965106546659112019033932116737539"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "1074213498135683425614320287509241094682"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul",
    "hash": "138464257312141537651618547303982948810"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "638264668249202386014727919005607607704"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "127079328641622824192135128662173261103"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem",
    "hash": "184060422444735846114730008192497135099"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "138152072260139934006972663743767937520"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub",
    "hash": "20252972355882281722219035275925795677"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "150634887102300991488638470789681785100"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand",
    "hash": "743817570505018064917754062071476719761"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1469252096220132603315700938837886857289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor",
    "hash": "833603437100387325511667648571269450410"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "1495860999771887952212669527762999932617"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor",
    "hash": "1244580921108141203514458008663873572156"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "161735520392230014012853962846237549662"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "1138793893856888080813310045438449389980"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add",
    "hash": "97817511816360646036606670862063911692"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "1488582355832216354815236994713718583747"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div",
    "hash": "30860686228223218384759613055623839816"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "432862494402111574814518712004572103892"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul",
    "hash": "322169989486143614318373111177265481778"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "846651309573788147015529142940204556843"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "987843256435730601417457007420165010826"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem",
    "hash": "307533087573525544816981122853337570381"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "87045203176099132317721668335522813123"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub",
    "hash": "220162918139656570611273142686346126034"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "193483095111581881813653731061501380967"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand",
    "hash": "1704119510443787595211736660302393898598"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "1359667386659090532515313153756701726256"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor",
    "hash": "96304211510947866753256830749428873050"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "315689218976412907811701026357497170270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor",
    "hash": "78460245885079929767170972500288740592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1613538615129349366610469412725540841187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "1722374143492610168113123128168521098640"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add",
    "hash": "976460273616971167515393569013736176580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "749871578452741426911069627321359955339"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div",
    "hash": "1582821300767877434414581879323874594245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "1755448797021152290510032982525412071242"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul",
    "hash": "49821908939566054408465774097560806420"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "718103844252678322217592281064779799896"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "154769755024721149807284369431357340105"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem",
    "hash": "1326620398104638059613513571864780298674"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "1687287512286713306513346459209492954509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub",
    "hash": "1070959856525725154617118569258354255004"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "1165188878936125254018080095793499840609"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand",
    "hash": "325083783018171887915365027891670292984"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "62827789273530497332083445417004178178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor",
    "hash": "75136821084194359911455961888980618618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "468086075465196008314610260068252170797"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor",
    "hash": "1677888295387281006314800025325293359643"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "555620487658802625912993631735185832520"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "1226068062173018219516144286469867884464"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add",
    "hash": "681362559168303781012010023010464743022"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "1279191882859851317210860155991278534158"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div",
    "hash": "174086740495689121818183240792333690269"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "1637536939646559918910972805546032081485"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul",
    "hash": "31968312831348661725902479406251733294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "59860934988635256111348185071645259732"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "36162256560041153873393963351108809227"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem",
    "hash": "1713098535519127272016014086034400934736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "157557537763138317736903065996883852023"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub",
    "hash": "66134536548736369173526218742702959586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "1279399263739633587611357672877769812205"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand",
    "hash": "1260478278609605128911386348244917107283"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "162220014694754634829048840353583484834"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor",
    "hash": "39527434356929611947789047609586808674"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "93183038455292251678876465593692305072"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor",
    "hash": "642223176114634892015915296325277528405"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "522588321735795451310924073747791304353"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "18033136596679064045691048242891949628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add",
    "hash": "174748335697579424402750721375139651779"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "989212827518479824816685807132084552396"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div",
    "hash": "1218841677501414368318066876288550200909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "121428486641877164928611831305581956962"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul",
    "hash": "13103249711339456621375098630146311381"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "2541528499014803766611567458249165496"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "495486789285215365113016112996468036348"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem",
    "hash": "529846251703999055114568150053761488942"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "82977807499468511519323206755847606830"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub",
    "hash": "68019389443680709176390244370288981145"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "293358342871953032412686028826616944928"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand",
    "hash": "1757601863338570730710013516377406465436"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "143894829288023748173365983397398238549"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor",
    "hash": "39578860462161546745624622761485092484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "25223298767050470819352130549119723500"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor",
    "hash": "1318330864883072053516977121596691699242"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "1373949809050563794913315536593195151996"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "1165369512060408441814389926095991849504"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add",
    "hash": "131563167368140147615373657951822576684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "41399891843559226829901589161024312906"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div",
    "hash": "1340857038852367766110042990640825296558"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "45531217380293599396253495384710384418"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul",
    "hash": "33060336575548937249924225456186742356"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "67162708202746593795682917270824141882"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "10938711263695140736694499384406242718"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem",
    "hash": "65416776338957802762563749424542437817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "15954876510298297600479876575571891945"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub",
    "hash": "102887974292457486216347386717498629537"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "78866072664218318287152254025512286922"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand",
    "hash": "1679896193173700402812313837187769480511"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "177097440786364179953894574631612314003"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor",
    "hash": "840744543427581072713032972843835302901"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "22425101262770198913386234533486113087"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor",
    "hash": "402001142229256641215529214480118429179"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "139381715236307116777322753979131913499"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "67439503961460619296064755543925010783"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add",
    "hash": "2848815236944044926424374013334318154"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "139760667675151503237483786739477379254"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div",
    "hash": "169102686593550401535734416539619473485"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "1622133432205783598217423300176695177302"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul",
    "hash": "177760963122722690633589524442963952184"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "143467231860258040267735660404462526840"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem",
    "hash": "12647455699754003912550429594409678343"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "963295237105776923314865316153243964915"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub",
    "hash": "89662353979847678108857220888726020759"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "86241450068712473445092108530026441304"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand",
    "hash": "59011941251332462114783164229162323710"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "79418519637022288241479303996833820818"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor",
    "hash": "127652437657762643503797874542152068245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "5229696222183416384755012912612902082"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor",
    "hash": "13927711930200123736891758434491676604"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "88425121286659377018182621468085394901"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "149452564066469254618660015788025821227"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add",
    "hash": "1239973439932392248416890017334885409075"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "1592342066014493658917035244741958494187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div",
    "hash": "105836329825769667087979291583547430138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "564948630980503058616033444856483750133"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul",
    "hash": "763730509947204735416711008776514830807"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "624187147566901348510445912343156949801"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem",
    "hash": "2974754445797012813731406444902319277"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "1272051280323304734618282352441060603817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub",
    "hash": "890022360144795220210258606750766721331"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "129871599578941217353826301255928360534"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand",
    "hash": "27161273466640965814128681348210286975"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "38437803366332278512596315111718485086"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor",
    "hash": "1380437877632608975412206565936149814580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "1255317535845119605113455582171775276246"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor",
    "hash": "425986031186534948010510594322157077443"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "16527383449524916014052696936141256859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "801797255213422301310623706297627291609"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add",
    "hash": "142007789609330980216910449562781785563"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "124619148154107605226562333002754030951"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div",
    "hash": "1127240384362638766611867459876115049178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "1129340893630332525712558453943501585012"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul",
    "hash": "280561725692332217711524112210314737063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "63207328064156371944684415219536449812"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem",
    "hash": "68054624085105509136379438860089367973"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "585973732643999653212896528663461369460"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub",
    "hash": "172212759496365497725274219793373856774"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "182714707568337225693302112769676449637"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand",
    "hash": "80671817189935964534452618434826279838"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "54367391133262266701542683220760124680"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor",
    "hash": "689700119546985024915908994122317127397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "954729288882396996616825624942204828344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor",
    "hash": "78306083728160015213103555767521412095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1837069940851279300816386608956134684484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "1391128489122391661416216163823143143829"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add",
    "hash": "1783300201431615083214141714382935345978"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "1614357483700067733913833870069043492924"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div",
    "hash": "26664978255503070952039087559973864993"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "177879508963891731092894665535450197386"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul",
    "hash": "739119207162741089512465566864154534073"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "172116667518600064104848439835702011840"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem",
    "hash": "1108496386633595968712262822330568843349"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "153938721438704638412255107978601960573"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub",
    "hash": "18910616488055180986332545216713029668"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "656422945215311411213733227242543432634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand",
    "hash": "30206867410370637818417941777659412263"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "164899074875525246449069968052916202634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor",
    "hash": "117119944628166820498330237271771376888"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "1642428159598436133110277474878419965536"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor",
    "hash": "1404935227741858005011160720450470217233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "141561825074614762326595145067313901830"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "836841897746079015710103861730001531489"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add",
    "hash": "171838591376673549607224988742305509400"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "116634844403697959914927585560427427696"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div",
    "hash": "151798638551076667438810371414564768046"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "1641066424995590426913744897329137160069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul",
    "hash": "411516532125660738116891392180090299252"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "830484039394365867818055876010774933618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem",
    "hash": "184198295165161628551711584598048667763"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "172043813735853862861092808582292106378"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub",
    "hash": "69006914213540856929529781321906213733"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "785735884034470089310243999162137511314"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand",
    "hash": "1357371733006025202113508869803478801472"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "3252979278461946938942892023927266202"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor",
    "hash": "10617575684638850319237371558672261185"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "784000099855798615216552839874596634719"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor",
    "hash": "785084477621469576111512069855805984235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "624089711620147391116998720369957821038"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "33761640518161483387227006944348079334"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add",
    "hash": "799210294990057435951594693744662165"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "442589556014291768918275958765879361026"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div",
    "hash": "779396811494946786016765072765045621870"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "131967031916141640712798501099164077086"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul",
    "hash": "1116424262155565703717209661996309196969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "868448277879268979815378488867458518795"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem",
    "hash": "153383862286642687618353670572779041133"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "828763824592709788915602700116397700672"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub",
    "hash": "87640160361805245453163299295072249186"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "1446393004395573426517034864146549230349"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand",
    "hash": "24465648677055699669426143866827124550"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1405115144233791832378046300756164001"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor",
    "hash": "166756141244847976447183258029651474811"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "1200324105209946459413510716648868981137"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor",
    "hash": "18184971333545787795928683778347525866"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1806116253032393934510916695764142541884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "171331839466613136318726028541880677837"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add",
    "hash": "61775149159023276353205014401632187098"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "1644893131926819516615100901414172420957"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div",
    "hash": "70737692276422470087080862386150197495"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "297161896840827698114921936342316515388"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul",
    "hash": "140655817479710865598832437742833425869"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "25722397790448323251127313055942744231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "178494921731132916193537930845554732981"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem",
    "hash": "1634769211633579145414845624478872107669"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "9499300560471241312402876424684908242"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub",
    "hash": "87219692069292335683176662802042504972"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "347023648409913931717886929787130861294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "18411130530667296910102044624606093064"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "1716487477796004644417663603736117272262"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "170373028674476435817803812413104002905"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "12782113602918909231073268445059524865"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "14068979831237319462971221734799699415"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "323620805825699437715900036626759077938"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "1231904636653309676510300158997359166564"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "396494818599298544810903582186265320990"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "83113845425414327846363107421416622392"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "1588850776091728291015247770578754964538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "125654952489489202312557604297733804176"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add",
    "hash": "1627983237991318178117749630179567432330"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "54415200597329370634274941369179178456"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div",
    "hash": "906506100882863381412345811068129911189"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "56695536007724572773613514430355559440"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul",
    "hash": "3180560278365852724369952064449041635"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "71794036011135757517553632452584482192"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "1087278885948891247616879742931735070659"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem",
    "hash": "108619738503997394125902698733544532655"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "1838911018070034879217562605523487533634"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub",
    "hash": "1717972210317741278313350283893699516521"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "263331478488754390278190081199509148"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "581169995897659722010840940837930642640"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "262923404081265123516449016595921191138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "115324255346145143568608077795625602143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "166068502660922846936865547786514678328"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "119181220375372450344541382991872720790"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "672917076698241892413659639483352746627"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "1609213096935947287512809822413213571990"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "49623485588976305195785874760500182060"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "184005467996680327728315275798508115878"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "8089521087061377997601827001874864185"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "155423829160787707254600798860382936024"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add",
    "hash": "204097036649675611511654045860230127746"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "658104475519284342916885062634548258658"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div",
    "hash": "174158837841129363015577992082037322319"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "475156462095953103214190675269308367141"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul",
    "hash": "154163558919717061323087962684301170308"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "131343170498187042432784509395335113829"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "177967831871462766892411111791304596999"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem",
    "hash": "134441711670970441595919749764356983647"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "42411118006942336751822144319775657266"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub",
    "hash": "78868181630138646328835907173455419534"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "132784761227552870529605200656466467055"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "56257247442481038816757207192964031678"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "77535636307428413255224890640651504698"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "138515981126973394828960682152451520630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "67886386553959506967931333738429008446"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "749152187124310736915613447206724863806"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "775201146962615340117404415356543020543"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "92012309236143984517691610973647976148"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "41054426281161572487918085217701849328"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "18862058024325544293373844603613666133"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "48428870809671578215298486314096357592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "441967211358198033112448117683537351341"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add",
    "hash": "541515485726667573214284635725972866328"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "149359985746336637306195324474473662427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div",
    "hash": "67070058103732248014188811647173435909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "135705830688291428079318144575123321019"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul",
    "hash": "1060001331571642485310500493972035886196"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "46594114359835707979692205893611363209"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "8142605195059248049272192701098939327"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem",
    "hash": "2540685081706282133893781478797877117"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "124910548738572792909081973215641006315"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub",
    "hash": "155394306962263945465544582358588428951"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "166645690884530846084645321653830383470"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "15296996638946707236730092001786186893"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "1491228472013771326110189839417054054526"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "76543929183448277486594478427017900448"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "1633763593330204205616002280274591406337"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "112152424150801219174710049435766387462"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "64338911214603570623013725490536770575"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "37722620366282456437143743836674564442"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "1570215510777697916713704304636424429599"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "1503798299337999222916488737023526722526"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "83967500632051668014414262084240424800"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "120286771501693721936679905726919784036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add",
    "hash": "23337929599139119197367467720163204009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "1018038790331320696911412138906308150909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div",
    "hash": "74787172097595052131811815048202119376"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "190041497642635062918408474991708287479"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul",
    "hash": "253738852324784773314699939238034104233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "103777314130393036433184521456736803323"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "128559731436273045412778016976241614412"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem",
    "hash": "174478916262362130472930462970050590328"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "61094448427216617156775571308930994807"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub",
    "hash": "440148930214424350618371130643415911358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "832253646873133763512349950879519801063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "170650474536932398835302597582912561381"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "760073981755659875111283752511546559169"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "81736471455954925904616834369642915323"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "2360794704858077582118735576036226194"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "350189983703813213811801414593782038454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "149603586734784659377600108233588508507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "93688180689531439027929300493220404338"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "134178191817557159784003801862441315952"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "121382356889381936832103809334777411559"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "94262633959698615088009890178060080856"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "47290255149257013862250171248641664753"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add",
    "hash": "100497275191344598067310921069142063832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "1546083385253430573414340466032284951737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div",
    "hash": "180172740974140124694659384533110319585"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "11740006003396204561831127799971278506"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul",
    "hash": "470374636277505596411569484861325920580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "1008168576292975151217569572679296259978"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "25576894887112370573464973129464462937"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem",
    "hash": "950911942505597309916781760627721824134"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "124366624138951631546002145621269062741"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub",
    "hash": "140539150158490309881748766103005907915"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "498288997305196933114931116417898605364"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "8652794779879681709609375925145359505"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "700918292523518062512391896107856920516"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "60883749802880146679241993480253639546"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "36010809748018863481062752650489455664"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "29987767214100441074748843783248451945"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "27874688181060162196693964858416546701"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "646147212910086717715855497597239977156"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "78217861163880146477677372968742728075"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "79043724210115922011141135470623910531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "62763505731419281735826230226743486609"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "133675681805511178782993914804968569234"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add",
    "hash": "129915710034120274614525179193168833421"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "63321627721556937466942300863243561069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div",
    "hash": "115232935009083741593766394719148767570"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "1743807078501702576216083308221885509344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul",
    "hash": "1254213972543023235815869372303839007061"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "656529342730266567317064260546663077460"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "19057821274860283098218584039093539636"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem",
    "hash": "152532490353191160458890788764400955376"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "82476768190970835716206163461103725793"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub",
    "hash": "20659832238613918127950663249928029092"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "740390700629252752318261391694135871550"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "69367655438371031249049620231261487691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "22052934968819142793958240768423735789"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "1769993111281383084617768009159119179306"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "154304418923457152817240062440603748732"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "1095273460156081685813049817248489803563"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "1576911936148683167315599187106199466334"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "1251059981585041952616061651462255739231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "89060712041140927283110651093972021607"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "5818694750705155543290782879718033271"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "82392354978785467298675362559120541083"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "1547637302795370036615180436106930564135"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add",
    "hash": "104170709338435732601713080439803922383"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "57148576273796658514093368453620480291"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div",
    "hash": "125780839767100491774677823943362582665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "1591594261349695917810066257722608889102"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul",
    "hash": "167269023983280410012375819338613384687"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "218309554922243803310152462886485866014"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "125883774893972008108415759633163119400"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem",
    "hash": "1478230066774593883315973487909714245931"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "89015076341527547269766887221104056850"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub",
    "hash": "1606313232716053993615938130495485153008"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "9376235057216115484682010428774748580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "95394185227459108508246389254573258969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "1323838994283324805615741317700852330656"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "138006483958533277109715281669507541873"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1565544134522206679517508569544427772663"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "168242289321103762682509946212164165890"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "29701697200188282662761383995422069204"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "1347721097544189369614897116979290175686"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "105402553830500818615823901709211617272"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "54101855628369377116941804190947464897"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "482901415186985524214041861809961259884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "121086180699915062818133526006417435994"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add",
    "hash": "66067633523602224652021228367245699449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "869051940716122109012215521061534688258"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div",
    "hash": "703455652774845672110310733010080519765"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "1127124415340832197815891887153668676382"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul",
    "hash": "74920681086088640276056639495116356352"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "8596130094958759127154658796988158449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "6842638439935259417495126950142712144"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem",
    "hash": "1929055509267361887278084833388370502"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "29411109042514142714398533918740999913"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub",
    "hash": "99991389491852060867720053305535979291"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "128258396205193101217969217181269417742"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "108811435998826881310495087548947487580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "750161197242129954918372894572560504949"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "492061183084496655812811588642172944124"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "1794446122837988001414579432002066701767"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "155490154358534627165922918924470340449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1836370038088672121117644203581400638296"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "99186038772835786749514924718771215138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "20712629370489006591659462952138493093"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "90342177114332650107869593523931897457"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "271884901622703224414134604380145856442"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "173262397930654797527960130840155389054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add",
    "hash": "53070015171989684212511590608711143331"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "473379430799628025712137674475639712108"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div",
    "hash": "1796164434914455041912382958388659876098"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "276055072065294868216344675663864583326"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul",
    "hash": "14942566615260968184674467979314774521"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "1644070605354184854311405686547487807002"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "150570834564274809477298136898513495790"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem",
    "hash": "757401542681504480713175867561651270364"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "1639959009629765088813406693493355963283"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub",
    "hash": "132936726731055509561020417100121531292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "91778089644647043643170762344468575684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "79793637844772963303846861972207570485"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "1470507527597156138310986079077278465321"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "518263400826659624410569360066016135843"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "652587356331593695312878094368048102630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "170743716364148389116274063128283595523"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "25674485350393077637115245882195773187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "137238573397863310215399348389108201531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "104084312495626586042682492464141949095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "122694841446964809705294174581930904594"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "1047889329613372132218243742290442966986"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "1380339645994265880911230274720834860980"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add",
    "hash": "14694261820325813244830061319874101174"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "92047150984361921663017321936474080903"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div",
    "hash": "62479748145274931816811779984779726284"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "1756101559462435482114392655278876514953"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul",
    "hash": "16779789413375752957553471143289683489"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "1555308882292590377514971675124149699851"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "90120236923773887314345971445408927520"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem",
    "hash": "1237644097365078772413418359634047977484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "111944061288880181332461326738656618518"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub",
    "hash": "1487142522491663165817883975031099878056"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "1594568635692748707214044555814291765608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "652474212821333318811501014028066988102"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "465143775603753414416245460460309124206"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "47514380595086319793505719398051389021"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "1021509842573580843216763161879507688321"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "341390709065055007212987222005657055092"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "98177724956330687943052075121412792148"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "401574437420074987114615082380519447668"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "857998578132635768811732159527205773837"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "833893972625967016512740893063193350299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "4907487651635532264070629659013773345"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "119346352460574045432587205364194645791"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add",
    "hash": "440024742617205945415414784970390133177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "28095773671760003977624759743244514399"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div",
    "hash": "96904580321027980972184151094873294470"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "156412190277172148013260890581888726418"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul",
    "hash": "97436308741950491567132515477243931617"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "12465165646592545605212388837665457790"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "12361488306990410862789969599724949535"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem",
    "hash": "1353955004177534508340465762746918327"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "117078647095309052414050996463279169055"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub",
    "hash": "70282029641655297417756940603828174289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "13433267235880212647144206504362127857"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "164807537443832971983668286603560210059"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "103395118616313851943370577228638464209"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "174715034546729285165745691203009742114"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "1072680440737082510413803543382500792713"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "123377439779067545517203958738288822507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "132021138179926633141281599067396322290"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "1273995549757111083410040790057385820224"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "190168717318996999816955733161345992424"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "20032756819857947275292565643222737885"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "738519985715916128115480337630873434884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "89075580717754062451817339091380232954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add<u128>>::add",
    "hash": "1213427233371293733012488654428709401959"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Add>::add",
    "hash": "1019198496344449007410547641703951565948"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div<u128>>::div",
    "hash": "106854546588964363158481748317872316471"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Div>::div",
    "hash": "183763844737632394881433364762209053774"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul<u128>>::mul",
    "hash": "1422459641070577324818066991456240693507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Mul>::mul",
    "hash": "61759743930700573841548769665744527721"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem<u128>>::rem",
    "hash": "1510498836390419859916492064289469781708"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Rem>::rem",
    "hash": "108407214910354228883748192110433165233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub<u128>>::sub",
    "hash": "98953756725572592827004910770260018558"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::arith::Sub>::sub",
    "hash": "972891059099229302316157076935616248596"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd<u128>>::bitand",
    "hash": "1572723549848944784316717714846165288359"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitAnd>::bitand",
    "hash": "117646778514226274972644938767733685033"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr<u128>>::bitor",
    "hash": "108284454444340768343579543388463179606"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitOr>::bitor",
    "hash": "73091397462938024856628456633026783368"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor<u128>>::bitxor",
    "hash": "28879982994431101946868661963917049608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::BitXor>::bitxor",
    "hash": "5696103215421005770361979745498806185"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Not>::not",
    "hash": "796608782461359934313377466867940310126"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "39390872538314562757615903869769477383"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "64554860748841907465333989384022898194"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "101189808956931925406708446419261809557"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "1673297868800220235015585998660218693319"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "17035003233117055911495589747607316276"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "92682116796997972766136928298409601377"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "5727180574674770456147637847378241154"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "157314918565414293335032295712719856273"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "50768011245679026874996886989420810987"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "13304560117505150905590930315593193722"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "64997064920664444017424519160313622762"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i128>>::shl",
    "hash": "178712702019308690239054276193699388902"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i16>>::shl",
    "hash": "131161575324392526227204207904954365912"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i32>>::shl",
    "hash": "771301735004749485718260584958225360613"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i64>>::shl",
    "hash": "85908133071512913717031771097550284605"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<i8>>::shl",
    "hash": "1519268543206319665316203574953695943699"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<isize>>::shl",
    "hash": "182151410815549551948886092422882768804"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u128>>::shl",
    "hash": "636568333854011360011846543022849831584"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u16>>::shl",
    "hash": "739460693166840080714325921462733948499"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u32>>::shl",
    "hash": "620498971962424296517390490644934772584"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u64>>::shl",
    "hash": "26527296939106373744117270613471707437"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<u8>>::shl",
    "hash": "90497256770243155711756928631624474456"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl<usize>>::shl",
    "hash": "39443594267758201517204868725870516539"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shl>::shl",
    "hash": "1598417739708089915918271785868115307492"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "1076964146528633735012526231656058129895"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "1256922747157891042410930186286282013390"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "132047188172598690053762411401187769219"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "158093031754613845369672327388141565947"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "1400979912167710702717432967775039733187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "17875606282051993954402364403525871801"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "600313704471704667914373998219917147687"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "792776230984814538740462849285162751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "1664173652261250613815572041788576944637"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "154186859423807297168193851852467195786"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "117731841475079628349516527395323869582"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i128>>::shr",
    "hash": "14975162756190425388381607290851990429"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i16>>::shr",
    "hash": "39723109220245578714869548259741878317"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i32>>::shr",
    "hash": "144523688513141385715726558386481720785"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i64>>::shr",
    "hash": "1842916469577598912410379962032871566863"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<i8>>::shr",
    "hash": "626564325141331529012974896325404375351"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<isize>>::shr",
    "hash": "8942798477213676710599833741030565758"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u128>>::shr",
    "hash": "184349715399037583375678113650142903009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u16>>::shr",
    "hash": "144150320189762361179792024157575113751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u32>>::shr",
    "hash": "392527232195078998313100197259539003763"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u64>>::shr",
    "hash": "1718527421437995419415753494993714776"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<u8>>::shr",
    "hash": "410809767168562085313781477730699556489"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr<usize>>::shr",
    "hash": "1526675960945639590714246666861371391167"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u128 as ops::bit::Shr>::shr",
    "hash": "128843043666570644617442453139847515427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add<u16>>::add",
    "hash": "1751436457939196590413359139034322016251"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Add>::add",
    "hash": "95340540566644049914307925057269013358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div<u16>>::div",
    "hash": "97860866728752390411497954363204526068"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Div>::div",
    "hash": "1076740346724450671511833194260378083935"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul<u16>>::mul",
    "hash": "177272996688844873578329274717950347643"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Mul>::mul",
    "hash": "101425303133578171125733669154356160322"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem<u16>>::rem",
    "hash": "505564030712951695217130428005586025817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Rem>::rem",
    "hash": "9217363535526074638106198777498060960"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub<u16>>::sub",
    "hash": "133648540571488489146304795365484381370"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::arith::Sub>::sub",
    "hash": "142640285859400128554396299358490683981"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd<u16>>::bitand",
    "hash": "82108449787545437543620087083061003753"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitAnd>::bitand",
    "hash": "1152296529378661067418299588773090325006"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr<u16>>::bitor",
    "hash": "528205840520352229715230642826961819809"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitOr>::bitor",
    "hash": "324420444169671897715124686553965408474"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor<u16>>::bitxor",
    "hash": "230655370521248547212082549624602951821"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::BitXor>::bitxor",
    "hash": "451868098470249705310202896800953648924"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Not>::not",
    "hash": "65176553105414991226338655672346362957"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "61493432649156397823302329039317096416"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "141223875047814484398423114373379267201"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "156829314227567993528244132919077800688"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "5361332577300132685961282153618217630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "133220771772301006265000432025678527712"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "52759967481387362626385123319684846590"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "533963026268144753115976534460087700030"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "174638534161034093262178600526785109201"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "141204040952250836756368400802624723762"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "6854982300376806534433533784620055046"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "137047138724406133943507773694132703988"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i128>>::shl",
    "hash": "40097184836838743414576462368671524389"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i16>>::shl",
    "hash": "172061614248021240674661096972808970608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i32>>::shl",
    "hash": "49570953911035050289007734856622280873"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i64>>::shl",
    "hash": "89997983479465887711499719310839550071"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<i8>>::shl",
    "hash": "1120762337768013706212279217769964301245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<isize>>::shl",
    "hash": "492438426128724271612396280362743615637"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u128>>::shl",
    "hash": "1226337969796808321511469904628687954851"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u16>>::shl",
    "hash": "45784442059791903935079562001969942395"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u32>>::shl",
    "hash": "166183337680791940054862065368508080617"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u64>>::shl",
    "hash": "109105899069967111905252206866033057877"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<u8>>::shl",
    "hash": "1452211981831605079913196305735013530178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl<usize>>::shl",
    "hash": "52240485669470663862492088184882465058"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shl>::shl",
    "hash": "67835133768745619688366293982563326182"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "141176887526969802727526753754419037189"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "1019429186420924775916566729252894199389"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "1368187438258298443412465144717648200903"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "147615556006620060456400190868009576307"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "88884021596629145032830327537576795246"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "1700473914496641309411772271471981711106"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "158032663705743747784963396602660671301"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "50147595971807162217732437365408582008"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "152314692270993177202970576503833268379"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "61747547083162639382356196068937526275"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "6282214965139095504943516511817610956"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i128>>::shr",
    "hash": "1548044045821158993112084638316903963569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i16>>::shr",
    "hash": "232043690454192025713573893159893075319"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i32>>::shr",
    "hash": "619183756777828270314532032919888431715"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i64>>::shr",
    "hash": "364083306743525157810493191064811373189"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<i8>>::shr",
    "hash": "92796341510510578645032628642070711924"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<isize>>::shr",
    "hash": "11519983784712386068143186085431678262"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u128>>::shr",
    "hash": "1625257422195324821316750897952872807130"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u16>>::shr",
    "hash": "56845739831895924014216380202581257389"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u32>>::shr",
    "hash": "144177749213812833921587084671488267446"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u64>>::shr",
    "hash": "902731929450011060814628207376186803693"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<u8>>::shr",
    "hash": "659316941728206582513222829458982076014"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr<usize>>::shr",
    "hash": "890332843599116887713617905780293287354"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u16 as ops::bit::Shr>::shr",
    "hash": "391028027639900620214830621438037881554"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add<u32>>::add",
    "hash": "103027993098533107707169526333769686832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Add>::add",
    "hash": "370444603236047269198223284008510234"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div<u32>>::div",
    "hash": "1544650063479489397918010747968654066775"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Div>::div",
    "hash": "116343130638964912618239127717259245819"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul<u32>>::mul",
    "hash": "165626946659804921957998565604980107945"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Mul>::mul",
    "hash": "9816358466784293506691081056510174575"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem<u32>>::rem",
    "hash": "15333984173796351917243751713532889390"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Rem>::rem",
    "hash": "43606182174025772211172449903974327727"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub<u32>>::sub",
    "hash": "407353021554038963016516457625095490322"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::arith::Sub>::sub",
    "hash": "83125036872254736953033377210971879737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd<u32>>::bitand",
    "hash": "1448072412570990111311424192758362775678"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitAnd>::bitand",
    "hash": "940495171777005874015918161131613351173"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr<u32>>::bitor",
    "hash": "146823363061347459167569597872336222218"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitOr>::bitor",
    "hash": "960020308131763751511029969232831156736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor<u32>>::bitxor",
    "hash": "33035224323494672771503788988830800466"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::BitXor>::bitxor",
    "hash": "162001683053586091325063977871497972136"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Not>::not",
    "hash": "98283549016350997615193207603277522561"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "1754478846503332653518380183660480071235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "26945771132920387966348160670876454292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "516822624557382154811750524155422509023"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "466004923235227090512102618137947028551"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "107553703595245239014272991518460867197"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "27055738208503233453973571769147745954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "1312203325829005574514483890152212839916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "1610406762055251249918191843651601954110"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "1031592663657364841811068409518806276755"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "697812503823043593318293967178643995242"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "44369617914250990741241286942569632711"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i128>>::shl",
    "hash": "464088479725409501710301633234445154245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i16>>::shl",
    "hash": "11755664604174183362814066457697018396"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i32>>::shl",
    "hash": "1005378831073813669518243321492587340118"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i64>>::shl",
    "hash": "1611130389228646882812227067403017519137"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<i8>>::shl",
    "hash": "28381909242486666493968778963232444475"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<isize>>::shl",
    "hash": "90727974410651189076531369184507652463"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u128>>::shl",
    "hash": "962831576755373278610074224635672871338"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u16>>::shl",
    "hash": "1083793746648557460314383243457862644666"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u32>>::shl",
    "hash": "1734450404030069412211052178388632660787"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u64>>::shl",
    "hash": "9663628417104147421507229465429299459"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<u8>>::shl",
    "hash": "203371982329515466910500517148294812653"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl<usize>>::shl",
    "hash": "1718614456578108559623758246973464713"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shl>::shl",
    "hash": "229865199004595764912471146808044452581"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "25124781461836340545045429246537074058"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "83017839078293747764527647431238930597"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "377978214137410937410972387394384496837"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "173151980638306829367469624666475268377"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "36616453785382481164147993141354810633"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "86399686480101823256350738859149563954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "1103308589527316318814775357666738602175"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "287973019414957423610436763086652947989"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "1328890378147983494010092018241046623613"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "1669162739520117747314996232785379543638"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "160931322102807481572212798896325470546"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i128>>::shr",
    "hash": "108724167120312089513383437484464225549"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i16>>::shr",
    "hash": "1082186277895605762518126362884002552484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i32>>::shr",
    "hash": "11184597521749193677681232679960564584"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i64>>::shr",
    "hash": "1202281381390750194112542537768140749727"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<i8>>::shr",
    "hash": "68674143824961126679834583021343799816"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<isize>>::shr",
    "hash": "117299429768074268553854378715485794561"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u128>>::shr",
    "hash": "244057813570990856017200379355491179915"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u16>>::shr",
    "hash": "1266463914152701455014384627342329555450"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u32>>::shr",
    "hash": "82528819792211948491094830003273762035"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u64>>::shr",
    "hash": "101970732666994136329139513012934568091"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<u8>>::shr",
    "hash": "6803465308599826398750580698953016126"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr<usize>>::shr",
    "hash": "141462742026474127088241002817524475258"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u32 as ops::bit::Shr>::shr",
    "hash": "509390340331046732811184559353928487218"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add<u64>>::add",
    "hash": "150820395581217531817596203416469848057"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Add>::add",
    "hash": "28479160179444647647444055070053196283"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div<u64>>::div",
    "hash": "331954381641456333915492152793184607894"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Div>::div",
    "hash": "15995432323665562233360194984288237503"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul<u64>>::mul",
    "hash": "56413532262858532587997695019514693869"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Mul>::mul",
    "hash": "347762528480553955310205859768173994123"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem<u64>>::rem",
    "hash": "1140281469812104834511340017553217047449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Rem>::rem",
    "hash": "94492911909573550606749512109386346300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub<u64>>::sub",
    "hash": "152832740476978923587131127713810450352"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::arith::Sub>::sub",
    "hash": "80451114528569873572504254849882861814"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd<u64>>::bitand",
    "hash": "124189814896253429914289390354905369202"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitAnd>::bitand",
    "hash": "1540427494969044757213821860716030854833"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr<u64>>::bitor",
    "hash": "420055943694623860218384177258145507112"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitOr>::bitor",
    "hash": "682006521457044568514722454876903785226"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor<u64>>::bitxor",
    "hash": "26891989433767567589842872977402436207"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::BitXor>::bitxor",
    "hash": "1053131109743030872514866224379678028162"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Not>::not",
    "hash": "1333810611630158479911143785038698955463"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "4579106219708883537567590193076868690"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "1301429549271936950113034228600598711209"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "1711269366350043146118080119725193905882"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "12625164484946832814497270085486629223"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "159121083922088307107345097493320628511"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "890178173437459373218427285273436926220"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "16727025343406957738137809071299521368"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "1830613599064844102815480421681925555811"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "180291044203094152542154677148189815202"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "1547700929320218913014746569902482959443"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "20492811835746716481001837327668434855"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i128>>::shl",
    "hash": "210037893441578522511111351161593603002"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i16>>::shl",
    "hash": "989443653599686158814473475934829340909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i32>>::shl",
    "hash": "107939028979683109341912499324194387567"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i64>>::shl",
    "hash": "44000236260618542558411668794765365358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<i8>>::shl",
    "hash": "822851725573589330212285871595500938423"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<isize>>::shl",
    "hash": "176133373265610294279589114098436645335"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u128>>::shl",
    "hash": "382541486166887534317178488387814388527"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u16>>::shl",
    "hash": "1308094203435465257314660839184627788940"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u32>>::shl",
    "hash": "16453555540225188827251924834952956968"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u64>>::shl",
    "hash": "103656397269457079911057303052486357246"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<u8>>::shl",
    "hash": "60718348311859028077599041428692063347"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl<usize>>::shl",
    "hash": "1694547641620104225116523835242415016889"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shl>::shl",
    "hash": "173081408987325713847190968571249009955"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "690739753406397675015275283960283968089"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "1761048101041592351712677706377694528217"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "84305934384061275757023695866293196240"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "1646064235229606043610446001605420022739"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "102169940018942967924609313174185341593"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "1216144912158755781411215215412833056870"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "118219368317602693409480325003631936369"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "1318720258653253700718214017769388423592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "373109089604284420314642407602501627366"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "1596270490289214695515368182114795054028"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "95003758144094200797081136152596229586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i128>>::shr",
    "hash": "70297853616208515366908977020006941437"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i16>>::shr",
    "hash": "28090576030599225269853195587863864828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i32>>::shr",
    "hash": "710166572838720339816047185597149151954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i64>>::shr",
    "hash": "778678763693427245316427713598290519839"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<i8>>::shr",
    "hash": "812614495521402753114156131534957119509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<isize>>::shr",
    "hash": "133831037401509755507733032730525501362"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u128>>::shr",
    "hash": "810515993655531342313327118368613790182"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u16>>::shr",
    "hash": "1313901620092532248717103280371166578709"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u32>>::shr",
    "hash": "23266564698756717886537729270450578684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u64>>::shr",
    "hash": "43397311908198880541553559757066251203"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<u8>>::shr",
    "hash": "15792958040623285848613725598171801508"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr<usize>>::shr",
    "hash": "25146676585022384018002675700068953333"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u64 as ops::bit::Shr>::shr",
    "hash": "929273637067457130316077058589856516914"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add<u8>>::add",
    "hash": "821220688377410581415493518547121303233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Add>::add",
    "hash": "4035372803423538368763649645695225742"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div<u8>>::div",
    "hash": "119434726896336102431094671185341679159"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Div>::div",
    "hash": "181876304173439923617912095086811049206"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul<u8>>::mul",
    "hash": "12335633982672764859524783746477288208"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Mul>::mul",
    "hash": "1122012006537183378018291161268529893399"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem<u8>>::rem",
    "hash": "99962954712375973057369862089282282700"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Rem>::rem",
    "hash": "14360472184832101393328552045728359595"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub<u8>>::sub",
    "hash": "266533767462373761815851882690238656902"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::arith::Sub>::sub",
    "hash": "392691935528462130714435912310262711386"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd<u8>>::bitand",
    "hash": "621081342259223010211579321907358158539"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitAnd>::bitand",
    "hash": "1055091037796645285810714668349728341007"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr<u8>>::bitor",
    "hash": "139317422744053608641521841574168625836"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitOr>::bitor",
    "hash": "1296577122698674047413884856358558092897"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor<u8>>::bitxor",
    "hash": "118139248680310434573452920567231914404"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::BitXor>::bitxor",
    "hash": "152666589734100860076367150683722877751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Not>::not",
    "hash": "82728888631511858339823670703448548707"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "175058159765005647337656360505776802107"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "37102984431635368432636711846844249773"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "124816777849518847008905172209166928286"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "175123591496015645222231327302451793370"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "167783619761855020843669608208697455523"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "111987631712574044743563336530536244049"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "41537000352798669161317622755887889799"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "4603707785996306215255706845431620256"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "4501441360654456339111984389102139052"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "3982259822592774061707691621712207300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "1049124108585796516311156078143551584211"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i128>>::shl",
    "hash": "809652562828831790816778626197201457868"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i16>>::shl",
    "hash": "1503343588021309393813962275859760250932"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i32>>::shl",
    "hash": "70592424057850884095616493013042470518"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i64>>::shl",
    "hash": "93217320513288397207684241228181144477"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<i8>>::shl",
    "hash": "1416360422254040172614214019533853459808"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<isize>>::shl",
    "hash": "183823277776607096716378551349542712390"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u128>>::shl",
    "hash": "1269931217494104130817202127891661041663"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u16>>::shl",
    "hash": "452667022888858646510533913139975320124"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u32>>::shl",
    "hash": "48109805330749966481612948435926031531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u64>>::shl",
    "hash": "16768365859440622492002163887736764966"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<u8>>::shl",
    "hash": "269883938092855741618400728876454365898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl<usize>>::shl",
    "hash": "1293293986512716078314329752027643042824"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shl>::shl",
    "hash": "87798761205439217221321724262604470354"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "90171408339277805656290822739789652665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "521639641637357618012167684269623426146"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "104741203323593974954183298833195692467"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "992558574839381458818057312085744769377"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "75466431946965426751167607921701377313"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "51325498274013326374145386389595812364"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "62972806826454233512585447670114484066"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "739817022719345965537508222074337828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "176663675837517639826809968857914028309"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1656558022291088539313436283085781712058"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "1060450030390273703017619996562886192262"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i128>>::shr",
    "hash": "40035551221443086266611016652379253009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i16>>::shr",
    "hash": "21834494370470972333264293757810912768"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i32>>::shr",
    "hash": "180441077248794234868622712531606633527"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i64>>::shr",
    "hash": "81728968290782636315152305298868493219"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<i8>>::shr",
    "hash": "701685330215817770712322841725828711358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<isize>>::shr",
    "hash": "36930258193102729564819987422579575339"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u128>>::shr",
    "hash": "118611408677385753007757185680749253441"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u16>>::shr",
    "hash": "664709683226204407910015903920300798924"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u32>>::shr",
    "hash": "1454324925339950492014874287087476610757"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u64>>::shr",
    "hash": "1013171213928232723711568917374034982902"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<u8>>::shr",
    "hash": "68586702623389470274857013629844158897"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr<usize>>::shr",
    "hash": "2714242343651235434668993614058282109"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&u8 as ops::bit::Shr>::shr",
    "hash": "135363238489115198139670404796302564613"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add<usize>>::add",
    "hash": "67768041372099397331976746739689460371"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Add>::add",
    "hash": "1240138887746807473817794374670520992465"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div<usize>>::div",
    "hash": "124222431088631829818026631995653951261"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Div>::div",
    "hash": "1799815707989154738713090982136319310431"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul<usize>>::mul",
    "hash": "116301618098689348845247103195849812302"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Mul>::mul",
    "hash": "11227253082120245766755274405457230139"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem<usize>>::rem",
    "hash": "168497806632347459611576243511692544161"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Rem>::rem",
    "hash": "967742822198584710111992061864981816294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub<usize>>::sub",
    "hash": "1441738743143486591617695107279145916586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::arith::Sub>::sub",
    "hash": "14436587349502569261919587249278079881"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd<usize>>::bitand",
    "hash": "850157017708250424313888617995832995639"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitAnd>::bitand",
    "hash": "857453967740702462515616966038282457872"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr<usize>>::bitor",
    "hash": "1707751521102415849613651443678851723377"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitOr>::bitor",
    "hash": "154052947967989419383873490191492360875"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor<usize>>::bitxor",
    "hash": "985910981611913853012675146905367838784"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::BitXor>::bitxor",
    "hash": "44929924021733131324136165697157770063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Not>::not",
    "hash": "39006025925345546251914909953051640608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i128>>::shl",
    "hash": "436521809901497751010535369345349748275"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i16>>::shl",
    "hash": "71469051104171329965746296261915167199"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i32>>::shl",
    "hash": "113136537782963921212340443172790064690"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i64>>::shl",
    "hash": "31282328189846942927620079143554256972"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&i8>>::shl",
    "hash": "37175851244266334618200033383282266463"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&isize>>::shl",
    "hash": "1746759361858768005416654881551711244287"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u128>>::shl",
    "hash": "70344336886862754102697095138143585557"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u16>>::shl",
    "hash": "244804365876845202817772355767589480659"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u32>>::shl",
    "hash": "599360044021470490416713043391365755698"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u64>>::shl",
    "hash": "757623525809724013215251264219363912987"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<&u8>>::shl",
    "hash": "85695995350262796214279361782469607131"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i128>>::shl",
    "hash": "31083954136835876843005302246007924705"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i16>>::shl",
    "hash": "17485760573015516540647361941919325280"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i32>>::shl",
    "hash": "50248810408078831751851722012688388462"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i64>>::shl",
    "hash": "1708268512995165155014978335385833529768"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<i8>>::shl",
    "hash": "117786694334285779105326513298252508622"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<isize>>::shl",
    "hash": "128885273346086855436390891510609780654"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u128>>::shl",
    "hash": "631699684930836125016935261700723626481"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u16>>::shl",
    "hash": "1134598884670468718613023457883933542396"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u32>>::shl",
    "hash": "5502751327970140218480408249939296734"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u64>>::shl",
    "hash": "447995829024102225816845174213728216375"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<u8>>::shl",
    "hash": "562216083337387978711824376907928978901"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl<usize>>::shl",
    "hash": "1246734699840735826516090549427744508899"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shl>::shl",
    "hash": "1379137169140067800716082618898884990095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i128>>::shr",
    "hash": "1421390349270690892010704969573665569177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i16>>::shr",
    "hash": "106914037510087826818221128992200416193"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i32>>::shr",
    "hash": "821425683884330930913396038359433696891"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i64>>::shr",
    "hash": "27976091640996349611745196355468796747"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&i8>>::shr",
    "hash": "17180993023274207819880250298337844820"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&isize>>::shr",
    "hash": "115719100673381715363567845978769186033"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u128>>::shr",
    "hash": "81795706386567517901071688304402758465"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u16>>::shr",
    "hash": "21270585410685530007750869508432374735"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u32>>::shr",
    "hash": "1553953391363842704111164096024910558003"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u64>>::shr",
    "hash": "157440334884752214234843791082441572958"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<&u8>>::shr",
    "hash": "30794943671986192288712284437255541185"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i128>>::shr",
    "hash": "589978963634682218314659215809779895228"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i16>>::shr",
    "hash": "152204008917080561307029515935865083603"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i32>>::shr",
    "hash": "117315624112898538512112836295017342868"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i64>>::shr",
    "hash": "114049446506119212815885894210845172573"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<i8>>::shr",
    "hash": "111172570546025385901534912403411336657"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<isize>>::shr",
    "hash": "1601659125842669444814238683140364006067"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u128>>::shr",
    "hash": "167860208581789159837407483630100321791"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u16>>::shr",
    "hash": "120459814706433871952715184278309325125"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u32>>::shr",
    "hash": "131000031314879904118343249003163991501"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u64>>::shr",
    "hash": "79235531511682093956341011970678450817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<u8>>::shr",
    "hash": "139120038152293493093667113384963626278"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr<usize>>::shr",
    "hash": "95949332370358625794302339998344413"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<&usize as ops::bit::Shr>::shr",
    "hash": "37427122124615496942044642851209088441"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAnd<&bool>>::bitand",
    "hash": "114126734436919795915289213340389407569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign",
    "hash": "168069157811873651241718001806016927083"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOr<&bool>>::bitor",
    "hash": "155961516704292595601571352587352244636"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign",
    "hash": "30472344444493739194184999461151807067"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXor<&bool>>::bitxor",
    "hash": "304423258874593211314550727602363164317"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign",
    "hash": "920445173664014238311064028504054788214"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Add<&f128>>::add",
    "hash": "1706182521222029665713202190095787173553"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::AddAssign<&f128>>::add_assign",
    "hash": "1326642874736077151414287245856682826774"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Div<&f128>>::div",
    "hash": "1461522374916546885017913736162324719158"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::DivAssign<&f128>>::div_assign",
    "hash": "1448467470974835432012577278543364699476"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Mul<&f128>>::mul",
    "hash": "42661888379912876201244866611695132601"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::MulAssign<&f128>>::mul_assign",
    "hash": "1238057619077070915614033327300089004447"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Rem<&f128>>::rem",
    "hash": "1424277382129444520714633917055626142286"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::RemAssign<&f128>>::rem_assign",
    "hash": "815601343453594996514021450991187342170"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::Sub<&f128>>::sub",
    "hash": "62841860570761338624921404891998709326"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f128 as ops::arith::SubAssign<&f128>>::sub_assign",
    "hash": "109746814459041351078839050743093640734"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Add<&f16>>::add",
    "hash": "131948166575726680447072513292603392253"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::AddAssign<&f16>>::add_assign",
    "hash": "4103719180872984519096266171352395101"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Div<&f16>>::div",
    "hash": "103629097016753999672566192623011811501"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::DivAssign<&f16>>::div_assign",
    "hash": "101151145017137461285491723951593047957"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Mul<&f16>>::mul",
    "hash": "675464861539797442611569522521501221933"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::MulAssign<&f16>>::mul_assign",
    "hash": "443455730984428739214248422699398680869"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Rem<&f16>>::rem",
    "hash": "1672678676768210265712223967621341426681"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::RemAssign<&f16>>::rem_assign",
    "hash": "665106255634994389217144364774102745784"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::Sub<&f16>>::sub",
    "hash": "766707670933733141417064495940530580233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f16 as ops::arith::SubAssign<&f16>>::sub_assign",
    "hash": "41549050526824242389541811216788319054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Add<&f32>>::add",
    "hash": "1498213141026890277717343668632119813303"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::AddAssign<&f32>>::add_assign",
    "hash": "131482730688713883303914602133409753985"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Div<&f32>>::div",
    "hash": "26688087188233266486929502388846889294"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::DivAssign<&f32>>::div_assign",
    "hash": "1072093396847125739016586142864714133132"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Mul<&f32>>::mul",
    "hash": "75319464556164190493185803077642233249"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::MulAssign<&f32>>::mul_assign",
    "hash": "549719294673084056712154745929833532964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Rem<&f32>>::rem",
    "hash": "1448915970645934671718313100225905331650"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::RemAssign<&f32>>::rem_assign",
    "hash": "49666684180857676934133921521791240387"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::Sub<&f32>>::sub",
    "hash": "79477318303380971809458675637713921129"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f32 as ops::arith::SubAssign<&f32>>::sub_assign",
    "hash": "342440269311358365413635308751308365974"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Add<&f64>>::add",
    "hash": "12884266386482892883783752895736477530"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::AddAssign<&f64>>::add_assign",
    "hash": "137935637981983273348767352383893134600"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Div<&f64>>::div",
    "hash": "138822382074649677553276066178797942215"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::DivAssign<&f64>>::div_assign",
    "hash": "153061426524737655431727357704340155372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Mul<&f64>>::mul",
    "hash": "60067505259906526683353384777080102296"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::MulAssign<&f64>>::mul_assign",
    "hash": "829960462935530132614887294342271030981"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Rem<&f64>>::rem",
    "hash": "458280626863724745917805196637475471350"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::RemAssign<&f64>>::rem_assign",
    "hash": "944726347871078704017839848396509164059"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::Sub<&f64>>::sub",
    "hash": "1376383865771823422917261529493355794127"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<f64 as ops::arith::SubAssign<&f64>>::sub_assign",
    "hash": "152433683059669982279891082392160152125"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Add<&i128>>::add",
    "hash": "155218319209136416573453765517801411211"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "102386596477894370786096740304666700329"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Div<&i128>>::div",
    "hash": "196821928917807982110656736614349187753"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "23872347218121594323971143890222751408"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Mul<&i128>>::mul",
    "hash": "47348158117572984217079391345304252017"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "2443987535058694634958741193657386018"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Rem<&i128>>::rem",
    "hash": "3907558330262689710995941959590922968"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "56001869329733550981299923514174096930"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::Sub<&i128>>::sub",
    "hash": "110983065812002303372128149653621280768"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "142854391921363705924814092897837784623"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAnd<&i128>>::bitand",
    "hash": "163512425337865104715080378445799863618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "1310328896440652970818250524847914921816"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOr<&i128>>::bitor",
    "hash": "89525625953804339474790432831029875935"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "150870200833713481859057497442851986795"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXor<&i128>>::bitxor",
    "hash": "641737768118162536110562728692662005882"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "1446539099508584648712609353757090855380"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i128>>::shl",
    "hash": "1250123757703386035714751089869119738432"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i16>>::shl",
    "hash": "1677229878362948569017771456359955768832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i32>>::shl",
    "hash": "1072923376360083139911880489409943950450"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i64>>::shl",
    "hash": "736767974389322548212773653594601657171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&i8>>::shl",
    "hash": "692909090824347341312261644537065905198"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&isize>>::shl",
    "hash": "1656049680545167014410419968181069932051"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u128>>::shl",
    "hash": "705834966442148160912880404910823173850"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u16>>::shl",
    "hash": "618401295865263041313653813053014022030"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u32>>::shl",
    "hash": "1572091394818141872316659490156723591259"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u64>>::shl",
    "hash": "72562340116806386766378866825095060300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&u8>>::shl",
    "hash": "121635064263296641747498727989088975633"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shl<&usize>>::shl",
    "hash": "55906203953734234986475438869336328985"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "574266791391628612512258801629457605552"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "45302502123368942454689457892199911923"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1467486380432496109515019809574555660999"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1600151398932663033417644969594241169765"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "936097265640989910118415073550725827155"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "48700300719623678531671433068348670775"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "170765300165259096539302688115583318529"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "122101059464148040518353224696053622603"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1749294155794628932616894066164054169492"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1235007392666980203111505789400795154025"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "90396407374403968469924260438153694787"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "42386760681237848469324855604740963427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i128>>::shr",
    "hash": "128282215392128957444913211908171408095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i16>>::shr",
    "hash": "3291618808460073147696606683609718690"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i32>>::shr",
    "hash": "97938938092428407468559075578422066023"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i64>>::shr",
    "hash": "959377729697910099712107207445805689194"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&i8>>::shr",
    "hash": "324978557943271861810755343439375500475"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&isize>>::shr",
    "hash": "380466724396245662717412516428538435126"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u128>>::shr",
    "hash": "96713080459764764678767546057121712795"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u16>>::shr",
    "hash": "109558078332210909515103847908223948950"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u32>>::shr",
    "hash": "643510604721796294711225841499746538219"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u64>>::shr",
    "hash": "51996948166861705739908845727537204513"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&u8>>::shr",
    "hash": "175745419804361976632609866786032502871"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::Shr<&usize>>::shr",
    "hash": "142404179092067276484580497232281723328"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "74037705558082553375788593415172783363"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "152484607799621399203747572811007918924"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "28420383088783064548983209450333808133"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "5210009221814396811263969575863542669"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "13209908895154546859295020874728881571"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "254320827219340107911009216728535482554"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "513466012363450568315216791310610256502"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "231154081122953707916531797923230508704"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "102561587276421669029547037274966371461"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1424674649478435643613430733180749061760"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "133597005437087137715214332242804523676"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "90163000012788564841149793958190297392"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Add<&i16>>::add",
    "hash": "7178950801012191394970942743667205769"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "67442727979087849461093764926549816448"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Div<&i16>>::div",
    "hash": "43423770365991536461254685668480850439"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "1460637942037057001613009240885683270703"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Mul<&i16>>::mul",
    "hash": "69865237250436912764802536209478795053"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "43304349814787817608324268680860682837"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Rem<&i16>>::rem",
    "hash": "126464181710821224645551939090884564152"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "58609547671547324517688392771276508421"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::Sub<&i16>>::sub",
    "hash": "14062756647980903318042654567725205651"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "803721262554266637816785908129798288705"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAnd<&i16>>::bitand",
    "hash": "3559717140592882282605435023164591666"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "76559845114724154562133223662239969672"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOr<&i16>>::bitor",
    "hash": "105875004054609606621500802204961016409"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "472098708520651509510778027456235334195"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXor<&i16>>::bitxor",
    "hash": "145281604493668783102032887465601498953"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "112601920182309211269931824067335269483"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i128>>::shl",
    "hash": "117555442340230538525259394164054085769"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i16>>::shl",
    "hash": "24057682771767059803289228579457171769"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i32>>::shl",
    "hash": "76259872613757578525968648426984914044"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i64>>::shl",
    "hash": "58185381811523763478278419174164344782"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&i8>>::shl",
    "hash": "183104784461727660862863625396636281665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&isize>>::shl",
    "hash": "456145466783715697511081040739669793745"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u128>>::shl",
    "hash": "691489751853826905116259960426741333973"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u16>>::shl",
    "hash": "4960325747661694959815237411763089001"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u32>>::shl",
    "hash": "1346967118997542209917349499307552413252"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u64>>::shl",
    "hash": "61663459305810014404884331396498090365"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&u8>>::shl",
    "hash": "282285734070035158510582020745030296106"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shl<&usize>>::shl",
    "hash": "84602275070150729362092386757824818335"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "142156858327986921184848345180576727173"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1415131648361367467710106152700114948528"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "31916640579811147804970697987499979917"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "267217701612440329415839548602039745429"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "42410151747246918037828410208680291616"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "62846134971556242997082609598250641687"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "115249145579453005467462380168717630771"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "171558555778030680483242362363018865433"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "335048765195853823712326659683786980638"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "1611690000226463476211153950527924472506"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1603983083955463769715875562692738844054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "34200015202754462595945270502499799674"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i128>>::shr",
    "hash": "52131541214237062713742664137510600609"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i16>>::shr",
    "hash": "1066041584949651316711776597167282025545"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i32>>::shr",
    "hash": "34628174197031021984839191235664846496"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i64>>::shr",
    "hash": "125923403644528223134012224403670040998"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&i8>>::shr",
    "hash": "1706757380213237688411582068796327258058"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&isize>>::shr",
    "hash": "115814048467368436967762059660034232813"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u128>>::shr",
    "hash": "781564248318277183417997169784240517576"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1456518161431794046416794063957725728707"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u32>>::shr",
    "hash": "1137948590133868757511918303990785563481"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u64>>::shr",
    "hash": "175500812588506139011221295842209759325"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&u8>>::shr",
    "hash": "1209892721863886683218110751961086745794"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::Shr<&usize>>::shr",
    "hash": "72113262578181978278575280862222315564"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1586465078651371839412907047083610492527"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1832924612549441234414901236870885454638"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1067171326598447479314888863999133595446"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "86085430211232600854681928835460972337"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "1033089205149684893912857906775149449015"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "85416593155523567013002874168264339969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "577062315998391280115551903182857128310"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "30324006754900669266921317199446819955"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "155674530851852552753631154813895486462"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "70573649359270987171099194068362363126"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "345175567278424429516038248754779446754"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "35133286410786881622700990922847210449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Add<&i32>>::add",
    "hash": "1429620803408549037011789709763550556566"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "1606993855344494776513054112096810972609"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Div<&i32>>::div",
    "hash": "64294556312142084233285294763790600700"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "134146531477403763244565100830300354099"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Mul<&i32>>::mul",
    "hash": "125306948529585886642908712105830395575"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "791619854153504756313924246865787205261"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Rem<&i32>>::rem",
    "hash": "986747380799054582716065959275472524808"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "160941228542141616996787831401287183916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::Sub<&i32>>::sub",
    "hash": "940572229306507234610803797628829489320"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "1294354999304641791513914864359805519769"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAnd<&i32>>::bitand",
    "hash": "175136318435086315648409457853325779043"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "1030397309102417162715537582957375780931"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOr<&i32>>::bitor",
    "hash": "1194915056036175098015675378777252181885"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "314437418252095980616329064096219231656"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXor<&i32>>::bitxor",
    "hash": "49216647892259288414929672958481390299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "982301070936084562911963758998468997339"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i128>>::shl",
    "hash": "39773573238743809663256062384402779459"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i16>>::shl",
    "hash": "1082163540545830085013373450753530336772"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i32>>::shl",
    "hash": "128680858631646263993577483467474076008"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i64>>::shl",
    "hash": "942287814322577420416187394017306445425"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&i8>>::shl",
    "hash": "252539937190737249915803041801086067623"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&isize>>::shl",
    "hash": "5356505460847980912015833210153044537"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u128>>::shl",
    "hash": "149852203886951387486197787015158494942"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u16>>::shl",
    "hash": "183538263294235525099709434339696780660"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u32>>::shl",
    "hash": "1701336194743894447517020692361573009508"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u64>>::shl",
    "hash": "808078487765998332215276812875328681725"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&u8>>::shl",
    "hash": "6208352775370002554899529852668925987"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shl<&usize>>::shl",
    "hash": "91549097917658057604988669028788225040"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "176383150502081127446208191877512451859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "440565740834160121213827855828351066770"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "149691459668116782217516318826599452737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "124482675145219567946180509673196773690"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1143499428003982587615878677987855849771"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "133138132955524501128739237247727721558"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "183752203939877259084711119473895086934"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1213521124969942350111367700292437748309"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "129996593080790876065846557140804500288"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "8415173714787332183455478532521541042"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "43624209959311293547030115736382696701"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1577392191990791231916005229099880027964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i128>>::shr",
    "hash": "57096178028305967858539257634691284597"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i16>>::shr",
    "hash": "61687546144417411519499644876974276708"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i32>>::shr",
    "hash": "15140118911099071514225419604806220397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i64>>::shr",
    "hash": "545837722399209032015376230060155293083"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&i8>>::shr",
    "hash": "541882691791609626014931345945229418413"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&isize>>::shr",
    "hash": "1693388644752294941316384147091589980393"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u128>>::shr",
    "hash": "456198822057699212711135824572274877512"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u16>>::shr",
    "hash": "61239053006114715061926466887222292339"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u32>>::shr",
    "hash": "53664697628923382242099206481622746474"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u64>>::shr",
    "hash": "485607672105432567612415430352223054941"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&u8>>::shr",
    "hash": "457689614151230286016896915851738093259"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::Shr<&usize>>::shr",
    "hash": "181109491526959132057242090987656529779"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "182080129368630667056617143203901808944"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "51010534474094576969785387110608898841"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "127838744820588401145140297026135605299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "22255500743446825929411271756732298010"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "399599796983974858114424206238339373614"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "99076193059943081884267449667685062254"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1010319870556696809015184308371732000169"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "344652285804007431414895723923769054867"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "35085643931172562285495474468902865019"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "1206651891671580821614902226397115267673"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "942002948064519617216867707358015375559"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "164704072608550450504717236125476545191"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Add<&i64>>::add",
    "hash": "4347288065778677038944566293432995324"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "173601254297067797065216885546285857908"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Div<&i64>>::div",
    "hash": "159408503391008844331318306888171774249"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "36185604823369214379917219655174558583"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Mul<&i64>>::mul",
    "hash": "135821074313011421076707594967682724236"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "1756327361310698988217801694403331770839"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Rem<&i64>>::rem",
    "hash": "11539441531538149468156113376041290095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "825724421168288616711775066197227266340"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::Sub<&i64>>::sub",
    "hash": "142513004029519767343447925761617308631"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "96316102650190031479894994796000929913"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAnd<&i64>>::bitand",
    "hash": "67087677907385168251875725438818088910"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "153460890003160982917818303783545377166"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOr<&i64>>::bitor",
    "hash": "98661561566531255892019932505652822585"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "707882045345784257417908932353554313160"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXor<&i64>>::bitxor",
    "hash": "1104105104978918306218327523216979442526"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "985700925120827666371191480120980986"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i128>>::shl",
    "hash": "852804888413233018311302949435800222667"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i16>>::shl",
    "hash": "173285983667699620016112181478681609191"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i32>>::shl",
    "hash": "1395294293137841272912007822523037706271"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i64>>::shl",
    "hash": "17221174510845622839676216348281538515"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&i8>>::shl",
    "hash": "395384414551747268516726301051170471722"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&isize>>::shl",
    "hash": "24358817130032681233562884214150968123"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u128>>::shl",
    "hash": "12448799838452023426043677445570969001"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u16>>::shl",
    "hash": "15545845882409469804155402154501928730"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u32>>::shl",
    "hash": "84011786744872865010485926919491551375"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u64>>::shl",
    "hash": "173126975605958918729686928665768629192"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&u8>>::shl",
    "hash": "107668757831138818387351480959339936264"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shl<&usize>>::shl",
    "hash": "989524020888061541418069358809913029088"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "91061186904754880532911111052870688076"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "95903380814944198508311287806632024538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1135058027876414220518363009848515132997"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1492558261899994628811870771559130048812"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "600155599632535587011173991469108757281"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "168516030387830243139965085331464752999"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "6997365793239651936919935357570287854"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1491846588008998081915551129074571136802"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "192580679013073806411469049241144630873"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "155148190971093573458544103786794994667"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "171911253706418958907391598678160651801"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1118001386770275987116201434268471362422"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i128>>::shr",
    "hash": "1608885083017142536711510966300179220122"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i16>>::shr",
    "hash": "10793510038942632191553762911427706851"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i32>>::shr",
    "hash": "90940240644097996907427601519986054171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i64>>::shr",
    "hash": "87413303459102244232602135790991395454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&i8>>::shr",
    "hash": "36580299056207493143128884485415817596"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&isize>>::shr",
    "hash": "161063859826475004246621013190950096394"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u128>>::shr",
    "hash": "153130881361259223734821044214477734597"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u16>>::shr",
    "hash": "107127202026920076312306297169403721547"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u32>>::shr",
    "hash": "61055976670106004783493717758385916790"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u64>>::shr",
    "hash": "389836115045788057715352951427488217011"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&u8>>::shr",
    "hash": "99482069310118649812423683790191507925"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::Shr<&usize>>::shr",
    "hash": "1513003368937797170111583716590823648582"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "39398663481365531708856058707887559485"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "106875298232009949165236616322622082042"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "694622746986909257214594945794670361489"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "142535014344133991816327407174865166805"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "115686167677674274385768472428881362185"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "152514109840408014956222904516595507192"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1244026862482305043811498435040733147611"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1577443089137953777617044718544320790614"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "95764582237541400779489414722198567315"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "124914440502974794459796187687356699780"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "15521289271885718536032825968333788447"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "78830822327228381931849520911283339778"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Add<&i8>>::add",
    "hash": "16081399841028309124989748148010105081"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "42318508700954666196354158475037255147"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Div<&i8>>::div",
    "hash": "15390595797244360553507448279981748178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "527842796269767286318310946609526588538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Mul<&i8>>::mul",
    "hash": "941376025482363763813582370477739619138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "175902576705779329113751463882415547649"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Rem<&i8>>::rem",
    "hash": "251509597104713635716321313215569468813"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "78505764234486978128708010948861620344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::Sub<&i8>>::sub",
    "hash": "47486703173012910214639231296222460032"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "1328192444968320123114889212134764148968"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAnd<&i8>>::bitand",
    "hash": "93259296566319690382505493385118781638"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "20512201929389965939085045037436514536"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOr<&i8>>::bitor",
    "hash": "96920856904590016813226358945182689183"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "107894253090510558685712689440850119893"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXor<&i8>>::bitxor",
    "hash": "402845813901389934818125212965512108487"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "7703449367001396050730562490622588477"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i128>>::shl",
    "hash": "1483157220672356942718344034150722568691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i16>>::shl",
    "hash": "262067886203186214615311112586676189315"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i32>>::shl",
    "hash": "1410827302944472967313708422505311754228"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i64>>::shl",
    "hash": "168344872597824701993088266441387519828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&i8>>::shl",
    "hash": "133932707576671489653259240707614586858"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&isize>>::shl",
    "hash": "1386999105542372951011206872020354476254"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u128>>::shl",
    "hash": "1462889062839012644814440027928138585342"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u16>>::shl",
    "hash": "64744842076333466326329593274689545"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u32>>::shl",
    "hash": "26347535261511892481521868699981758517"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u64>>::shl",
    "hash": "72790930237772923026672563617081772380"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&u8>>::shl",
    "hash": "111391340866476089165264359243949506726"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shl<&usize>>::shl",
    "hash": "136657006747178579513819568561108912030"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "19598274201788768272994889566425570096"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "36348166471769821365134093500288539507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "147250987269719186998373390310176692605"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1172166474008893536911003033636528304700"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1299658024153976387413800168968475352464"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "122247518271840455032475092357928272772"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "178340978224883894226436227237191952823"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "37241281880282513344846480673551891693"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "408333565932900229212237759745524158032"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "344733293955436122111232102208084484321"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1331149170147209609816035673660822673761"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "443726579785009759915107756801805170432"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i128>>::shr",
    "hash": "1552131647177513616387773815597060966"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i16>>::shr",
    "hash": "1648634376320005640115494697409420812253"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i32>>::shr",
    "hash": "761661490347441341711079866388039092040"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i64>>::shr",
    "hash": "50450178586763100949243195924911393944"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&i8>>::shr",
    "hash": "43783295920482225075665165767558373807"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&isize>>::shr",
    "hash": "1828096946383470274316807940640341529570"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u128>>::shr",
    "hash": "1245516878064909119617012464142409931918"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u16>>::shr",
    "hash": "55769606889411376168161433715618693696"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u32>>::shr",
    "hash": "133478508807084643096353978700726746724"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u64>>::shr",
    "hash": "1622215240159336169012664726656401283688"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&u8>>::shr",
    "hash": "899168595101537688612641897133811491378"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::Shr<&usize>>::shr",
    "hash": "398019045240264511413114322754625030354"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "10167267270619862532504957690016012724"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "156604913769161935043674888545228681226"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "20016597236846038645637667828899681200"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "147640042657884770326010817699519055615"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "37862501477361951523033708570995961540"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "495236533230642887611872514054620235275"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "812466762643138282510933619957249908230"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "107287850101132102288644101398206066534"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1719320678768493524111136387956999855684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "109455178507057675503083526808101477289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1219802530284501846714184009000832557968"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<i8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1692092736709747382417891225980903485344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Add<&isize>>::add",
    "hash": "8805686079944475611350984096474460021"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "177556830357758390736864232471910488180"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Div<&isize>>::div",
    "hash": "1323212925494182462114156986944341035787"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "448735122691256787812489796773668029977"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Mul<&isize>>::mul",
    "hash": "173576699342042024675425519591612513457"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "172988190801146796264928909622670041175"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Rem<&isize>>::rem",
    "hash": "1725392695410530756116506639532909565669"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "1124291732862555323617005171319755970828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::Sub<&isize>>::sub",
    "hash": "145877261955885918016755923527739024143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "96176383439325848685108666476079234250"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAnd<&isize>>::bitand",
    "hash": "38071612421504812805178745258320075515"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "1933791219228011864784002797040903859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOr<&isize>>::bitor",
    "hash": "50746843727834705868328364115076436434"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "445069134411954637711508986446571855231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXor<&isize>>::bitxor",
    "hash": "30710155611513879347075601446722797705"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "975907493882482636015592673310255489592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i128>>::shl",
    "hash": "170161250987861366628252435374021055656"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i16>>::shl",
    "hash": "138570557819853524163117939979899786571"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i32>>::shl",
    "hash": "74533808780023858878251592655944456"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i64>>::shl",
    "hash": "33067625437147956711146687505837952604"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&i8>>::shl",
    "hash": "1027684601852439296917242753054493814297"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&isize>>::shl",
    "hash": "501775984386239712114958886337762881207"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u128>>::shl",
    "hash": "1452025544373752646513828910657711052280"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u16>>::shl",
    "hash": "1283460126684880506012308253499192345964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u32>>::shl",
    "hash": "1033236849332832520914420046117091914505"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u64>>::shl",
    "hash": "23564185963445622071047297894102255563"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&u8>>::shl",
    "hash": "108015426006050484566122246949191117752"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shl<&usize>>::shl",
    "hash": "317206928983869388617327940171612845315"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "45033752457584220401473323612782661783"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "1172208909244351834115240997640549664155"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "30290913755218809964896763168686736904"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "26465567867484944916685433496967661654"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1074808688235119045210128926070922786779"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "189056103083718952014528043341035119758"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "1330184605486274376315029284264254227681"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "48620390712149844342522622415240359807"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1050074423954684212016085281385387240393"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "115987684886819713212976460661047131225"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "1291748932291831435218028265638263679517"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "265868562220712794311453878197753480616"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i128>>::shr",
    "hash": "1382093683573881391616774070236051886078"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i16>>::shr",
    "hash": "12568091902533536572341841742125498954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i32>>::shr",
    "hash": "289183939427598649437276182515892581"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i64>>::shr",
    "hash": "28618018201454210087807870580448003088"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&i8>>::shr",
    "hash": "130605957525433269556615608713922450066"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&isize>>::shr",
    "hash": "10181876605948011643308208243190258063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u128>>::shr",
    "hash": "107405210693320580457675665743945575684"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u16>>::shr",
    "hash": "8688453135200461676353625065710581023"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u32>>::shr",
    "hash": "31027835424068160835726677947482203531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u64>>::shr",
    "hash": "58603235887445848198556853349235692717"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&u8>>::shr",
    "hash": "173824627182493355651268605337357327841"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::Shr<&usize>>::shr",
    "hash": "991655806765924757117362592308698528822"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1574998535732942477411157467855447391695"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "780147713662889355611001225045898263054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "34789253648222121543547865449086617307"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "3893931657329458912340395751295093581"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "63939502489034349722690223891839710703"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1388956580330812483812872429187569428460"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1390909873276736676011386283042308224596"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "918369814182071685417558741677851530069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "2710965945042403273004457970171453064"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "431362748005813573217839629092991513399"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "86920055082175347084983300709926641053"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<isize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "60533744619499748755999377455635412418"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add",
    "hash": "18250082826846375391732605475351581878"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "109051889844115174228820985808216558138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign",
    "hash": "105331736273202085828054660725928842481"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div",
    "hash": "132538769606001337043173014501146241909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "67202915804876043895493935127156811559"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign",
    "hash": "32531769431972000612580646510629533309"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul",
    "hash": "181326481063319438012507826070417061419"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "622085926118377600818255580789777776691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign",
    "hash": "44286535122579502332397229047203653372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem",
    "hash": "19443427961560855472085351852347014576"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "162197878620878203786774644353006939153"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign",
    "hash": "65023431901203006584473333662646011664"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub",
    "hash": "1172523937627550331414447278084758481132"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "1597848733212401950914224174756751987361"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign",
    "hash": "136944852091588596076822112419782151808"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand",
    "hash": "116061279684051167259212110485666200300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "662246268908805693416281294730990289944"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign",
    "hash": "3296873567676229011337691460352983691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor",
    "hash": "1764329050659711519616763507009835618600"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "135639124775483466125788167986759539039"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign",
    "hash": "283443534260010745315318877845100588138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor",
    "hash": "158812345112495017292059619612924304020"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "65088830299820790998212520688571000855"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign",
    "hash": "1701681329461542891712079399899492507112"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add",
    "hash": "99488439241252588731906173442071259650"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "119466644817668571164242180114722115272"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign",
    "hash": "37894723816510518077010439749621737905"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div",
    "hash": "1297964853196888367411240273614752486797"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "120302051976101419585599086710204396732"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign",
    "hash": "44306271517662203376750309764050981164"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul",
    "hash": "142932700105901597715960648461212496010"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "19923913534139743999582195561394688834"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign",
    "hash": "450850129594684253512033336404948170150"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem",
    "hash": "945320091815429612916212213383451041040"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "16729019377811197521749199175951115858"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign",
    "hash": "18798170492476766347749738549612174372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub",
    "hash": "481823292919227215213493875664081035106"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "1127452393542565259512785925835319654631"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign",
    "hash": "1361043408290948233513425569821699158095"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand",
    "hash": "69522093078488701182691968419315072030"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "44760841107264514029481281613355190602"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign",
    "hash": "116447183278571575153029516413577215497"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor",
    "hash": "107696053303722850063308265197562693"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "174958379375357095065182096670043712862"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign",
    "hash": "578869835807304880815687491454422858586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor",
    "hash": "1598247842627424782498563261356617991"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "1643488919286381943810084182665675072461"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign",
    "hash": "57737553277200893662848294602620404349"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add",
    "hash": "81687661751885456275481085671576211701"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "1000953663533026386413581267789573714983"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign",
    "hash": "1217406201982604882410614898747216360694"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div",
    "hash": "1126212728710907075813093459777695690954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "988250557286506108317868478553604758270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign",
    "hash": "72259386095132228541247962007528221903"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul",
    "hash": "1481079504620601370117773640045542617744"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "50243926614279038291602069318253611762"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign",
    "hash": "50008164230072197968387367733701355939"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem",
    "hash": "30871946229442939778979370669599213108"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "543308289578567923115679086861639529637"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign",
    "hash": "1114823444032216191517834738630111339092"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub",
    "hash": "17871529864627021515514999058636760289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "69107375887990856912149055357481110449"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign",
    "hash": "1300012336886743624794450643730880166"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand",
    "hash": "39296136343245699154782816223497581029"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "12377320611696188319272020703829908012"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign",
    "hash": "946603231662119460718384657802091147108"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor",
    "hash": "180342808275788964502639972275672845641"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "1083037039577113378113385583644257960943"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign",
    "hash": "95615998864708568927071735277789353267"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor",
    "hash": "41336444471656824944324677192605728557"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "146140134587722073065145375714336792969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign",
    "hash": "776694546305664145217764522605777964768"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add",
    "hash": "1109009493029913686210027835702084282340"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "151664348776392438313652052326076404667"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign",
    "hash": "150548204663734455512530300727497802651"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div",
    "hash": "160979486585439393859499541961963484370"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "147867311219982050012697537520760927195"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign",
    "hash": "147285592720157843997585974303498125565"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul",
    "hash": "13146153442719039714985499613772194891"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "46173965572639776668093124917888467371"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign",
    "hash": "326079534190274414210924422443924124720"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem",
    "hash": "2005540571559849624995628251172268902"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "509056905431718655412124558425021595749"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign",
    "hash": "165922379683768183398223188702809158510"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub",
    "hash": "4141855243702439660149276416205161298"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "1069559826374446756215472680279363534820"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign",
    "hash": "52978647674505506975849263764806373415"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand",
    "hash": "1236713866675915720712477238053976915484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "103052585738857625684541099379975116178"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign",
    "hash": "176847675527832368357738291779629956199"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor",
    "hash": "55836845184067440144077553343943004427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "1128567060303788393317892002391804257982"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign",
    "hash": "13862608769745294230458830935774646699"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor",
    "hash": "141580013765474986239413358160229148700"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "17707576833995949992917341612469025661"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign",
    "hash": "511595734433507754110799132548758507250"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add",
    "hash": "73941262474701351727587326538955321524"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "840909558839961685816088163925179186701"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign",
    "hash": "155805481681145066762017091740595802431"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div",
    "hash": "1161110574895326192013873833897240109417"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "39443048523826869637662494880314071344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign",
    "hash": "172589013908408508408589894691729991794"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul",
    "hash": "127957784328936887647485573652576040542"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "1485898358566601005810881586411114644622"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign",
    "hash": "273190782900383561712489804909995627393"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem",
    "hash": "129595555895954373095468769355268715736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "57161671529145203338182026630678811261"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign",
    "hash": "29686096617357950909136666924299771607"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub",
    "hash": "477793033651375235517881013305346656646"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "122466246421442071601203586994912545144"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign",
    "hash": "702596282841439879615105286199543935647"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand",
    "hash": "1630621365301202529310901285190115573013"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "109180071681410803517841562184946986621"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign",
    "hash": "73766220143980328753138036001472944649"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor",
    "hash": "866806883226651269511302804767917711181"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "1162032211600261581214150003541463257682"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign",
    "hash": "1624538351174236447414234498674585960005"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor",
    "hash": "92540996012542967043619241180932763069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "182546372530755940971252613181602276017"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign",
    "hash": "83890807029149378755167482176635550447"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add",
    "hash": "1434330393377839612010273836410742453446"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "163387919566119313745688290201566294530"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign",
    "hash": "151378066184467014198575983577969320306"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div",
    "hash": "1030228441901659759914459890738980306784"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "31560531381843458915290839037263661466"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign",
    "hash": "139120400431529014754235359337694856268"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul",
    "hash": "1370247779258078298211931020819860306667"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "1897643807212875156384517522859562469"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign",
    "hash": "93947441444459151663161093240055678743"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem",
    "hash": "133678936738927237932410462513549504556"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "1407798500388893139516343636497843074318"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign",
    "hash": "164643493256206378534185417605140428528"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub",
    "hash": "863263506187301248011673436575181048379"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1451309616412806926310251973651842034004"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign",
    "hash": "8440184139957136017921046762280088450"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand",
    "hash": "1828468115415481153217878027543176775235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "59392367006562960105846074441352723660"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign",
    "hash": "104042205516945380651786347342361702196"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor",
    "hash": "92114454808915681921942043580658171563"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "1291111037551591781714878558366789810861"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign",
    "hash": "1449038442720842515018035016127726892440"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor",
    "hash": "84911048947564751926788627714258075008"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "1672755846121102175713607970581438855941"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign",
    "hash": "65958026626239577511076271957993840556"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add",
    "hash": "1345014626499097243213490390239318797739"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign",
    "hash": "665783113247152598812529008364409932914"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "855859644337690965913118062999482588277"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div",
    "hash": "146404671925282887123284756798997798599"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign",
    "hash": "749090089442625461212813420660907108174"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "141789733008572414105433121912059140029"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul",
    "hash": "136497177620364173173044816845437139056"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign",
    "hash": "1264438081135226388915013065772006153062"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "1799850766910048005218065542345396371927"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem",
    "hash": "572345440209604790910424180446201863173"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign",
    "hash": "143371592200190112223294930422149317824"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "4786382747236692966753171313411372090"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub",
    "hash": "147716109254423236436772811090305028717"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign",
    "hash": "68591857570462509381319051108972835614"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "162369835094670011559126095454728125756"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand",
    "hash": "162658924384775481811497609848243647471"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign",
    "hash": "10201215290485226734310313555200255170"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "89454985875076194338978216257181809074"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor",
    "hash": "7993859958549355241436510951020230864"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign",
    "hash": "507290057952456322615570886491677741166"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "1299120469359572685311503955178674383540"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor",
    "hash": "115032444554651789910232361074781383011"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign",
    "hash": "1745703620554546289018157731803642477529"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "1478132403338550570114098114490690080770"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add",
    "hash": "1147956195439140448710110170005009888810"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign",
    "hash": "129985527207719108491351087176571464226"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "1789937953331147959317972612231579771351"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div",
    "hash": "104882630657207293496293948593514314898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign",
    "hash": "140185434578285761259153527745686774060"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "1131993962076584786216827952631374608550"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul",
    "hash": "116115783517333266639810366104926886840"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign",
    "hash": "129492006535392317727150099207426599444"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "15674916103217759159088767198512449680"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem",
    "hash": "180803953696478116874946946782383254267"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign",
    "hash": "1680373835290425496810074702768605593691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "12219894768780847247151229171822970666"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub",
    "hash": "194454834656834403810882185740088657872"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign",
    "hash": "386966134281734165810386550144161741387"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1704770911361547887212046164732830846561"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand",
    "hash": "803882930352066403114451886920729272961"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign",
    "hash": "6662532813433776811898573284655068311"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "1782033587847265415315291524864607548660"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor",
    "hash": "31361003793912429357431144548677532497"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign",
    "hash": "1618370975963209406316921826867969191983"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "1016038636884134122513131499560342965745"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor",
    "hash": "1047878270604086183615610295487144476844"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign",
    "hash": "13688233100915224383439832460503683358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "154996026906220331824866978930819951026"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add",
    "hash": "1420729139501683534911239802787560331962"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign",
    "hash": "28723337722846178427406621906293013828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "172950968722139825313186710542231105986"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div",
    "hash": "130376081497487165083960773842573277113"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign",
    "hash": "1131209813820942921912666805890675074220"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "129458461888188938819453721068560249503"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul",
    "hash": "22566382744076844761836268692056874313"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign",
    "hash": "37829553847749250128817924990281281509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "96035087959307844441425811971336656884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem",
    "hash": "1202257644253891820915115049017583772437"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign",
    "hash": "36365111087645007851924271162143332086"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "418404936896498456715835333668473079772"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub",
    "hash": "11213298609616689216170538676932505235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign",
    "hash": "67470613470549494533942308889140178276"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "1624440935449771071715150610763268993203"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand",
    "hash": "37080286856003899047990889674781678452"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign",
    "hash": "287258251509186008113192733536106760265"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "440315587203506046013025005120150184705"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor",
    "hash": "1564749853167883689711923957301168605663"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign",
    "hash": "602407453368691605114735571783251691581"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "282423796864909936914436601478792440794"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor",
    "hash": "630132092674383739415665459291136542442"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign",
    "hash": "22469014992907427829783045069366995439"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "214901311431683423716343145163657722079"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add",
    "hash": "1394713626224198213617309368767650147343"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign",
    "hash": "85603810440684192110325425460072490428"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "162567280352348484467018447518464723319"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div",
    "hash": "1249779061440909654316713104262704873561"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign",
    "hash": "144813676143222566329374919723224989667"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "607569361873803422511834078885897596231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul",
    "hash": "1569286912439162307017594666218044743956"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign",
    "hash": "89471080488798542768794674662357196175"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "184174935311928781804665196107915105531"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem",
    "hash": "173060882501086053411719355485424273249"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign",
    "hash": "1118095327431525719217806825490008524490"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "8777460165268085755626141403954117145"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub",
    "hash": "892887643536444791110241468909088784517"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign",
    "hash": "825718774324806056810845882315623053219"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1237252993289246975517301516171017704485"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand",
    "hash": "50614862030321900625508540938358957118"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign",
    "hash": "164139171127549348133075146340203357533"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "11646767119856006626901101580794695979"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor",
    "hash": "95417544399714865644806911377773333002"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign",
    "hash": "1302265340321800745517909535362361431695"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "648269026285256390610989610475411152686"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor",
    "hash": "1708977673080212535711046244754509512707"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign",
    "hash": "153390725283826162806107921853227405117"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "12531217326715423808708750513409813010"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add",
    "hash": "143999921267679525151021414819174473351"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign",
    "hash": "60647348429734049879438811182508496174"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "170928583295105065555410870657244491818"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div",
    "hash": "140865257596772082349491615605541529578"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign",
    "hash": "612859710890161287016036697198143352378"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "666179824840086553215739505325240978216"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul",
    "hash": "708225373794311762814780413306118127333"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign",
    "hash": "101599910427605582911897402726771593304"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "83994267648781658354259228457862729149"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem",
    "hash": "1205236078966993223711954487197700647044"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign",
    "hash": "17652819092296832563327974977345080272"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "98332457634321152344706617182269895406"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub",
    "hash": "2329544705268913933991693278177859725"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign",
    "hash": "135332177812750790535282526782462228810"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "142693574406416112309538118381088754793"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand",
    "hash": "755731623060587473117877981405271329312"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign",
    "hash": "514499908178825922314765840034576615106"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "856963337185034067911586467666864902564"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor",
    "hash": "1767923857129448581813102355802964882253"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign",
    "hash": "1773776897110064071315752873652912943481"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "922320167500880790010014877495395766069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor",
    "hash": "284674910440890034717108151438183819824"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign",
    "hash": "4151010578304159355822428118960721633"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "73427880536604079576939364492649764793"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add",
    "hash": "67044866035609094651980166259663450187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign",
    "hash": "78504982216469354481386936051894299343"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "32958468685984012827229988268561530270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div",
    "hash": "114025105559483480713759257071096240038"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign",
    "hash": "39372936704112898357135707496838581257"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "7364933923604738271327043654240361537"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul",
    "hash": "118217298933954157148379886466010666765"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign",
    "hash": "1390570102485707173391735960395826254"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "30094602660853924137233684353344547835"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem",
    "hash": "690268116539563130615203399484232944510"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign",
    "hash": "181165083311720423496958512253594821447"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "883922874455661489015396035832153208175"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub",
    "hash": "1144243356602341663113319267009278388064"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign",
    "hash": "504848321461742748117693597971128539832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "863679967068963467817738275863733810628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand",
    "hash": "61012181842539555611573088166347473947"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign",
    "hash": "132635822176871065115576962794365647071"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "181079650058793629023886586147625468079"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor",
    "hash": "145035040879075232742470306038048521699"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign",
    "hash": "271868262121476712812691537441811548913"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "109429321922732562047553388763768655028"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor",
    "hash": "144351461023886293242135790072374635954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign",
    "hash": "52101040815256340184899941210906196161"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "3015109770237380283795457038600806382"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add",
    "hash": "124318254186926326219934917615078018443"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign",
    "hash": "528826191998990228911070839707253613731"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign",
    "hash": "43984149485625358263666692960301304951"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div",
    "hash": "39602659250417247556988196289196697650"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign",
    "hash": "64929990881837215278264675689524760371"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign",
    "hash": "1202376745200703262312607927888645842674"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul",
    "hash": "134724077481209407348478911555206546507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign",
    "hash": "25404868266002378616358302739306117395"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign",
    "hash": "540540657366516670016282570744097157450"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem",
    "hash": "242166529846155245816728223709684960772"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign",
    "hash": "49401291744507592258868629654636115054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign",
    "hash": "172682293957800419113515357877886767738"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub",
    "hash": "1315579419138443889016238845830481456907"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign",
    "hash": "106530193442064642432611367077884512320"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign",
    "hash": "691677001463371577715803835520073372138"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand",
    "hash": "92368634366378534385502858293805587409"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign",
    "hash": "112638183692065636706438879622552507591"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign",
    "hash": "26398043916040586692495313157169547438"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor",
    "hash": "141480798785229897446408960414633828388"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign",
    "hash": "68589840007841441723893735413952877872"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign",
    "hash": "569137733878465613814134933045338543233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor",
    "hash": "23916271851230768115777809224361496980"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign",
    "hash": "1748554170404285513212763516853213148235"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign",
    "hash": "595244748937998702515852212470740201387"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl",
    "hash": "726733470283959040316438017216848671082"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1700199709508990288611563756933038069868"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr",
    "hash": "758962288316396241211487467131112017801"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "767427627413288087315356514731361709162"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add",
    "hash": "172324211174739503801758054048874501597"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign",
    "hash": "13822373143201364468519332027554017332"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign",
    "hash": "77390443755242023404947821883839882477"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div",
    "hash": "1645794823903456633114865367797506353715"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign",
    "hash": "9228839945107265544614652032948745703"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign",
    "hash": "142679253107145273848840550853095950326"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul",
    "hash": "1669240998602891086611057880595834877438"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign",
    "hash": "1781408600950336254918231551978407722156"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign",
    "hash": "110370304432295366314724038807117636692"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem",
    "hash": "1879828558212830143693763085378724939"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign",
    "hash": "160805129265901471122933561942162025457"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign",
    "hash": "149966995896032082838050685595981950262"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub",
    "hash": "1110577429478037584212930140359626185730"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign",
    "hash": "18529361799120344328354094325486403050"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign",
    "hash": "68728850399935418501763566327463831976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand",
    "hash": "4807588364481912298396905888211641334"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign",
    "hash": "1466608213103489552613438925647571484377"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign",
    "hash": "160529791280737570049568586463749504766"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor",
    "hash": "126632912690605870897732627884276236040"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign",
    "hash": "90600996203719746109983565588830364712"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign",
    "hash": "112391099192682843537689574139929954550"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor",
    "hash": "1034370099859573272517377641768806340825"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign",
    "hash": "14478971664079585783374605911493096962"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign",
    "hash": "1228089707628394137617129669897772591141"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl",
    "hash": "92568468579232807351293918331050218862"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "401209831353051458813928043307312253830"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr",
    "hash": "1237256531623923406616466208305549805555"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "185119269539374875210213565055871935143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add",
    "hash": "131571028923382032891695097145006946704"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign",
    "hash": "147916136417268261848389609028799678741"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign",
    "hash": "173053417033427747494656470038076037394"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div",
    "hash": "227404711303114902411518625456632605281"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign",
    "hash": "1126680272947783492115705412009016473983"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign",
    "hash": "351150140099306333215280255918095544964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul",
    "hash": "1234805657474429510116141846792029668752"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign",
    "hash": "103183805238700659634766310061095644643"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign",
    "hash": "1357578318188674599312208495845790642373"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem",
    "hash": "37273851437170367813867729715377551257"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign",
    "hash": "92284733939996666210851979949692263841"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign",
    "hash": "392259166191092687017720512975474565468"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub",
    "hash": "198593577252895930612608687682482584573"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign",
    "hash": "1749594647532426830010218632301555224940"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign",
    "hash": "18147093181363085275882335790607828976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand",
    "hash": "1393170578074922409111846193070438534604"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign",
    "hash": "1396210104046048130297396547868253265"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign",
    "hash": "711938694952370400012052407179232935481"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor",
    "hash": "684610507719336348112386513891252316560"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign",
    "hash": "111289724821641448814997032125263847900"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign",
    "hash": "15687278480825091925851195090907983543"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor",
    "hash": "1125049933527302826612882980251286294976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign",
    "hash": "93376627218165790977768525927531651529"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign",
    "hash": "405210831339625586618115464254645436828"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl",
    "hash": "1515569234158213508412296602323157316587"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "710156998992869723610810772469298454910"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr",
    "hash": "1329192136211550527212716556614095402753"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1429749379550961472716037514549454087171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add",
    "hash": "61167076717942449099164985149336687310"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign",
    "hash": "119969748574751783618199316020632471802"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign",
    "hash": "57764611181157669928419208413202463206"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div",
    "hash": "50388917296336303005827375510446700292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign",
    "hash": "173320350399114126516699135109839693445"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign",
    "hash": "746788891045618970010678813111223378927"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul",
    "hash": "150926009127121906988355837958161465075"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign",
    "hash": "1698548395650658111115762089974786172369"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign",
    "hash": "1352631742800651079212681471182630008286"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem",
    "hash": "316347512524648179012867424399555379787"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign",
    "hash": "44934592257270799363517475069281829131"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign",
    "hash": "137175808091502233303288385401201540337"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub",
    "hash": "17386778857135269495797686832354158152"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign",
    "hash": "597518647136373700616324248805057366841"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign",
    "hash": "27852427371263790612862329957889149966"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand",
    "hash": "93925912589650474821687543244822659168"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign",
    "hash": "114680986043654787108997593929690389877"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign",
    "hash": "768531161508999383812696525414611133925"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor",
    "hash": "6231151656948170798961076956482200956"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign",
    "hash": "104545941093718818059253253142665153048"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign",
    "hash": "42029454949848701118575317071557100898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor",
    "hash": "7743164836088103048773633372046413470"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign",
    "hash": "167585060403344757983572372337086791726"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign",
    "hash": "123044454897275639776222372213290403993"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl",
    "hash": "119537002003287603812609288730772788545"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "45346293144108628198372223245730013218"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr",
    "hash": "130329751198014099325801258116919023657"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1047202280583891753417478900552959730808"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add",
    "hash": "24717999577563037522504105437311172319"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign",
    "hash": "11966141045251784582734536866175770656"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign",
    "hash": "1028603948761291814411058952351747730239"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div",
    "hash": "18041802417268731010517980487062609802"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign",
    "hash": "423907511794627613011010703649119854369"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign",
    "hash": "24914463536848839233544845982853659231"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul",
    "hash": "22406699046713652915539812489168014075"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign",
    "hash": "12472444890085432483193662937956962629"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign",
    "hash": "1818781573684613938511513139922979721422"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem",
    "hash": "57322275479707105367367803402347010728"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign",
    "hash": "68298158221774188927061016164851908341"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign",
    "hash": "1452206456913868140917199603443665102967"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub",
    "hash": "40179207485533336027715184407870004603"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign",
    "hash": "20957908018757554069728885463465024750"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign",
    "hash": "1630032243714252713318170775587513922897"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand",
    "hash": "590498094137724101910494428098353820468"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign",
    "hash": "1123881397969539427416087178253208191627"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign",
    "hash": "1275562245636013379614200149311003817495"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor",
    "hash": "1108091115140129937514953542999642808665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign",
    "hash": "3530647329457201636185440933785221225"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign",
    "hash": "107896552309375755669106705671124998162"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor",
    "hash": "17452574540261586071439527175372643916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign",
    "hash": "115112304442254581731692578425715270636"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign",
    "hash": "1002065140351136776114115243693364960501"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl",
    "hash": "1149708600086582969917788947584402199069"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "31875877019023932929790995383465506534"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr",
    "hash": "1546783813826076876916816606560426091267"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "285017991404534019114101181261032543552"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add",
    "hash": "1225960682423455676112469593388438477243"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign",
    "hash": "158527603079470621036765052823813289737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign",
    "hash": "1808882334278308781216223356356349074348"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div",
    "hash": "1079975838686229325314360020242606041509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign",
    "hash": "134212846373424522564347148232074023245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign",
    "hash": "63289400275577667633981470152010452220"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul",
    "hash": "4810736911518904601359672315778971569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign",
    "hash": "914849248543056025389217196351314930"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign",
    "hash": "68472885091829778821251249105816739859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem",
    "hash": "1567195592398045654910495684698170325256"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign",
    "hash": "1157754844470529735010008311755320092107"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign",
    "hash": "1172254649236484481518299903730573730798"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub",
    "hash": "23273943885212873329908425041932319486"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign",
    "hash": "1449610918907136007316906028586088894182"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign",
    "hash": "595292790477652363616216284968229244899"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand",
    "hash": "151261509319572185747291619825653378435"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign",
    "hash": "310066233128801963617356636579651814458"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign",
    "hash": "150159484272391744243969395568468604512"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor",
    "hash": "17991607808363675723725101257720246580"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign",
    "hash": "463731813797962402714340890439412294209"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign",
    "hash": "1419337646152155104214302838742888699722"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor",
    "hash": "682189864891054803718321659250623669964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign",
    "hash": "102404521911151712281991850556370884199"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign",
    "hash": "9368447794948208639521958302827083392"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl",
    "hash": "183281582145125443842196663750339581484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "108514454572008241296048325570608520161"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr",
    "hash": "34984824648766136128534308348679939537"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "147215600676946748122531416162428784557"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add",
    "hash": "64757897851393750739252977347641317729"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign",
    "hash": "112185122945856846471627428196004957430"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "163108429820555966685782790348084084939"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div",
    "hash": "437632120779387846013230826444290427459"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign",
    "hash": "22373675537540234125319952209520190691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "832016423958542295613862726077211304543"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul",
    "hash": "1408034168011162612613503586428144785928"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign",
    "hash": "295669359232700286811500723614647483543"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "6338817751265048232271707879950027619"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem",
    "hash": "67727794074922422252206203597548036233"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign",
    "hash": "58510674263327010945277032846761419844"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "641283724869946798615017369067724109291"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub",
    "hash": "39142490930633207832607413442071290070"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign",
    "hash": "183718537120310987521917240350981602290"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "83602317753533673697227791493929508472"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand",
    "hash": "44018115862946091542646429130410557674"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign",
    "hash": "62814127147443193126290619631949317665"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "82071411470565420210210689056424747060"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor",
    "hash": "26330834951842540012107738090419518148"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign",
    "hash": "1405067863853212093314918574672823158659"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "74938134058438520042181733900863658187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor",
    "hash": "4818070059956020289783123440243560168"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign",
    "hash": "93665889661244334547035444862566480826"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "271835930561162299013331566032198544555"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl",
    "hash": "71117694598939320292015853793884947630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1708655797219910424810436693415426103055"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr",
    "hash": "1739138385800810092810894049297904731399"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "629708735876730887215685310135963284861"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add",
    "hash": "82702763784607405189291166711717098980"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign",
    "hash": "36323142779111017857498713549582454522"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "141057847446750872221934053368521667881"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div",
    "hash": "15181755411594724451693882789372814264"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign",
    "hash": "77575137854596242797693806040051322832"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "1452487893870382712514934507406679032658"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul",
    "hash": "127513783509474574518248516877519600225"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign",
    "hash": "75885971601991658725754866304784755934"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "15625285144365089314457502895286688512"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem",
    "hash": "59577162704767800251312588181097953112"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign",
    "hash": "166004728477974502545699115347281409301"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "140491955865990499001080840442462518366"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub",
    "hash": "648090105002732691310588626958805562413"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign",
    "hash": "360356724653621640612499335961674274856"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "381343063315085901318366291239543032332"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand",
    "hash": "1352464039548715884410269511841758364966"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign",
    "hash": "23578613385003764417280454849944588043"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "1298828636613575153011207786300238451547"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor",
    "hash": "429545236967515737417431407512076736929"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign",
    "hash": "343999794724432530711566790295066245702"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "851637116765051116416548064847684267714"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor",
    "hash": "109051580359850756331623527519165118987"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign",
    "hash": "15601378089857961891569966427435795592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "154430096210286504212238031592576954136"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl",
    "hash": "184605335937452656617454650554047878056"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1723727637024570107211876743023056438070"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr",
    "hash": "1119593781458068462713152580589535618"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "446433321922240770911504077121424158444"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add",
    "hash": "127714617500241463872501616773201181127"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign",
    "hash": "122241195090839099812795593257499571045"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "1270440167143456581514184308137211162128"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div",
    "hash": "1649225097630108749512423830546474125903"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign",
    "hash": "107653758227676441897929533126610249239"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "56826537041856211865676294410019049604"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul",
    "hash": "102477568153338089797633356794178465477"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign",
    "hash": "28097138012059848208118037410193723588"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "84474569277225862897335515656153574560"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem",
    "hash": "749596211802187509012109957331352674590"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign",
    "hash": "764663435228963602711254481631806290728"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "831988880628851335618130671210104513487"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub",
    "hash": "178038491773592761374561174452754460679"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign",
    "hash": "192265463770019974510985576829415186454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "598765841568908707911465413620523949724"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand",
    "hash": "20983777856224345435546447780146448525"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign",
    "hash": "62800876810167095624565995184421935746"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "75344653188588802418446401549333453770"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor",
    "hash": "155357099666754129057917847287437068588"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign",
    "hash": "1205204559444102039812622201414758964009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "135574074389146249012940634467590380976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor",
    "hash": "7574172870040127062101281017078519165"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign",
    "hash": "266865873464948294016375973738870629802"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "20403926155575769509043923524667273761"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl",
    "hash": "1435127310752512498514478135724359783916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1822222880424414816815739025754736455020"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr",
    "hash": "96998258677562179199500762974162899433"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1314950019767168995016745453722082507229"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add",
    "hash": "157637978410786920102251231639944765906"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign",
    "hash": "1469642767956991486717440343842048413916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "563048630231690337816091929911282128456"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div",
    "hash": "998128406780728828011899710384370019426"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign",
    "hash": "393787071662385641418424522263553845996"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "1154908864966759533316813051020988552397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul",
    "hash": "86955148892584067516100735304012259767"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign",
    "hash": "687393574809829317410958160126005254085"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "1785077179954281855244114566487921882"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem",
    "hash": "83396284779805607057093000597443754027"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign",
    "hash": "151724383828617415494861499540084212002"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "66502250607560498984960652957284241287"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub",
    "hash": "52166556372273489041833704252502339884"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign",
    "hash": "769644157135395920410265858313909635300"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "1820475684508213601014988583883602110036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand",
    "hash": "871040197351348750412724879061980685199"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign",
    "hash": "1333178227723686208616163229483516697427"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "888764511829950691818342157242258839686"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor",
    "hash": "174614712190922636875452077966235976588"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign",
    "hash": "88460844250942776416937262224297153659"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "29083108871880409109508163510420997792"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor",
    "hash": "1586049435178107453612383713303199725641"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign",
    "hash": "68848288119973255704130395390941503871"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "36538089484079912007393025043979859575"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl",
    "hash": "358666749268664847612065219719831717577"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "181900281023396755304678831128225389032"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr",
    "hash": "32454846851794362412248681257221290630"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "115601398359676014703584911022525448187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add",
    "hash": "316444464572189526216933120924346564599"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign",
    "hash": "71422368585450384196279331709101546326"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "729964068884434741212207595365670794620"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div",
    "hash": "592339320898555481714920502320321357001"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign",
    "hash": "114565866622012982666863070241310378387"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "1053068559656305775414960250172314403972"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul",
    "hash": "17220558417200156814186431004495819454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign",
    "hash": "446222505672101574315183081256115699160"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "165639564241787891465479721097330491410"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem",
    "hash": "775771774998391585215297915302678858873"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign",
    "hash": "9360069003907959585203133393914129379"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "139561641365856561985299113355683643503"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub",
    "hash": "92351770620941134709613221223659343706"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign",
    "hash": "113120264395898956691102202846484851226"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "1672275746609960355310188603283187736916"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand",
    "hash": "62488370227650647022085407504836881820"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign",
    "hash": "181680051478863663655397649925619395543"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "69255212708372938841906491518763142292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor",
    "hash": "23951749703883397626301483996048450661"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign",
    "hash": "85495617743990596114439180685302833049"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "11049774421658644584862748461522268204"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor",
    "hash": "550278146678498783517346176504087166131"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign",
    "hash": "601661257558441129816803333191665100104"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "988803162506666339215319500345016401255"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl",
    "hash": "113703321076018657399577110103260976179"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1051119429181633170714143454058345564834"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr",
    "hash": "1277660052134070953110873085438156319879"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "461228091723259298911666143035873286813"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add",
    "hash": "163017121710824540033655824765537050048"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign",
    "hash": "113511913712904290669079950336291538889"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "96515150654964807568467786113054426817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div",
    "hash": "32710998738676913822788153471691561692"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign",
    "hash": "768487001056833826410517647422165936355"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "1592321553106457902912298364163734547299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul",
    "hash": "122049295376121049544213279225798266943"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign",
    "hash": "26695953402751373136860210474322341756"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "406912010631643240414538026905428465068"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem",
    "hash": "130244888005441216374956884383736418179"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign",
    "hash": "1673376794890845306713304408989805503977"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "192539611752601935114657403039220284006"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub",
    "hash": "56669890892619732084646440933516028593"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign",
    "hash": "810659734057279382314732264336377875942"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "1028821177326328296916655652811745992154"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand",
    "hash": "1731687196624095132514871550556661484061"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign",
    "hash": "1637768745214924097910405335289472988718"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "569878891655490692815458167541038050571"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor",
    "hash": "3317809231671811865487297446720473347"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign",
    "hash": "13497259800952291937111938838496015626"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "140472110896658082329423717956738288600"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor",
    "hash": "10038582144485264775895759590312866750"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign",
    "hash": "8136144075023642371678916997839283128"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "629908928388214860311385783904487328571"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl",
    "hash": "172012799523129277371671253322397010498"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "11325438143640200914913552090735526475"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr",
    "hash": "3318133331624565334567288948008843476"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1762121438150143134214988904528995411006"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call",
    "hash": "50173920349253334228079836397153077362"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "35033458128388146710935388768972613245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "373011848044010356217388045885145014925"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call",
    "hash": "108394141991228696735371751419196337736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "913951883281155866316407617760646942727"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "1502081372373612158912516636553530816421"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call",
    "hash": "164975986244594568074245911661687282729"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "1415674832115589984915699663094383271662"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "94079389120897931502433541888123070505"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::Fn<(char,)>>::call",
    "hash": "18585286390013717295216920135813302204"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut",
    "hash": "28381273005810439182887105933849315358"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once",
    "hash": "10775357829946649347889196577664719998"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Add<&u128>>::add",
    "hash": "1514362723827972427216680632012433885902"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::AddAssign<&u128>>::add_assign",
    "hash": "85502215548831607842591848145986741267"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Div<&u128>>::div",
    "hash": "981184062738159956513158068134748568070"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::DivAssign<&u128>>::div_assign",
    "hash": "22209354827997613234861078992488128568"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Mul<&u128>>::mul",
    "hash": "72233827428802669483205267781829124181"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::MulAssign<&u128>>::mul_assign",
    "hash": "1531009804705253245215838979756745841023"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Rem<&u128>>::rem",
    "hash": "49141969402413474811907991672718521808"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::RemAssign<&u128>>::rem_assign",
    "hash": "72929521368616950557239015016103115281"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::Sub<&u128>>::sub",
    "hash": "1117340140399179051407943550677469334"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::arith::SubAssign<&u128>>::sub_assign",
    "hash": "468604383200914895710374618966166203652"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAnd<&u128>>::bitand",
    "hash": "80516468661586769405579756181427362017"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign",
    "hash": "70439839935777114915533205068149349295"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOr<&u128>>::bitor",
    "hash": "14994252612708596612078726079370235590"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign",
    "hash": "897520762761319360316993013547204606880"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXor<&u128>>::bitxor",
    "hash": "18138917047893947445336975932655553295"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign",
    "hash": "1163156595985550035211769556892379020104"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i128>>::shl",
    "hash": "84996677401559348256871719864272417382"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i16>>::shl",
    "hash": "771010752469341003715871388636475362356"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i32>>::shl",
    "hash": "155980807211680235664450275945381776099"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i64>>::shl",
    "hash": "89733669270969520772465135154111177901"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&i8>>::shl",
    "hash": "1503750814282720834616597591146488530141"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&isize>>::shl",
    "hash": "1349039994968135085411172988293774868397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u128>>::shl",
    "hash": "20664367898289459432673912547555809660"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u16>>::shl",
    "hash": "157647366504433526285607850568498325364"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u32>>::shl",
    "hash": "631149876198323960218299242726537677982"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u64>>::shl",
    "hash": "5435825231088696802899476083225238912"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&u8>>::shl",
    "hash": "492690636269593929617308686994962672385"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shl<&usize>>::shl",
    "hash": "411920578595332706517745299765769401681"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "16883511403655717435232368576525205259"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "178888525050520179406894042000792898647"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "25671997863287146986307097627278378019"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "15114936458280351455351726476596737809"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1298785872189070444528953982727088737"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "1451296274846718527516635708981116045468"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "89230237106300665274031696773047205643"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "1011293008455194989310595818439008080736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "1031808521620120712514869512541389775859"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "67864386316421311511376029696824554132"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "3641623758731344828271748548108794484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "1650440438868734320510442084776707681200"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i128>>::shr",
    "hash": "145090827596173556312773589857099709738"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i16>>::shr",
    "hash": "140307401752732885456914709138583731951"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i32>>::shr",
    "hash": "20078339390431030423008367784157049954"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i64>>::shr",
    "hash": "32322899727800597712101863260547715929"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&i8>>::shr",
    "hash": "130042533568499543226999453911996644063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&isize>>::shr",
    "hash": "46629656977533014095125904480005294131"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u128>>::shr",
    "hash": "1546754364284836039317969418969164154252"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u16>>::shr",
    "hash": "29984272997239540567189377744194053887"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u32>>::shr",
    "hash": "2221475392511778528296188325419278147"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u64>>::shr",
    "hash": "56056703052419431677335347833531649677"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&u8>>::shr",
    "hash": "329670790714810139214634237858604060127"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::Shr<&usize>>::shr",
    "hash": "659097443286512229718269358911094497604"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "600714873138169296611999434440795550997"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "1242833480344002467010144553289059656956"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1235973141913195096115635760768341547404"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "20525155196073219519439435002305460617"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "1529575370104355388912942129417146538335"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "1151112914962198437218382766184013401442"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "95689127301109520199380152122129857374"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "30500412640384401961069449604882498135"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "835206363612474506715626762326376773488"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "89440871184946930305109494040114828050"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1700667159295398519814449607763138116615"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u128 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "124095731486558349881319412883215392983"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Add<&u16>>::add",
    "hash": "70981843495260705729363924417177322796"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::AddAssign<&u16>>::add_assign",
    "hash": "17302079176355728177390637297460515113"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Div<&u16>>::div",
    "hash": "994580256044773737114211924094919258879"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::DivAssign<&u16>>::div_assign",
    "hash": "18007038261348268451690041623542477484"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Mul<&u16>>::mul",
    "hash": "860896616173629027610630244724983812308"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::MulAssign<&u16>>::mul_assign",
    "hash": "49720405095741136576743632150547681117"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Rem<&u16>>::rem",
    "hash": "677296344909660699310071636642523584315"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::RemAssign<&u16>>::rem_assign",
    "hash": "136929094200660877462496967520377234273"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::Sub<&u16>>::sub",
    "hash": "16155790053872173224916466003801259263"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::arith::SubAssign<&u16>>::sub_assign",
    "hash": "1087057947587388891411279068778199710822"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAnd<&u16>>::bitand",
    "hash": "254948310503638719114395960558035012937"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign",
    "hash": "87034567834937018605713411440835549528"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOr<&u16>>::bitor",
    "hash": "214641144967882240111571304718290805799"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign",
    "hash": "1008232893578946015412660248937210907028"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXor<&u16>>::bitxor",
    "hash": "983764571754284950510053558557166880987"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign",
    "hash": "77953346776725273044162235170833303380"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i128>>::shl",
    "hash": "75738540978559987076467919203803937749"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i16>>::shl",
    "hash": "7860069396678963583412006947044133566"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i32>>::shl",
    "hash": "1318586679545849115918238482993963494381"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i64>>::shl",
    "hash": "1581782885049936484218443799185241381774"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&i8>>::shl",
    "hash": "1028479923056888060411216656813429986759"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&isize>>::shl",
    "hash": "702214594001935676112121683174275708143"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u128>>::shl",
    "hash": "277456627930883848017351602503875305654"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u16>>::shl",
    "hash": "528527831812231691418023665747710154413"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u32>>::shl",
    "hash": "513800667692683910717020155176984680402"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u64>>::shl",
    "hash": "37189465912993252062265547982246439177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&u8>>::shl",
    "hash": "177843228572594788227000912706035966327"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shl<&usize>>::shl",
    "hash": "102228009408256768799995258910632085137"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "1696690393030544690711555035271291524608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "52194566563171008329441987841480834523"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "161715349675006077222968450769752682545"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "183490837501747638818949558706550406270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "78911420431383543514269774967037882909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "61149728457756433751533537597231427483"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "179745099153719482025478888553482089"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "679471560969680722813005407634445733054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "400548967642880934817342710022953691424"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "11880952794598948668784020646411555495"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "54843662324384090319951445931407620590"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "636181583422357115411186775918516646464"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i128>>::shr",
    "hash": "142584078873144198265437202744888858678"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i16>>::shr",
    "hash": "61758895680889976612397993815211833362"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i32>>::shr",
    "hash": "774197850173514598111965704728087720635"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i64>>::shr",
    "hash": "94493299966895011786488640115300019144"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&i8>>::shr",
    "hash": "4299268858700886182344100462145601549"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&isize>>::shr",
    "hash": "139059140795670877082746555519385388374"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u128>>::shr",
    "hash": "121525826610139722355202615812297117691"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u16>>::shr",
    "hash": "1483971247113910895913988984882845275556"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u32>>::shr",
    "hash": "114966096942749649332489388775822495595"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u64>>::shr",
    "hash": "1680643924816353760313675178873616850849"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&u8>>::shr",
    "hash": "14841081737882497273206734229213802039"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::Shr<&usize>>::shr",
    "hash": "174555412569114476217554257829527648509"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "7936710530682156577410119747884166768"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "48886771588876260692294532421285759359"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "121017067379002302575711762236267769812"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "70835975981273720052158764706720446560"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "101439548894051042612116724715569209395"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "52107809232664293299337077524403137662"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "84970104923241336308842017890841794191"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "351486365492105911618180504295869535123"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "181194907434584627001031188010640847757"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "12123790743053385077468519557218154225"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "7768349940087337310785172596495512523"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u16 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "93801470006958094663793791166275727471"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Add<&u32>>::add",
    "hash": "1562402550226840412114061863121739509473"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::AddAssign<&u32>>::add_assign",
    "hash": "356135199289128007112404115160384804167"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Div<&u32>>::div",
    "hash": "396455820969257421010683795859992048880"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::DivAssign<&u32>>::div_assign",
    "hash": "156642327676198770555594632326471144892"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Mul<&u32>>::mul",
    "hash": "142589219196834413102419689027462495323"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::MulAssign<&u32>>::mul_assign",
    "hash": "54179650539772661681598287491188174046"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Rem<&u32>>::rem",
    "hash": "81692700183950011147351894163027726600"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::RemAssign<&u32>>::rem_assign",
    "hash": "1134423459776164676511784402062488153234"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::Sub<&u32>>::sub",
    "hash": "899099864618946033213385495692255635247"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::arith::SubAssign<&u32>>::sub_assign",
    "hash": "133923302355182814178318843305145774149"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAnd<&u32>>::bitand",
    "hash": "51575800219120018099342719694894857329"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign",
    "hash": "168818644811572805152608633899961243472"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOr<&u32>>::bitor",
    "hash": "30162151561243442287710297406621132171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign",
    "hash": "1249816722904228775716768296108947862909"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXor<&u32>>::bitxor",
    "hash": "158357589612220714034212121457982958565"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign",
    "hash": "188111213871257147610152427332656107753"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i128>>::shl",
    "hash": "796148927461590160213057159666584838092"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i16>>::shl",
    "hash": "27087388794108337681234211298979990615"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i32>>::shl",
    "hash": "10244624493388371722538874779221052835"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i64>>::shl",
    "hash": "581093280782493302310974462481604666053"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&i8>>::shl",
    "hash": "131459501312780672558657735840483518602"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&isize>>::shl",
    "hash": "394554973252214311310295363514829417407"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u128>>::shl",
    "hash": "13789340441937379416880015971672798545"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u16>>::shl",
    "hash": "1447004881511239582915820755052022413422"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u32>>::shl",
    "hash": "36123007710768156219164795002713717819"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u64>>::shl",
    "hash": "478520825756080495317706215278448868309"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&u8>>::shl",
    "hash": "218252353745840203710759510701713708649"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shl<&usize>>::shl",
    "hash": "154837246895938299008368442820735281254"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "140837035236210450316165507784460426526"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "68829653251095658416714350672882546307"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "57399287761231106785315110790179549959"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "215331373779470841318067570701980426586"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "1491602304733240450515875691958904899959"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "98798642391163883928557935953142066678"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "313353709020134412117686381181960479872"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "18729387218997801759644641974814417390"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "392774046700642009416088980275146009612"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "124137842165395749912913346584570296407"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "702860554762885072217012053823589925984"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "21663942574406860275393407938950865438"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i128>>::shr",
    "hash": "7356399844125902861946368371862145758"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i16>>::shr",
    "hash": "247990655039249428915593080397502003150"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i32>>::shr",
    "hash": "604304809889586611416689736366030583470"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i64>>::shr",
    "hash": "1460084302039671770535894449115705245"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&i8>>::shr",
    "hash": "156748937360179954794673337408959928061"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&isize>>::shr",
    "hash": "77316888841600821564230597762450838295"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u128>>::shr",
    "hash": "965647404146060544317736751050537809063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u16>>::shr",
    "hash": "694539559166520790817677823533617709598"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u32>>::shr",
    "hash": "12804012819239991703051069254155126778"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u64>>::shr",
    "hash": "532787278496158005914939870849502084938"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&u8>>::shr",
    "hash": "153720949687239090789007138392145651327"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::Shr<&usize>>::shr",
    "hash": "142444032760431982663262005119407433473"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "84830576771171531954848593100832918036"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "5897937364312012740709748751971744969"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "72491560952888841256711808357384037831"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "181912805908976180782062646275415525027"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "170518992362135716267086532432852084486"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "159646281148737083878729685988383085015"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1058290494325484566810294383314342124021"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "625797045259882365412385084247286750885"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "59208910928609745109494049993102903499"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "178476523054472094318970265674247463853"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "177029416547364857788185398554788787819"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u32 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1214529214939003653517227163259093348790"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Add<&u64>>::add",
    "hash": "159811056860126407524180671590361452478"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::AddAssign<&u64>>::add_assign",
    "hash": "73447554114848932104864860636174846541"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Div<&u64>>::div",
    "hash": "655931114679202927116085675824327586918"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::DivAssign<&u64>>::div_assign",
    "hash": "88885159754168722377113239345895854000"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Mul<&u64>>::mul",
    "hash": "342120817073269803715331045439220090256"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::MulAssign<&u64>>::mul_assign",
    "hash": "6558906594449569189237912785084966083"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Rem<&u64>>::rem",
    "hash": "160888806422464338913158444764716839892"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::RemAssign<&u64>>::rem_assign",
    "hash": "22689489159333568517462659449719135077"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::Sub<&u64>>::sub",
    "hash": "1475741248757313585414396705062562866751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::arith::SubAssign<&u64>>::sub_assign",
    "hash": "433919925151283715710780561064800910501"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAnd<&u64>>::bitand",
    "hash": "1261164417336570835914515005158024996073"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign",
    "hash": "173542518102356843013924044254376088937"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOr<&u64>>::bitor",
    "hash": "45252714368643286231473991266407902292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign",
    "hash": "172873170990043773895627831412482170101"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXor<&u64>>::bitxor",
    "hash": "94168229644956933055550237489814656762"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign",
    "hash": "58279817372531794957833704265141238725"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i128>>::shl",
    "hash": "187270780634551241817537879382240384475"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i16>>::shl",
    "hash": "1134054031907705439816707261074107816714"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i32>>::shl",
    "hash": "1206873139377720212517473136668526280615"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i64>>::shl",
    "hash": "177163837346130332977562642835104300010"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&i8>>::shl",
    "hash": "491129610447399662911392830477208351398"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&isize>>::shl",
    "hash": "83300957635980727437497138300962696507"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u128>>::shl",
    "hash": "1077212926426555573314128282744683659455"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u16>>::shl",
    "hash": "858085272580527336516394150178020821726"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u32>>::shl",
    "hash": "549876542492934201414937537325652185013"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u64>>::shl",
    "hash": "1546766819914747910188569127066200837"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&u8>>::shl",
    "hash": "1264812596592544259914139018189071620592"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shl<&usize>>::shl",
    "hash": "1107483617363304939613700420745634463270"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "459267291735016081713927254399482941931"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "77782369031838338746144007365111392354"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "34813607163530780613512240489337199372"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "1760154699337944859110804407676155276569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "70958946120597147202034197705701060892"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "10481557071955333913903031947452292644"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "121710625304755006481507440531457615867"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "163036422188469957226758177416839510762"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "152011269216108202204459247429781850751"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "93757320709684563327680301758625472522"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "942606532212383248016539501289223697538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "843920591082224810411553744452526352496"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i128>>::shr",
    "hash": "476844556848994018113828617019740478835"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i16>>::shr",
    "hash": "317038668975594429217696524274159954731"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i32>>::shr",
    "hash": "614578809619556518213892826080164060148"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i64>>::shr",
    "hash": "972866182782619580512381421116428709807"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&i8>>::shr",
    "hash": "36963701724478921785979931349384084628"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&isize>>::shr",
    "hash": "93894044646501139906143775513112686946"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u128>>::shr",
    "hash": "121005038885801211182267300231436596290"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u16>>::shr",
    "hash": "13187570686772466162130647504043180127"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u32>>::shr",
    "hash": "97985095800683416036355966819517462014"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u64>>::shr",
    "hash": "1179788514528730070112819906676169031090"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&u8>>::shr",
    "hash": "1581246101229622021817752154259827187594"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::Shr<&usize>>::shr",
    "hash": "1706652383436912565413591939185494009906"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "279084745859545284110529977149679067849"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "25116121043291769918774648045486229758"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "144759599919815138632882237571344910371"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "883620616997002192412377753677208343357"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "123059047036501742182711209385980517292"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "137766612060276138833222038295950933846"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "1255249773612791180312215513851613605904"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "93736070864827897728928225031057703005"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "62548233371987236964765031957175457504"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "18518918699899152993976539477121495463"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "1623675526544104573417243229670599192383"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u64 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "90383871666339573811260421427516117522"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Add<&u8>>::add",
    "hash": "181817859089060691096383222525031873931"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::AddAssign<&u8>>::add_assign",
    "hash": "62860219023733634415281231314620860569"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Div<&u8>>::div",
    "hash": "178927525382006883561609219234792147894"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::DivAssign<&u8>>::div_assign",
    "hash": "5773726006142283096999719209183001520"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Mul<&u8>>::mul",
    "hash": "122789982775450891483045610915309886362"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::MulAssign<&u8>>::mul_assign",
    "hash": "36195050400983280482537510442571653502"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Rem<&u8>>::rem",
    "hash": "161017502704598070755354906513497904844"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::RemAssign<&u8>>::rem_assign",
    "hash": "122034482508467648912221432391142491744"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::Sub<&u8>>::sub",
    "hash": "74072925793339511012849426103873169951"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::arith::SubAssign<&u8>>::sub_assign",
    "hash": "639104268945727806613751712754554056397"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAnd<&u8>>::bitand",
    "hash": "104795448333294109059699512637264417073"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign",
    "hash": "162618841797259887063716343942678335989"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOr<&u8>>::bitor",
    "hash": "65428038836162813947369238482007539412"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign",
    "hash": "1360238213065887990710073220702107045350"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXor<&u8>>::bitxor",
    "hash": "1370058439298555522114423525410993512401"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign",
    "hash": "99739419827789866708157524730018597088"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i128>>::shl",
    "hash": "177867734791300176379605136340738666945"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i16>>::shl",
    "hash": "174497430076418139403168980091922743333"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i32>>::shl",
    "hash": "55734585027183811893743745537772897054"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i64>>::shl",
    "hash": "33381602628810274391141230371542443179"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&i8>>::shl",
    "hash": "154383636352580612986008994868784960865"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&isize>>::shl",
    "hash": "47797006421585204076647653797415831406"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u128>>::shl",
    "hash": "84603253549356597984682733296741046946"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u16>>::shl",
    "hash": "1405705992743405061513705694707850298344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u32>>::shl",
    "hash": "161736158315913208895809244669252398934"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u64>>::shl",
    "hash": "689816537169923721212543057433690745626"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&u8>>::shl",
    "hash": "128214501592393366039155879832118825771"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shl<&usize>>::shl",
    "hash": "11456748174156177299565111922271828212"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "156557133924597564821790036723873542928"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "5973043771110204237338751946241814941"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "1291932494206311584116568129421602373415"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "483377592152828325815313936973036664573"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "175655305346203357525072271398330375955"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "171606622906375030756830137888606757124"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "90707241354963859318562878361835754781"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "636929486708628888014752530644489618113"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "74776739885695452512523477107229170868"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "6750402737847225289427372809993050096"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "74604890786942939202943644337919903043"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "125185874488867927025344160821075096898"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i128>>::shr",
    "hash": "39203130674271059483116516298467352864"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i16>>::shr",
    "hash": "639906417408833814212280372807845217373"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i32>>::shr",
    "hash": "810529188183520523415206043800462806355"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i64>>::shr",
    "hash": "56079556744016919637774289575738205976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&i8>>::shr",
    "hash": "8910454594844517956449959138881856037"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&isize>>::shr",
    "hash": "615240164254757154618041729131229375448"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u128>>::shr",
    "hash": "718657026652910573011720119846293703504"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u16>>::shr",
    "hash": "479085510588133211110934231848220998296"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u32>>::shr",
    "hash": "805361258732436574815061949934390502063"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u64>>::shr",
    "hash": "101521957202985675696983554183081167786"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&u8>>::shr",
    "hash": "677530662529373878618241591588745211588"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::Shr<&usize>>::shr",
    "hash": "24663125125432519311376381724568538439"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "1632253034828014450513457470084871597713"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "6581784059816523334904635731731149278"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "1458551880009724114012433493472985243161"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "639752965799219358914262971819963679122"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "149050875180427608813192554599606550989"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "65409036157129724606154398001455722172"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "176570741478654639122663152453920852171"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "1431963726608432348713618350433184328777"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "1030324935101906881715740774236259858289"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "142072629245415685883597066550594916058"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "64209872774395110183455758158935953215"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<u8 as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "1323330146719930616910003126576427458334"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Add<&usize>>::add",
    "hash": "14244398263503708209970856359123864538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::AddAssign<&usize>>::add_assign",
    "hash": "142097962099567816002122035252718166538"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Div<&usize>>::div",
    "hash": "126758824642588665856106986897378097000"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::DivAssign<&usize>>::div_assign",
    "hash": "5859261414640462453351592350242974964"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Mul<&usize>>::mul",
    "hash": "85051436865526769606041207507035457519"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::MulAssign<&usize>>::mul_assign",
    "hash": "467312510253158550417145539188020594904"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Rem<&usize>>::rem",
    "hash": "1141885612163001096816696929988743791680"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::RemAssign<&usize>>::rem_assign",
    "hash": "92086710264767809286968140758068447296"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::Sub<&usize>>::sub",
    "hash": "74895081671358420617131639354796395811"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::arith::SubAssign<&usize>>::sub_assign",
    "hash": "528302032100661177113077817358520597211"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAnd<&usize>>::bitand",
    "hash": "16294440633397255262248016727500357009"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign",
    "hash": "93091050754791579637606913143610058761"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOr<&usize>>::bitor",
    "hash": "617777479607722589615168591449815397638"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign",
    "hash": "974494975841445991310153083705995322791"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXor<&usize>>::bitxor",
    "hash": "76588124457096950518694517594324788784"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign",
    "hash": "6131601859442134691664723960281878051"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i128>>::shl",
    "hash": "74869319640920582891549769829762341241"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i16>>::shl",
    "hash": "42224792553156366355818891892790874374"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i32>>::shl",
    "hash": "145728558656797835427729351158449356"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i64>>::shl",
    "hash": "56606349855482544463208255061233393608"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&i8>>::shl",
    "hash": "111012602886189382621448608615908683955"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&isize>>::shl",
    "hash": "80209575828440210311499132191261668260"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u128>>::shl",
    "hash": "1104574715425686976114782360422320569923"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u16>>::shl",
    "hash": "12929999332501382477416593644805837614"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u32>>::shl",
    "hash": "145260389629552551047602667211542111988"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u64>>::shl",
    "hash": "808946083272378130247942602800940396"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&u8>>::shl",
    "hash": "26568995352771024457295885392525980320"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shl<&usize>>::shl",
    "hash": "335546084629479792510521451650095776653"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i128>>::shl_assign",
    "hash": "16751782402106015149385987207733406976"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i16>>::shl_assign",
    "hash": "8839016140703013791226073938297260310"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i32>>::shl_assign",
    "hash": "63571265564783399810045848088989255318"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i64>>::shl_assign",
    "hash": "110325805162171648915461721046711901004"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&i8>>::shl_assign",
    "hash": "42148413338012921882590695565993018061"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&isize>>::shl_assign",
    "hash": "85593093615827946258223874753361180124"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u128>>::shl_assign",
    "hash": "145382698308243916669650089900463006817"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u16>>::shl_assign",
    "hash": "39163722133121595287319439107814984584"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u32>>::shl_assign",
    "hash": "303350726282536253511025259063909921913"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u64>>::shl_assign",
    "hash": "81350560943412630411512446706930974582"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&u8>>::shl_assign",
    "hash": "765012547556614618917470225978018579350"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShlAssign<&usize>>::shl_assign",
    "hash": "64608607613311690258350549628647502399"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i128>>::shr",
    "hash": "8829013837299995045681481616096365123"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i16>>::shr",
    "hash": "15200912062537520815086182999543193299"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i32>>::shr",
    "hash": "48732827842632868098271115893959307631"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i64>>::shr",
    "hash": "1425011705950728624310678815231412538454"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&i8>>::shr",
    "hash": "472041417114366527313913664292571521991"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&isize>>::shr",
    "hash": "1813265270987969186211983945275366908702"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u128>>::shr",
    "hash": "1761137524490331001310798445973720721652"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u16>>::shr",
    "hash": "1128818227372306372110059545399981073461"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u32>>::shr",
    "hash": "1349376331900529835514170744297890944268"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u64>>::shr",
    "hash": "23298995819807399316637704729815457796"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&u8>>::shr",
    "hash": "76609143450802255579179607486565031344"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::Shr<&usize>>::shr",
    "hash": "143802937927831871754266303971774608899"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i128>>::shr_assign",
    "hash": "141127634487995072842128358957691460106"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i16>>::shr_assign",
    "hash": "39665042945017337014177534146220579489"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i32>>::shr_assign",
    "hash": "937104675184925020010412197819567777748"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i64>>::shr_assign",
    "hash": "1662998809015649747013968224718983779736"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&i8>>::shr_assign",
    "hash": "67271104126762403364340375948430222506"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&isize>>::shr_assign",
    "hash": "15176659969377978784268168904671426187"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u128>>::shr_assign",
    "hash": "31532215294958028614173869144503133530"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u16>>::shr_assign",
    "hash": "146189797250109363145904710486200787179"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u32>>::shr_assign",
    "hash": "134586959792184926321134466469482262352"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u64>>::shr_assign",
    "hash": "154538636386788411554835758363398551177"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&u8>>::shr_assign",
    "hash": "92438204535314583852340151390906959726"
  },
  {
    "file": "core/src/internal_macros.rs",
    "func": "<usize as ops::bit::ShrAssign<&usize>>::shr_assign",
    "hash": "145027179288016854373843341990681886634"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "113186028346866804279770311988627090153"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1032769769408391048713983114814617494126"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "101109432303661551018340665618682587875"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "953881564743249153315779998435426162544"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "28123010284929504474437956132727108613"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1016390760304289897310364655152573926221"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "18628517139248227351215008082969430065"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "978136034204034908411304886180596082268"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "154720368699640309616395593061179838809"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "344863265745342779717451301811961978577"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "880669221483913905713956999556184255841"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1213275536628164385017808546582887701330"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "160135008128170602984338173882465772400"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "17854508270358162382753165278256941443"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "40222614635680497349384625393801840509"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "1513036345350600942715502438368061519000"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "14209302601739691336263204683063972142"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "29217095792160381344400316057577381707"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "110614837124124483783285446974543096830"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "161564724136622141702746708115603924802"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "578814737337802131416995303192893084991"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "142841297607820675131706786474476260387"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "1585143121439669017512917948980091663041"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add",
    "hash": "61245578499738693647717663518521974082"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor",
    "hash": "18881985029472959018976073139523482814"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128",
    "hash": "2730413463489077682871299968750410950"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::from_low_high",
    "hash": "149177879054194305854706121912784527721"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::scalar_mul",
    "hash": "1401790216334955327214351023031146810699"
  },
  {
    "file": "core/src/intrinsics/fallback.rs",
    "func": "intrinsics::fallback::wide_mul_u128::to_low_high",
    "hash": "169564152499839983839646051342040887309"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Assume",
    "hash": "1432950123634254612112068960066000414304"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Call",
    "hash": "144643503226719258349916911072851675312"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Goto",
    "hash": "144286344205393684586947670055694998036"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Return",
    "hash": "1364974773543130921729438475032791943"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::ReturnTo",
    "hash": "82796076479157351501103188920587001688"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::Unreachable",
    "hash": "143394080344788934466959798247051745349"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindCleanup",
    "hash": "93770046223235098208718259733307893285"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindContinue",
    "hash": "99968119746776301516908250477948235381"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindResume",
    "hash": "168709736417926637648046031702716704994"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindTerminate",
    "hash": "985169131319845829010465258679403275282"
  },
  {
    "file": "core/src/intrinsics/mir.rs",
    "func": "intrinsics::mir::UnwindUnreachable",
    "hash": "77799540867315289568359380899636745502"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1236866068856518242110163582778353026871"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::AtomicOrdering as cmp::PartialEq>::eq",
    "hash": "134535095815233753691326487170919844887"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as clone::Clone>::clone",
    "hash": "35973575415855507559522050756309804084"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::arr_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "121117923086224908904082115999001232312"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as clone::Clone>::clone",
    "hash": "82566832362836111459206089609727179060"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::bool_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "93475396765035819328916216970633634976"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as clone::Clone>::clone",
    "hash": "1772522143514707290312986469908235009485"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::char_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "106269015393589003702383352174522076446"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as clone::Clone>::clone",
    "hash": "182623845289187643667513627146484500182"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "28558300461451464747389870140283487862"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as clone::Clone>::clone",
    "hash": "66014937191282629827691746849940091518"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "41967857006228578878649740358528515764"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as clone::Clone>::clone",
    "hash": "1663555545214753222914366072786403185874"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "482847793028800017412431461179529253436"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as clone::Clone>::clone",
    "hash": "1444790991974297194215310473349767012013"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1118716831433202336113406875840347391453"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as clone::Clone>::clone",
    "hash": "104082133007491737092156013981842164032"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::i8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "13823495083973351604287319855407998226"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as clone::Clone>::clone",
    "hash": "76317154514799721536108050696319635390"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_A as cmp::PartialEq>::eq",
    "hash": "1803670395014458915510319807370919967575"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as clone::Clone>::clone",
    "hash": "9745623801636449522932985134210934545"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::struct_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "998139338836719515914794874693244148744"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as clone::Clone>::clone",
    "hash": "58375255954284732807243707325023070679"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::tuple_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "6295886406564882929839539568301844575"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as clone::Clone>::clone",
    "hash": "445789501978274812016828202287242946829"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u128_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "918345710155778331011247125339681541818"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as clone::Clone>::clone",
    "hash": "222326229200308547210699820360752179304"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u16_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "107731345970144617613457493028032101719"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as clone::Clone>::clone",
    "hash": "148485222426531622796885970000490721385"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u32_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "40337842227319504746886578089222266618"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as clone::Clone>::clone",
    "hash": "771053604888169028916633366004260026331"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u64_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "221920017009484662412208424999109126296"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as clone::Clone>::clone",
    "hash": "165979289905904087443048374434243016784"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_mod::generated_struct as cmp::PartialEq>::eq",
    "hash": "1558265877875468537816377943059709728576"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as clone::Clone>::clone",
    "hash": "1246094260485820117111205478625232963061"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "<intrinsics::verify::u8_struct as cmp::PartialEq>::eq",
    "hash": "1121372046926985339210985428826638713223"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::compiletime",
    "hash": "691776604511370454711902626637564167860"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_borrowed::do_panic::runtime",
    "hash": "168106784846753936679712290715416811235"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::compiletime",
    "hash": "1264248819154989742116062042814536130794"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic::runtime",
    "hash": "376338375946936230917258942783624829521"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::compiletime",
    "hash": "159049704386964953973249616754098926853"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf16_raw::do_panic::runtime",
    "hash": "65985798846077095405845380055790153547"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::compiletime",
    "hash": "108428443819972854796874567217962222164"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "char::methods::encode_utf8_raw::do_panic::runtime",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::compiletime",
    "hash": "171025794570041983161038816866959233227"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f128::<impl f128>::clamp::do_panic::runtime",
    "hash": "11275867618923818519081879007660452909"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::compiletime",
    "hash": "146448597596565777941436257762503465485"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f16::<impl f16>::clamp::do_panic::runtime",
    "hash": "151294173355925870799879363536895708434"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::compiletime",
    "hash": "7408365454295751847861174114731301309"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f32::<impl f32>::clamp::do_panic::runtime",
    "hash": "26531179191357747379527996469585771760"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::compiletime",
    "hash": "144157986652174026586080956288379482463"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "f64::<impl f64>::clamp::do_panic::runtime",
    "hash": "676068440987151125111289513038844399270"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::assume",
    "hash": "6013961537908057672101029983762268146"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::cold_path",
    "hash": "47034917508603882436113493575354667154"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::const_allocate",
    "hash": "1510045345773018498813509804602468033085"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::contract_checks",
    "hash": "175192703832338152067280054200790710953"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::likely",
    "hash": "118812142854496324448516715476242465297"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf128",
    "hash": "7850810336489717473957267549244951995"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf16",
    "hash": "950275286442309144914005414346025326474"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf32",
    "hash": "1816868076824229492518307065405978297597"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::maximumf64",
    "hash": "58687954204015389802445433761316369961"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf128",
    "hash": "176098756313427920256294164679409940248"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf16",
    "hash": "1607506984736934082918113749314152275118"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf32",
    "hash": "30277375095290818058317507471836995913"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::minimumf64",
    "hash": "162641143356097440813876075844430845273"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::ub_checks",
    "hash": "1466125290259015749317832121385559662361"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::unlikely",
    "hash": "714811817540972740211524868124730226803"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_struct",
    "hash": "621387688721068629314183285507255640511",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_arr_to_tuple",
    "hash": "116263972569165612716114670723005159085",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_arr",
    "hash": "927930993494322710811019753622560311913",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_struct_to_tuple",
    "hash": "162373298828155522697304580751182250747",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_arr",
    "hash": "1448410348282527143911337887346036939623",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_2ways_tuple_to_struct",
    "hash": "35092085142153474709277428972995199297",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "9087178451933544184858386235363620924",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "130203144225408182241291130782193758708",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "59337101485900174269682498351070899491",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "473084311439666091215571025932177486807",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1510497929431037375118224436804916980693",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::arr_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "170287422429665874046851944433297964490",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_struct",
    "hash": "1158940147394809517314241644240172531864",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_arr_to_tuple",
    "hash": "184033195276782727377212309721828976860",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_arr",
    "hash": "75797303181042860213684398986639105930",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_struct_to_tuple",
    "hash": "454412643478850269613070562704919673350",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_arr",
    "hash": "1743734938530236682915227177135100046144",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_2ways_tuple_to_struct",
    "hash": "101282867633373469094315405088180441792",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "106332219752171857894078012316346272716",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "118326382391232945991178085771713267868",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "4023998171469285242868414440199823487",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "22611300015812862514841586035052000203",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1272341627896038439512734600090073019070",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::bool_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "84773770077476409525970309169563866267",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_struct",
    "hash": "1209105467918811767817768803465312372589",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_arr_to_tuple",
    "hash": "60178707561251990954410152172510852244",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_arr",
    "hash": "1080658015757904440617626391187071457102",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_struct_to_tuple",
    "hash": "210136850193580859416269620121256240130",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_arr",
    "hash": "550937371280303475918155669062560723466",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_2ways_tuple_to_struct",
    "hash": "77283458692287286425236097419112192295",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1688806044489463587718124443795278754834",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "163754439546757846049718427163431326920",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "70973735975552509215549388251151529332",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "43767768001064941415305075590779445159",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "12031197608833090580441245641087856739",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::char_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "536049510641654594717035643221237641817",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ptr_address",
    "hash": "1135497642550248524113021591255467005507",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_ref_address",
    "hash": "883941684980131310010218502870840167779",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_slice_metadata",
    "hash": "928487010558503955312397909535311501906",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ptr_address",
    "hash": "94382721583818015873823913172982992207",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_ref_address",
    "hash": "162950670525835289868811066032406902904",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_transmute_unchecked_slice_metadata",
    "hash": "202049625399841785717723079523043749056",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_char",
    "hash": "1663047528360292318911915553648794831358",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_non_zero",
    "hash": "1236072141128005220410285988505783509130",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::check_typed_swap_u8",
    "hash": "339741292133671681515154192523502817935",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_struct",
    "hash": "147644438445222729675360694614932583146",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_arr_to_tuple",
    "hash": "133121647247716186012128056710554142740",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_arr",
    "hash": "520661723340069469612845656759380512001",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_struct_to_tuple",
    "hash": "85755284909531529188231649195997849181",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_arr",
    "hash": "1328458110546353848918139177936488770593",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_2ways_tuple_to_struct",
    "hash": "76287308079046687998675546031649563423",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1692531045572755816712695611361969715894",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "142165505838989344215691368181526208994",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "23402610098392345971239309383483669868",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "54737366662496269512062483558050117635",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "127652065620901044955140494938738007812",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1130569451207393372613922821106240814889",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_struct",
    "hash": "35289238705138133006893675962973224995",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_arr_to_tuple",
    "hash": "110113524543487722342939043712146260926",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_arr",
    "hash": "1504698024828555891713040789135688234874",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_struct_to_tuple",
    "hash": "122337766296820666531709487418474444790",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_arr",
    "hash": "131501400845901940826086816802724388802",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_2ways_tuple_to_struct",
    "hash": "19070222532142176152413337380397826463",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "99681292934982065933853240771234551735",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "545085858856591444111687832469048636444",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "212793880770755748414428601869869250124",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "86713764207184747262092642462235845584",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1275795266408056961214221081766350734968",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "135026890374720239013329749710487417664",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_struct",
    "hash": "11341812801982368003852684385489011074",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_arr_to_tuple",
    "hash": "1754793080052542186311409003448859511020",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_arr",
    "hash": "7595581074615443998893680970375199138",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_struct_to_tuple",
    "hash": "1495770512699949246214658484082162768830",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_arr",
    "hash": "142780330412742902516122011727911116148",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_2ways_tuple_to_struct",
    "hash": "12178085547877631612251943520492355545",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "642878964435962296611273812294036583921",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "63607745332661576112299608161306508787",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "131911979515829847010694911999615904507",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "118111706687054379624702766380265758044",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "631463270981102813512707386177372265032",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1690305380459099935717174995414217922031",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_struct",
    "hash": "77668671250949974549281631165247475226",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_arr_to_tuple",
    "hash": "112606917385456084378773146715041824078",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_arr",
    "hash": "1376240255589490269513732646426564300905",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_struct_to_tuple",
    "hash": "46417901474459173558396266211389528069",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_arr",
    "hash": "1489804532664336372914105068149030188238",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_2ways_tuple_to_struct",
    "hash": "195834116260612931914963663090355102807",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "89052772694748834154589022454191897484",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "158285282143730122827389399167540409097",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "908845074800183135813671675627163382813",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "151185315826108193347424582965301080426",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "49755183260009647492823509392776608174",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1100858315068530330318202895499784517862",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_struct",
    "hash": "5376250066548882187101917143535343732",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_arr_to_tuple",
    "hash": "1283617984620513433116768174497130414395",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_arr",
    "hash": "90122726737631448218832444201679891022",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_struct_to_tuple",
    "hash": "1003986811537024717712437015748898991905",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_arr",
    "hash": "117712600204681022374635957579259968072",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_2ways_tuple_to_struct",
    "hash": "603534336266544884717385749430226965282",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "109997297481541086407751985787112850252",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "28449506537652589318902097887357912324",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "210424343949685188513012225028371845930",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "89303059105867863454010623635258774286",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "103442189065113187895598635429000740849",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::i8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "38209323565354987826575587941655088344",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_f32_to_char",
    "hash": "516226927606646395016104582747454215542",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i32_to_char",
    "hash": "62035076127911565964956857346366485588",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_i8_to_bool",
    "hash": "162461323307937035914268115930743290437",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_array",
    "hash": "12268692168902040126751216542172781843",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_struct",
    "hash": "1840266985386920573710279833107436037501",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_tuple_to_tuple",
    "hash": "256237679794697888615496615626855816996",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u32_to_char",
    "hash": "1295195871103327599015357835807829378723",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_fail_u8_to_bool",
    "hash": "553581538623832650914938373514948791728",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_i8",
    "hash": "7484522945516565163448950845888842350",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_bool_to_u8",
    "hash": "1074704597734323633612077667070881119315",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_f32",
    "hash": "837130290558223092612297629479268114595",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_i32",
    "hash": "117509341305537625315452728912563255507",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_char_to_u32",
    "hash": "16842120737691033041376384116016155340",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_char",
    "hash": "156179667235212813639644633436323781850",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_i32",
    "hash": "8805239034890122451129887791530205730",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f32_to_u32",
    "hash": "1225966564095818746810997113431697230360",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_i64",
    "hash": "1490337833217060637412279929583293401534",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_f64_to_u64",
    "hash": "170302507757241775667413189097694191703",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i128_to_u128",
    "hash": "46337359892087720519646717442801618066",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i16_to_u16",
    "hash": "116396083519407885159186086306617035425",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_char",
    "hash": "1749360395586486378615664363087018688750",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_f32",
    "hash": "64103017797867815481791015100818686992",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i32_to_u32",
    "hash": "104924789687708168212445074848167322287",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_f64",
    "hash": "58463380786465759895875105744371973726",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i64_to_u64",
    "hash": "188088180358690281410188566618394104818",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_bool",
    "hash": "111960153847447422601334924803276609719",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_i8_to_u8",
    "hash": "1397110951263362347213890054237203394212",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_array",
    "hash": "181904035702478595894753127758677324520",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_struct",
    "hash": "1225109854415788497712667163747589011430",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_tuple_to_tuple",
    "hash": "166705529093007258408550456642291342376",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u128_to_i128",
    "hash": "158334884197859806155730418593563218049",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u16_to_i16",
    "hash": "1306937743143852112115951685599667922873",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_char",
    "hash": "127906999016767743159833182272040374841",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_f32",
    "hash": "1093733521210251256010261542073825322101",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u32_to_i32",
    "hash": "160841374390556351263552274219288835235",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_f64",
    "hash": "128444369804722605672754870069248770630",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u64_to_i64",
    "hash": "173395629140527825416259835209487636413",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_bool",
    "hash": "75544221807741710085909266495054912065",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::should_succeed_u8_to_i8",
    "hash": "127643761208084300647227392977042656760",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_struct",
    "hash": "614451602472530702517013028763874775970",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_arr_to_tuple",
    "hash": "125554246642727172237928240256495316118",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_arr",
    "hash": "1297454982026903864316396878624967077320",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_struct_to_tuple",
    "hash": "148246692241765755992480878264206742105",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_arr",
    "hash": "95636958901377656148700167750703959465",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_2ways_tuple_to_struct",
    "hash": "18635646142438423023517030863578280883",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "619315219266970489616287852575209251021",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1662580508807466713815424408724252040585",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "483016257772816096213011031724750508989",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "345792972112470295117659409220950571487",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "1262495957929608473111673951085939659198",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::struct_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1279667296995274082413560850124184807319",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::supported_status",
    "hash": "176210567283599110817330099341857896355"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_i8",
    "hash": "254994876494469983816082257893790341787",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_bool_to_u8",
    "hash": "71375274356824320881042272485520178133",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_f32",
    "hash": "1609100746428492431112280775198555720227",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_i32",
    "hash": "1473754445286046671212328691253011089956",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_char_to_u32",
    "hash": "128924460854699327683255026779936105804",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_char",
    "hash": "232402934810915216514551182654609404279",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_i32",
    "hash": "104571025485143933917913720999718689402",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f32_to_u32",
    "hash": "1041072349755939873717393674974228722160",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_i64",
    "hash": "175833349821906453023362949818393238297",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_f64_to_u64",
    "hash": "44936540814454608912563214922519355404",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i128_to_u128",
    "hash": "391395173658039732518217825766393361355",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i16_to_u16",
    "hash": "251579358476165351716589623094864535984",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_char",
    "hash": "246425418605820824110929695697956931625",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_f32",
    "hash": "131821232280338205237170182850001995980",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i32_to_u32",
    "hash": "174382759848227680183360361153053721998",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_f64",
    "hash": "115008692941615858465394901733048778799",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i64_to_u64",
    "hash": "177432185932773565214707259402289606846",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_bool",
    "hash": "124066662467498666937565338258400480849",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_i8_to_u8",
    "hash": "108420411289048617411715970407897854575",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u128_to_i128",
    "hash": "110099227432938359894686235341359937189",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u16_to_i16",
    "hash": "99379347390640115717384987781401244784",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_char",
    "hash": "1268808212580035104113222506133647006070",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_f32",
    "hash": "43027171335441687825194088507212950625",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u32_to_i32",
    "hash": "74882639534296071510428205453355465298",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_f64",
    "hash": "106019962892494650791474786796110897782",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u64_to_i64",
    "hash": "13102868475677470849037693725529136198",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_bool",
    "hash": "1662575615966704192117595560702416008710",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_2ways_u8_to_i8",
    "hash": "6018799979428631174762142041322635611",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_i8",
    "hash": "1808011681307750198815656894652465950827",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_bool_to_u8",
    "hash": "1700674261226397479311709352747668681829",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_f32",
    "hash": "14967830047133056354678144493245920778",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_i32",
    "hash": "26975538999539685114136479410703713802",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_char_to_u32",
    "hash": "106083367180151742159467838975388363916",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_char",
    "hash": "65126087058972250058547830089942139130",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_i32",
    "hash": "146881921750080547755337557980066989155",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f32_to_u32",
    "hash": "74470146030904832762454820503967270423",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_i64",
    "hash": "202627393894550239810231951637338177264",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_f64_to_u64",
    "hash": "175421635921862380317727554760437770493",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i128_to_u128",
    "hash": "105747043948294143624356382287990991478",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i16_to_u16",
    "hash": "87874326842881542498558244336008249750",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_char",
    "hash": "180802654452081851997133309973559458464",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_f32",
    "hash": "1806970751832550388314535577274066505903",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i32_to_u32",
    "hash": "1790419119869860559318059020401604978414",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_f64",
    "hash": "1113669471049035224311738239092176591278",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i64_to_u64",
    "hash": "130463557761739238807302180993377635217",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_bool",
    "hash": "110314530620678883835045527332012006981",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_i8_to_u8",
    "hash": "112512946678324226177751660054193459332",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u128_to_i128",
    "hash": "1312187272530363204113660382535437627856",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u16_to_i16",
    "hash": "67584969192867348954377047630060474845",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_char",
    "hash": "495577243517778411611527582989198209326",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_f32",
    "hash": "47724564951182503692657754564201640861",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u32_to_i32",
    "hash": "65481764392851372613927282299344535906",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_f64",
    "hash": "530668516299012545815044369153456775584",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u64_to_i64",
    "hash": "42887950679922447944484973173432549925",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_bool",
    "hash": "143020036990002204481704573423719098369",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_2ways_u8_to_i8",
    "hash": "168544834570373396107407317764411723127",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_i8",
    "hash": "39203700899440265917400988704985247030",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_bool_to_u8",
    "hash": "1328322431176515248111217608179330832622",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_f32",
    "hash": "5488678284769944687546960176270980870",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_i32",
    "hash": "47795664975262478003858734688057540895",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_char_to_u32",
    "hash": "1569876010162153554810820443782299272314",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_char",
    "hash": "397677672020361461813389590420128063435",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_i32",
    "hash": "471489478375305200314399649058520043389",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f32_to_u32",
    "hash": "87499970972966097741050693380752103765",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_i64",
    "hash": "1757286875861455595961788563704209399",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_f64_to_u64",
    "hash": "608087901346814287715515078879775951314",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i128_to_u128",
    "hash": "186794990443526797316535734874460985972",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i16_to_u16",
    "hash": "112712733727129411387298199480036600765",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_char",
    "hash": "1088585154132639452010170750555012003474",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_f32",
    "hash": "470116501538655423812735279125062926247",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i32_to_u32",
    "hash": "77042960179458751515430033852317922613",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_f64",
    "hash": "383013820168509871613268882013974685449",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i64_to_u64",
    "hash": "172317501345473276432125342110539786268",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_bool",
    "hash": "67556597945921850162536870036321551828",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_i8_to_u8",
    "hash": "480461923696496213010615688926525618078",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u128_to_i128",
    "hash": "1694901948628501264414856731769966419305",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u16_to_i16",
    "hash": "5762704782027590712971158976976347294",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_char",
    "hash": "767373897084728104513874884705539342878",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_f32",
    "hash": "1766928874225674123013253975587316276661",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u32_to_i32",
    "hash": "411666566584893805013643366047274028279",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_f64",
    "hash": "114770409388146779833994854775126609920",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u64_to_i64",
    "hash": "421887076808131971013307193852329609377",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_bool",
    "hash": "969749409976288813711823671769941967183",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_unchecked_u8_to_i8",
    "hash": "1401366778904823521212037998935931500286",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::transmute_zero_size",
    "hash": "499620493798060932310788748314603745263",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_struct",
    "hash": "64951382669640054719242706827563626861",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_arr_to_tuple",
    "hash": "2408344813499303753363388113604779650",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_arr",
    "hash": "860756951704309638716202861912420676536",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_struct_to_tuple",
    "hash": "811621727171478853313518781045498882151",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_arr",
    "hash": "945281966788577618612766920490203494126",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_2ways_tuple_to_struct",
    "hash": "155102068452056513496840640376730583848",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "467458117516980353815771993597942230472",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "132578649975672328088987913255381010796",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "75048436411896482451936782563072410031",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1080286984859166029216501994173677414382",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "115247318083056405659608751890298849066",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::tuple_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "151695969513663815342043294345446360147",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_struct",
    "hash": "23887584602086110785005383893006487620",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_arr_to_tuple",
    "hash": "120429502852898622219149744713371429652",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_arr",
    "hash": "1067011447126680129815885638656313895869",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_struct_to_tuple",
    "hash": "151947518350301826436739495771671736911",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_arr",
    "hash": "166213965403549682138296532708249426659",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_2ways_tuple_to_struct",
    "hash": "44791982657760845337631043452852495152",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "420389144858426724817511172884296448847",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1058636190738770747018100547159686249260",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "158077290454246158837382400815330893429",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "979100597748817206911948023969096231644",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "71343919171989659119379364894187705837",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u128_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "95853024452802417602083938660944728429",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_struct",
    "hash": "86147832483161243997300178687620026741",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_arr_to_tuple",
    "hash": "9361235980601397372610725275206949465",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_arr",
    "hash": "1146792326082046391116025026663608649797",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_struct_to_tuple",
    "hash": "47164514696664418727894749494270890108",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_arr",
    "hash": "1312535822489638803512819896700779746065",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_2ways_tuple_to_struct",
    "hash": "175939863683972580095313627483929873801",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "1455526164280594402713306443519980027371",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "98247062199886554541491641522118263852",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "171527202515590337743058523448847325261",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "87436159038183698011199304520749247244",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "704567879085539308216981664018670360106",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u16_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1159497519765709947816446982862015800281",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_struct",
    "hash": "20453471126791054981791839212862527276",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_arr_to_tuple",
    "hash": "128307725438269604956954266939493573622",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_arr",
    "hash": "173665962850626670859200960309962862424",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_struct_to_tuple",
    "hash": "10609487952885927093611521570680060858",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_arr",
    "hash": "562254001490453469011124513660761097795",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_2ways_tuple_to_struct",
    "hash": "1198707580265450010017876102327241194219",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "685487248755198220711028265065577429710",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "322146330438700285712169563746447981743",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "99189992881094600624554476172796825584",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "101474520174428558807553675057772087305",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "749098484646031952717030385620403006167",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u32_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1374677941580468338716343078633140651113",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_struct",
    "hash": "44595112324532272462160403250009051128",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_arr_to_tuple",
    "hash": "1210016664421357714712461764861526103881",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_arr",
    "hash": "138368736162870207934175618626853312365",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_struct_to_tuple",
    "hash": "68591182474930732045716413344675855722",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_arr",
    "hash": "5913750975037641847080587344453062913",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_2ways_tuple_to_struct",
    "hash": "102444520645349719318368196095516605375",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "44245295287320129101180466586348196276",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "8152984571456220256705599129042478472",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "173536653874416341314891011826358359311",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "102038674044015908221765689203493709292",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "163433131746087830861621730042381535449",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u64_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1501369858299080736814053981838739132305",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_struct",
    "hash": "1560313753144072501617864025578615163041",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_arr_to_tuple",
    "hash": "171058880906116699992787274608438731917",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_arr",
    "hash": "1322640661424836436318172346644777836381",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_struct_to_tuple",
    "hash": "81633812425947463019129418379945685418",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_arr",
    "hash": "156921698472683402876949839936635748352",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_2ways_tuple_to_struct",
    "hash": "7434460547177074977816902155575257316",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_struct",
    "hash": "117915551179993187524977112325767321757",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_arr_to_tuple",
    "hash": "1738979446461689570416989875983806385753",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_arr",
    "hash": "17432176969724753364196669809731542356",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_struct_to_tuple",
    "hash": "1486222723983975148218273749571743560535",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_arr",
    "hash": "843107418415377112314323138311568088059",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "intrinsics::verify::u8_mod::transmute_unchecked_2ways_tuple_to_struct",
    "hash": "1119003602357538915017682542228643252721",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::compiletime",
    "hash": "1006167465322247461310313782880130128262"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "num::from_ascii_radix_panic::do_panic::runtime",
    "hash": "128753891761213501318964802270083377953"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime",
    "hash": "90445066862623677859541734196823955882"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime",
    "hash": "615024195865162871618435544439182771838"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::compiletime",
    "hash": "177987525792058191186693084618402813695"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic::runtime",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::compiletime",
    "hash": "15337628592533275491332232496850156663"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_index_order_fail::do_panic::runtime",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::compiletime",
    "hash": "1194534951198934991111241799765851780373"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic::runtime",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::compiletime",
    "hash": "69589595752229692514226806296412029128"
  },
  {
    "file": "core/src/intrinsics/mod.rs",
    "func": "ub_checks::check_language_ub::runtime",
    "hash": "16824420916691935049705640393259467449"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size",
    "hash": "124348348342317746635773361060782085724"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size",
    "hash": "1204423054530717430314124469046569659726"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back",
    "hash": "11543518727999088621301030895635119664"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back",
    "hash": "101769619131983275568648254271831552297"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next",
    "hash": "1423568620843025570860808603155227554"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth",
    "hash": "560347621952329155912559944368228486942"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint",
    "hash": "163606553308548808439794455790410374693"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back",
    "hash": "62754338932682819914446897962630839476"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back",
    "hash": "387727378762317707811980382073384175153"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next",
    "hash": "170832545459210912288733996973196676207"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth",
    "hash": "80739570493524290111802990753364073521"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint",
    "hash": "43835478353182954312298878113823126641"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next",
    "hash": "1374285696009427573610659172715645722091"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth",
    "hash": "17365566572206424763924006865383594266"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint",
    "hash": "157920765803370999295686602635369276615"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back",
    "hash": "326180998411835233013214500744822670109"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back",
    "hash": "178447181254412817972827825620370588866"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next",
    "hash": "619323603167651902815982735271557581364"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth",
    "hash": "523809004128870505012942010399545816407"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint",
    "hash": "75504035028269760374306602343802341696"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back",
    "hash": "12058538605874758250274298156074622434"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back",
    "hash": "20072692068600292313974049836757839371"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next",
    "hash": "6234604893311848560124840826593546565"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth",
    "hash": "169424050379298518497338153156024771638"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint",
    "hash": "138622011329512517179196819054504398566"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup",
    "hash": "63050006043076489582266219101705510790"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup",
    "hash": "71498170533502084349932028697632242161"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup",
    "hash": "1695462192470020566616285434860974654883"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup",
    "hash": "491908445093711302318123718278023680008"
  },
  {
    "file": "core/src/iter/adapters/step_by.rs",
    "func": "<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup",
    "hash": "830987630788988922316583791800494611027"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked",
    "hash": "137316507985078210809988792887776894428"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked",
    "hash": "125859274675529337007334437979601982607"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked",
    "hash": "134375133824357821587373220161758019950"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked",
    "hash": "137123597759337647566755959843214020608"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between",
    "hash": "36539198646114722796052671577229547047"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_checked",
    "hash": "133332314638873554016532525719094935279"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::backward_unchecked",
    "hash": "1655358777986825820013550791565740866645"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_checked",
    "hash": "830963532092761710655085201187097422"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::forward_unchecked",
    "hash": "1631262074492735418317912302154493279465"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<char as iter::range::Step>::steps_between",
    "hash": "1311337209779115487013214169226889606393"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward",
    "hash": "56092361090310972514182047941894304811"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_checked",
    "hash": "175021446830441776028881273650294532857"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::backward_unchecked",
    "hash": "472301160892522807615075119287406591242"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward",
    "hash": "1721324680003345631313338834773235966016"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_checked",
    "hash": "56246074408434914354982138333751065864"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::forward_unchecked",
    "hash": "15155306853897943391351003069737148194"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i128 as iter::range::Step>::steps_between",
    "hash": "695981452030228767813847520364942679931"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward",
    "hash": "90771205361732783792303383745558877129"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_checked",
    "hash": "203947701059464325613778034605532550895"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::backward_unchecked",
    "hash": "1506325057057180623610625781221492942593"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward",
    "hash": "1447119869977491409612664338163960929377"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_checked",
    "hash": "72650535326106907192906478621260511275"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::forward_unchecked",
    "hash": "1072665526466799343515541954434330843882"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i16 as iter::range::Step>::steps_between",
    "hash": "1779260089909235949113429730731560972740"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward",
    "hash": "1579754604149681567811567566479534385116"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_checked",
    "hash": "64465261293779276828205237344620147418"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::backward_unchecked",
    "hash": "503477913081114426517045587868273838197"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward",
    "hash": "386059901080151265216311870984518338638"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_checked",
    "hash": "21784617038568359111464185329938467517"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::forward_unchecked",
    "hash": "991531998240898176614307776237969040953"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i32 as iter::range::Step>::steps_between",
    "hash": "100887168946281466996232210389218745422"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward",
    "hash": "402496530480701049012607729457632670665"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_checked",
    "hash": "1038977577088199481315670124497070240224"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::backward_unchecked",
    "hash": "1637266032348163644613988797936690066119"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward",
    "hash": "165117677934502488293654992271119007168"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_checked",
    "hash": "87368654931293044945549399171515791321"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::forward_unchecked",
    "hash": "247022733784842842415111820937613239977"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i64 as iter::range::Step>::steps_between",
    "hash": "21835289758397548969051301305867543"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward",
    "hash": "507233439928561676316538013945399965749"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_checked",
    "hash": "39949069862367206838685832328828433455"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::backward_unchecked",
    "hash": "31999570751680553651690611458561563124"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward",
    "hash": "1192713238115033028415723104905668553854"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_checked",
    "hash": "975644497297969919511638739660773769510"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::forward_unchecked",
    "hash": "978302682194487749316691062790773170820"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<i8 as iter::range::Step>::steps_between",
    "hash": "147857497976983808888578836356497515115"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward",
    "hash": "3998342495390793612485128524297715183"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_checked",
    "hash": "791214620019314188813815519423221311579"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::backward_unchecked",
    "hash": "10209959543460388252740288658464144205"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward",
    "hash": "24241849582605616259707278565738368988"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_checked",
    "hash": "155049296706933728471023177517866298156"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::forward_unchecked",
    "hash": "32612344839123376195444658980751979606"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<isize as iter::range::Step>::steps_between",
    "hash": "1653752653531374651016556396382515158280"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked",
    "hash": "60908953564480161134242750885166383920"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked",
    "hash": "413064907047789439312174032987797375490"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked",
    "hash": "141889046387938424739654884188813527399"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked",
    "hash": "165341737054028577323244711613260425335"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between",
    "hash": "195565115584964824516151634350201661919"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked",
    "hash": "112994524526339327238981069663118302346"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked",
    "hash": "101546812601793930664900803298463391902"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked",
    "hash": "57167607884684257598005386621276198438"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked",
    "hash": "107354357601507570831147488011604157009"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between",
    "hash": "141437808010852462563606245764315439442"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward",
    "hash": "303613522787413086512080616304077092631"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_checked",
    "hash": "1254796038385150279012405421461119670791"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::backward_unchecked",
    "hash": "134055170643499469364021038394924879879"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward",
    "hash": "1518474358433066235912417427693340412234"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_checked",
    "hash": "225571290324625253410156577062857759194"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::forward_unchecked",
    "hash": "1520143670988268138510872301128694055035"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u128 as iter::range::Step>::steps_between",
    "hash": "178019832593842746817146546317672424959"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward",
    "hash": "745911087784837703110224911886033653033"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_checked",
    "hash": "176848792584408141552898502438446848627"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::backward_unchecked",
    "hash": "138103135573618700716018080825203747436"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward",
    "hash": "124150179898961545617021871277646124302"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_checked",
    "hash": "155275732658954736511796896795981509681"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::forward_unchecked",
    "hash": "669794537686946686515179717147345512353"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u16 as iter::range::Step>::steps_between",
    "hash": "171845731675133541686419756565763971352"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward",
    "hash": "68303455375518898042300162105012894603"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_checked",
    "hash": "106030533258322140904903513352586087129"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::backward_unchecked",
    "hash": "2966724088658354402452711005913672086"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward",
    "hash": "132508539663911695351406750543416503622"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_checked",
    "hash": "1096504771815373714312457788443728848285"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::forward_unchecked",
    "hash": "23416775617158070551951602787450241756"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u32 as iter::range::Step>::steps_between",
    "hash": "19171959075713989941463510649343301993"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward",
    "hash": "1292580703135395315913029453087295852746"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_checked",
    "hash": "44991721274393754109940369203671648116"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::backward_unchecked",
    "hash": "178304229791592104919050979328854344275"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward",
    "hash": "440338385764188603712702767437656141207"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_checked",
    "hash": "902709230833896201918330019924247966587"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::forward_unchecked",
    "hash": "18831606984143473692300544191479004322"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u64 as iter::range::Step>::steps_between",
    "hash": "375919269804338180514286745310646243669"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward",
    "hash": "1788175893739107210017207115177437280902"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_checked",
    "hash": "801948699510780478812011334309663938782"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::backward_unchecked",
    "hash": "1612821773878072508214221297130475974612"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward",
    "hash": "1266049275614639469013613218135270325561"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_checked",
    "hash": "527102333698427020713695988403651559049"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::forward_unchecked",
    "hash": "14252192853300883925515563987210891826"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<u8 as iter::range::Step>::steps_between",
    "hash": "142912422590755740649191640722513377296"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward",
    "hash": "8334034064733410592833716344341035697"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_checked",
    "hash": "1654486147922238890958291681838201542"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::backward_unchecked",
    "hash": "1409055048784727814711491983456022670691"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward",
    "hash": "171709494924635501676051298710947976424"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_checked",
    "hash": "1074904938532010800413397481988246193816"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::forward_unchecked",
    "hash": "109518224205676578734062118796116566989"
  },
  {
    "file": "core/src/iter/range.rs",
    "func": "<usize as iter::range::Step>::steps_between",
    "hash": "42577363893978164739142274285563312303"
  },
  {
    "file": "core/src/iter/traits/collect.rs",
    "func": "<() as iter::traits::collect::Extend<()>>::extend_one",
    "hash": "688410107010489561617780762302155675022"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as clone::Clone>::clone",
    "hash": "916143654607351837116470895077465494414"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1190889164918634431611817511719813375394"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::Ord>::cmp",
    "hash": "341742014498876292516249974008372876406"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialEq>::eq",
    "hash": "93492289013747638784264107470152443119"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp",
    "hash": "1510047452966779297016619060594926667874"
  },
  {
    "file": "core/src/marker.rs",
    "func": "<marker::PhantomPinned as default::Default>::default",
    "hash": "1103745097942804791116074541065999219877"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomContravariantLifetime<'_> as default::Default>::default",
    "hash": "1222063751048221031317188627557247413509"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomCovariantLifetime<'_> as default::Default>::default",
    "hash": "1430770035247630118315043314752757907350"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "<marker::variance::PhantomInvariantLifetime<'_> as default::Default>::default",
    "hash": "791194254110882201814819874835302631346"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomContravariantLifetime::<'_>::new",
    "hash": "866385002775414963115745934226504818084"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomCovariantLifetime::<'_>::new",
    "hash": "126517094754030932879254464035877180093"
  },
  {
    "file": "core/src/marker/variance.rs",
    "func": "marker::variance::PhantomInvariantLifetime::<'_>::new",
    "hash": "172068683777788445607331838337744212616"
  },
  {
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_adt_no_drop",
    "hash": "13037899208302076263375549053155161902",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/mem/mod.rs",
    "func": "mem::verify::check_swap_primitive",
    "hash": "1717101756447802310715175302454681369029",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as clone::Clone>::clone",
    "hash": "957911199576920547913827652066070307163"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "56907166950805559039958426646764855591"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as cmp::PartialEq>::eq",
    "hash": "177319576421157872825715569893219082237"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Add>::add",
    "hash": "152975086837140617203934880542782397168"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "<mem::transmutability::Assume as ops::arith::Sub>::sub",
    "hash": "384694598451708586318384856848305366236"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::and",
    "hash": "1624841901934307103217154764618049582148"
  },
  {
    "file": "core/src/mem/transmutability.rs",
    "func": "mem::transmutability::Assume::but_not",
    "hash": "121657355206552989623019318999956698157"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "3289053895466658893517640244060825556"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "660007912721758139311965126466504552472"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "156680052251771583779764131518450860748"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "83165873391271386421947026076856860742"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "121806141556152702312345638749698907396"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "1802367530408846568411428499654291777914"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "570405065673271400413162653863302444997"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "178810404621908775168629551664814101859"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "96659959206310965368018159817966510271"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "1142660893344228079915748365076315715966"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone",
    "hash": "130451850369957045964627975359331558750"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default",
    "hash": "97888789030159563051482090395443728303"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as clone::Clone>::clone",
    "hash": "1592931133465162852710430359578801309863"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "699895134547889873216880974928188532998"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::Ord>::cmp",
    "hash": "128795145393585590588603188931885563549"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq",
    "hash": "19762176887033544061416240503096140415"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq",
    "hash": "62518593400085118209437031523895990533"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialEq>::eq",
    "hash": "519848855445331677615765936838276489873"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp",
    "hash": "1588288073038651098016722250058647141275"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp",
    "hash": "180869414585444651893569381420093667775"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "836982607290894572517500347179804466235"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from",
    "hash": "1425987216398118105613036156727427706121"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from",
    "hash": "179789409297573410534232820576374994179"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from",
    "hash": "752261986066604871815611085230198290151"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from",
    "hash": "1800839159772571730814049579631535094848"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from",
    "hash": "126444517687861240866378254372516813124"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as clone::Clone>::clone",
    "hash": "105116857514978712299488920467851660110"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1313368208223487828413411179490700964826"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp",
    "hash": "158060559917068918317269146473611702826"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "107815965860260856227666891890345449330"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq",
    "hash": "22514557286134941142872601844211532905"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "238614357314754748117740057556011900732"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "74853996099678134806230615765075624078"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from",
    "hash": "1403877265646685064613124593493548670732"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as convert::From<u32>>::from",
    "hash": "69871353532066980544897585071275116306"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand",
    "hash": "31527483223497176696169004421928599595"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand",
    "hash": "58445320798646433118709282198932769580"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign",
    "hash": "561068536559220212513420991215628971657"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "40756066174663484851338108562230823172"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor",
    "hash": "936203540420888233411410839568778926130"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor",
    "hash": "373589583218089797317734657403801323014"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign",
    "hash": "377964402537040325713150056073082824273"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "108878077566502230319256707558724953062"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv4Addr as ops::bit::Not>::not",
    "hash": "408931640544381338017052904874287044524"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as clone::Clone>::clone",
    "hash": "1753159209428684614116081103557256936386"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "39924088009595103676021588287627880790"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp",
    "hash": "18204729311824130726325374780800313184"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq",
    "hash": "424375166815141493111819777083621140757"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq",
    "hash": "27995100921012322006659764035308386650"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp",
    "hash": "306382355457731525411854725681774290062"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp",
    "hash": "11483835119034353083430649785675839839"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from",
    "hash": "1461512567679396821211038473372246159914"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from",
    "hash": "159567771208325214032370378719124472776"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as convert::From<u128>>::from",
    "hash": "137193112834159416054742248961408996817"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand",
    "hash": "872269240780715399812461855997097414849"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand",
    "hash": "154417390872939838853604524968634557170"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign",
    "hash": "185523181393359342814803812171375262235"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "184355480123790478703930230792845774199"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor",
    "hash": "130078555567973904588958518845219234414"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor",
    "hash": "140047070808019570902543050903220011112"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign",
    "hash": "9757972492380524871639512520791375747"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "53410928620019068928306187535699959117"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6Addr as ops::bit::Not>::not",
    "hash": "15794044032412642244801332983846990674"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone",
    "hash": "172866510947603896934418026920293593502"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "404790904849763324817933800611961631143"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq",
    "hash": "145146709273065341819774158935657364597"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from",
    "hash": "1696730035885257271214736167239559237670"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from",
    "hash": "7071459416199757396418327683241982948"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::as_octets",
    "hash": "4705482211315362975858625592390453046"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_benchmarking",
    "hash": "12318467334704965649509596952530374733"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_documentation",
    "hash": "813758809631675583411589085800274093996"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_global",
    "hash": "786057709634541279412190843733586762758"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv4",
    "hash": "526772866828254549416515268353765039904"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_ipv6",
    "hash": "184428448895295116306167910575598370512"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_loopback",
    "hash": "32873847812519052257113254579682962508"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_multicast",
    "hash": "1691859341143373598215148521276625802008"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::is_unspecified",
    "hash": "176245604176977132707178551809419365881"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::IpAddr::to_canonical",
    "hash": "18741757727433805942458072696252017971"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::as_octets",
    "hash": "1389290495299856438511536021715866820639"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_bits",
    "hash": "1543566054144071954512201060182275772164"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::from_octets",
    "hash": "32820556012326612714782141073138251957"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_benchmarking",
    "hash": "1675073246529601727710166762465061837228"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_broadcast",
    "hash": "170663452020032426642146870647859255173"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_documentation",
    "hash": "285833571016323520416635200309717108362"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_global",
    "hash": "1192950457889379434611592398484320982871"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_link_local",
    "hash": "25060041244299274795082645109572782416"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_loopback",
    "hash": "79687300395009530101441219959955387644"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_multicast",
    "hash": "169874302490277010294194525989121542530"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_private",
    "hash": "496535206694151039276820290319880547"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_reserved",
    "hash": "19675572153586105386253977099864582398"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_shared",
    "hash": "1114719832112737093515736174841766962986"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::is_unspecified",
    "hash": "47877247490396401666408030173161437210"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::new",
    "hash": "625003328998925956015889871136750928179"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::octets",
    "hash": "12017343041207958746844635751563486115"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_bits",
    "hash": "44705449689454988474261134975974753782"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_compatible",
    "hash": "40087876194635125787275085864339649617"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv4Addr::to_ipv6_mapped",
    "hash": "535915455445409654413190786007607769707"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::as_octets",
    "hash": "131217072823185647217186814534168655605"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_bits",
    "hash": "22879186408792289312322023474682861269"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_octets",
    "hash": "20259385115277752043258744566892476136"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::from_segments",
    "hash": "132079911762954441634003761249901526569"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_benchmarking",
    "hash": "142061657087719042256890749498488018146"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_documentation",
    "hash": "630807426887300890117813031010325768419"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_global",
    "hash": "17386848961173584506059159826209816407"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_ipv4_mapped",
    "hash": "256256427513060906117801205191518353176"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_loopback",
    "hash": "179091303726382595181923687100471256345"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_multicast",
    "hash": "29300402477199595803591843807582636483"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast",
    "hash": "116320836210173299061918552949826887774"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_global",
    "hash": "162929730811903636531458186619459624386"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unicast_link_local",
    "hash": "4247348736777274769637469197228124818"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unique_local",
    "hash": "4317819402967845610518531574231534746"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::is_unspecified",
    "hash": "1363876606624961659717497476237833444010"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::multicast_scope",
    "hash": "157014167593338938068821376044911016878"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::new",
    "hash": "615554741243966105812226392550441063632"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::octets",
    "hash": "34991565871808719706323435058542387885"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::segments",
    "hash": "41532692547569999225046187124357082902"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_bits",
    "hash": "98998007385675903956930867996456411883"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_canonical",
    "hash": "821258362216203606716882117674017960317"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4",
    "hash": "126134342821521070481902031003248805915"
  },
  {
    "file": "core/src/net/ip_addr.rs",
    "func": "net::ip_addr::Ipv6Addr::to_ipv4_mapped",
    "hash": "78400343606127398824826881156561590759"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as clone::Clone>::clone",
    "hash": "1370019093155152902010401177936591575917"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "195177042567309134210796825666930184911"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrKind as cmp::PartialEq>::eq",
    "hash": "42172447370088695595015643920924669938"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as clone::Clone>::clone",
    "hash": "302143686293362919117391973111953902757"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "128673822205697798025506211265678585610"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as cmp::PartialEq>::eq",
    "hash": "156910522529483944888045975821263720896"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<net::parser::AddrParseError as error::Error>::description",
    "hash": "401432207805360995414637947518347778230"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "149883195682072137404601567002486941672"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u16 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "103658122562023179891262606889661421913"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "27466521081653823834479776344495757807"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u32 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "92474542358062411546587426408183996015"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_add",
    "hash": "51450201810347861597720474441534776592"
  },
  {
    "file": "core/src/net/parser.rs",
    "func": "<u8 as net::parser::ReadNumberHelper>::checked_mul",
    "hash": "11721918242640171550671995476367978583"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as clone::Clone>::clone",
    "hash": "88458420746662379575095120827263904971"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "179141913842737400615253922321091285284"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::Ord>::cmp",
    "hash": "502646829569186572310017436063129963331"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialEq>::eq",
    "hash": "175858947548664344911066961780803085569"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp",
    "hash": "674196941593548058515222805396362662060"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from",
    "hash": "153323925250923869306700193661932308"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from",
    "hash": "1369340374846110601330480119513241732"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as clone::Clone>::clone",
    "hash": "68080834889050016117231807165984695382"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "162627822990967568545680411941344620226"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp",
    "hash": "11605006887845933347338047398183295613"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq",
    "hash": "89855637929544432596724537225774637115"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp",
    "hash": "1817672927060005310411339717329403254109"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as clone::Clone>::clone",
    "hash": "24924756343777319992673160986363572787"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1004741938491218896510110372317350392763"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp",
    "hash": "195479650111263711613442948423246895362"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq",
    "hash": "130441551568368551089548465416482896724"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp",
    "hash": "107381633654126469831962650896549209514"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::ip",
    "hash": "155433701207698150065503088318929590759"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv4",
    "hash": "106683791209400540414281810545647469182"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::is_ipv6",
    "hash": "1035452610400905959550635520166736883"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::new",
    "hash": "76579910860073623511173061873780050390"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::port",
    "hash": "108603551989599578726039711787305676843"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_ip",
    "hash": "57168113491197675488619332601915765997"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddr::set_port",
    "hash": "1311295568194347328117151160826201304323"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::ip",
    "hash": "137073796018663109533209337744368838964"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::new",
    "hash": "6077482691357867889050902356832141359"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::port",
    "hash": "177800077458169924672943620119073261126"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_ip",
    "hash": "171651204717281929698878165565629248606"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV4::set_port",
    "hash": "987352356085771682612098579739811908944"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::flowinfo",
    "hash": "9486541004293987016240939614243337633"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::ip",
    "hash": "1835023054156825075014684061246026254424"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::new",
    "hash": "83408518758570948874562596302013211952"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::port",
    "hash": "1542168626707841225312907333705813000078"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::scope_id",
    "hash": "1480562036570831828110495675082605820825"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_flowinfo",
    "hash": "1498130051479737662516297259380940806499"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_ip",
    "hash": "142421677975186521714725982521349681141"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_port",
    "hash": "191798343320412586510864850145402470853"
  },
  {
    "file": "core/src/net/socket_addr.rs",
    "func": "net::socket_addr::SocketAddrV6::set_scope_id",
    "hash": "733098752226639335881070172284796187"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as clone::Clone>::clone",
    "hash": "119250015339170338192373845324764467602"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::Ord>::cmp",
    "hash": "175108687662781551221420223008457671931"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialEq>::eq",
    "hash": "115690086053037707816911094066566849743"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp",
    "hash": "596049867877053732910013050783838411549"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as clone::Clone>::clone",
    "hash": "142534561980331522816719286583632410307"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::Ord>::cmp",
    "hash": "14298627906182697968924912341006255219"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq",
    "hash": "175414318036770688947072337099230788973"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp",
    "hash": "1666794042850999797712981327087939920286"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_div_rem",
    "hash": "1029219755961862376911098354470779249339"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u16 as num::bignum::FullOps>::full_mul_add",
    "hash": "91941989600517607454151706739342972958"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_div_rem",
    "hash": "46222866349141219552613182435585716161"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u32 as num::bignum::FullOps>::full_mul_add",
    "hash": "785085016792226321317550951059460535476"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_div_rem",
    "hash": "1138303699169255331818282254899080684389"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "<u8 as num::bignum::FullOps>::full_mul_add",
    "hash": "1419834204093691851312212301718223208807"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add",
    "hash": "1534204104523954210215019193675425929636"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::add_small",
    "hash": "1229257185776007313214909539927972429780"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::bit_length",
    "hash": "955012512720700531011459660387691494235"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::digits",
    "hash": "30482898573834532787379111104062077784"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem",
    "hash": "30851661002416651934407955758387954007"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::div_rem_small",
    "hash": "1739781815144221725116514090201273184018"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_small",
    "hash": "285589171554812107210692116339769847559"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::from_u64",
    "hash": "112109469497593157613137034640471651801"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::get_bit",
    "hash": "1232052903934783435711201791698508092789"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::is_zero",
    "hash": "74797563072537726997617049296264851694"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow2",
    "hash": "148571954165855253083648159351411917179"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_pow5",
    "hash": "920545035294542844017979371290270877311"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::mul_small",
    "hash": "76831951751150317744263867292857101725"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::Big32x40::sub",
    "hash": "10466643743572548654995847843383994765"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add",
    "hash": "1611504835697330296414402807549311548624"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::add_small",
    "hash": "27471786594757670903837777219477867331"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::bit_length",
    "hash": "724362024876716633616491298136663524562"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::digits",
    "hash": "141398466260006704211545858537362365993"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem",
    "hash": "79000373628070283857913912697378581741"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::div_rem_small",
    "hash": "1398564191675707278910562169389422218549"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_small",
    "hash": "164529263798971822246512196965964349380"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::from_u64",
    "hash": "73362978635720256583267674835834657628"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::get_bit",
    "hash": "1592498218723911354712853515045943552559"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::is_zero",
    "hash": "129252261182017691657955082844625007143"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow2",
    "hash": "34308728741274202029884853661016581656"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_pow5",
    "hash": "1402704090280297961415468633294062290889"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::mul_small",
    "hash": "76649652582581352889063983772705404678"
  },
  {
    "file": "core/src/num/bignum.rs",
    "func": "num::bignum::tests::Big8x3::sub",
    "hash": "57945921792892216834754978852268750733"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as clone::Clone>::clone",
    "hash": "1707406605184984236218278505648311052244"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "104558809110175468053916315646201362736"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq",
    "hash": "836331814022703700313289531238782556790"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "<num::dec2flt::common::BiasedFp as default::Default>::default",
    "hash": "156090881868547699848269301670301926885"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::BiasedFp::zero_pow2",
    "hash": "44045435809800886759043385147663812926"
  },
  {
    "file": "core/src/num/dec2flt/common.rs",
    "func": "num::dec2flt::common::is_8digits",
    "hash": "345794684947781167615629573459899653811"
  },
  {
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as clone::Clone>::clone",
    "hash": "717633965937075421512541207027956108508"
  },
  {
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "21787716972828087915131661193396586668"
  },
  {
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq",
    "hash": "151327864555534064618589503439779432548"
  },
  {
    "file": "core/src/num/dec2flt/decimal.rs",
    "func": "<num::dec2flt::decimal::Decimal as default::Default>::default",
    "hash": "585477850685136306311266920657034130131"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone",
    "hash": "1153522991229613923830718532853320428"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq",
    "hash": "591518331280392557813512623414012847250"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default",
    "hash": "350648819093610937116112086784531410776"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::left_shift",
    "hash": "154512013160695076369442422226226354849"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::right_shift",
    "hash": "250741589726393125511819615472217529448"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::round",
    "hash": "1461711153190689911613073356474055459809"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::trim",
    "hash": "77831701728045682559350397202329929431"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::DecimalSeq::try_add_digit",
    "hash": "1833074744190708295011255743658617072655"
  },
  {
    "file": "core/src/num/dec2flt/decimal_seq.rs",
    "func": "num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift",
    "hash": "1760668207172418075912869040251995451274"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::classify",
    "hash": "15966691110355837516913420857608751229"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "1159816339070295108313449730837458204808"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "1069821818572217014915127415774681872969"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "41014141829897906357615436989832794622"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f16 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "16471144091880268427494158880420134065"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::classify",
    "hash": "154795349396181500551758663392331568488"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "540502260302221945017091708678793115568"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "264983264476803818218158928191442999462"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "718377699897599555210110373784653536659"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f32 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "111278946214828341879274539483098245666"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::classify",
    "hash": "124298188645276224878809849554780729789"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64",
    "hash": "161083695506013273626755016442242789353"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::from_u64_bits",
    "hash": "177135054311111939052089438624927004500"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path",
    "hash": "129093558950603046909146890009534377827"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<f64 as num::dec2flt::float::RawFloat>::to_bits",
    "hash": "141559984418901664399565561463953748867"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u16 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "107070791905326016341782144737492253144"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u32 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "7867064729465219112724656563380789063"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "<u64 as num::dec2flt::float::CastInto<i16>>::cast",
    "hash": "568655774299591228617312074412775920003"
  },
  {
    "file": "core/src/num/dec2flt/float.rs",
    "func": "num::dec2flt::float::pow2_to_pow10",
    "hash": "758630140710919939714963712534796146448"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::compute_product_approx",
    "hash": "139191672392053032767523189105968887167"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::full_multiplication",
    "hash": "513483540861588855618331600497676339826"
  },
  {
    "file": "core/src/num/dec2flt/lemire.rs",
    "func": "num::dec2flt::lemire::power",
    "hash": "54865527631102578214687864584012705963"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as clone::Clone>::clone",
    "hash": "231447795483417265514514268056817062999"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "43019984620153923441420388475182742372"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq",
    "hash": "127865046364359319495257623940657923221"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as clone::Clone>::clone",
    "hash": "104054674504693782271881999802949287599"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "450663717535372074118292542446739134594"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq",
    "hash": "73722650354123320092853053859691327038"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "<num::dec2flt::ParseFloatError as error::Error>::description",
    "hash": "13462478023114882719647671441723742285"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_empty",
    "hash": "72074845473491202958589767618375210389"
  },
  {
    "file": "core/src/num/dec2flt/mod.rs",
    "func": "num::dec2flt::pfe_invalid",
    "hash": "18645182176297238087474238048601179912"
  },
  {
    "file": "core/src/num/dec2flt/parse.rs",
    "func": "num::dec2flt::parse::parse_8digits",
    "hash": "1493739351298580773914601032996249172526"
  },
  {
    "file": "core/src/num/diy_float.rs",
    "func": "<num::diy_float::Fp as clone::Clone>::clone",
    "hash": "443361280522148283613380540165720695006"
  },
  {
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::mul",
    "hash": "81766016799868562011790663012163856622"
  },
  {
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize",
    "hash": "70426777314254924688290183476808366083"
  },
  {
    "file": "core/src/num/diy_float.rs",
    "func": "num::diy_float::Fp::normalize_to",
    "hash": "20799105255079102575841200781623075430"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as clone::Clone>::clone",
    "hash": "90210789826258399064097844296726311647"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "454665021989590342617282880985889939082"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::IntErrorKind as cmp::PartialEq>::eq",
    "hash": "1718602885755309833017410274471124051953"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as clone::Clone>::clone",
    "hash": "1156756135868894068714733726014067649460"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1517327422193902355415403273298561094837"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as cmp::PartialEq>::eq",
    "hash": "170427589447158993118812869398283016445"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::ParseIntError as error::Error>::description",
    "hash": "374855346048994022113798943144847288699"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as clone::Clone>::clone",
    "hash": "133546831879331256102182777462696689694"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1256143819593062883411275292921341374647"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as cmp::PartialEq>::eq",
    "hash": "25274785325835720459562682485461534610"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "<num::error::TryFromIntError as error::Error>::description",
    "hash": "2458227026527557613100154533626907542"
  },
  {
    "file": "core/src/num/error.rs",
    "func": "num::error::ParseIntError::kind",
    "hash": "1740911657700004282214406154506963348562"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::abs",
    "hash": "138593577866151870709257876221659179848"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_add",
    "hash": "447118504585278649912378375322529974165"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_div",
    "hash": "85418637618309251024041589011417100713"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_mul",
    "hash": "72829411481963098135197760217988351166"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_rem",
    "hash": "14245165462803112065127613664094449664"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::algebraic_sub",
    "hash": "752617449389850476410882996884468435291"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::ceil",
    "hash": "122736727049617779651999378335701938542"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::clamp",
    "hash": "1139658114708262204816818385775713738484"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::classify",
    "hash": "34752466595617164712307041921613624124"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::copysign",
    "hash": "1383287458172809670211358675792079980585"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::div_euclid",
    "hash": "367221341044340683315125277897166704632"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::floor",
    "hash": "73934017180787211052353291248574421990"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::fract",
    "hash": "1610833878905966489410142578878592579113"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_be_bytes",
    "hash": "161159727008123792836543488035799354316"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_bits",
    "hash": "513066894812535900215710623547755226647"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_le_bytes",
    "hash": "97365245869787195506272113964576186386"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::from_ne_bytes",
    "hash": "41740360107495770499489626293742130957"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_finite",
    "hash": "385873668303395517512786136367046801839"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_infinite",
    "hash": "104744709495731004249216078155535500550"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_nan",
    "hash": "132878099176373786253594480564535275744"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_normal",
    "hash": "1498843591845415325810407246492749043161"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_negative",
    "hash": "5953983228655222625130425058078996821"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_sign_positive",
    "hash": "1028892964828908688212582798474569714090"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::is_subnormal",
    "hash": "1305618011685766058513175773474935124009"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::max",
    "hash": "95365303499695721194840397142294546646"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::maximum",
    "hash": "134820197465959663209052004451752908480"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::midpoint",
    "hash": "171024981345541112835538968023076710836"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::min",
    "hash": "1441390011481440905817786562078202224583"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::minimum",
    "hash": "1527585572805095243516818906694400735553"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::mul_add",
    "hash": "21454350072502222406284798693198854462"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_down",
    "hash": "234724518994877027614114357614619704142"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::next_up",
    "hash": "53740124252827369855467062797436318161"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::powi",
    "hash": "383817028587030431818132727732382516310"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::recip",
    "hash": "148197070704641754412899721690768565843"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::rem_euclid",
    "hash": "745855958262411242510090854916793678825"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round",
    "hash": "97982541854233308314726949700095671711"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::round_ties_even",
    "hash": "45189103262041159362746415053293411851"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::signum",
    "hash": "958287516117648277315890973912498482647"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::sqrt",
    "hash": "1035198030661057916617395823960449161089"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_be_bytes",
    "hash": "99494410449024449786219195844372345740"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_bits",
    "hash": "165775386293870703954395633549113159997"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_degrees",
    "hash": "511135734290953696115743719406138901282"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_le_bytes",
    "hash": "182682246719184423799994349537964954635"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_ne_bytes",
    "hash": "1474346641311058817810625607176236770958"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::to_radians",
    "hash": "151706862482948340443995146322985178624"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::total_cmp",
    "hash": "8692406517124851132551284556010326709"
  },
  {
    "file": "core/src/num/f128.rs",
    "func": "f128::<impl f128>::trunc",
    "hash": "474593235045029282412600272847813738119"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::abs",
    "hash": "82467565775148730862031372430995910236"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_add",
    "hash": "1719186531752982543710036389158479707283"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_div",
    "hash": "1093032972911035897017261665766940447874"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_mul",
    "hash": "37195833462644796662620331057808157549"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_rem",
    "hash": "710112091116430960010312787319791672604"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::algebraic_sub",
    "hash": "93969747245866580797058805831199167642"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::cbrt",
    "hash": "25689845208892128376205905259893828137"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::ceil",
    "hash": "336075698106559934318058554752019695771"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::clamp",
    "hash": "25556615531858288111609407509896102994"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::classify",
    "hash": "8000943652234019136832957153602333468"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::copysign",
    "hash": "108874174590053510907512472740743574003"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::div_euclid",
    "hash": "12099241458196904107791722196525330970"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::floor",
    "hash": "15565001129289722316849581974161446118"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::fract",
    "hash": "818295712779777334117934185490080556635"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_be_bytes",
    "hash": "700859817945990758612772682318091956865"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_bits",
    "hash": "722356051014394436815798461825995721703"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_le_bytes",
    "hash": "70106780564550044299630613168261489887"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::from_ne_bytes",
    "hash": "1373949037792128600511853456148985806400"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_finite",
    "hash": "574940258111172578814526268947982639384"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_infinite",
    "hash": "1832056242981580624615967653935827811355"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_nan",
    "hash": "325778596882228985815328037091464060945"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_normal",
    "hash": "9392522490934927840785200810344348882"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_negative",
    "hash": "1426779404162979833918221456320415694756"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_sign_positive",
    "hash": "70805516944387764092412218110438222606"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::is_subnormal",
    "hash": "1290128832422256772712071006209344350172"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::max",
    "hash": "2665226753121189139394052048596317126"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::maximum",
    "hash": "34741186404253111575850258838994805659"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::midpoint",
    "hash": "148822791421416046424491261916677015989"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::min",
    "hash": "1612850333295056511617129570328828804829"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::minimum",
    "hash": "17450539641537736743616115040709949869"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::mul_add",
    "hash": "1728805213170435905816732554922939884856"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_down",
    "hash": "539124922727278688916599957773711795157"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::next_up",
    "hash": "1811967463822239206511427763840770018119"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::powi",
    "hash": "182734727219748077415663525526809793648"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::recip",
    "hash": "115660043215288570916837364085466018803"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::rem_euclid",
    "hash": "159249098933212364335101737271537340935"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round",
    "hash": "128186024539098806022721169848493998053"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::round_ties_even",
    "hash": "93245832934863959196813904842956386563"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::signum",
    "hash": "24385429581725819651047640655405819163"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::sqrt",
    "hash": "11530699551166059289323912559023544405"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_be_bytes",
    "hash": "156662959801357828862273848815860311574"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_bits",
    "hash": "85923289477831052692122619536239009122"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_degrees",
    "hash": "39495730975686225949808353958516798081"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_le_bytes",
    "hash": "863597698290302461615757035159872508267"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_ne_bytes",
    "hash": "167271844037110177697544444625608848225"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::to_radians",
    "hash": "4361076937601615684386128663545706384"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::total_cmp",
    "hash": "98350514611989622859952938249053652108"
  },
  {
    "file": "core/src/num/f16.rs",
    "func": "f16::<impl f16>::trunc",
    "hash": "838360734840352187515531266742340401822"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::abs",
    "hash": "1085489109560079462430857907814768808"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_add",
    "hash": "37262877627808407871295134071806499444"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_div",
    "hash": "73636896542915344912869938449750424638"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_mul",
    "hash": "1561241477811885982512978575833371945909"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_rem",
    "hash": "1049672765436417980316745103790463781703"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::algebraic_sub",
    "hash": "620708502322068505612486725656123573484"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::clamp",
    "hash": "164565304589813709795017893732463992852"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::classify",
    "hash": "18427937391375551140814136183166666164"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::copysign",
    "hash": "274990639326455911612273769591367203046"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_be_bytes",
    "hash": "66795861843673834574355937263266019638"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_bits",
    "hash": "553099691978938235113267572047344907891"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_le_bytes",
    "hash": "1704270401297634609817220445026845168783"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::from_ne_bytes",
    "hash": "29112544235511725913606672946377139809"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_finite",
    "hash": "74862234970246558731225767007302683254"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_infinite",
    "hash": "164504003056651945101994807361635942367"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_nan",
    "hash": "1307608711278318824911131469257051374762"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_normal",
    "hash": "176733914389274285062837370850247950709"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_negative",
    "hash": "1398226212482420730614099943058294986463"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_sign_positive",
    "hash": "531306283664263090015910495965463845957"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::is_subnormal",
    "hash": "895537976370591531512805102141808170948"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::max",
    "hash": "45325389431599112109396728805354801564"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::maximum",
    "hash": "256825972732111050714047292502423460748"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::midpoint",
    "hash": "67019335807982047814419131177019406932"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::min",
    "hash": "1594211387195603940016630630937389144012"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::minimum",
    "hash": "127014315384059071133365046670876509610"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_down",
    "hash": "77796426982509225873496989225011471254"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::next_up",
    "hash": "1173062814630456309215113757149003871736"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::recip",
    "hash": "162566759275764444016033311814797646096"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::signum",
    "hash": "604258784128465867013838350341028118036"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_be_bytes",
    "hash": "9951031823806693495640996030041735036"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_bits",
    "hash": "162361112433299032238584891523845488474"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_degrees",
    "hash": "3938323976557368156770088272059991010"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_le_bytes",
    "hash": "119534714794488864517406460338020424216"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_ne_bytes",
    "hash": "738699293746188808910220566087681189134"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::to_radians",
    "hash": "2352982872764981886577717227964347450"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::<impl f32>::total_cmp",
    "hash": "93773215297586442255071597017053773700"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::abs_sub",
    "hash": "121196328344731498658196366298443890491"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::cbrt",
    "hash": "481365052465524224817483754031277486021"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::ceil",
    "hash": "181034642785562605037976658192381876610"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::div_euclid",
    "hash": "47894184038905845945419964065138018216"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::floor",
    "hash": "41147567863670906031107587875558593963"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::fract",
    "hash": "1586184351059393539218360489835216173116"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::mul_add",
    "hash": "770877863263875541610342360076212164164"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::powi",
    "hash": "58757669996828471398393883459155763969"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::rem_euclid",
    "hash": "1672617343526278095218313561774386705684"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round",
    "hash": "84163577567997390375392557801220749114"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::round_ties_even",
    "hash": "101994095648579636516075309233367102488"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::sqrt",
    "hash": "1210456108993569460910696961762346448682"
  },
  {
    "file": "core/src/num/f32.rs",
    "func": "f32::math::trunc",
    "hash": "623525633313800358912715812805344721782"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::abs",
    "hash": "60021163176935339314994458107431605467"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_add",
    "hash": "1465898378395270257610198340956427210522"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_div",
    "hash": "149696185705850633156544772770526032279"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_mul",
    "hash": "1214556311439907389713486444623098168674"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_rem",
    "hash": "157969681876999181104973110454251905600"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::algebraic_sub",
    "hash": "1114157775450086651911794758510810183232"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::clamp",
    "hash": "173877410866601908459917331171147944875"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::classify",
    "hash": "162537370977980029316478152370412396428"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::copysign",
    "hash": "365438631184282439011285899670943732554"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_be_bytes",
    "hash": "880168759754780579314009687419270528249"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_bits",
    "hash": "1617051901138629639615839978579417339483"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_le_bytes",
    "hash": "117105067190282438781376111149150023504"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::from_ne_bytes",
    "hash": "118480532193189289128038228281965502765"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_finite",
    "hash": "155681767050568610546851726048238771226"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_infinite",
    "hash": "54161655352067232365592711565939719072"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_nan",
    "hash": "100642205651013257673627407189684710656"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_negative",
    "hash": "161378386364387822984771773735213488367"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_normal",
    "hash": "181980580219519281642906226319735859429"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_positive",
    "hash": "1217630093281519036912261477851449526402"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_negative",
    "hash": "34360288244467616574619726772327931304"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_sign_positive",
    "hash": "655739947985592217914945729043838123632"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::is_subnormal",
    "hash": "21062875721390329942688382674551815444"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::max",
    "hash": "1392796544063051054918033517579933403806"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::maximum",
    "hash": "303962058219057683115925667659007469412"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::midpoint",
    "hash": "1648781559502910457010180616284526822153"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::min",
    "hash": "702814949207714502813782557618508285366"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::minimum",
    "hash": "637089694910156801175275351562364466"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_down",
    "hash": "181513010101353505059997577004979723522"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::next_up",
    "hash": "15642321231260515835041473110300543819"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::recip",
    "hash": "121656398270259076462793563458688165162"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::signum",
    "hash": "1836119057442934313814493945907791697762"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_be_bytes",
    "hash": "1813827437755800611816650047529721805401"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_bits",
    "hash": "85253214614932633916524759824229868238"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_degrees",
    "hash": "1451349989553351976710805431511842390176"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_le_bytes",
    "hash": "14289089276795037331211469396089319332"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_ne_bytes",
    "hash": "169671292104166876707485795736207541930"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::to_radians",
    "hash": "1346473505530223641917577653964509469130"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::<impl f64>::total_cmp",
    "hash": "1342255621888147885315125004424529991795"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::abs_sub",
    "hash": "1212526426432370254313441399376180871432"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::cbrt",
    "hash": "1052368048766042659411641593037989781246"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::ceil",
    "hash": "58828247350901863231709356070165711421"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::div_euclid",
    "hash": "967726063111021628512663348474997599923"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::floor",
    "hash": "151837913588740677056390801221333888969"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::fract",
    "hash": "100418998316616415618063920654374564754"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::mul_add",
    "hash": "205011051640705883811198615143906100529"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::powi",
    "hash": "46185075348152595665377413454280363444"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::rem_euclid",
    "hash": "1153073825831726987717606795812313094966"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round",
    "hash": "12303845670789987053550469328047565902"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::round_ties_even",
    "hash": "1701344986814095481812803703223877817511"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::sqrt",
    "hash": "72691867527395098814800163932876261655"
  },
  {
    "file": "core/src/num/f64.rs",
    "func": "f64::math::trunc",
    "hash": "639789307973945731412387404173655386032"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f16 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "375425418379114685616447510973446293116"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "183602376003035992122778774284106907808"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value",
    "hash": "162331121968024766477542139387619839881"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as clone::Clone>::clone",
    "hash": "672168121236593919117131084651335156980"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "360365091613011637817514565646495555372"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq",
    "hash": "7149147225631031484892307578969001696"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone",
    "hash": "1276907237099749369313407703758927193532"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "37555198301454581811129887253519381364"
  },
  {
    "file": "core/src/num/flt2dec/decoder.rs",
    "func": "<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq",
    "hash": "51831511716676655186263794947791218082"
  },
  {
    "file": "core/src/num/flt2dec/estimator.rs",
    "func": "num::flt2dec::estimator::estimate_scaling_factor",
    "hash": "155041748360762937638350051321604476676"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as clone::Clone>::clone",
    "hash": "165714937731821235567657976715661774338"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1089840201179085988616508106919030991011"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "<num::flt2dec::Sign as cmp::PartialEq>::eq",
    "hash": "46359210133475002402450352959985773748"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::determine_sign",
    "hash": "1438781855530343917818066995436396679760"
  },
  {
    "file": "core/src/num/flt2dec/mod.rs",
    "func": "num::flt2dec::estimate_max_buf_len",
    "hash": "409339249035935029916275208566778857458"
  },
  {
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_2pow10",
    "hash": "77329358100738105168950243943764636111"
  },
  {
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::div_rem_upto_16",
    "hash": "112895238332963256769548183563783312618"
  },
  {
    "file": "core/src/num/flt2dec/strategy/dragon.rs",
    "func": "num::flt2dec::strategy::dragon::mul_pow10",
    "hash": "326812344074104525013210272784434097817"
  },
  {
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::cached_power",
    "hash": "1657977473695841854811276965273939985065"
  },
  {
    "file": "core/src/num/flt2dec/strategy/grisu.rs",
    "func": "num::flt2dec::strategy::grisu::max_pow10_no_more_than",
    "hash": "1455651996402066124810316458983108570535"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i128",
    "hash": "313904936225171519111571997399118731798"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i16",
    "hash": "5577838865185192823672601932342020489"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i32",
    "hash": "1329675746209376949615542274849979724359"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i64",
    "hash": "102773837386279453315694735866026405232"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::i8",
    "hash": "52937659519552502645116582625466919606"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::less_than_5",
    "hash": "469731897247902151615947250155763551554"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::panic_for_nonpositive_argument",
    "hash": "17669494056957649145896081724806188101"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u128",
    "hash": "107915975055850254517487488491340420748"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u16",
    "hash": "63342002960328698975182430874910564640"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u32",
    "hash": "36892355048508255759761394875650662945"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u64",
    "hash": "54066239791891785914691895834688847933"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::u8",
    "hash": "1079233623281845885111376933942968270447"
  },
  {
    "file": "core/src/num/int_log10.rs",
    "func": "num::int_log10::usize",
    "hash": "139696451100528814248779531471282998899"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs",
    "hash": "1695133293662628629012134106752669554906"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::abs_diff",
    "hash": "398237528687171946517291953226401942251"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::borrowing_sub",
    "hash": "1504414387477333660516651295110733392414"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_add",
    "hash": "257799738417857042413525585230925256611"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul",
    "hash": "1706960395817944841110231288706963313326"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::carrying_mul_add",
    "hash": "59263454791362266810401254543935745147"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::cast_unsigned",
    "hash": "102335954412408833362168600392876540665"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_abs",
    "hash": "91138528798445444969911162646306458301"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add",
    "hash": "62243028603374997613685014492789737362"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_add_unsigned",
    "hash": "1424249142378149954115424231693646622487"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div",
    "hash": "1797953838856203836914302355497185698032"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_div_euclid",
    "hash": "884064877602926752713533370159605882207"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_exact_div",
    "hash": "88785124529434209383842229132224140780"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog",
    "hash": "28676594683612999383810652631510130855"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog10",
    "hash": "597413773906075672615262143251434756635"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_ilog2",
    "hash": "143381049809374985008631148365655204598"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_isqrt",
    "hash": "13503590126346410316996520853692705128"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_mul",
    "hash": "960600983516162134413737275606947190924"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_neg",
    "hash": "1143515164645135052514944446399765727669"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_next_multiple_of",
    "hash": "120695304053289288818002942771024580861"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_pow",
    "hash": "50447160907635106225952569406420750835"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem",
    "hash": "44246733206493314871781007064238563235"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_rem_euclid",
    "hash": "5449145951075530392335479503277484125"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shl",
    "hash": "179442922324158243844804255941410313306"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_shr",
    "hash": "93468592062266614459963993058286204107"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub",
    "hash": "561446334695135571412784944276709905528"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::checked_sub_unsigned",
    "hash": "150312511337520763918319481787793493868"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_ones",
    "hash": "1634629899961146991414465180747449124845"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::count_zeros",
    "hash": "61011831826256358181041416724030108116"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_ceil",
    "hash": "1413199771447368744910377201548761305836"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_euclid",
    "hash": "177447242146718197766824700048870712521"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::div_floor",
    "hash": "1765287407535526451816347384280307409021"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::exact_div",
    "hash": "41240793723156244499457960563144577843"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be",
    "hash": "139768501496797787133261769443205478185"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_be_bytes",
    "hash": "331598511828863635111689047160777842391"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le",
    "hash": "21661654536510431203058732222115764078"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_le_bytes",
    "hash": "103398036321375884536855681204047300496"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::from_ne_bytes",
    "hash": "712540539518835534017111870995480276254"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog",
    "hash": "1151012315907401755610125471312354028823"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog10",
    "hash": "131597557128778556623497559799067878806"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::ilog2",
    "hash": "1210449323081414053318072798746043501381"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_negative",
    "hash": "1040547417923308615810623583032624220719"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::is_positive",
    "hash": "68725332895706954004259755877945866658"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_highest_one",
    "hash": "1568195578736775402912571761566002776010"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isolate_lowest_one",
    "hash": "634601512422499074215025383643990963035"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::isqrt",
    "hash": "103221190957231510986278751341890025427"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_ones",
    "hash": "61654371075958001673055622554494193131"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::leading_zeros",
    "hash": "153162181775715927399968518672013056960"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::max_value",
    "hash": "100281286979762755562991403303903038080"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::min_value",
    "hash": "1777809688527237704515479638547967035057"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::next_multiple_of",
    "hash": "170155471952335790009672873407705829460"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_abs",
    "hash": "414887842561109808414774717441248339124"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add",
    "hash": "253321996877942813817906396945935527385"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_add_unsigned",
    "hash": "161267213480834565412277002725048696587"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div",
    "hash": "97115512682810875669383633430562330937"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_div_euclid",
    "hash": "10558330256742929698443403554300661816"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_mul",
    "hash": "131311915791441418068578446809530473398"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_neg",
    "hash": "62259644820945464561539546181295439112"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_pow",
    "hash": "757660018608088734712889141576318841599"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem",
    "hash": "42203633900582088173317569466058923799"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_rem_euclid",
    "hash": "778498484506145224011333661779876253511"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shl",
    "hash": "158720760764873920767379746928504067976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_shr",
    "hash": "371440654566708945412700021769246305574"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub",
    "hash": "492559714270005268310317312240357486554"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::overflowing_sub_unsigned",
    "hash": "400555987355478121813181342044112913085"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::pow",
    "hash": "18394475429978199011852092645478098351"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rem_euclid",
    "hash": "34760171692315707258966953531464788220"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::reverse_bits",
    "hash": "393112428303571624713572915102278553666"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_left",
    "hash": "1599097516256724419017183668423739935400"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::rotate_right",
    "hash": "1712970399117769504816341942665447690915"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_abs",
    "hash": "50671510037569411201098102450923288628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add",
    "hash": "127683659897596734182877190380234720201"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_add_unsigned",
    "hash": "25037693381350643484503609368998546396"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_div",
    "hash": "63760456686115376844826233091827361521"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_mul",
    "hash": "41400555434943177871091771140906410248"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_neg",
    "hash": "1206905297171897400010843418202793353172"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_pow",
    "hash": "111314799376671443088015517552439868346"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub",
    "hash": "74126210822649655706174849609280921426"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::saturating_sub_unsigned",
    "hash": "1057770213730027573411123232537671835365"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::signum",
    "hash": "405140453971779270110565726175513143345"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_abs",
    "hash": "114261598127380247398311798960811947735"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add",
    "hash": "41789877431240104948642447352348327729"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_add_unsigned",
    "hash": "23145858749997721194955988263035299358"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div",
    "hash": "1235013894982075861811407893711358046008"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_div_euclid",
    "hash": "696184683530164928415656925187967980574"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_mul",
    "hash": "125834853833011485021743648127965204095"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_neg",
    "hash": "113411264659619864681088215814177306208"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_pow",
    "hash": "1274354996655264164313560313672413858852"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem",
    "hash": "87174481721163126286389789297980785483"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_rem_euclid",
    "hash": "120948538635207390131217590282712374691"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shl",
    "hash": "175286606972471857442366612801115103246"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_shr",
    "hash": "19174086432498629077044901877502191800"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub",
    "hash": "1629191290846840403112863197056082273251"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::strict_sub_unsigned",
    "hash": "480573681189391627215423080683916198941"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::swap_bytes",
    "hash": "72477510138417188715460641234676170535"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be",
    "hash": "1567790152812792444415061460385278541419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_be_bytes",
    "hash": "5758572356073445191998946732329843505"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le",
    "hash": "21302981513321875237023067413870361666"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_le_bytes",
    "hash": "108826245274388707511254550790206345965"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::to_ne_bytes",
    "hash": "12503768542966105241152402000636767703"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_ones",
    "hash": "7467240960600910935523069778966391287"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::trailing_zeros",
    "hash": "67323264012699312035432808853963362246"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shl",
    "hash": "127035102850603965251019608572570861076"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unbounded_shr",
    "hash": "1299733939729345437612345456507887264517"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_add",
    "hash": "158894005530514423438558720537921465872"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_exact_div",
    "hash": "1609855282637508339810358537056727675131"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_mul",
    "hash": "93737694669114337101658032470641267753"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_neg",
    "hash": "15883645952373227860470720643749867032"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shl",
    "hash": "138867455052319048745041083189689873191"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_shr",
    "hash": "527925199653720707416294589022048757"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unchecked_sub",
    "hash": "973581298411413642012435051112424163033"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::unsigned_abs",
    "hash": "1327006669038461666711398775147474473381"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::widening_mul",
    "hash": "30019072126384891899820209150134517245"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_abs",
    "hash": "141426773116682057352291323840904333102"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add",
    "hash": "851351775605774175017316217659207358671"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_add_unsigned",
    "hash": "107135335700195985774407313104750455028"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div",
    "hash": "1551259979578163821514354799220373729183"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_div_euclid",
    "hash": "1364907773147926914317615958893748404695"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_mul",
    "hash": "39601516161506206881415550328839571244"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_neg",
    "hash": "5876985759535390020514275249556790836"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_pow",
    "hash": "1199184736879119340813549125590505162157"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem",
    "hash": "39944063403565550338974281519402285604"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_rem_euclid",
    "hash": "105064435157058921958004480132143257001"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shl",
    "hash": "1081471233026918678713497113786037849522"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_shr",
    "hash": "98000172122084234042390696501954448434"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub",
    "hash": "244603891272989650914776872826689374566"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i128>::wrapping_sub_unsigned",
    "hash": "482334894053452153414317661027825702949"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs",
    "hash": "887211833597693079715046463325656465425"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::abs_diff",
    "hash": "16444417257494352571038973759610559608"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::borrowing_sub",
    "hash": "43404716519260341905995948196840571231"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_add",
    "hash": "132199026391902728774864901915522373898"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul",
    "hash": "68581465866783306267293025427519140613"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::carrying_mul_add",
    "hash": "337896607708568813711251571834842579004"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::cast_unsigned",
    "hash": "17451699293735399863556310234464560315"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_abs",
    "hash": "87911816904989119811714028815026463455"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add",
    "hash": "172689891668295346527142486115352699425"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_add_unsigned",
    "hash": "12323737569362037079533335361152777931"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div",
    "hash": "408413944357486298712091222725082336704"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_div_euclid",
    "hash": "20489134435817502328187047397890292656"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_exact_div",
    "hash": "764684389724729449210971846763654327179"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog",
    "hash": "36773204544730582082580507089432180651"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog10",
    "hash": "113944095853322477107555978712540155187"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_ilog2",
    "hash": "84141434836572025927775493860114325386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_isqrt",
    "hash": "98064219630513042555648654254959845026"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_mul",
    "hash": "161813440276645242303739319526291806976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_neg",
    "hash": "615875293228824987515472242948506020399"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_next_multiple_of",
    "hash": "213553226884369015514964569702129439209"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_pow",
    "hash": "62279911714874957447426602011992017879"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem",
    "hash": "153495286412805620183810988010684913575"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_rem_euclid",
    "hash": "69626321279650735144554546831003057659"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shl",
    "hash": "104583484404631991422983608817987232582"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_shr",
    "hash": "52803336333981026411325125599493651232"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub",
    "hash": "509788705521875039514531750325533626504"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::checked_sub_unsigned",
    "hash": "31696084110924460332321636743104215729"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_ones",
    "hash": "69089205399024553011783218009467482654"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::count_zeros",
    "hash": "361937796419998888112847650902704835230"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_ceil",
    "hash": "8021263909498768032071728714104791023"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_euclid",
    "hash": "34182796696890989626993816835231729166"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::div_floor",
    "hash": "157610833932299784452456314482511561108"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::exact_div",
    "hash": "60320778770704431711944504261223734293"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be",
    "hash": "1779499420777762526516157357108086067767"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_be_bytes",
    "hash": "1188552128805437830917303045603089424163"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le",
    "hash": "1771176776810791565713171853819701543023"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_le_bytes",
    "hash": "232083403323624508215484898529587863774"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::from_ne_bytes",
    "hash": "617478095513662201510139644762722825646"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog",
    "hash": "46499502075497438965890299562443026830"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog10",
    "hash": "302888016398153715212792373101204411490"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::ilog2",
    "hash": "1162689613147247218315414938522711743003"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_negative",
    "hash": "895392332666121822811663399906207759378"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::is_positive",
    "hash": "91464336822563948778826152661599560626"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_highest_one",
    "hash": "12789650121793544513887075324240297461"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isolate_lowest_one",
    "hash": "182606504229738758131192491408168748963"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::isqrt",
    "hash": "1239460112294646261814923851711204771386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_ones",
    "hash": "1314203280198108373614048242523447880740"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::leading_zeros",
    "hash": "1154967945485668383917985341886204914809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::max_value",
    "hash": "116110030453560058102995112967507996387"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::min_value",
    "hash": "1237941461781673189810085387419462076902"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::next_multiple_of",
    "hash": "72395099272533663568427310877579625300"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_abs",
    "hash": "1749253169802275720410530868692380633701"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add",
    "hash": "927501367645983545411813124928699238878"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_add_unsigned",
    "hash": "58111501025309624601957897525380223941"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div",
    "hash": "11229855079154748507648523837609136771"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_div_euclid",
    "hash": "149899296943115925224459777090665621856"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_mul",
    "hash": "1285621171958271900814098007360311238204"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_neg",
    "hash": "139427556625072324096553323051841753610"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_pow",
    "hash": "112453474526111458214625046443374181489"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem",
    "hash": "194780666298747312311695000843701405411"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_rem_euclid",
    "hash": "34363381550987936206525420821570443662"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shl",
    "hash": "85564503239697578849583145243935296762"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_shr",
    "hash": "15878877661553089634971696604807744912"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub",
    "hash": "3143125833969006575380446129069247148"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::overflowing_sub_unsigned",
    "hash": "1172544274371854419314998496224219106801"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::pow",
    "hash": "607118129910828315914143875999616259170"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rem_euclid",
    "hash": "391202678133800827614221774391653865450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::reverse_bits",
    "hash": "100394457852234353076728401268752848628"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_left",
    "hash": "14458707333931276032922346891330280287"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::rotate_right",
    "hash": "831294812354060692610982745542510670851"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_abs",
    "hash": "150677091106397701246055265817814076996"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add",
    "hash": "123550582643356706449836082937955147110"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_add_unsigned",
    "hash": "156336381447538502723010835735697000573"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_div",
    "hash": "118108463372263245265843233060202507805"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_mul",
    "hash": "45219993227396458217170026893372722489"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_neg",
    "hash": "1751801115678820678511928986490847239325"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_pow",
    "hash": "179004274554852221178488143684301581533"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub",
    "hash": "16925379730446383017839439822896992847"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::saturating_sub_unsigned",
    "hash": "686890166546957860312898461439123476911"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::signum",
    "hash": "63942621014323099223825281308204362413"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_abs",
    "hash": "157018578677097038824439233718563370441"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add",
    "hash": "57702621665421188616219250217324561169"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_add_unsigned",
    "hash": "93130184480574575314767614233475418280"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div",
    "hash": "138208737478778633831363132537880873970"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_div_euclid",
    "hash": "154171530348847453995939653917788775245"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_mul",
    "hash": "61431755521855081381517588403447118903"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_neg",
    "hash": "1013950310370939448614946486816341232209"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_pow",
    "hash": "3237246868536370415736624167728034197"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem",
    "hash": "33740901848429038414309784478932071428"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_rem_euclid",
    "hash": "125418227898278886202039729411630777917"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shl",
    "hash": "135765863852178885074495118526319151322"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_shr",
    "hash": "76615919631514196199742691171296357729"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub",
    "hash": "57310426136758048717657695084666784855"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::strict_sub_unsigned",
    "hash": "169280867157277426958556384756229798634"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::swap_bytes",
    "hash": "1001873003712708764115415384353090771377"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be",
    "hash": "108855473928968812209339586008769329681"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_be_bytes",
    "hash": "1773618654752857875310072894177670105405"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le",
    "hash": "129782033683327754753237055973917730547"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_le_bytes",
    "hash": "50101303468802348345171342234843588299"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::to_ne_bytes",
    "hash": "206888307517334064615313826257275367915"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_ones",
    "hash": "115711554895102158815897495449307776259"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::trailing_zeros",
    "hash": "1595784456470596483813366433849592997930"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shl",
    "hash": "943995666533861305515841711374949114134"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unbounded_shr",
    "hash": "171061523380269932883538796233962858164"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_add",
    "hash": "13993682460368957685934869335922584387"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_exact_div",
    "hash": "853591812018110261411459663451843982274"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_mul",
    "hash": "76193054953103452116513858700861770433"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_neg",
    "hash": "83951830853170645049949165449549271304"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shl",
    "hash": "123624878615751815921301382967174580454"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_shr",
    "hash": "1242429681469309492417526338427426822877"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unchecked_sub",
    "hash": "78668769142241634189878076210946352736"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::unsigned_abs",
    "hash": "424644769422230037413739304214279511958"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::widening_mul",
    "hash": "1469549761113375155683447567753667027"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_abs",
    "hash": "1387986324784941378411704395865019193056"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add",
    "hash": "44771811051328315889901799012948701103"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_add_unsigned",
    "hash": "1259727774045348550713832574829702025552"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div",
    "hash": "17457049852173680801260772587245997989"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_div_euclid",
    "hash": "123949003996663088501868540332477833784"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_mul",
    "hash": "164076730556621082997363005299651285686"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_neg",
    "hash": "381877497200155846017328579240901989976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_pow",
    "hash": "152281026496088802138993611799434364141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem",
    "hash": "1405652811819976448214695950477770026900"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_rem_euclid",
    "hash": "11762374300534798466866691899190146262"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shl",
    "hash": "1129390039366908622911264365387479429832"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_shr",
    "hash": "45300697682082717177995116221647574199"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub",
    "hash": "1064044285863386372711052659406470712963"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i16>::wrapping_sub_unsigned",
    "hash": "912875750588272760915949529962792657642"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs",
    "hash": "874372410812181731017260948487061192588"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::abs_diff",
    "hash": "181257640800759137241274480559154472138"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::borrowing_sub",
    "hash": "35983421872843909827394563001576352487"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_add",
    "hash": "148344710084058308626485953253889331507"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul",
    "hash": "139110435985856732027114672172490957830"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::carrying_mul_add",
    "hash": "1623663005359028925718277926508220528028"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::cast_unsigned",
    "hash": "59156068250478297421874407921031331790"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_abs",
    "hash": "104057338303397158609762446703408713900"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add",
    "hash": "846312349169786111810917978525125974830"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_add_unsigned",
    "hash": "601818790856422594313964656969364289299"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div",
    "hash": "482595592381399614011059249671218178933"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_div_euclid",
    "hash": "41846039561018532612373008403581894636"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_exact_div",
    "hash": "4835344248146812085923062543811406359"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog",
    "hash": "6632556194002011979342399616218297949"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog10",
    "hash": "1536916121952483301912034485094449547848"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_ilog2",
    "hash": "1238385555081132180517645462979183503544"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_isqrt",
    "hash": "1835317954023114855312229406859710175383"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_mul",
    "hash": "82344239964539784889938238863071984025"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_neg",
    "hash": "1427853816535685189213588342138307859524"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_next_multiple_of",
    "hash": "88149026244475607418507148980146475772"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_pow",
    "hash": "64125050568626043187022443516043979962"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem",
    "hash": "104296480101032279929524659278389043684"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_rem_euclid",
    "hash": "21805449146752369851158006848457395381"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shl",
    "hash": "158271910043142229969378050505398538287"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_shr",
    "hash": "153764080200427627416954698710320160680"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub",
    "hash": "1651107104446583599115522490601216795663"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::checked_sub_unsigned",
    "hash": "1261056715962852462414230329616113474226"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_ones",
    "hash": "89261527959530357549845166714974195570"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::count_zeros",
    "hash": "1484101039125900389012715988172066022557"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_ceil",
    "hash": "1627195073494970617011198974484465847660"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_euclid",
    "hash": "842297502875241633816969375324737245981"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::div_floor",
    "hash": "137803844242651676878153944996659845510"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::exact_div",
    "hash": "89852131201945715843818999207365090092"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be",
    "hash": "1818521257773483764812833755172632284864"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_be_bytes",
    "hash": "96038279399056052386395601262010424593"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le",
    "hash": "380433621986551839411978954518368532070"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_le_bytes",
    "hash": "26153432778894222722669275957774234234"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::from_ne_bytes",
    "hash": "18119703501080147891024768618704299822"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog",
    "hash": "530088791799309784914362863769759699341"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog10",
    "hash": "154431357096500506122797547570978300625"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::ilog2",
    "hash": "1175054057223219409317433009672463663559"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_negative",
    "hash": "522611131144793313715658730967130124714"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::is_positive",
    "hash": "279039865979074393111455111821907153068"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_highest_one",
    "hash": "1313025732014410650210123324884124683252"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isolate_lowest_one",
    "hash": "12547667042721786948980361212753529573"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::isqrt",
    "hash": "576660838403561762813249758549073209809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_ones",
    "hash": "125685379623201946709964643138094747059"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::leading_zeros",
    "hash": "1824768178414439651917422763394253062096"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::max_value",
    "hash": "1463033969129090138714664875027561209535"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::min_value",
    "hash": "56600107668091850367510200254120159516"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::next_multiple_of",
    "hash": "69783078808146500742530635361121244193"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_abs",
    "hash": "1025890775700985535610879361926232405976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add",
    "hash": "89022372277962994349274306749787402089"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_add_unsigned",
    "hash": "1436013562079056108213429978686253173373"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div",
    "hash": "296088144108275659612938011256805216799"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_div_euclid",
    "hash": "898038277680931225912813263012687595507"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_mul",
    "hash": "152206198673449475178349145501606660197"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_neg",
    "hash": "1665492618180921187310000656475183616146"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_pow",
    "hash": "179688386663707626225809804352845747504"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem",
    "hash": "547017797264381608112470181683884952595"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_rem_euclid",
    "hash": "159074559358193316864788326360955804141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shl",
    "hash": "176119208027731333671407454795459205563"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_shr",
    "hash": "1612499543233757687711919712301832568017"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub",
    "hash": "137051660805937214211389126842848076293"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::overflowing_sub_unsigned",
    "hash": "6584616751962962344193022893325620407"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::pow",
    "hash": "448336194956603507911213096760117519873"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rem_euclid",
    "hash": "1423680907204276610515200153627642587003"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::reverse_bits",
    "hash": "289044685474849497516060599395668464010"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_left",
    "hash": "1141179508732273118114778801903370086694"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::rotate_right",
    "hash": "318083331163915907115248290056488100139"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_abs",
    "hash": "13542156407294436511400165707716447633"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add",
    "hash": "98043948808317100014993490116876930767"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_add_unsigned",
    "hash": "149010751512934018461811104114992036347"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_div",
    "hash": "69208688964704229171941261479702763662"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_mul",
    "hash": "462755845190816924610663603156937131236"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_neg",
    "hash": "972811495856715278411862323776443644999"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_pow",
    "hash": "5303971524326772264547381888812031720"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub",
    "hash": "1215416109722958161012022248723954685366"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::saturating_sub_unsigned",
    "hash": "411058951763120946210457366357601629259"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::signum",
    "hash": "600337566969978057616538109168214141611"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_abs",
    "hash": "147035607106701603916432966007429207345"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add",
    "hash": "152961709847211436642118927144032643908"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_add_unsigned",
    "hash": "15313078179752924767804657678739542802"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div",
    "hash": "16023240934909869395665057356287118279"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_div_euclid",
    "hash": "1649977678421736468612715916090276704129"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_mul",
    "hash": "76451096323343360861185555525693388171"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_neg",
    "hash": "141196785648497305209253851901678523037"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_pow",
    "hash": "138255961206075011623943230319612209938"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem",
    "hash": "1703454197660378161718037236355457610769"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_rem_euclid",
    "hash": "16324382196008344039395783145902561865"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shl",
    "hash": "574620070010538078412817796866873162148"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_shr",
    "hash": "20059752502197892767769156534555736729"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub",
    "hash": "181813075360688895154885222741809494901"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::strict_sub_unsigned",
    "hash": "12843199942286589753739728394873416017"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::swap_bytes",
    "hash": "26362738152558991044745944857228683826"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be",
    "hash": "42382134595921744144262859904879675421"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_be_bytes",
    "hash": "51078106171461144906785272547365106746"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le",
    "hash": "46415873032128692163819775141658248690"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_le_bytes",
    "hash": "28343602136597931919454546404534808282"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::to_ne_bytes",
    "hash": "15412077598157299445513750060159283819"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_ones",
    "hash": "1190390918014568060614724516347270914501"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::trailing_zeros",
    "hash": "1614044361631240863913295921319311183035"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shl",
    "hash": "99500532113081356984338678938244270335"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unbounded_shr",
    "hash": "77114210228134221044063433668528698422"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_add",
    "hash": "179500578577791766839878155459898795229"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_exact_div",
    "hash": "5504032486132961771687651766642832941"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_mul",
    "hash": "222279516809757429211735519317843160677"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_neg",
    "hash": "20957482821477521699319523933078354970"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shl",
    "hash": "33565532427369807706465500306432836820"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_shr",
    "hash": "118892210885250405159980939260089329602"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unchecked_sub",
    "hash": "71530115335995718377255191665397203954"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::unsigned_abs",
    "hash": "1081722453891345057617623672873201188940"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::widening_mul",
    "hash": "500753771007274516714899334753530904025"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_abs",
    "hash": "1090301669516600741811409370229229960207"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add",
    "hash": "5880461572336866156353380948077851835"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_add_unsigned",
    "hash": "207675490871942833911573653540931205322"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div",
    "hash": "42837477340837258874202937424977476417"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_div_euclid",
    "hash": "35249184656530889186500193959340457637"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_mul",
    "hash": "1547621360761782731618377593470745953657"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_neg",
    "hash": "177227879459522648637103955346437976346"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_pow",
    "hash": "10365621704242209724230429083373761248"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem",
    "hash": "172748711074291234958991458404092411286"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_rem_euclid",
    "hash": "1605557727930041505217181346275488865384"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shl",
    "hash": "957145682372585665517763011325405658300"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_shr",
    "hash": "651520108258324457513015649070423960438"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub",
    "hash": "48047591598521013888839145040407790572"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i32>::wrapping_sub_unsigned",
    "hash": "146418475522136026742351045384170163191"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs",
    "hash": "35831017552878516517596826952134209285"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::abs_diff",
    "hash": "81331331251240939935953315696909535232"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::borrowing_sub",
    "hash": "13073868562218263992644634716602925200"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_add",
    "hash": "560767965618383855112825699917205467696"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul",
    "hash": "1536032098049240754915565216320240501478"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::carrying_mul_add",
    "hash": "1295422569810223068513016084037021267481"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::cast_unsigned",
    "hash": "214260606092399665818154081322297781379"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_abs",
    "hash": "386680161269135357117420862100303409134"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add",
    "hash": "465851209628040608213823229592274157226"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_add_unsigned",
    "hash": "96903456026343921991522954486454471712"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div",
    "hash": "1667682509546133972315564339467930352423"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_div_euclid",
    "hash": "122311289607730247068233891465766918621"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_exact_div",
    "hash": "6721278903095951497488051299703552537"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog",
    "hash": "290647114275687286214317879006979912340"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog10",
    "hash": "51567919670876905851940701119050464823"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_ilog2",
    "hash": "86947719142368327354018496466178514241"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_isqrt",
    "hash": "3916926300692537819458277820078156637"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_mul",
    "hash": "64428362415235951034192951501460393238"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_neg",
    "hash": "66323359923229037132825562142603663810"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_next_multiple_of",
    "hash": "144681732810561464605701641115302451947"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_pow",
    "hash": "153997681334824714163043579417528029994"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem",
    "hash": "122796599586970014946920091724578578517"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_rem_euclid",
    "hash": "88005327582335890033474845307349814976"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shl",
    "hash": "1074846187453435814010003143659229880227"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_shr",
    "hash": "111575049382622858658478060711114271377"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub",
    "hash": "88105595648946087307942079797282096898"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::checked_sub_unsigned",
    "hash": "16959146262413506916643846839728826636"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_ones",
    "hash": "14951956023402559124732594294212432306"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::count_zeros",
    "hash": "92637825232866705574468869128451606709"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_ceil",
    "hash": "601950509200580808113144766454571853546"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_euclid",
    "hash": "158364022787677833622619716760021420363"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::div_floor",
    "hash": "1807850049280566848414452378051161510716"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::exact_div",
    "hash": "790148783290100196716342318216324042752"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be",
    "hash": "55030417745031319337559757304168491587"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_be_bytes",
    "hash": "521346667375174384513667130314710387995"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le",
    "hash": "20779393750756993674185062399246891975"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_le_bytes",
    "hash": "182825257222147988233982403577853644363"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::from_ne_bytes",
    "hash": "107950710141085288269716743629042104767"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog",
    "hash": "8331104139950942550575403899736117784"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog10",
    "hash": "940753856015048145516196380997283738183"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::ilog2",
    "hash": "18112603631557565156872357675882365386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_negative",
    "hash": "1024617653881945139912316087587019323141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::is_positive",
    "hash": "12623069305585155662188791841102182015"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_highest_one",
    "hash": "485689748980220643714069696724546015154"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isolate_lowest_one",
    "hash": "1554770808110221339412640295673825596810"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::isqrt",
    "hash": "36040964636046776968371779499814310840"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_ones",
    "hash": "6580718415015964457369526781240057924"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::leading_zeros",
    "hash": "52607087948760276322815808024925223223"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::max_value",
    "hash": "184427613123895071854681787021539150456"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::min_value",
    "hash": "1399506696822310917013172773646923364382"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::next_multiple_of",
    "hash": "874525879940831395813256462947021750227"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_abs",
    "hash": "1421906140376731260611886654126282322222"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add",
    "hash": "15524137580786849264638984469322433862"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_add_unsigned",
    "hash": "39243069214993128404406845831838002635"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div",
    "hash": "51866489918917307205552286808074682039"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_div_euclid",
    "hash": "17531376139660436388228247289215240260"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_mul",
    "hash": "732935911089871351012572438905290213778"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_neg",
    "hash": "5819451884419998755349244999406450751"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_pow",
    "hash": "1490850093691444554013941019602411566556"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem",
    "hash": "167621987893041654515957914398386138644"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_rem_euclid",
    "hash": "166204063887891814715109603108517238760"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shl",
    "hash": "1065383994994660666403940808796033422"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_shr",
    "hash": "1770805197794557362812440885014875116803"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub",
    "hash": "151306044793101010069612089510574064443"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::overflowing_sub_unsigned",
    "hash": "89295039918718575892923626450968453607"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::pow",
    "hash": "46077206292398195128841411178416696145"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rem_euclid",
    "hash": "48957628111103414092482202094784943257"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::reverse_bits",
    "hash": "155187944908772796692952910365096243749"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_left",
    "hash": "1488367738477443334210292208895191726446"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::rotate_right",
    "hash": "124895352784359120003215663615532983212"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_abs",
    "hash": "800401661916558586218133483683297698556"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add",
    "hash": "24778564217506523552155456676475555334"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_add_unsigned",
    "hash": "29040296368400152326909266686088042565"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_div",
    "hash": "177778405017036692639622993279212340230"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_mul",
    "hash": "66346060031000349871632603977596752291"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_neg",
    "hash": "1383387050260554919414271556646054016400"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_pow",
    "hash": "627920291947302233114182538463492091258"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub",
    "hash": "80299745117073254918865578493767505397"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::saturating_sub_unsigned",
    "hash": "157479188333810019626657436027299047717"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::signum",
    "hash": "1119422781146661008112073255769201055266"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_abs",
    "hash": "1740502872873830358510806264325123145587"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add",
    "hash": "27479553502438598008081064033564133876"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_add_unsigned",
    "hash": "111351342122861532256565787111342923709"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div",
    "hash": "1415730835665948383813647714968000407336"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_div_euclid",
    "hash": "102240061677114566871136174863748664477"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_mul",
    "hash": "1497890748189195973716039769783285874301"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_neg",
    "hash": "1379381495877260424912629501009756545619"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_pow",
    "hash": "1750160977713291857616045757501792529559"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem",
    "hash": "336687758005654593610947580262591037816"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_rem_euclid",
    "hash": "48472993867101608657946848946537830395"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shl",
    "hash": "1740644579926910605212648085828210841517"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_shr",
    "hash": "1280214623006537519313094414910300337866"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub",
    "hash": "71178827567184812736533854397421821629"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::strict_sub_unsigned",
    "hash": "158631721374227071715502922087585896654"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::swap_bytes",
    "hash": "120101155589158815717379649814662119187"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be",
    "hash": "944911673471122980418192609093561874148"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_be_bytes",
    "hash": "7230741879998005871301783104284615744"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le",
    "hash": "1572461925745902537215943004992107933515"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_le_bytes",
    "hash": "876682430096332775516594262791689048478"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::to_ne_bytes",
    "hash": "1117428687365819167118082168578984477066"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_ones",
    "hash": "50323810433765362781517471648804639403"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::trailing_zeros",
    "hash": "4286608146941553738795591491701511821"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shl",
    "hash": "43659476126050252788901348315005155"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unbounded_shr",
    "hash": "391475500919494317516104775314781613396"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_add",
    "hash": "59819677269339128146600664125884814511"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_exact_div",
    "hash": "154356612703840660581907154703585893756"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_mul",
    "hash": "687024865169808197516389702378167060217"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_neg",
    "hash": "155272847721864336636820697317452054224"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shl",
    "hash": "1805604643958657194716828530063989924629"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_shr",
    "hash": "953045745426654714515001369402085549414"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unchecked_sub",
    "hash": "845165686093039754312753628275461375376"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::unsigned_abs",
    "hash": "797855395139950982016235911314999603083"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::widening_mul",
    "hash": "123006826604333237531417847939990510941"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_abs",
    "hash": "49593884333059060022775317268312930229"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add",
    "hash": "1648774694971709572610534489293238925672"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_add_unsigned",
    "hash": "10401884665433734745519360454139201760"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div",
    "hash": "100637809615994556983847733282642547602"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_div_euclid",
    "hash": "15913580922423136678713856948405020316"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_mul",
    "hash": "1494623313303102650518400973281756325660"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_neg",
    "hash": "945419779286433827514805229288919690578"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_pow",
    "hash": "5959379738492480040314764092501226611"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem",
    "hash": "25505070366460266914413220065443446624"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_rem_euclid",
    "hash": "32420768070447330404511066016057387859"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shl",
    "hash": "169306505581555982379708568497702302202"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_shr",
    "hash": "91140324362621879192019528793107993501"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub",
    "hash": "100076148830269466886984643323573529560"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i64>::wrapping_sub_unsigned",
    "hash": "56907666031595755728133488412893154350"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs",
    "hash": "82739472746914013461448201466374383100"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::abs_diff",
    "hash": "618941575583354280018345597375949383926"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::borrowing_sub",
    "hash": "1422152757935485505116721869133681968790"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_add",
    "hash": "73289406305366899373735650410836430082"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul",
    "hash": "56718823053749152166417696043437968155"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::carrying_mul_add",
    "hash": "747141793041402569012296508664933139595"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::cast_unsigned",
    "hash": "16271789250864268396558837840900238058"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_abs",
    "hash": "10766357174880198239493331741666758295"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add",
    "hash": "1073258962874362060817614461909851556769"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_add_unsigned",
    "hash": "315761141671046479212630462202019443600"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div",
    "hash": "1391873823067172131416217425445116410591"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_div_euclid",
    "hash": "173920524848373921014045622946253039630"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_exact_div",
    "hash": "176397566933671719121681629613696568922"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog",
    "hash": "662392247304935053315757828383666118826"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog10",
    "hash": "244173580261762313310147239002388492957"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_ilog2",
    "hash": "390278877542751129117397580034921346125"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_isqrt",
    "hash": "110159490909865270404249502341847038597"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_mul",
    "hash": "156696988741441728728156463385919230110"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_neg",
    "hash": "728471765476465425413803687989159196169"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_next_multiple_of",
    "hash": "36686329462400603812463926041505302934"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_pow",
    "hash": "107104312089883456415719052858005818228"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem",
    "hash": "64824907335842992539972550051659787267"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_rem_euclid",
    "hash": "167438426368561948894305415107883572861"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shl",
    "hash": "1300718442913569254914018224454741616875"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_shr",
    "hash": "81574734335007538363109694719268611338"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub",
    "hash": "973953536974838993411055654317113079521"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::checked_sub_unsigned",
    "hash": "136723475775365148173541437542112807865"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_ones",
    "hash": "1024727414945090991714299867333099665887"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::count_zeros",
    "hash": "9514129511303001981767065406690501695"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_ceil",
    "hash": "297488768006235493214518826900397393583"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_euclid",
    "hash": "62744973071717760317471353408934502962"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::div_floor",
    "hash": "145231945108890505199979774701909752457"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::exact_div",
    "hash": "968653573556404690810101296464962437841"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be",
    "hash": "184832941208257833312285473770509824640"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_be_bytes",
    "hash": "1536082175385225041710843226972342703149"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le",
    "hash": "170324755441692201873972838984845279529"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_le_bytes",
    "hash": "601902823767507646614989415187778816074"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::from_ne_bytes",
    "hash": "132942833870951966456360771933028544607"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog",
    "hash": "1832925479413043377517943760288947461700"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog10",
    "hash": "587783228569487377214463283663038385630"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::ilog2",
    "hash": "1170122732595945397514473364573557987295"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_negative",
    "hash": "49129429805727197788227224644409897336"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::is_positive",
    "hash": "54394395253409321819146990899858238886"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_highest_one",
    "hash": "1579672216462272049710375286766443742527"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isolate_lowest_one",
    "hash": "140903996771209793605029221283197400851"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::isqrt",
    "hash": "1762014158649038839415779091582994164864"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_ones",
    "hash": "1198347322636511267211562467775769432611"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::leading_zeros",
    "hash": "19477758068148943396029081853326251590"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::max_value",
    "hash": "1380085410451306895615430825342645537752"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::min_value",
    "hash": "8767303190470169807329818535374377936"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::next_multiple_of",
    "hash": "109872248400076667433971488394988179575"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_abs",
    "hash": "78895723693279886394346594559658444429"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add",
    "hash": "177453453404527721698143865497514440311"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_add_unsigned",
    "hash": "64183680450926736234074431753182092977"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div",
    "hash": "56598325964635395953827966439055099726"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_div_euclid",
    "hash": "158553491550035313314701807726255685810"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_mul",
    "hash": "7120553715135326714365975522348654397"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_neg",
    "hash": "139656424902033482691525599291182643219"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_pow",
    "hash": "457327996475539630010943928535971763163"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem",
    "hash": "160215434069531897921532447322134791274"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_rem_euclid",
    "hash": "528569552864215281411571114212345772342"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shl",
    "hash": "69997890682880650467436220764989261481"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_shr",
    "hash": "111885994326968884099361136946957107734"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub",
    "hash": "536649311590588553813389458756217661249"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::overflowing_sub_unsigned",
    "hash": "150103043450816952606942588308289818072"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::pow",
    "hash": "1235982501685793584615574562596398266297"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rem_euclid",
    "hash": "7050244157854805024369164718043511877"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::reverse_bits",
    "hash": "20284548982011692725379906582281995299"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_left",
    "hash": "260666698534931764511967448945902926566"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::rotate_right",
    "hash": "94436589339026318615091476118832342246"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_abs",
    "hash": "31469089414147051713532724302931552720"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add",
    "hash": "1796627256038814261912392175462254445944"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_add_unsigned",
    "hash": "159772626851753221616879601182080686151"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_div",
    "hash": "970964974044962914510068819263483336533"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_mul",
    "hash": "75385210671433582712510399224313779809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_neg",
    "hash": "1837143109642487961415350121783728934968"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_pow",
    "hash": "8300769529224639592664608422433028247"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub",
    "hash": "1789141456483146509711231732989889548398"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::saturating_sub_unsigned",
    "hash": "932497707428169389617446983650317728885"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::signum",
    "hash": "67295214433127513539424202877712975816"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_abs",
    "hash": "815609913039277763413972240364396519124"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add",
    "hash": "470275210570538808817348871224945149191"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_add_unsigned",
    "hash": "126601413585056474262985008340749995719"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div",
    "hash": "16031873609372382917647968818582797762"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_div_euclid",
    "hash": "26047606033627528623846436372143373845"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_mul",
    "hash": "347014091499320836215921151152276453573"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_neg",
    "hash": "92978154967563743473798834315780897004"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_pow",
    "hash": "30879471869306305224955952641909512450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem",
    "hash": "141989490394854849346147470388668102127"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_rem_euclid",
    "hash": "139166051065673206012658078690817317747"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shl",
    "hash": "114622965325997964271275103296808871755"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_shr",
    "hash": "131993954058041133612829062511314401997"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub",
    "hash": "1774903585861430307216449758215996001328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::strict_sub_unsigned",
    "hash": "1177372974927325483018398411529097330495"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::swap_bytes",
    "hash": "7595039480389536735594961243007604819"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be",
    "hash": "1557442107532797422218059876020137849065"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_be_bytes",
    "hash": "97186022359954321174619136509146640053"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le",
    "hash": "1449276961518034656211192565865521462859"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_le_bytes",
    "hash": "87961369119874158596562015473405936781"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::to_ne_bytes",
    "hash": "459418986064091574510773126812073623656"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_ones",
    "hash": "128713662819702905138921777123137599136"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::trailing_zeros",
    "hash": "939459921226633093517553821226408931423"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shl",
    "hash": "845649195490554327510204997049107373807"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unbounded_shr",
    "hash": "76156995578869785804805199416761855936"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_add",
    "hash": "1489767967563437200815226552063649891835"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_exact_div",
    "hash": "1729366152106612591814177196703801166297"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_mul",
    "hash": "256285445811188663111883905753705778814"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_neg",
    "hash": "100963939003872369798956332807653894328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shl",
    "hash": "102466487879955797565470103233408415576"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_shr",
    "hash": "23107537990455048042351083538685111110"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unchecked_sub",
    "hash": "131801227304238795558834405450460430910"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::unsigned_abs",
    "hash": "533509369658376275513667144798366608450"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::widening_mul",
    "hash": "1318207769598014069912981908193570613756"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_abs",
    "hash": "249871040713310827618369140699590078389"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add",
    "hash": "529045018535680392712894008369649052250"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_add_unsigned",
    "hash": "494482606676736024117832620876105294112"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div",
    "hash": "128435855345999035338411376952999089881"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_div_euclid",
    "hash": "1152025524730668267815483044276812540579"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_mul",
    "hash": "1229115896586094880512460852935211213011"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_neg",
    "hash": "390463577303287874315372069152125072974"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_pow",
    "hash": "145835576020267318632108296554157009558"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem",
    "hash": "64788496579086005510511438020443761136"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_rem_euclid",
    "hash": "177457106333057275247843529639067978226"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shl",
    "hash": "85989809106602588151159937701493212104"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_shr",
    "hash": "564454328238757853113640744593115392577"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub",
    "hash": "108903347088664357091086230791913154089"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl i8>::wrapping_sub_unsigned",
    "hash": "1550587835335205693113228204912708154856"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs",
    "hash": "80471445266106679752436051568934293570"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::abs_diff",
    "hash": "32536568666995143929356131049482871018"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::borrowing_sub",
    "hash": "24538978478935343851229935986667921196"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_add",
    "hash": "1119374696937169969814925481606743751927"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul",
    "hash": "35901912606007139117404631094914575963"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::carrying_mul_add",
    "hash": "136387934427923390295675133566642527498"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::cast_unsigned",
    "hash": "67255678689838648644697415577256192538"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_abs",
    "hash": "132408295844350691751932948090675178219"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add",
    "hash": "174531861203487848554243960261108610809"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_add_unsigned",
    "hash": "43925215611660205147176864239612566951"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div",
    "hash": "1565416213303498511214304552617247488230"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_div_euclid",
    "hash": "99025590666218585662403639620025990721"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_exact_div",
    "hash": "132553293354369025173384854557905648916"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog",
    "hash": "474390921436868892313410730114320985902"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog10",
    "hash": "12020470361336838010660008108153661692"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_ilog2",
    "hash": "514088652542054824013820380511137065167"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_isqrt",
    "hash": "1005057169496278314416424082562182086678"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_mul",
    "hash": "1235646312556649557815160762284518429071"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_neg",
    "hash": "57080175370950922502745935423708626364"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_next_multiple_of",
    "hash": "89050032968395708168654232984839970772"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_pow",
    "hash": "901111831331788213810322133851332672559"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem",
    "hash": "1284978183579763846510867912700227032449"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_rem_euclid",
    "hash": "224006640987012855111300243835963085334"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shl",
    "hash": "19619906376231565265865140321811258251"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_shr",
    "hash": "558395513637315146912854957825083550619"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub",
    "hash": "46914475238020285154970092448223095641"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::checked_sub_unsigned",
    "hash": "121196227721430680976974795722681536668"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_ones",
    "hash": "166185794883294652767710165663433821185"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::count_zeros",
    "hash": "17778169186401898592179341487546126357"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_ceil",
    "hash": "1332272089288539255711395170422247940717"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_euclid",
    "hash": "1148261261978167242417737444794423234584"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::div_floor",
    "hash": "104208710014858905839300190783411906206"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::exact_div",
    "hash": "220294926585165494110686462013538181009"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be",
    "hash": "6063867999975510904645555325184526627"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_be_bytes",
    "hash": "317983116594675100915481177454075688927"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le",
    "hash": "108456473887079889803556829848524457243"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_le_bytes",
    "hash": "1385931768400162092113733766819577787744"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::from_ne_bytes",
    "hash": "154801000792461717496671106028522881196"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog",
    "hash": "108079364497718888523301496486657474256"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog10",
    "hash": "514425844656738535116111412656751443462"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::ilog2",
    "hash": "568638257315654525117025476368892275869"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_negative",
    "hash": "73887658255399695816639232586900716196"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::is_positive",
    "hash": "57851344898103930873926985556664851477"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_highest_one",
    "hash": "480046378885718416810416058662833021888"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isolate_lowest_one",
    "hash": "62265041624881437162363750815694022902"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::isqrt",
    "hash": "118483143795515869615501557473980789681"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_ones",
    "hash": "34377470134810030071815863732987606016"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::leading_zeros",
    "hash": "102667800268684014108414272519415804879"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::max_value",
    "hash": "79506929551127599314487862558446465539"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::min_value",
    "hash": "970589665709451356914904309774781795328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::next_multiple_of",
    "hash": "148908539437088704888021116294721094994"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_abs",
    "hash": "1647254637677287755717105036295207894508"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add",
    "hash": "1398499776557345257310924050591755773120"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_add_unsigned",
    "hash": "1352187468279771746513096535525177511972"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div",
    "hash": "1068127921206603303212251472632627035627"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_div_euclid",
    "hash": "6726919335644172269855564075530910576"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_mul",
    "hash": "1244164845221688045017643263789808204146"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_neg",
    "hash": "90859866297016905972865875176094444320"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_pow",
    "hash": "862226215092316148717079181536077992488"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem",
    "hash": "161398221294522305143667457259743900328"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_rem_euclid",
    "hash": "134215498215726776929139522392151196377"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shl",
    "hash": "49989272367762734964626563291376786701"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_shr",
    "hash": "28389234396833024554500863971322828659"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub",
    "hash": "74056073902708202633284645511947682828"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::overflowing_sub_unsigned",
    "hash": "48799213230926859421685497474987905804"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::pow",
    "hash": "1474217907655248631312617525504021465991"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rem_euclid",
    "hash": "128776881263487944629333703176703725307"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::reverse_bits",
    "hash": "170227276747968888025873926119393149704"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_left",
    "hash": "59576759854082705528715920633479395421"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::rotate_right",
    "hash": "100538816033952614501996310170750484841"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_abs",
    "hash": "108924472467650055783726293700314229073"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add",
    "hash": "96438296540941813399798207126601576274"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_add_unsigned",
    "hash": "164804579565997621446872237534635574884"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_div",
    "hash": "1117361391250415598211535642879725151289"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_mul",
    "hash": "1181242102408054971412144510526551455896"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_neg",
    "hash": "106100420634216773642230158658944670016"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_pow",
    "hash": "1745952496545249847513409636923521338733"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub",
    "hash": "87387125925628746503697220848446515225"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::saturating_sub_unsigned",
    "hash": "971190635274398906113703414237569422875"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::signum",
    "hash": "507030598709290054311030742829918293452"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_abs",
    "hash": "172142566814878831448656025867991519426"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add",
    "hash": "1799012320040924793015638534108421042307"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_add_unsigned",
    "hash": "1495223734897531288116341144812882266186"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div",
    "hash": "124336794259729925764252383581509748318"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_div_euclid",
    "hash": "1831702112683174960114965272385784610597"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_mul",
    "hash": "1674491973427026912114786493443895118257"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_neg",
    "hash": "409351085607685119914981194161998374968"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_pow",
    "hash": "1275099580133031825410908922906592304292"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem",
    "hash": "857669577098033997318436909905933535846"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_rem_euclid",
    "hash": "50288281936124869432104182352293217569"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shl",
    "hash": "2066959019743963710344827152696826238"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_shr",
    "hash": "163314226171603065821818593458077658482"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub",
    "hash": "123094804281064644176689245746610005550"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::strict_sub_unsigned",
    "hash": "78965090625934756253559846280733353386"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::swap_bytes",
    "hash": "1199905242761069647614651923765637303039"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be",
    "hash": "17397475952993404023187346701920762684"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_be_bytes",
    "hash": "87264699059211139712606948476135481773"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le",
    "hash": "158747288201670130432049225051157074734"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_le_bytes",
    "hash": "5730558072782861845770415494156233079"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::to_ne_bytes",
    "hash": "114361439637965930625364313331613990819"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_ones",
    "hash": "103386998658226894415063783332407724635"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::trailing_zeros",
    "hash": "1737330769889729895711558381101450995324"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shl",
    "hash": "160697063954454149376280511344213912082"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unbounded_shr",
    "hash": "966848900730053298312580723432402764369"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_add",
    "hash": "1803087208537370970512677387847452559834"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_exact_div",
    "hash": "307996772998446164314000295999521467692"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_mul",
    "hash": "7024941029035379951507871133484189149"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_neg",
    "hash": "3260483844498926140268961024655068419"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shl",
    "hash": "124759166958806965098631166700072573665"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_shr",
    "hash": "1340508802751932231517680808548936756391"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unchecked_sub",
    "hash": "709150537664779946018031952094454281856"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::unsigned_abs",
    "hash": "266433679938335077934614085855710362"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::widening_mul",
    "hash": "12168161808498799365735210016170346148"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_abs",
    "hash": "168694553811552474215417408022682737727"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add",
    "hash": "181281469513816126183178332161336855082"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_add_unsigned",
    "hash": "156780476802916355915449615585756075081"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div",
    "hash": "1383093427261980666814778277561513566141"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_div_euclid",
    "hash": "154317609219697673006643114837825592169"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_mul",
    "hash": "1467531639972138249013499049070568174564"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_neg",
    "hash": "279510374765640918615794900213220026415"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_pow",
    "hash": "1115469780791479698510366360877633096763"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem",
    "hash": "171413841151947610067339562098298639687"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_rem_euclid",
    "hash": "99597915180436778024626509745434761700"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shl",
    "hash": "1541249355113577162216211569484357179197"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_shr",
    "hash": "155795293285207220864978078405743964604"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub",
    "hash": "179885677062861715175914199911710265674"
  },
  {
    "file": "core/src/num/int_macros.rs",
    "func": "num::<impl isize>::wrapping_sub_unsigned",
    "hash": "669406968627130017417972301055796685042"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i128",
    "hash": "833190032507876642813347055013808588790"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i16",
    "hash": "30637632450926755005403111637901628644"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i32",
    "hash": "606716400591470956712775299141742417467"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i64",
    "hash": "22595716931183019219180901818344157860"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::i8",
    "hash": "4062837560946811864616090990226218358"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::panic_for_negative_argument",
    "hash": "613059554325546104511400677723420142521"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128",
    "hash": "8700287377825612872193156573975225926"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u128_stages",
    "hash": "46580218888123717233920647490334394239"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16",
    "hash": "13732794392156241117848816104252179589"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u16_stages",
    "hash": "160500408395353305891401602280563988211"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32",
    "hash": "1430395604405641317612328328936117395779"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u32_stages",
    "hash": "781506832118034357715787368460063441755"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64",
    "hash": "172205594336203102205154388613242163855"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u64_stages",
    "hash": "415234771957190383718247781261507628055"
  },
  {
    "file": "core/src/num/int_sqrt.rs",
    "func": "num::int_sqrt::u8",
    "hash": "1347572526195785673616491619380226691733"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as clone::Clone>::clone",
    "hash": "379456369763222908417615464922530197394"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "278596847651462002011615130912524232249"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "<num::FpCategory as cmp::PartialEq>::eq",
    "hash": "120564003416314136307327655969447510826"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i128>::midpoint",
    "hash": "478119528838238587313635124440782740280"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i16>::midpoint",
    "hash": "1546592474801856582715824035985028808630"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i32>::midpoint",
    "hash": "35248970882271453995656832371181341460"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i64>::midpoint",
    "hash": "69525706516543933792591672696722374226"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl i8>::midpoint",
    "hash": "115437780385347125067149902367448128363"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl isize>::midpoint",
    "hash": "1612522592317586560517184553771350102066"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u128>::midpoint",
    "hash": "1323786130443372958912946671471858543796"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::is_utf16_surrogate",
    "hash": "1654653929060558501812705138147035884443"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u16>::midpoint",
    "hash": "176751080168499030046194003537565481109"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u32>::midpoint",
    "hash": "2027591268526209445958684000366636260"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u64>::midpoint",
    "hash": "52233282935778382951658530841943170111"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii",
    "hash": "33155752835749497436846207540520483603"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::as_ascii_unchecked",
    "hash": "1168276085824295636013818231906616034348"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::ascii_change_case_unchecked",
    "hash": "123407188166887326661006025909347164494"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::eq_ignore_ascii_case",
    "hash": "483471699704086520114400434403057824853"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::escape_ascii",
    "hash": "6330930065243475143662091540468265654"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii",
    "hash": "54605058554859736136630060697047510881"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphabetic",
    "hash": "231161484222598660810956623263225276517"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_alphanumeric",
    "hash": "6110958518717456328327960875179098863"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_control",
    "hash": "75078032937366500947486077182035050969"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_digit",
    "hash": "115823485503277871174919037446138708138"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_graphic",
    "hash": "152898148410046044277177979631225579078"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_hexdigit",
    "hash": "1117250073364222940113558731546995513598"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_lowercase",
    "hash": "382292664104004222611762716025126739443"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_octdigit",
    "hash": "1195849088107532202211650303901490833035"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_punctuation",
    "hash": "1074549651544211435116846140124649961982"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_uppercase",
    "hash": "867036244033790321718200992945714773095"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_ascii_whitespace",
    "hash": "82152198621563519385273738632868570109"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::is_utf8_char_boundary",
    "hash": "150600051056416786061197242199095913609"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_lowercase",
    "hash": "178605820462279062361521895865702416773"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::make_ascii_uppercase",
    "hash": "7816934177828743240384459600643505148"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::midpoint",
    "hash": "1384784528934436394313873772772394616794"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_lowercase",
    "hash": "529980032388086197635251657099553279"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl u8>::to_ascii_uppercase",
    "hash": "32810955126624412574229702992915577978"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::midpoint",
    "hash": "182803983559695247966517707132564474210"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u16",
    "hash": "137233884077790364617669567498262993995"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::<impl usize>::repeat_u8",
    "hash": "156422118543119038515176431317166839848"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::from_ascii_radix_panic",
    "hash": "66076385672468729078242722298155520407"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u16_full_range",
    "hash": "124752532458827368612982029021378052399",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_large",
    "hash": "137864064248330825008485164167111972315",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_mid_edge",
    "hash": "1405143291567652522814779316079715238372",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u32_small",
    "hash": "1051805011713413078114845187802543434151",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_large",
    "hash": "83390179261159785912196487712908470810",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_mid_edge",
    "hash": "73271891132228155918748787577531131146",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u64_small",
    "hash": "80842428266824635538332505419814366921",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::carrying_mul_u8_full_range",
    "hash": "1645130032710468187217106537238052132764",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i128",
    "hash": "31897027786537473592537433344062125601",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i16",
    "hash": "49691757311721820556081000909114363804",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i32",
    "hash": "252244977669805244116725666929374190011",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i64",
    "hash": "1580515692736889416710985722645868777834",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_i8",
    "hash": "7108764899114742004910209947898296715",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_isize",
    "hash": "9385797301918212882400321927918415582",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u128",
    "hash": "164226981056298745276369047761208077903",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u16",
    "hash": "52443556539942075453213286320622493926",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u32",
    "hash": "1367929763368484160410223463383583310825",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u64",
    "hash": "287957368377012809910488645192941779469",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_u8",
    "hash": "22763662162002700177267759447325914542",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f128_to_int_unchecked_usize",
    "hash": "172965770225271910149439224402244928105",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i128",
    "hash": "199017727308803291417873579997480819961",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i16",
    "hash": "1029379037694875328617221662599234955685",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i32",
    "hash": "53191393468904448035183576960544708144",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i64",
    "hash": "104165204245079430668666307735302478744",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_i8",
    "hash": "1204951703335818292615546984574311000839",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_isize",
    "hash": "72726576318254545492601760287451473089",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u128",
    "hash": "349871972936755362217358438644309855702",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u16",
    "hash": "17098580401826591556802574856547170802",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u32",
    "hash": "143356714377128756176636663222769777230",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u64",
    "hash": "126410198924239270766268129327906757832",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_u8",
    "hash": "990950235564069165315086122696733551254",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f16_to_int_unchecked_usize",
    "hash": "106803897864439029577471981934717968945",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i128",
    "hash": "85188957197392587333054953282689723934",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i16",
    "hash": "494062813794756898814274808977377426972",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i32",
    "hash": "915270932212322085011661122836949224164",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i64",
    "hash": "840333373307305153213999842099315902870",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_i8",
    "hash": "128369620752436000104897857513128910614",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_isize",
    "hash": "149428152052624573268935066048051479589",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u128",
    "hash": "10774410507630113300640448966324961137",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u16",
    "hash": "201619520872314458510322396759887811885",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u32",
    "hash": "24865757628450042695543766024968903812",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u64",
    "hash": "44282672584109777838642602563391827119",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_u8",
    "hash": "706065781879474957916851517407063244020",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f32_to_int_unchecked_usize",
    "hash": "2740660607088560988134206812183512821",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i128",
    "hash": "1668741004001005258816450442888760584998",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i16",
    "hash": "113848228135996490304257669738849854006",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i32",
    "hash": "157463011214980615675914280508761805739",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i64",
    "hash": "1224392277412027877614987479376280517160",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_i8",
    "hash": "7317724134952981412131616401057563590",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_isize",
    "hash": "112494442811258011072468806427689280371",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u128",
    "hash": "1818484869771313996110322234700237109938",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u16",
    "hash": "29790193111982475989622625618676069489",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u32",
    "hash": "1211263184797430255215004903723593780793",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u64",
    "hash": "42280873716841438489339921575789609563",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_u8",
    "hash": "1237616828874176078515422214329251857358",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_f64_to_int_unchecked_usize",
    "hash": "12325779431216729758530626484974585534",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i16",
    "hash": "6549476917568526177611094550536385480",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_i8",
    "hash": "1247293617183922692417423239063479150039",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u16",
    "hash": "134378912020260911375194112147043989967",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::checked_unchecked_mul_u8",
    "hash": "243706633026757447013277509522339904987",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_neg",
    "hash": "1083212473703943269116199218178574865551",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_edge_pos",
    "hash": "642109839887916402111797461623591655113",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_neg",
    "hash": "1645629093054775685415175098448839245658",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_large_pos",
    "hash": "148212401731598696714003013268854949322",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i128_small",
    "hash": "203467021623466838117618691909914642006",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_neg",
    "hash": "1171405173700074823216781682386820950554",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_edge_pos",
    "hash": "26349392825648380598132470326142958174",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_neg",
    "hash": "97344600898441857731915602012444489692",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_large_pos",
    "hash": "82938622819537365157212227639738007852",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i32_small",
    "hash": "10266643594136447073290173553231908717",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_neg",
    "hash": "45445156383650972045420080180191026476",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_edge_pos",
    "hash": "1549978236519199880310696176185126468752",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_neg",
    "hash": "364487362947595175118003518580622794981",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_large_pos",
    "hash": "73818006094489548357334293779345551438",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_i64_small",
    "hash": "1204977476009590029116086351622344672279",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_neg",
    "hash": "150903207439973999678224796894336075865",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_edge_pos",
    "hash": "120400224306420381795822669676902474318",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_neg",
    "hash": "565430560866707665213089157870589539617",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_large_pos",
    "hash": "12595770765565149103782515343808821608",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_isize_small",
    "hash": "217223521320512325516019600197053130120",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_edge",
    "hash": "120447604171493879181599061067686073317",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_large",
    "hash": "1042843268854203692716820058002822111588",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u128_small",
    "hash": "260187586265393801910703788526080579626",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_edge",
    "hash": "3323842583396503684678214933224499085",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_large",
    "hash": "552476509822578525517128430993552945144",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u32_small",
    "hash": "1573670719099775797616295322731250327444",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_edge",
    "hash": "1673163776307385172616920533098152221552",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_large",
    "hash": "107106574331627963427498892958811430714",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_u64_small",
    "hash": "107165039736576128061767827120998892510",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_edge",
    "hash": "116727810719612301014513597622186727402",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_large",
    "hash": "80806668280635215562965380031897644270",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::unchecked_mul_usize_small",
    "hash": "1401116320712969442418006403662493109056",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_large",
    "hash": "230899358468320545714895814469300847824",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_mid_edge",
    "hash": "135333538764615513871541202612532074702",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u16_small",
    "hash": "1718461545298336663614058416950290163248",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_large",
    "hash": "66918617331196377711696296250216850327",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_mid_edge",
    "hash": "1159847358609661317013396996981531039707",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u32_small",
    "hash": "1111572795906954757017564937558479208315",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_large",
    "hash": "29759280812307161914309879658313621832",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_mid_edge",
    "hash": "102459899346976419946875758626217149886",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u64_small",
    "hash": "48383659283482043171552528715385711627",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/mod.rs",
    "func": "num::verify::widening_mul_u8",
    "hash": "566312384872663008617550141114935442983",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as clone::Clone>::clone",
    "hash": "972375990703862972911446252317295770205"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "130166960132796248442871281906278344930"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp",
    "hash": "1841541989472516158116235832925611391615"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "116226052822793134965629226563950949062"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "180749416682193546505993693670647501001"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as clone::Clone>::clone",
    "hash": "85342853291629269438176814516444399079"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "79547573081322936689388108528436001623"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp",
    "hash": "1081277644925307500911905886903115231887"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "1659210075975636025812783002392104139158"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "1673912150383584482714494823166718082948"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as clone::Clone>::clone",
    "hash": "1010565243329640965010896978057035031838"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "101263508045756485902054933754136342221"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::Ord>::cmp",
    "hash": "145449515551055332689080070364930306432"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialEq>::eq",
    "hash": "71229468824498814584302429403002399982"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp",
    "hash": "358902640666607378115747858952321273594"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::Nanoseconds as default::Default>::default",
    "hash": "33316218339812451924566044462151750931"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as clone::Clone>::clone",
    "hash": "5719155285239145415174751082421206353"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1177859903432758948614382383458256894429"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::Ord>::cmp",
    "hash": "28665405293326348049016540442665325270"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialEq>::eq",
    "hash": "940179948666376607216497750848851639173"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroCharInner as cmp::PartialOrd>::partial_cmp",
    "hash": "179361645408277729506797093421533038663"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as clone::Clone>::clone",
    "hash": "128437970799087642564914397204015733721"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1641189925293507105511724001020677160250"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp",
    "hash": "107795222395121155271446584044674062832"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq",
    "hash": "1705504659111757079911505276346110872802"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "5472320803459043846484441328408252528"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as clone::Clone>::clone",
    "hash": "159288533168489106862100995833971215106"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "117062598243366515574268932572182162086"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp",
    "hash": "534287074223826759814518005692654801086"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq",
    "hash": "107352393297694374293268268526661903206"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "1364067515529711340811519114305923711769"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as clone::Clone>::clone",
    "hash": "100062630764712527513146359880810239089"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "276893664520085083611204944201394639391"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp",
    "hash": "8539554340938374484987724704279234375"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq",
    "hash": "45555150158679639612940142643788294774"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "97955355192499434879830524669100719102"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as clone::Clone>::clone",
    "hash": "1412809712788148686616892819367043745983"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "135505438212534090274957700148993075786"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp",
    "hash": "79721390359771967109473968249873112498"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq",
    "hash": "62892720232327186047649319166654538513"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "178621276436627785359824429662340491381"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as clone::Clone>::clone",
    "hash": "1400760356551101805910084136812087077889"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1830982919930851077815816452016365695654"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp",
    "hash": "902504783339597946915280894566605528820"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq",
    "hash": "1243889464398397331215145880490672060512"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "145386600347466117774461217522487348054"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone",
    "hash": "1619327994881977737516803884434904237790"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "13628540642004206028939189460127267074"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp",
    "hash": "151642407382481194410673035809962459582"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq",
    "hash": "99681097309673400194308660899579244884"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "184352696087495147821000017036762870454"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as clone::Clone>::clone",
    "hash": "1825231518330326203013387564929446468806"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "15531355329227245326200932856452783698"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp",
    "hash": "7506512902863333646011875071539701609"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq",
    "hash": "1684351823704859458417564150341152036891"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "126607661019714595512588173218637844520"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as clone::Clone>::clone",
    "hash": "776530064192511073148826198116694730"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "178172004749652100373681458061628477535"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp",
    "hash": "984425462894560143213349190238774919510"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq",
    "hash": "112351589729017748631435013763561042081"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "166978916996771100659680815799168855571"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as clone::Clone>::clone",
    "hash": "1222891000050049056715106750391820250754"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "152307702820536916808881025852730563957"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp",
    "hash": "497015178297170510417135768649212919868"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq",
    "hash": "152398285762166324510617188306257507224"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "353544380740834322412626328933256179773"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as clone::Clone>::clone",
    "hash": "163103835043659923523781965139662890451"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "110196532622359242866920531756503891159"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp",
    "hash": "1556188312078238565412182789116483321967"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq",
    "hash": "100280590132591042629682987613662157213"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "79519399972624388811966750769149666784"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as clone::Clone>::clone",
    "hash": "1695772523334210802268860055094024776"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "4317909278706792312801326170426726015"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp",
    "hash": "64853156089495667066851549357311369889"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq",
    "hash": "167102515065998738648038221502737147242"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp",
    "hash": "67652694416918021512789686359433769956"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone",
    "hash": "75099630934996551598395735049515050534"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "128555826615761698595827504941772503748"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp",
    "hash": "94957392636018065795131902009093382303"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq",
    "hash": "1439802294018910749513115303035538892219"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp",
    "hash": "165732354556039835369007073439047445423"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as clone::Clone>::clone",
    "hash": "14422883967200452954560585800246803121"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "97990004592078688753376194486392412452"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp",
    "hash": "23144604800930656412142897370947749853"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq",
    "hash": "128331586839001640739781305850681658056"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "1457138770945597722413121284957736994343"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as clone::Clone>::clone",
    "hash": "1808493286377499569216379216719278454226"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "155700391127313819711649281074796810426"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp",
    "hash": "758642282825934363513283690793791549128"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq",
    "hash": "65876446373291972461406667564734546596"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp",
    "hash": "2002810817135072485812317690095688423"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as clone::Clone>::clone",
    "hash": "97641229878199561151346615474753221876"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "118180018154154700031530394384984941484"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp",
    "hash": "784879570485425015717403860214613314936"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq",
    "hash": "177357948629249388253765821283875070298"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp",
    "hash": "1527888597408950622915259744458433092595"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::as_inner",
    "hash": "1806765163479837515718061089949250046599"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new",
    "hash": "404723928062319667411615153012390341705"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I32NotAllOnes::new_unchecked",
    "hash": "117822708012689438271960302758744237477"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::as_inner",
    "hash": "101466116185223570285066175263370256072"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new",
    "hash": "1613555620131837398015204753101911126565"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::I64NotAllOnes::new_unchecked",
    "hash": "91670911251767698193269537152396923717"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::as_inner",
    "hash": "615727437994202637313388015146384304310"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new",
    "hash": "76922027389111894133722059315360628160"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::Nanoseconds::new_unchecked",
    "hash": "42599721701700653208408883179186699706"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::as_inner",
    "hash": "59560033506240011112195860743560472945"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new",
    "hash": "516857368847850119816449992356463315095"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroCharInner::new_unchecked",
    "hash": "173340778042934785101995196537340704380"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::as_inner",
    "hash": "88308232844754264196528227169936111188"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new",
    "hash": "146506110235922356621395848086661146034"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI128Inner::new_unchecked",
    "hash": "1309886290718204923918139924195754371437"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::as_inner",
    "hash": "106996258191679851496133371969436442666"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new",
    "hash": "1648673140734324513412772006907288206246"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI16Inner::new_unchecked",
    "hash": "1818278071265634374416856767001157462357"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::as_inner",
    "hash": "581387093134851671916404891464282388296"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new",
    "hash": "734472500304934233811128554329929045645"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI32Inner::new_unchecked",
    "hash": "418382176328596933118424389117162978259"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::as_inner",
    "hash": "217540081937746305918421189332571071414"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new",
    "hash": "113713434999513595756996194787193347880"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI64Inner::new_unchecked",
    "hash": "18179538833059616289556095924752589826"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::as_inner",
    "hash": "1788222727260493657317954694945245132971"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new",
    "hash": "115806642097099909512614368936361358857"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroI8Inner::new_unchecked",
    "hash": "36537614367048220135490147702232165120"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::as_inner",
    "hash": "13262661757185617596939037323637770039"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new",
    "hash": "567223779653419563614049073287987977095"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroIsizeInner::new_unchecked",
    "hash": "128321501593791269225954323156128128947"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::as_inner",
    "hash": "131914748848399302112722533470698031030"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new",
    "hash": "114636306589511130698151241513355483010"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU128Inner::new_unchecked",
    "hash": "150612704977139011996757661109387729369"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::as_inner",
    "hash": "167807848604641115851929607350180464940"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new",
    "hash": "100161382499490144898145810873355277366"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU16Inner::new_unchecked",
    "hash": "1176230411844559439512365456335631172688"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::as_inner",
    "hash": "141998478227857661688398471014050519407"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new",
    "hash": "738139543237467013117260371567339880441"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU32Inner::new_unchecked",
    "hash": "689156435837287747714593340509778203684"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::as_inner",
    "hash": "82224044641245928283600923343999394827"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new",
    "hash": "103757930555032752325433173796177581278"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU64Inner::new_unchecked",
    "hash": "85667694092754815901257294605610427790"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::as_inner",
    "hash": "141587573997290019087231315526348314959"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new",
    "hash": "129580049288414852913981623376681989965"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroU8Inner::new_unchecked",
    "hash": "86032100283585135516099277956335523273"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::as_inner",
    "hash": "87808710665159879316831750589045592865"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new",
    "hash": "118802965504145042288203466286022107940"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::NonZeroUsizeInner::new_unchecked",
    "hash": "15025029323176615305952911476685672754"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::as_inner",
    "hash": "170962768571467621599116368415789078197"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new",
    "hash": "152219907687463989025861689449887649759"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U32NotAllOnes::new_unchecked",
    "hash": "1226578310063922339113781790241429714543"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::as_inner",
    "hash": "103864402963256450285561881411764875253"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new",
    "hash": "507538960101624529810123168648107611484"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::U64NotAllOnes::new_unchecked",
    "hash": "99500117223477683367237593258862576428"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::as_inner",
    "hash": "695087576590937877118106737745908669353"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new",
    "hash": "88455224577055295741082183619286305230"
  },
  {
    "file": "core/src/num/niche_types.rs",
    "func": "num::niche_types::UsizeNoHighBit::new_unchecked",
    "hash": "1477515433632579362717842238826123142117"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg",
    "hash": "1295516589040739591595882409607962537"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg",
    "hash": "328046230641294816412941144812731737864"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg",
    "hash": "69702897062821574244940389684034154998"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg",
    "hash": "1276336084450442026501747627241111697"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg",
    "hash": "1838775283825672195013095536466120254489"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg",
    "hash": "159949093519858643114422997618669503526"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div",
    "hash": "1679146737262354003111975220425394481194"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div",
    "hash": "107979049622403121168371191289521636495"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div",
    "hash": "163348750796171064811734021687295553913"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div",
    "hash": "24831279437043113039911864300254111248"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div",
    "hash": "182855420954026739553347621220605047902"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div",
    "hash": "106647156602801386026079336971174289748"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign",
    "hash": "1787533172941635151013364009683778770147"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign",
    "hash": "153730763993958760755420073200421769423"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign",
    "hash": "1185814597285422868613497429644143317231"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign",
    "hash": "8301661624940169222050749375260553200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign",
    "hash": "1431895095964152915415308095788712657671"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign",
    "hash": "934739627180557879617126216745436841128"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem",
    "hash": "1060803644923961017815941936487370081096"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem",
    "hash": "1572238289533922185311971626571008690767"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem",
    "hash": "30719834089357876031205390886733204140"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem",
    "hash": "1366935092057036671417328579521890916802"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem",
    "hash": "1025972922179333159313130902251858994779"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem",
    "hash": "52790432916852479171397777049601475103"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign",
    "hash": "24072653426692413091189057794798366206"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign",
    "hash": "89577438965316897525615850888136848655"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign",
    "hash": "1107742947946282995216388053869504877515"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign",
    "hash": "776749024565525878014234788396038946001"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign",
    "hash": "42971267169987338637786901458528642127"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign",
    "hash": "1373112478530680305412009146352057719672"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::abs",
    "hash": "10931262531804934369186304447480229518"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::cast_unsigned",
    "hash": "14192990756196097797604893805263500983"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_abs",
    "hash": "21984528535275752414880042067186576744"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_mul",
    "hash": "107064763044830952337629927872673714604"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_neg",
    "hash": "1123463854476602746913414773311370027759"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::checked_pow",
    "hash": "44991566482310805142207256065752255994"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::count_ones",
    "hash": "146727514431887373112949203874246021645"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_be",
    "hash": "364433157290857164213452131764436315060"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::from_le",
    "hash": "1342481084213988079710677783253672231887"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_negative",
    "hash": "105270909604403826751202360210401971832"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::is_positive",
    "hash": "95472542918008020044711886366222761847"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_highest_one",
    "hash": "41099940316705374672026271811278154638"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::isolate_lowest_one",
    "hash": "958766471039515035412268203626260764719"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::leading_zeros",
    "hash": "1109435941494120420211039210185321714113"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_abs",
    "hash": "1126990383255453658513353376337117916027"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::overflowing_neg",
    "hash": "58602170124253494406965504918736895634"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::reverse_bits",
    "hash": "47308925715118388432759626310656824647"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_left",
    "hash": "1401508325922258568116827990437162825347"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::rotate_right",
    "hash": "1412227179096809107411439936828249032342"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_abs",
    "hash": "62785488346839999469919231452174583784"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_mul",
    "hash": "1305264648609752142517281686922057154013"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_neg",
    "hash": "149519427069651629685516532550389955034"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::saturating_pow",
    "hash": "174797087150350699488875807229253650584"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::swap_bytes",
    "hash": "325567272011434762211290115126514695330"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_be",
    "hash": "903271919031281190914171638885104170443"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::to_le",
    "hash": "1719804628445972931718343741196055105180"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::trailing_zeros",
    "hash": "523855469241139392517135033642886265726"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unchecked_mul",
    "hash": "1435209230331254108316260595144917537683"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::unsigned_abs",
    "hash": "50683285219965257419044883787137842766"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_abs",
    "hash": "89751998443758608010592268203267052707"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i128>::wrapping_neg",
    "hash": "876628079374912499917779034006071978087"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::abs",
    "hash": "916562014593596386010644811524957701985"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::cast_unsigned",
    "hash": "1166445471287275992810063620647266062313"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_abs",
    "hash": "1225499325065175772513537112358160104594"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_mul",
    "hash": "1361671462921325753011245816052295321284"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_neg",
    "hash": "753418382006087985812701227760643858647"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::checked_pow",
    "hash": "1271174471640092435817498070932298983061"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::count_ones",
    "hash": "1577969843720501179515990010781622110660"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_be",
    "hash": "17270932817888401532272519129710608546"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::from_le",
    "hash": "774833356117134336711335832332631017503"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_negative",
    "hash": "247813220569212306411279022533217971692"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::is_positive",
    "hash": "1793025061868201342215331077152054999339"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_highest_one",
    "hash": "11414210138343087700713704064333333432"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::isolate_lowest_one",
    "hash": "385299480936204062418101195513727216983"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::leading_zeros",
    "hash": "1481025061765214868012572040310795960769"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_abs",
    "hash": "53967908956525135542270423173951454842"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::overflowing_neg",
    "hash": "13939858630557246302698049842677534205"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::reverse_bits",
    "hash": "4037619616879117059251327358646530242"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_left",
    "hash": "94682545486764905349725557412752253608"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::rotate_right",
    "hash": "85653875378573239878667117078577323579"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_abs",
    "hash": "156507216742650283005724666346624163917"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_mul",
    "hash": "37203932762664172621917696651041945769"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_neg",
    "hash": "137192191542599093161349021826245299615"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::saturating_pow",
    "hash": "1395541190329945843511674930825731943317"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::swap_bytes",
    "hash": "17077871665955867877962052762053454491"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_be",
    "hash": "427419439021554724115148438717360454627"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::to_le",
    "hash": "1510092175439000559115838089966952819903"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::trailing_zeros",
    "hash": "1024214657109486555417757303689575816268"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unchecked_mul",
    "hash": "119777746735096878471491105297176384465"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::unsigned_abs",
    "hash": "343902843707885283518233231376568224926"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_abs",
    "hash": "1488182623515766802911070129456029421518"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i16>::wrapping_neg",
    "hash": "1115402173130134382612445230565259145500"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::abs",
    "hash": "1625683420715752862416853886233189391218"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::cast_unsigned",
    "hash": "917185504349950060611578246809159066179"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_abs",
    "hash": "110073327209752260346948174368865790347"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_mul",
    "hash": "126305116897700527003933731484162919782"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_neg",
    "hash": "111009055946277771252243665151889033224"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::checked_pow",
    "hash": "586835569440662928817976848647799530777"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::count_ones",
    "hash": "139600011846068346975918089532468638208"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_be",
    "hash": "895892751453021919910428549098786101178"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::from_le",
    "hash": "159441179302038216007346301720782596794"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_negative",
    "hash": "173175548539172770509773398747624839604"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::is_positive",
    "hash": "78970925204367048052645771607165001379"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_highest_one",
    "hash": "36322310999964672453243426122455068406"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::isolate_lowest_one",
    "hash": "67619349967467694675802065368916770349"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::leading_zeros",
    "hash": "52899571508326334263439187505295144191"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_abs",
    "hash": "118043111031785412457933710831422190907"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::overflowing_neg",
    "hash": "71330601606390764538066423226315779065"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::reverse_bits",
    "hash": "1637509623625089187612832792386738040687"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_left",
    "hash": "181549530133300682932574760275017999305"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::rotate_right",
    "hash": "1011184883921778240812405689002961650296"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_abs",
    "hash": "19477536529164934027619742877948888020"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_mul",
    "hash": "1603742634531543644511963935398778595588"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_neg",
    "hash": "145168815355707979223976648765641045561"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::saturating_pow",
    "hash": "40972169043312983364423631222123928884"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::swap_bytes",
    "hash": "1771358805671081020610824350102361341859"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_be",
    "hash": "15207023921888443946167361671751745913"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::to_le",
    "hash": "96014180824057929579947302001670953893"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::trailing_zeros",
    "hash": "351897076133640758915968864558006661282"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unchecked_mul",
    "hash": "104736731627801727476264428186371206708"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::unsigned_abs",
    "hash": "40283744452476185835891069428995453902"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_abs",
    "hash": "15283093331274895633517377159169494653"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i32>::wrapping_neg",
    "hash": "846976333749729305411754296630028168786"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::abs",
    "hash": "48041207511116400368641783181408188783"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::cast_unsigned",
    "hash": "172125763146970300515504486622834846205"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_abs",
    "hash": "63243123951920170441875318954101328578"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_mul",
    "hash": "1779596574964116304913327375810690108340"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_neg",
    "hash": "1356177129585671861311903598787181732715"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::checked_pow",
    "hash": "11995334902557184990786612441953056910"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::count_ones",
    "hash": "1072287145153547501218265484683209197029"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_be",
    "hash": "1448837019081854178811045417201753934551"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::from_le",
    "hash": "163689929271273326401772789982925937955"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_negative",
    "hash": "1489042986370172765215579629924748176221"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::is_positive",
    "hash": "119858560074350684179015632265925543985"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_highest_one",
    "hash": "1251486351321539362417741818041151537058"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::isolate_lowest_one",
    "hash": "130824267222552263346376636632730268487"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::leading_zeros",
    "hash": "185815841168642346713504377104614428110"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_abs",
    "hash": "569682884635546015016888509252501285470"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::overflowing_neg",
    "hash": "175294230800010290923808025981442312445"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::reverse_bits",
    "hash": "95548882254787496159821793437280875499"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_left",
    "hash": "184387194168207781092770076231427184352"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::rotate_right",
    "hash": "165012417546668592495374341357900344655"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_abs",
    "hash": "607195172769825884513470438530934831747"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_mul",
    "hash": "83484145397821837481632446181053103599"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_neg",
    "hash": "7580905369414439974592048062036026228"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::saturating_pow",
    "hash": "8788887536804806158893472036542206362"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::swap_bytes",
    "hash": "983657356162613950114610484724165357222"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_be",
    "hash": "15916709405670100720573973739798878246"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::to_le",
    "hash": "23952524089104357234819423847748357759"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::trailing_zeros",
    "hash": "64203370876321258102100493903290272396"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unchecked_mul",
    "hash": "257250888079535524611011369035177824144"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::unsigned_abs",
    "hash": "1371784626882209584514523528420543028185"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_abs",
    "hash": "469959878464436984715893283967492511584"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i64>::wrapping_neg",
    "hash": "164223824791035058654138189326571193833"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::abs",
    "hash": "91449914908446096979270847684147495552"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::cast_unsigned",
    "hash": "380428176984871146316482193395803375696"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_abs",
    "hash": "1634134855180414990617615817621094522344"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_mul",
    "hash": "107992491537457269202704511476377991293"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_neg",
    "hash": "1034851927666783071712247265222483334240"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::checked_pow",
    "hash": "1669881142339303601517456955141375821435"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::count_ones",
    "hash": "53714426584398307514904586361695057756"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_be",
    "hash": "778533602451135709215093777149212856055"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::from_le",
    "hash": "1674416254851919269416704385218200130822"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_negative",
    "hash": "1716322825404153399317006965330198975677"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::is_positive",
    "hash": "19222000427811505861573387088475556825"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_highest_one",
    "hash": "12544830724376784214948736032212611246"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::isolate_lowest_one",
    "hash": "148549585834956918817105548787083542022"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::leading_zeros",
    "hash": "1513666186579936510213382754485949672890"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_abs",
    "hash": "903268441644613455713555699951643115777"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::overflowing_neg",
    "hash": "164062745820850105498054918562171790110"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::reverse_bits",
    "hash": "1765565265884885635913418129519079512097"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_left",
    "hash": "169231139161486155232102452764424546284"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::rotate_right",
    "hash": "1179161237679596953713259830300216073127"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_abs",
    "hash": "171898662365721928091588265108298745529"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_mul",
    "hash": "962528590519115814110526688714907430719"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_neg",
    "hash": "143878843553782973822606610582257781794"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::saturating_pow",
    "hash": "73901919848595933626653751476941307770"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::swap_bytes",
    "hash": "814151548842215156516834814667928665837"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_be",
    "hash": "1320080238348216731617007328777125966048"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::to_le",
    "hash": "1807996617688448052614726606411211966687"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::trailing_zeros",
    "hash": "1477883087390974479613625334679839479781"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unchecked_mul",
    "hash": "576940974385178649012764744462241178200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::unsigned_abs",
    "hash": "115837603368943332135670204790533072273"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_abs",
    "hash": "1729244220981802038916737242079299001248"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<i8>::wrapping_neg",
    "hash": "1776214646281366567414682305742434266131"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::abs",
    "hash": "474798555545211148912455779574238020371"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::cast_unsigned",
    "hash": "123492201062542947507035076448597311691"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_abs",
    "hash": "664304242005577982917061961898244569250"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_mul",
    "hash": "651448405666889646014828105563807890883"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_neg",
    "hash": "6729992154771968604856940602630435293"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::checked_pow",
    "hash": "102688256355223190993382661566877223635"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::count_ones",
    "hash": "1344687991006393890817684674182322544087"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_be",
    "hash": "145273516838839696008427647096674594884"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::from_le",
    "hash": "20804784951219077429147066995545342358"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_negative",
    "hash": "86080591074560417487508454401847864125"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::is_positive",
    "hash": "1817254944696740987915318015154596500684"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_highest_one",
    "hash": "73144606733544853346379420928701083499"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::isolate_lowest_one",
    "hash": "172463706304482711275431096796343912810"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::leading_zeros",
    "hash": "10910953057494246009659602532804418830"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_abs",
    "hash": "646635570785770288014819443975347616497"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::overflowing_neg",
    "hash": "66272347608145368944800172966975590231"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::reverse_bits",
    "hash": "90002309026510250696794412504172652669"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_left",
    "hash": "979378017198489073411263273676141200334"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::rotate_right",
    "hash": "79238448833823150885661857569428738087"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_abs",
    "hash": "1638818297213829237818062295580118130655"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_mul",
    "hash": "89324853410397996518158305400929812355"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_neg",
    "hash": "1249576414987110891816131760566259288578"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::saturating_pow",
    "hash": "681328785926247866113336162509974778261"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::swap_bytes",
    "hash": "78624288837076519436974871207601228590"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_be",
    "hash": "840560655659645231618298848028365216469"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::to_le",
    "hash": "1357716358500336670514719883076357926666"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::trailing_zeros",
    "hash": "40280356338382293469857220979626792865"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unchecked_mul",
    "hash": "425437653535791705116244133240562071181"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::unsigned_abs",
    "hash": "1629889242743806514410250432215985665368"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_abs",
    "hash": "1124746624583030517018142812506687787126"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<isize>::wrapping_neg",
    "hash": "765521776634369806117436653636162126578"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::cast_signed",
    "hash": "116289808178756956811180356416709694818"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_add",
    "hash": "9640886327029096733701469538390961414"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_mul",
    "hash": "340410406452361458118363551579690800622"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_next_power_of_two",
    "hash": "94489499168062678013080826180107514444"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::checked_pow",
    "hash": "47605174771826948934160473519027093518"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::count_ones",
    "hash": "1422747885146570475614956499565190310298"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::div_ceil",
    "hash": "1263976337279848464811640748173257948491"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_be",
    "hash": "122500015269249026914431991643592923888"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::from_le",
    "hash": "932715873491185616910253529217677412776"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog10",
    "hash": "1223277386744462749110826654951870178208"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::ilog2",
    "hash": "23485287913308398907518566308848990578"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::is_power_of_two",
    "hash": "1122341294059729646018198280458995140388"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_highest_one",
    "hash": "902108908895564525612198784127943414144"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isolate_lowest_one",
    "hash": "1270198493851406147518336040114330781082"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::isqrt",
    "hash": "41305777992675651729988858503694627339"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::leading_zeros",
    "hash": "1364483128083341412916121038043150689227"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::midpoint",
    "hash": "1029966156639753850318204876664609758144"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::reverse_bits",
    "hash": "363176878325670114117458364938499166373"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_left",
    "hash": "88086574850297524355945412828684431338"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::rotate_right",
    "hash": "85258995419903742897725636843924291878"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_add",
    "hash": "838438355726361519813542873665847752545"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_mul",
    "hash": "1131202996447404873717297054144364347384"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::saturating_pow",
    "hash": "990704214117848304115197264723998839363"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::swap_bytes",
    "hash": "380593160607273297915378967129824616723"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_be",
    "hash": "178964896520373383157750826592297571650"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::to_le",
    "hash": "24221824311564927295706573347787967836"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::trailing_zeros",
    "hash": "125964922190440494312244956551337357542"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_add",
    "hash": "1001755799779032022514502677991956011016"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u128>::unchecked_mul",
    "hash": "144200487637287907542640034374672206766"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::cast_signed",
    "hash": "1212546373568651894010679587949585199082"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_add",
    "hash": "498895867375170318610871964568628354131"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_mul",
    "hash": "8080940549613468612485719861384539118"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_next_power_of_two",
    "hash": "35968592455534629825768471678661587690"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::checked_pow",
    "hash": "1655402866704612601214699838887246836274"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::count_ones",
    "hash": "23983110774667757233740159349314896937"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::div_ceil",
    "hash": "55142681485242667103880082058448912160"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_be",
    "hash": "65022690704617223523611706982335150014"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::from_le",
    "hash": "784894206167162424115154288138203679241"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog10",
    "hash": "1035694376356241770518189967508439176830"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::ilog2",
    "hash": "80911401965524286516110379261978368622"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::is_power_of_two",
    "hash": "1837834683006471108316341496399675876703"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_highest_one",
    "hash": "39442268219655397802859605340480321154"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isolate_lowest_one",
    "hash": "1166777374745198138317425827238376099683"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::isqrt",
    "hash": "81258663262651911733992634878390449413"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::leading_zeros",
    "hash": "90658574737498393267726687213362574641"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::midpoint",
    "hash": "1828491800089579842911246853729962411265"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::reverse_bits",
    "hash": "165497762910077263597461246242634977112"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_left",
    "hash": "1490930046486967123410362445374091835240"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::rotate_right",
    "hash": "95461398262127652898936093705740744665"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_add",
    "hash": "802147197953837711317699743366722615868"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_mul",
    "hash": "608433229846506957714500732605542880071"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::saturating_pow",
    "hash": "291371930632988534615995391532481671027"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::swap_bytes",
    "hash": "1531195981638209314917182527188412567934"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_be",
    "hash": "1664559434747384192817263501321985072036"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::to_le",
    "hash": "125785890555839209575840027318739264168"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::trailing_zeros",
    "hash": "57475769304086786051784564958466725024"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_add",
    "hash": "843158658997435951110804847420063839302"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u16>::unchecked_mul",
    "hash": "1455602969606897478712281223226259662430"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::cast_signed",
    "hash": "99629854655107697687467061252608956860"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_add",
    "hash": "1236511096299803494214436915042668287588"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_mul",
    "hash": "18350371723915675163250156652832214760"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_next_power_of_two",
    "hash": "180052590482963683199067573655790128574"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::checked_pow",
    "hash": "16368846650410670491764726073215454019"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::count_ones",
    "hash": "33620672838005371396387970788856400842"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::div_ceil",
    "hash": "152123980533154455724462913595325248226"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_be",
    "hash": "17612226408910945155870107741086260489"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::from_le",
    "hash": "114039156724992553331374344964271343501"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog10",
    "hash": "30599007991561473394715269362694542939"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::ilog2",
    "hash": "174489722259257065996978599495955519881"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::is_power_of_two",
    "hash": "1596942064712056799312681067119492331630"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_highest_one",
    "hash": "1382217184437647116517356314344229145987"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isolate_lowest_one",
    "hash": "46776165136881923016777416182549794705"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::isqrt",
    "hash": "34894767974427805055020311464613146815"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::leading_zeros",
    "hash": "93044120438758334976567374213377357501"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::midpoint",
    "hash": "686112347557655290310025165681569120019"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::reverse_bits",
    "hash": "132058411393337627257386912505986223210"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_left",
    "hash": "1104214389163908826615472915234876659921"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::rotate_right",
    "hash": "42226896791935570153280102932136569621"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_add",
    "hash": "55271596045149618961185191885172762610"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_mul",
    "hash": "160184442199189170307654597615965716167"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::saturating_pow",
    "hash": "149333038302508966214147682333247062071"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::swap_bytes",
    "hash": "183522628935443848693604335456532043574"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_be",
    "hash": "92375979627037098555960687378457395222"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::to_le",
    "hash": "173541719619131882073924634483471324344"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::trailing_zeros",
    "hash": "1204096123176314586714670905647646022473"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_add",
    "hash": "685543207069416470616761505712862768399"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u32>::unchecked_mul",
    "hash": "181949171253111695145853585429906909072"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::cast_signed",
    "hash": "136254415503674100575107301312598911198"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_add",
    "hash": "123645604196935585714980037032506047684"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_mul",
    "hash": "93493188735038288442554496293168819959"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_next_power_of_two",
    "hash": "1296263851736174060614918851313777722379"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::checked_pow",
    "hash": "164162625734754490808689507429537790460"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::count_ones",
    "hash": "1009774059745675998115351986042797746032"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::div_ceil",
    "hash": "1132923909066240329215868482054943914562"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_be",
    "hash": "1711615628892962321116439184212287185689"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::from_le",
    "hash": "126226518403908843693798870645540052604"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog10",
    "hash": "1607826103646552413015254015246941631886"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::ilog2",
    "hash": "1792626365487714738813211563991477499586"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::is_power_of_two",
    "hash": "1694097612123375776516457806349485122755"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_highest_one",
    "hash": "1728965769724454518717970868053442645091"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isolate_lowest_one",
    "hash": "95846372828982626969124857553742525678"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::isqrt",
    "hash": "68275504688224004528116877434083018788"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::leading_zeros",
    "hash": "89754608486138976814619646295646665781"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::midpoint",
    "hash": "17763169923743351593773473321722653568"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::reverse_bits",
    "hash": "211751444188255030317265783271212555619"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_left",
    "hash": "107525290662025419258883727826587766220"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::rotate_right",
    "hash": "21848659537824281426149260278677969021"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_add",
    "hash": "178765544683568909038590646689774059766"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_mul",
    "hash": "181705295483658321601884287293931986691"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::saturating_pow",
    "hash": "1199825571622939158717994275851967888717"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::swap_bytes",
    "hash": "1844044636137385765312355133035759014632"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_be",
    "hash": "407477372881242754817171197348087899703"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::to_le",
    "hash": "129736464517485179710499380707920987658"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::trailing_zeros",
    "hash": "66747496026527840299046720627804083510"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_add",
    "hash": "64237975808750074749970928021860323916"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u64>::unchecked_mul",
    "hash": "174076621758562709459857868827512783885"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::cast_signed",
    "hash": "1839871174768835688916717023827823485597"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_add",
    "hash": "183333992645697877611370677044980735200"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_mul",
    "hash": "70530317681451561034582261260045698771"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_next_power_of_two",
    "hash": "43732268181166739104274283909565022214"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::checked_pow",
    "hash": "53625120356453584025555846041325639183"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::count_ones",
    "hash": "703417553320754209418349182252218615043"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::div_ceil",
    "hash": "6242207114840848797289511499237612669"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_be",
    "hash": "63370491400361354838986292319838659304"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::from_le",
    "hash": "625954968307634007412521831171995354220"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog10",
    "hash": "11028676803064396127807334207766214262"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::ilog2",
    "hash": "112237596781326027072896396588509444286"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::is_power_of_two",
    "hash": "72503801244058736622502847162587482730"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_highest_one",
    "hash": "1521370893460914050610038191422111088123"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isolate_lowest_one",
    "hash": "173295433150570421565747356428227597514"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::isqrt",
    "hash": "514949640098568110214378183839603973018"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::leading_zeros",
    "hash": "171780270673755835484603218960317674492"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::midpoint",
    "hash": "19297846517810511896003060496234985136"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::reverse_bits",
    "hash": "161715244499862691688100017275874978287"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_left",
    "hash": "140107802226220218857198116114548467843"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::rotate_right",
    "hash": "335964839381138116017845564336650312801"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_add",
    "hash": "168575149747778950763936545583332119600"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_mul",
    "hash": "106785111791986365899924400579251405312"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::saturating_pow",
    "hash": "157139416263303961413065785551018171975"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::swap_bytes",
    "hash": "10401526905561317997350190564245019212"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_be",
    "hash": "48376864501804082175575144448127960140"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::to_le",
    "hash": "106114928477653381141412692548257056081"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::trailing_zeros",
    "hash": "798325876583230770913134331141612148201"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_add",
    "hash": "8788183094992256098938007223279149064"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<u8>::unchecked_mul",
    "hash": "10928295412814991777384737966459467352"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::cast_signed",
    "hash": "978021221634504715011496220136176823538"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_add",
    "hash": "1783405448623642129412894805642056748886"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_mul",
    "hash": "1046648042328425623411893952664604427159"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_next_power_of_two",
    "hash": "1521075399253286047217799118727919431946"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::checked_pow",
    "hash": "628552902927428999310013497235262494508"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::count_ones",
    "hash": "16008063062311462047444610275377632844"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::div_ceil",
    "hash": "1681072464452363146616140161938687010625"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_be",
    "hash": "1012656588860590555518006309861270097741"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::from_le",
    "hash": "108230127677108139332103656047269173203"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog10",
    "hash": "155902832625964996994848951241821554463"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::ilog2",
    "hash": "41081808396548500589604860436147588298"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::is_power_of_two",
    "hash": "87905113673357920013589388070206448768"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_highest_one",
    "hash": "41483974539280690988919918355820088827"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isolate_lowest_one",
    "hash": "1643162002355909078918398705535807014968"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::isqrt",
    "hash": "29197973863689106077661023290363615332"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::leading_zeros",
    "hash": "903708691287217114218082774016212864186"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::midpoint",
    "hash": "131423240352784579631162823764517726178"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::reverse_bits",
    "hash": "1510271597574058107711336002301993075278"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_left",
    "hash": "158121949019477377847962668455494029908"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::rotate_right",
    "hash": "124532987852085040461262023188708839562"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_add",
    "hash": "986844161639432324515058349678829578315"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_mul",
    "hash": "436801194902287515312156167069398517145"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::saturating_pow",
    "hash": "68583981741907663319369354731813996645"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::swap_bytes",
    "hash": "1486133991358261239217416913156039706810"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_be",
    "hash": "175258065913277848461420451676757733643"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::to_le",
    "hash": "994662309875466230118334714487931809654"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::trailing_zeros",
    "hash": "929485006503112559117912011891231487234"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_add",
    "hash": "1763323772602456857718434661985336452015"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::NonZero::<usize>::unchecked_mul",
    "hash": "103988190774252581046029556941473108514"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_neg",
    "hash": "174762220817393646277511554008693436644",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_edge_pos",
    "hash": "1196206933273300600112544714106189791569",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_neg",
    "hash": "49941563972007595623919238997981964513",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_large_pos",
    "hash": "39714016495434896757344293457829881591",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i128_small",
    "hash": "276690869022685659515481923897723125783",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_neg",
    "hash": "184372079757138156277144233165719524551",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_edge_pos",
    "hash": "1044950689575092167711900449580875672662",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_neg",
    "hash": "8790261856229071369179549458004566362",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_large_pos",
    "hash": "82130709946166281315127565931872234839",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i32_small",
    "hash": "1745710121577575778415388258763320027567",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_neg",
    "hash": "93182849391518589727440615690134680248",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_edge_pos",
    "hash": "1468458760737531401715619861407668100494",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_neg",
    "hash": "9929720662357723037306220271831036146",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_large_pos",
    "hash": "18171471300030968603474038203918794654",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_i64_small",
    "hash": "173584734106541870588452172299424746311",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_neg",
    "hash": "1421108539185493499317070245926672569531",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_edge_pos",
    "hash": "3958014277970575373245123096998918212",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_neg",
    "hash": "132951881257198127615616137909929957221",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_large_pos",
    "hash": "220260993376995533515955481346341752767",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_isize_small",
    "hash": "123229904380171011377027464101756701240",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_edge",
    "hash": "1680446242151041329716782778042836400442",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_large",
    "hash": "77820604149011313423359833134714447419",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u128_small",
    "hash": "615072511952718157890975477987291760",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_edge",
    "hash": "62140262728347613958816466506709895223",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_large",
    "hash": "122112543853892559415963560657590249573",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u32_small",
    "hash": "32850112145402751488588031206545205941",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_edge",
    "hash": "45376968385345027145319937955159332705",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_large",
    "hash": "61823372315268882454944640855248415366",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_u64_small",
    "hash": "1696012418132701058611832357296125810479",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_edge",
    "hash": "660199378408442622812311880412050093505",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_large",
    "hash": "62573817763514242672098259750409277706",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::check_mul_usize_small",
    "hash": "1585245534088705188314923471401339699642",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_128",
    "hash": "109653085149947941629071221138069613697",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_16",
    "hash": "127510920542873430394566973524941000692",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_32",
    "hash": "1743915165555324633113019030518207922659",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_64",
    "hash": "53495251620389522969697930826258015692",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_i8",
    "hash": "1188463731989982469417552548156260003618",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_isize",
    "hash": "954345213558752816313262072325553530562",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u128",
    "hash": "150975995493745043317671792984083242186",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u16",
    "hash": "12420789137098434131174120940847077626",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u32",
    "hash": "1603641994300287578916794825872763382763",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u64",
    "hash": "78329169648159241175439625201436752426",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_u8",
    "hash": "154094774023518550783496775760401259328",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_for_usize",
    "hash": "84808909210238955901589029582125546222",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_128",
    "hash": "121985470632716291364075633807933544773",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_16",
    "hash": "1492300320332362976016563965574356062133",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_32",
    "hash": "1705537589728135859717807067993520522197",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_64",
    "hash": "917608244539992485217489840922087008619",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_i8",
    "hash": "1589278731128076567612216832127747735770",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_isize",
    "hash": "179994422453085979776709559247985646144",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u128",
    "hash": "114732007340965488548713459162059723552",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u16",
    "hash": "93949460458111046288462897669602914124",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u32",
    "hash": "34451206594703046771162714766891896795",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u64",
    "hash": "7239681545896317642343618366537323166",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_u8",
    "hash": "171217196139883048973925262477684168687",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_clamp_panic_for_usize",
    "hash": "1658463808684661831513391963072218367186",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i128",
    "hash": "1142190084957549322016821841248653949565",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i16",
    "hash": "1351996178002149021967629992628631852",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i32",
    "hash": "366488170376604632217901966363000030292",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i64",
    "hash": "694473826870531435716969018660428392413",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_i8",
    "hash": "1458143571361305462613119623973060571581",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_isize",
    "hash": "134795168582998640116726225514319457256",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u128",
    "hash": "107906159493707829148008339860219047015",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u16",
    "hash": "1116044549999028858212171070422562368877",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u32",
    "hash": "165833707814918794307530798797250027753",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u64",
    "hash": "112143737582213996239182831328173823712",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_u8",
    "hash": "97244155574088017189292497322963056843",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_cmp_for_usize",
    "hash": "75773609675560790301519188078393582058",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i128",
    "hash": "1221357225051833503611816679657621616743",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i16",
    "hash": "1695554861523477091417336056110827570836",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i32",
    "hash": "57021467348657780814032863388949512423",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i64",
    "hash": "160485735401708565616677384635636665508",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_i8",
    "hash": "180413398708695518788898114224537261587",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_isize",
    "hash": "182570481807134668657699672207840566801",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u128",
    "hash": "154908793490226610913370118305340283550",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u16",
    "hash": "70560819628927854448714848270674300010",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u32",
    "hash": "1807996211452221003115130292056731528791",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u64",
    "hash": "1559444985088789010214056197081799326044",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_u8",
    "hash": "2968301662108565843794261567882196",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_from_mut_unchecked_usize",
    "hash": "12668105481763249202646582501851690133",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i128",
    "hash": "173599523566086493489718136111497182849",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i16",
    "hash": "1598381843871491511316608795874667647739",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i32",
    "hash": "452113545938798859711904709383850943194",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i64",
    "hash": "1648970186518940512110385357390944995146",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_i8",
    "hash": "272351531226433716714693371817331403617",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_isize",
    "hash": "112369055002159761418602899987522440784",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u128",
    "hash": "203597231586619867911754156390710168703",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u16",
    "hash": "32079384059714821268887986418069970043",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u32",
    "hash": "138293981276572259044672317772150990134",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u64",
    "hash": "3080509152157338501529044334032860624",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_u8",
    "hash": "1762173488098705431515371899115142152328",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_max_for_usize",
    "hash": "1492762235933348741311163491776477950078",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i128",
    "hash": "920378331235282003918208630520173825227",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i16",
    "hash": "899049028646688948817911313669828263402",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i32",
    "hash": "1512738873507245422412415727575818736001",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i64",
    "hash": "711050984435239757317362832350418811948",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_i8",
    "hash": "681158311737833350210321850108810292315",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_isize",
    "hash": "129621111930744522784379786133847776919",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u128",
    "hash": "271030001669059119511733700374283032400",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u16",
    "hash": "461541628298897801214818422597702583316",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u32",
    "hash": "170509862420473324014864941154346028134",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u64",
    "hash": "632098985755989147515204135439221488824",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_u8",
    "hash": "55977518975428738929245660445812382825",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_min_for_usize",
    "hash": "1449188838331492310011068291862551163388",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i16",
    "hash": "76022815145438862416543754461845318929",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_i8",
    "hash": "8042865798850512738106030238747279578",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u16",
    "hash": "38267345404134034011164183185776885046",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_mul_for_u8",
    "hash": "165957357455187489592581334284429210701",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_128",
    "hash": "445853215792059395110251101186523986208",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_16",
    "hash": "56546286116300241018661663726763427987",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_32",
    "hash": "138807076179372949102243520434197802875",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_64",
    "hash": "178872807692031589952638315495526503594",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_i8",
    "hash": "159344654434324176047190481520393620520",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_isize",
    "hash": "55058942940701148416499963893142888573",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u128",
    "hash": "46786509084595455829297256196323367521",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u16",
    "hash": "552141313641700394413466234730798541138",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u32",
    "hash": "872194708805187081116117231978692974050",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u64",
    "hash": "35379678474858636555394827343526638476",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_u8",
    "hash": "150881200035106929856032592087661076134",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_new_unchecked_for_usize",
    "hash": "73737342874226011418240508903573582600",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u128",
    "hash": "22602713141091892987593379149275060426",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u16",
    "hash": "155910078436108000616704327712550104800",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u32",
    "hash": "138888831711793225402361738001828258418",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u64",
    "hash": "190590181141524455916038025427898145580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_u8",
    "hash": "683930890057028013211839238066412616352",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/nonzero.rs",
    "func": "num::nonzero::verify::nonzero_check_unchecked_add_for_usize",
    "hash": "170847916301200396577365054433858627185",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::add",
    "hash": "130365828082195443957350951624381167426"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::div",
    "hash": "109813899317130890187695361644214966689"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::mul",
    "hash": "12881049707468497479651454461380736245"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::neg",
    "hash": "795071366251887837112840784254221627715"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::rem",
    "hash": "10319999612536255589615040493287291697"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shl",
    "hash": "101317841243838335489506744834647290960"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::shr",
    "hash": "119879749559322347697949237217642916925"
  },
  {
    "file": "core/src/num/overflow_panic.rs",
    "func": "num::overflow_panic::sub",
    "hash": "6629222568075366312540890375642523634"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Add>::add",
    "hash": "432229422630335387315484235255827142025"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "57642333334165725044549256089225726392"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "6413457718586940444845594002515063297"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Div>::div",
    "hash": "5232922338037118198190811471239585208"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "99908633661783968505966376379136884329"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "1429790196225313463716664634666972547167"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Mul>::mul",
    "hash": "1403036351375310342711355062138257400789"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "1810654859490033733516063765117258179384"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "241268191484902407115776763371318661661"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Neg>::neg",
    "hash": "1786895396763584999611228482761035014542"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Rem>::rem",
    "hash": "105401042099522273241024836303107154823"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "523840945543485856111470663574276108932"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "78474324398390291613341921202752955367"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::Sub>::sub",
    "hash": "27832914365053706123892993231521382839"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "1437939452672250118713208652856408029036"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "74526281946155848422669643883781175215"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand",
    "hash": "74909359543277463635671322471712691005"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "114394358881691875768139232483340457397"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "143941768276655628686801454386705266249"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor",
    "hash": "125563123244854370317178763799004934096"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "78717051773170917413751192119460849701"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "184213585897768896881231064051829706676"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor",
    "hash": "48927930792778895849521253402946906876"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "82428206900508595205552115592739402194"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1526081138099909139611012905351012894683"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i128> as ops::bit::Not>::not",
    "hash": "135301984851726024022187079145775816417"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Add>::add",
    "hash": "1314162391338960809612122030842891316242"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "1719101716991032115010759285406954684212"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "8717828429037238761625247364093147605"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Div>::div",
    "hash": "1024417580369901022407636398468001644"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "416977198116255056010985109286898487124"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "81217970060711762289541334496893757424"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Mul>::mul",
    "hash": "736381657191501160913204899733982583208"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "119312153990611955829203367404309079930"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "72604938483480303029925996136578600452"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Neg>::neg",
    "hash": "217759064917236400216827437009585788435"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Rem>::rem",
    "hash": "150836520964945982991029259211801895144"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "520235285734611643014593090807018347107"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "389596463298902993310165553203594989794"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::Sub>::sub",
    "hash": "856864008982486714313860699794684719207"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "95717806872803478136339414440022552879"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "138142044404398304517992938543565516016"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand",
    "hash": "906148298358232184210054149206292126557"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "546385044767936650110282641839119623973"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "125805736056629556937460685136809650191"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor",
    "hash": "14279778268552742536266020239185888896"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "42321080658368545548731458100183124143"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "57957449014160461642368281069709730221"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor",
    "hash": "278473424332569512714446470280886880648"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "1001979730996003973117811599608798535698"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "109903665936147134695941213173323369234"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i16> as ops::bit::Not>::not",
    "hash": "245051360641005691217903550114838017365"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Add>::add",
    "hash": "615397101927266543518390376233317010629"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "88858642737909456117294819131682297889"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "454742479824123021917380967387083487419"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Div>::div",
    "hash": "904507274940240993613981861832614358594"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "1654521388104076470110517753975159914777"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "1414489059570078081212149879288463503646"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Mul>::mul",
    "hash": "26399853196263905668354574669796529881"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "1623458226061847791113797361355010428069"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "157057408990900669385729035982735082884"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Neg>::neg",
    "hash": "149830179620487698831949530459974075939"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Rem>::rem",
    "hash": "124412808842202320368481702562845821288"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "244551060939071987410479116223607953358"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "32877567866695350617260770495670971779"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::Sub>::sub",
    "hash": "175655051456136388799603406022236883183"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "1012537711748006112610396981516477449982"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "8900163654734312149652108310120653650"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand",
    "hash": "495051176761909178711217150299297683247"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "17653964985128065669538057284760936562"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "853249573275844934113005045588348501235"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor",
    "hash": "145016490203304365392003648441048154701"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "130728369467869082734554601940692284404"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "121135479987024602612323775287563004969"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor",
    "hash": "75179666770634514388019976827786293602"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "17693139877978891651727190085671450615"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "670272200372243341315798085853894876749"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i32> as ops::bit::Not>::not",
    "hash": "134262871580008886176858232187098230136"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Add>::add",
    "hash": "1352484183045412556814097533256373738917"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "2372349181417010117546070509399569254"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "3988758637246706741672115200192707016"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Div>::div",
    "hash": "23419903768968693432105422460532630469"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "141998089793216071828691244395853930470"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "1790764526886517844118754740735223762"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Mul>::mul",
    "hash": "147581344764119258223596763766136652674"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "10305813197233253943412213620371564940"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "156394163791700589463846776647913915738"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Neg>::neg",
    "hash": "501257256191444095716444726540987225872"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Rem>::rem",
    "hash": "163982269501415050942065172406097711516"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "150070092780050532209517936006475830140"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "2541955294217818514138793401413375794"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::Sub>::sub",
    "hash": "1417060074678955551217947238009460336601"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "121557826834579996315632402553595033290"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "68769606500033143883211378932611392959"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand",
    "hash": "10074948883178268199874444832179449331"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "134375895249650112871542356427463524710"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1267915078654177382013397542239110582265"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor",
    "hash": "26563510225315111438876931444888451852"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "42344442640523750409653265244956190625"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "23510546730434716356288577099176990743"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor",
    "hash": "1332536399032938634917902931309856231502"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "44314315899618371989126010269980668504"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1452794594409984418917689792941029839591"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i64> as ops::bit::Not>::not",
    "hash": "737535557211292206815936450654280021573"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Add>::add",
    "hash": "1785926775457447867710175899439124588125"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "542267732598002100011243576948136797710"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "1659685542906737234212332667404525010814"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Div>::div",
    "hash": "102818245731136227009390477884078065960"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "1367305036787413214412156145257596248916"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "1245330938616806985813788814952484243988"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Mul>::mul",
    "hash": "123579669401598360284838724191369718465"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "509347931516624732313556186045572179403"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "153050008344015542158451273163353903868"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Neg>::neg",
    "hash": "75646209530762354587165122620182392954"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Rem>::rem",
    "hash": "147673703482489218205079567731911987718"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "57433171042205052108354448778832890488"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "592752137662563368116115075132676624379"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::Sub>::sub",
    "hash": "988992209431838800617091803193115355394"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "636742919046038691018006453714284556747"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "1416900356544510665212760168048657080520"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand",
    "hash": "1235635198571369444616406175822675789075"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "59702941502134924138894481148531795729"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "105837904956120213561606751851537475624"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor",
    "hash": "118192557358788510769103428868222754659"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "1505079147954939823112689906175842729068"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "152715592646547111981622652488792069622"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor",
    "hash": "89577570004472442811321579376564095631"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "91063369472138947393507803643975236817"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1808667061639262773109117020785517806"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<i8> as ops::bit::Not>::not",
    "hash": "53205182191480855153134618067126934359"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Add>::add",
    "hash": "88124278500675998987096373799656857936"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "1189185184919561357510985079568086897047"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "729568283208850402116114353359670703356"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Div>::div",
    "hash": "1300539684725945187514818761421524916029"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "1145859404592918764912644700386087062452"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "1499395916972773510011238786743859501438"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Mul>::mul",
    "hash": "13589745226115463450318295239897310510"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "481733189575482197510549966376041515366"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "1238470620799945908615212812208265992061"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Neg>::neg",
    "hash": "175038640843677256609127469799771089466"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Rem>::rem",
    "hash": "1761854926862652349411959927254522106162"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "42029465152553831556002269678071471673"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "1288474547285007540813674834614146855744"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::Sub>::sub",
    "hash": "106407098003871863551015613855658095029"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "127604845820859208597512118478532733904"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "972526780710139214112533469897195880132"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand",
    "hash": "135234961329469842548591395884677106524"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "11247473875739691666871198939201866115"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "205974080080367304616826887549290218625"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor",
    "hash": "11952120248433022728375064598026550836"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "29988095664566364141182167324418176213"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "170217541640000659344806197117251866434"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor",
    "hash": "1468318102680941937717803856377992846534"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "7387124266116387108599748318743254482"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "97875095889533897385032503828242654582"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<isize> as ops::bit::Not>::not",
    "hash": "1690208143584396283416259939265344086380"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Add>::add",
    "hash": "166953123537047162532943128938193599409"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "267892410850071323516819780446729793209"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "1183599252831187160611866231177558253114"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Div>::div",
    "hash": "1178119708053996789217174510549162779998"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "1654140892608733906016985940204729925448"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "617873781370344189446291376894683559"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Mul>::mul",
    "hash": "1250890796211804519910763038572695065034"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "72682934872717289797599900250144082022"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "13064948961009884768359962495681283284"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Rem>::rem",
    "hash": "1286260999760219174810239852066836392321"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "163346652473921558707134498855511693867"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "8045016591741038753071440539912855659"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::Sub>::sub",
    "hash": "135509568259580542869398850999745314878"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "969599987437418741418214744448068051782"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "1123190631046999374911880440177390024164"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand",
    "hash": "405600876706307073517775131757177384011"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "1107210907442871307812497080484068715425"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "168391353057140304487521225897371088207"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor",
    "hash": "15008133946666596143706453799044091888"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "560182826768685749310021095097265235568"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "581811040547068205410415070152070535982"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor",
    "hash": "1686292587407587303616764228412845936574"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "10056916042566882631611274524183250728"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "874384093374985181118167249156384752949"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u128> as ops::bit::Not>::not",
    "hash": "416442809128345753815315228163420778594"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Add>::add",
    "hash": "146835094354253408427947162545776320343"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "84557484229407317283758728964154675217"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "106869708503472588182811532190912183949"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Div>::div",
    "hash": "615026269495097240212637123603131923671"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "951200332560777915416785665032847750460"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "93183213886174348112029705902895835251"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Mul>::mul",
    "hash": "1012445790653808100511328409192787144775"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "997352486553458844417546442494896306441"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "1781393083097259476718309472797592540354"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Rem>::rem",
    "hash": "39447628770736844332450108246117790851"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "1369489295708082178617660551527500108122"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "144745112467450268207597214849549139316"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::Sub>::sub",
    "hash": "34724005443362938448015265282089478353"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "15631570079595005912104057688254560396"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "1211083714481963447012242703459190309020"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand",
    "hash": "196269359862512624715881633941690733820"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "71826618179906693941486711712192048009"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "44453481508812779012542471440645961234"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor",
    "hash": "18210573037382947017752369176035376277"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "84677647501475373598239940340711317846"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "115532682351393473432897042198009436638"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor",
    "hash": "935968091527643602710475848728302229548"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "89263506005170487118239063848262556094"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1145201450514280317816553732964275005613"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u16> as ops::bit::Not>::not",
    "hash": "80996683314229203711626180838735885908"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Add>::add",
    "hash": "1120949116058510007214550189721229738047"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "23889838690279872271346431905829571345"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "1455657213917651300415530479108191024287"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Div>::div",
    "hash": "14629950185637122209575681733551641756"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "19539574677082708565720129887367454226"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "13056191889464789133536684958467829660"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Mul>::mul",
    "hash": "75788735487178453785127019858675768123"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "141851854147346425715857875033710784944"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "692885096406623534911987832078098877025"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Rem>::rem",
    "hash": "131192215315372215929868624908928707258"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "376618383544483253910417296620150361967"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "2515747435741907254501267205537293961"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::Sub>::sub",
    "hash": "1733781813738442144714745494621631523503"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "152335040760446787935838032473129664315"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "1268398615218610024416387122898042120496"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand",
    "hash": "1777227085753488156611862259293577670873"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "62041735846056035142244341747595615315"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "836278096815235883611152828408611723889"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor",
    "hash": "793950420074422004611824680899828130073"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "998871877513666763312010604056019671954"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "523899043230097579910633310956682320090"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor",
    "hash": "207963909299593141111246025543689248033"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "1400011441837392823313700507508966684129"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "105321025564950305711064038373251491971"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u32> as ops::bit::Not>::not",
    "hash": "835467494824995154411748584304047763494"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Add>::add",
    "hash": "1291488604008440098211803775229279284755"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "52998166454223159185964047178661058504"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "215613598792684359816510850668158986729"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Div>::div",
    "hash": "1253613029431509941715456405255639456817"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "43989118709159765851470681168990494245"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "17752558251159177321925725197469766863"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Mul>::mul",
    "hash": "101112105252625425472060290158849265455"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "1761390952653207711813101353339374959244"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "112732437391728987713851176806493576667"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Rem>::rem",
    "hash": "101331795270006430439590195168784289144"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "169791348533667687819518009386083957525"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "963540557487198084315988809665304288812"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::Sub>::sub",
    "hash": "93479401298591132535454433307670164179"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "948156569822342997313323118878125982871"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "53524488525746878948342875626293492178"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand",
    "hash": "168123124163679510704840964889985383019"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "27894616250526375531349073841261018887"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "76911437657927473994500848869805656452"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor",
    "hash": "164994929225506804148013028247829819735"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "132716376573512319037532169346807132200"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "72657565267022756763321535095358525176"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor",
    "hash": "24794305085449358122480607423571436608"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "45126362135202833491564408011628215262"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "54912853396332371817926967035757550372"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u64> as ops::bit::Not>::not",
    "hash": "177258601060268539731538009589790678063"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Add>::add",
    "hash": "398853978109838150415227345543075809569"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "170984701928504739821135228068347522892"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "1053711418968607051110027218126973282969"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Div>::div",
    "hash": "921958830654215278417467000334000458511"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "77468762734206037162010060992674081933"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "898029946564409064826235397795559904"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Mul>::mul",
    "hash": "300089419363320612112552036087173190411"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "9017985740046427995596669590270763702"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "98758137560487007938300869971231645572"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Rem>::rem",
    "hash": "34641405044961973526973218320252923797"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "14244278219620377799308607765377756309"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "1733606867633262027714306680763786472153"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::Sub>::sub",
    "hash": "1659275470803509233815329126384144854959"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "120829438046868144667399158695822145004"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "970076320360519877515969432506895486111"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand",
    "hash": "326555160811810660517452146554248737542"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "1519461886659198020412135602396791334787"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "122785616576394967807673685201428315764"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor",
    "hash": "1001187663330945935610821227048664927954"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "130500947800537526152445653086512478387"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1551466265635520804511919293604531224879"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor",
    "hash": "119249485358382748810605463466849087024"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "566750399319277638018298142451694052268"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "749669097440486421611829902922478402313"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<u8> as ops::bit::Not>::not",
    "hash": "1257042276621991796918331889911962564988"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Add>::add",
    "hash": "104685169209857501406631621910515237495"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "170702870641466608806957026528173212755"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "134580920107080843986947812293623351609"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Div>::div",
    "hash": "14566419991465600169140695791332473150"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "956407463639708913716859707621199783798"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "2204474868414432145418022893121309112"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Mul>::mul",
    "hash": "1027034664087434818514021127369216831069"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "1318188770319688942317977493260822395749"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "1842586414308139013913261753029417512509"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Rem>::rem",
    "hash": "428653342669606935415944735167504015346"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "1361139047777302296417524035514060039723"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "164683786909709916353281311621243608001"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::Sub>::sub",
    "hash": "352709956799174483711916424898484203168"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "1512742291419579695016332502857394341559"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "1094125959013769400315952087317391009115"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand",
    "hash": "1346489037763894503613771625564478665532"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "17743567027378484110581256771774274460"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "128908543082797273899224961764846943445"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor",
    "hash": "971891996251073139213257805132198985672"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "64137976385305849052135626651364021887"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1681290815024565391017000397885239283526"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1162166907282192275015982601191018971247"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "105100086421558312911380685058822741578"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1010730049889362927713759818847765523442"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "<num::saturating::Saturating<usize> as ops::bit::Not>::not",
    "hash": "1378640260086517015312815096029558556123"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::abs",
    "hash": "364138134989647014012771429460532053219"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_ones",
    "hash": "7203757137184782331010392795337087597"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::count_zeros",
    "hash": "11407435597812417188661362728403321904"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_be",
    "hash": "133033325573974789241084813375487972672"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::from_le",
    "hash": "160112810113537832184921455364332914769"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_negative",
    "hash": "894274575905493937717266535477843844270"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::is_positive",
    "hash": "15682372467270919285709051605172002231"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::leading_zeros",
    "hash": "1735382625906233971415727851593527651250"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::pow",
    "hash": "137862541587240886325074521621205247912"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::reverse_bits",
    "hash": "8887608247538729977821160087685610723"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_left",
    "hash": "64000911179024882451390218053630698825"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::rotate_right",
    "hash": "1669200868144936263613480777966394959161"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::signum",
    "hash": "44086567945080959687878003271865511102"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::swap_bytes",
    "hash": "25484472654171883548716343534181530951"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_be",
    "hash": "721635170575755303217956565804975847874"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::to_le",
    "hash": "84912359273246835569214743178321392040"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i128>::trailing_zeros",
    "hash": "1483547385644826823717704971212803812777"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::abs",
    "hash": "62525994785705467921924051197334776777"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_ones",
    "hash": "27785504093131866859554472071043886962"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::count_zeros",
    "hash": "62420463102849089462485940432871204035"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_be",
    "hash": "26485667379200385697668676668762126572"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::from_le",
    "hash": "64033844863849778464116093537962311948"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_negative",
    "hash": "1743740335066284297110386388185049869417"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::is_positive",
    "hash": "120169010321779744741231362766622515570"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::leading_zeros",
    "hash": "4733434066812918472119491912807724220"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::pow",
    "hash": "1730383808701241715715598720861032439979"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::reverse_bits",
    "hash": "144908536713562194899492752584952856462"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_left",
    "hash": "526549217775071664315382622681251326244"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::rotate_right",
    "hash": "117000040402900418115677180396905517799"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::signum",
    "hash": "624035217685109141915260506421603382454"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::swap_bytes",
    "hash": "299557086493235771216638147141489586431"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_be",
    "hash": "292221324554243402714352985858317655298"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::to_le",
    "hash": "1068153725858347169917650993271656880332"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i16>::trailing_zeros",
    "hash": "26651929018693284388148355750026867629"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::abs",
    "hash": "1142294932495029048610893927361805659157"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_ones",
    "hash": "149185644661457191355489095850968752678"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::count_zeros",
    "hash": "1823304389799612738213976947125874293014"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_be",
    "hash": "61128447432914448003737620319205205079"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::from_le",
    "hash": "159456977549393678944612652653041799602"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_negative",
    "hash": "4064981232113178699277728974615500440"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::is_positive",
    "hash": "60360470036441257345168258919240216899"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::leading_zeros",
    "hash": "304298235886787037813494242631791369099"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::pow",
    "hash": "1463295182324227328215038286755296098196"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::reverse_bits",
    "hash": "368857664449604693810519927489836576640"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_left",
    "hash": "151246079563572010518249163253364666003"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::rotate_right",
    "hash": "109763199312256352157548270987638352469"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::signum",
    "hash": "32299522432153575377504351235281100024"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::swap_bytes",
    "hash": "58289998943326064366983040532034236028"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_be",
    "hash": "1448087722035554488015267469896925047960"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::to_le",
    "hash": "156072127056883179424700716253658749646"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i32>::trailing_zeros",
    "hash": "1187534315710139428817303922773204460026"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::abs",
    "hash": "138829468384748299992405714333924734356"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_ones",
    "hash": "74477527603854830992963970429214878163"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::count_zeros",
    "hash": "120179823700848661715784721827518870854"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_be",
    "hash": "83447992794238776802193680811890075015"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::from_le",
    "hash": "44523794408186428021890301291246128193"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_negative",
    "hash": "716024253423312821614759789296221268746"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::is_positive",
    "hash": "530991919568961281114385124908892687357"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::leading_zeros",
    "hash": "1465914463741245843714810961752887194560"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::pow",
    "hash": "135069177603291132724493900066718087239"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::reverse_bits",
    "hash": "1244672130822093729415440895556793230888"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_left",
    "hash": "178511295632542986345971860685341101161"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::rotate_right",
    "hash": "15120536334837627963555295076675373462"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::signum",
    "hash": "1008311006277941068311071242126882327055"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::swap_bytes",
    "hash": "3501669612902624409169119645794641582"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_be",
    "hash": "762591521891034953610047325337777819665"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::to_le",
    "hash": "868714447200577780417537644770122940596"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i64>::trailing_zeros",
    "hash": "471557747326402324116695678105795340032"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::abs",
    "hash": "1275902962031206368415608149980396316323"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_ones",
    "hash": "1603724976086309676813334238448219278281"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::count_zeros",
    "hash": "1559095689763857367211997001842632318690"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_be",
    "hash": "981458067718909194011722868388059445825"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::from_le",
    "hash": "15138753470067122513264246719720911186"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_negative",
    "hash": "1806459352857560425015245322897672301484"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::is_positive",
    "hash": "16269214793367893211709893862016760817"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::leading_zeros",
    "hash": "1350500791128977597814707651011277796231"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::pow",
    "hash": "125142830221703432627514888271390341877"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::reverse_bits",
    "hash": "1188970932393480750416724167747216475575"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_left",
    "hash": "56085375034780202516578453208497404485"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::rotate_right",
    "hash": "76057714531883414898592495092913856458"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::signum",
    "hash": "42936746424864014834236078247027958443"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::swap_bytes",
    "hash": "1384070306096750384413277526758201433324"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_be",
    "hash": "154730588090510247627336334367727824154"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::to_le",
    "hash": "27933438550513748642969553485206333285"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<i8>::trailing_zeros",
    "hash": "1099587130389995617016298626584268653988"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::abs",
    "hash": "366496743455614261617299908168806015065"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_ones",
    "hash": "1130960632821951807011723033665867302324"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::count_zeros",
    "hash": "1586716946825225957015437645317780790219"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_be",
    "hash": "136842178241584779719952054293338306803"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::from_le",
    "hash": "122432978820059077225283090735457382466"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_negative",
    "hash": "1548158123914867047918446297298911160308"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::is_positive",
    "hash": "181078315634873586086689409454536683314"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::leading_zeros",
    "hash": "1000429888937974367310117312658686165023"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::pow",
    "hash": "741879348453068701415614538981620977693"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::reverse_bits",
    "hash": "1750930879198763766911783168677176872454"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_left",
    "hash": "138403991078052430622031348024619044403"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::rotate_right",
    "hash": "87473473881622933901003103208761341867"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::signum",
    "hash": "1560044306899821178413076585454162611354"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::swap_bytes",
    "hash": "79277810234223546951757790058713976830"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_be",
    "hash": "104435842833766295261279402311639021629"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::to_le",
    "hash": "279786308984965585917449929100349743194"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<isize>::trailing_zeros",
    "hash": "1797547548162218516813505331279292121880"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_ones",
    "hash": "72887388788711598866607807984635280379"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::count_zeros",
    "hash": "54544740118033492902243182691071519135"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_be",
    "hash": "17593100495479627584903479907272577475"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::from_le",
    "hash": "1786241867911346832613768278740048062358"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::is_power_of_two",
    "hash": "82542279992897543992923164594321985274"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::leading_zeros",
    "hash": "333288057803150585518088040249502385496"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::pow",
    "hash": "35437637997092381714759662783312332816"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::reverse_bits",
    "hash": "106890174977391626058766503153713322703"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_left",
    "hash": "36982565098845439761582223745958638288"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::rotate_right",
    "hash": "1539867941359238335012482008319344839256"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::swap_bytes",
    "hash": "17770889965047944306172571898546276634"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_be",
    "hash": "898915912325331307815057433584757376226"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::to_le",
    "hash": "184004082753549264143811571143595087158"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u128>::trailing_zeros",
    "hash": "203014687547298095318172819582482374338"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_ones",
    "hash": "16379756233930946838135252107297670268"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::count_zeros",
    "hash": "34588680486588312378401356319307980096"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_be",
    "hash": "1281358565573191153110081840808904663891"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::from_le",
    "hash": "496204392382168135416028161747310290346"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::is_power_of_two",
    "hash": "674079464333639065110535544887782866737"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::leading_zeros",
    "hash": "638646842241302469314738644363750578930"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::pow",
    "hash": "159753916677093177015899838235133073317"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::reverse_bits",
    "hash": "30623794936625291998989493842054633843"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_left",
    "hash": "72721968539790133108912232652017094708"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::rotate_right",
    "hash": "10992966416979627772952385382554377729"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::swap_bytes",
    "hash": "27297390066074381956752366480686979884"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_be",
    "hash": "722424779451839189611618567592992304914"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::to_le",
    "hash": "47929981700500741343742026200949023304"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u16>::trailing_zeros",
    "hash": "157243262262032366325857274083470157863"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_ones",
    "hash": "334306086043279363412468311637407888659"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::count_zeros",
    "hash": "653851706538986384712211074449682691653"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_be",
    "hash": "16297474565546560864984270970006558884"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::from_le",
    "hash": "314048226781681863215090497957842211790"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::is_power_of_two",
    "hash": "6373087583251726531413820919490756213"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::leading_zeros",
    "hash": "815877370697246151710353032361117148356"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::pow",
    "hash": "165044710984121056293027894729644989369"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::reverse_bits",
    "hash": "1245918068063825643715213431371960443670"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_left",
    "hash": "10644255878670673657551076904868409530"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::rotate_right",
    "hash": "165545948784460617757521046696631736836"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::swap_bytes",
    "hash": "110589712975120299939771922729652786491"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_be",
    "hash": "401936605092494377115968185784256226258"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::to_le",
    "hash": "32219839291352087501622893561546218111"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u32>::trailing_zeros",
    "hash": "1538869145084669959818248575752889309469"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_ones",
    "hash": "5299807862629005487440315736425762885"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::count_zeros",
    "hash": "744442025257106829916076225032573731894"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_be",
    "hash": "100682148225625733411951644481913797229"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::from_le",
    "hash": "39018783039713770928979804055531503578"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::is_power_of_two",
    "hash": "813222073668438641811219192962439824836"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::leading_zeros",
    "hash": "7446870512762749708404861762818693043"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::pow",
    "hash": "4978850893680083275768664868390073950"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::reverse_bits",
    "hash": "138317912307865077316083177251185168047"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_left",
    "hash": "1511195857206566043815018607932784407320"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::rotate_right",
    "hash": "1341462975204095853112554224049543999055"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::swap_bytes",
    "hash": "292147784396727358010227911273176912932"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_be",
    "hash": "1831939392825832787314660791596896615169"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::to_le",
    "hash": "51170813642417881212738927820649370582"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u64>::trailing_zeros",
    "hash": "91019563713456763981888114054058129841"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_ones",
    "hash": "942521761697041235315820726431603234925"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::count_zeros",
    "hash": "9359095925159509642643219587793835085"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_be",
    "hash": "87998826667668890437428929918906985854"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::from_le",
    "hash": "34283954785216592895300642250183042487"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::is_power_of_two",
    "hash": "96923586351738724431513793200937125007"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::leading_zeros",
    "hash": "18376386820496769992628738907684844858"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::pow",
    "hash": "848152763073169695710273986829840585571"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::reverse_bits",
    "hash": "100831597472053064457929838670524939382"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_left",
    "hash": "977088940654590971913111968157219807862"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::rotate_right",
    "hash": "1014404831802056354715709086389533024573"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::swap_bytes",
    "hash": "141060941667647678979723831541431658508"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_be",
    "hash": "20263814162069658588794618286183631389"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::to_le",
    "hash": "2531112864860195489265806258793326064"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<u8>::trailing_zeros",
    "hash": "863474272104127171814462600975644188916"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_ones",
    "hash": "6718009151990741359232495985676122546"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::count_zeros",
    "hash": "76212236488165699576342166411808149902"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_be",
    "hash": "80594771927676205508884051906611479545"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::from_le",
    "hash": "384641840883074044816368818983830181920"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::is_power_of_two",
    "hash": "450572426012752057313082031745249404032"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::leading_zeros",
    "hash": "139556455483297226602726051700455744989"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::pow",
    "hash": "1677158748520746157217808250059198703821"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::reverse_bits",
    "hash": "166954386191987424611087430922631261510"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_left",
    "hash": "115624760718612983359929293834940081126"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::rotate_right",
    "hash": "1618334698745516346911670145163178362750"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::swap_bytes",
    "hash": "1200624280562853398014851885627664295449"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_be",
    "hash": "8489437689134502489417215996004759642"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::to_le",
    "hash": "25892794010636157176655167668574968068"
  },
  {
    "file": "core/src/num/saturating.rs",
    "func": "num::saturating::Saturating::<usize>::trailing_zeros",
    "hash": "1666796930882959642311742177672334220211"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::abs_diff",
    "hash": "8205611658418881782418078521797742313"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::bit_width",
    "hash": "1028220068891522454912224823523080560822"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::borrowing_sub",
    "hash": "446627074920667959317418649128566226089"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_add",
    "hash": "1224585283918280118612483150844333682173"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul",
    "hash": "140065049226000009569458716053452573607"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::carrying_mul_add",
    "hash": "55459946676697199316953442558495147767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::cast_signed",
    "hash": "1167346519344456297216786463048802225902"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add",
    "hash": "94345890054390912942080090646274358948"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_add_signed",
    "hash": "1724470387938776306912528228086342458186"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div",
    "hash": "88205901578003087873460340128919924294"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_div_euclid",
    "hash": "113041746999815051125603367274038934587"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_exact_div",
    "hash": "1317812791017672814114254630155763369523"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog",
    "hash": "93080027419369324306884489392379959742"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog10",
    "hash": "97608061915812850312306338878487494528"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_ilog2",
    "hash": "1065940829823300329712273575210879293723"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_mul",
    "hash": "70930246469402654723259769220946599372"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_neg",
    "hash": "158443781630394315734771457402475994718"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_multiple_of",
    "hash": "135516727501100074124038505829535529434"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_next_power_of_two",
    "hash": "974228908561462362313357098600721842592"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_pow",
    "hash": "105684333039270543275917717990640721510"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem",
    "hash": "28257528077689786044599779589822355508"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_rem_euclid",
    "hash": "1693059359107519313015884514314667688540"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shl",
    "hash": "427294911010966764416534174155358446268"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_shr",
    "hash": "456445363359717842218337716591613025960"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_signed_diff",
    "hash": "161834709931318796115902940405649225775"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub",
    "hash": "59110390573043016114980708726990850558"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::checked_sub_signed",
    "hash": "1054033154778995323010758243898607090761"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_ones",
    "hash": "956928717404701697615463129097751532499"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::count_zeros",
    "hash": "1210427484855825904456204883955602370"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_ceil",
    "hash": "131779795994824897712402689124588089784"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_euclid",
    "hash": "725844058504328031213796412976775347672"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::div_floor",
    "hash": "921839469890931412413938276583822807374"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::exact_div",
    "hash": "1235388868858325891716975649631477014537"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be",
    "hash": "424459824092204738012655495387851405167"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_be_bytes",
    "hash": "17602963390764990239131433657189452080"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le",
    "hash": "96099414887895387822455597970625342564"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_le_bytes",
    "hash": "587363710346500929113474662532544806165"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::from_ne_bytes",
    "hash": "1311503232860984216311122590225360473752"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog",
    "hash": "668347461882032498211806338313289478428"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog10",
    "hash": "828511717421666657912495255227191540217"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::ilog2",
    "hash": "4928699420050932491880280030285897814"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_multiple_of",
    "hash": "282000126812398138312492236029835418170"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::is_power_of_two",
    "hash": "739207906828862656213038392346372058985"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_highest_one",
    "hash": "112890933252414666175662173886242880969"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isolate_lowest_one",
    "hash": "178389247613444843267624036562423034834"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::isqrt",
    "hash": "141027627643278900143206590900245835328"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_ones",
    "hash": "158184203313619885767767391497413697908"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::leading_zeros",
    "hash": "101421918181811246787933436993424154814"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::max_value",
    "hash": "3364324957118372852459988961775433194"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::min_value",
    "hash": "160719982870598462598326640773807168742"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_multiple_of",
    "hash": "1027631597074971701910132882721936547652"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::next_power_of_two",
    "hash": "1583549998933289775816730796316022023347"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::one_less_than_next_power_of_two",
    "hash": "67704454512144748093636801554345205560"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add",
    "hash": "1208605615599180950514081582383021971250"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_add_signed",
    "hash": "130244937682885564221757978683664240228"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div",
    "hash": "46674472079973196586940207229020928548"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_div_euclid",
    "hash": "517471705009792479013679573899862183207"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_mul",
    "hash": "146842377021982089184851535270886503482"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_neg",
    "hash": "630306605522805622916367280718299577884"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_pow",
    "hash": "52963121120318334772663317601706435420"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem",
    "hash": "266604033945148665010953510188211747110"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_rem_euclid",
    "hash": "1566706951303309913810954438356859901974"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shl",
    "hash": "135395790994244206941724316015023482635"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_shr",
    "hash": "13469811438695549744915361120190639396"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub",
    "hash": "38592592726811822107241986239113215012"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::overflowing_sub_signed",
    "hash": "826711838593847313113546693054226116767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::pow",
    "hash": "436359218393220297115413089070654688767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rem_euclid",
    "hash": "120982234759872486328561941600271043516"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::reverse_bits",
    "hash": "16044299726681490881958058970041477082"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_left",
    "hash": "150966791549283974002157672473306959510"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::rotate_right",
    "hash": "157164935933040041642277582957326418552"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add",
    "hash": "164177311936629181029950888120727064543"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_add_signed",
    "hash": "17644903744358261177688748337512103709"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_div",
    "hash": "1749205783649004428412013649470449375164"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_mul",
    "hash": "164492429065040816881921705109500154169"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_pow",
    "hash": "1138224345081492641611435981311482190038"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub",
    "hash": "138962377294581468534634867371580402337"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::saturating_sub_signed",
    "hash": "55270351973807396395667314806102425647"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add",
    "hash": "180861551270621160710788455789027461289"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_add_signed",
    "hash": "1544376235671106259118232088420272371202"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div",
    "hash": "147335129021162460115721878055540478726"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_div_euclid",
    "hash": "6278390464903912712692955325976301931"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_mul",
    "hash": "1087623386284888803411517414378634552860"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_neg",
    "hash": "140784286274692037984967323516867931065"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_pow",
    "hash": "144410603996081957051939162431611644809"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem",
    "hash": "257570621816164654117707596462498277318"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_rem_euclid",
    "hash": "909190854224683549112148693851909323316"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shl",
    "hash": "18674194029564204509607168077400086365"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_shr",
    "hash": "273033384646399564711931260158744924930"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub",
    "hash": "321143390811184231412102464914539696385"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::strict_sub_signed",
    "hash": "1172579389053041971816681081203922355710"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::swap_bytes",
    "hash": "1737872917180290507616086720398606616498"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be",
    "hash": "332475908304557552410741463382786197663"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_be_bytes",
    "hash": "74989235585570455001372961742542686466"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le",
    "hash": "8707278522618881981016264089477750043"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_le_bytes",
    "hash": "121826844353495149567931911421214986163"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::to_ne_bytes",
    "hash": "440377177327389756215453783054991022987"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_ones",
    "hash": "123129217549322636079018720329842029729"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::trailing_zeros",
    "hash": "336143106875348419412897820812571806967"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shl",
    "hash": "1285288381360195148710761745176924996194"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unbounded_shr",
    "hash": "1261056690711569458617520578633706265343"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_add",
    "hash": "113655629328565293001156216976319527792"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor",
    "hash": "1455246441499570362384224150933623000"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_exact_div",
    "hash": "1254233893326141470512910656714640158216"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_mul",
    "hash": "151087817391286447156276782702837976109"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shl",
    "hash": "5141877339117146376342803229649035867"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_shr",
    "hash": "105672636227065398163151733251592193724"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::unchecked_sub",
    "hash": "146108608677289954285750735911595463471"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::widening_mul",
    "hash": "155113930821284124874581736801202841528"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add",
    "hash": "4968633032568571025633872624874540980"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_add_signed",
    "hash": "17521674804489622158270285090519900189"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div",
    "hash": "1633116615225254200717976993476078430462"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_div_euclid",
    "hash": "784302651139724602312545581450661111081"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_mul",
    "hash": "1057716551625323192313489189021834980052"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_neg",
    "hash": "1765275214499645986416738848561212419654"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_next_power_of_two",
    "hash": "161990761658617458416430518453861155896"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_pow",
    "hash": "927614912732068421016167449543219913693"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem",
    "hash": "123481047001191738995358788416240021052"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_rem_euclid",
    "hash": "478457572477689241812430621025899896806"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shl",
    "hash": "125384371705922922233758525272992918694"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_shr",
    "hash": "17300424209652326261033184463642604912"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub",
    "hash": "344802013334629585580534280656564714"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u128>::wrapping_sub_signed",
    "hash": "1657089291806959906516024222514068136680"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::abs_diff",
    "hash": "83692807348897457815306238197488956713"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::bit_width",
    "hash": "259987383861738007418020072469615523697"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::borrowing_sub",
    "hash": "852548101747756582418397196828793079257"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_add",
    "hash": "62857587841634740606595227693869836002"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul",
    "hash": "1012073622040048433214526347822147339596"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::carrying_mul_add",
    "hash": "170791198388087760013475838766633699196"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::cast_signed",
    "hash": "99471576205453845982806823710278957992"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add",
    "hash": "398666275572622611217285132105737247039"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_add_signed",
    "hash": "62598184112035420578711429410575743016"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div",
    "hash": "134005455662636102264792831770230892198"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_div_euclid",
    "hash": "65837553184990689285296400688935981953"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_exact_div",
    "hash": "104874368628109095452315200783825137539"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog",
    "hash": "1198987066192545549714477701698910299370"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog10",
    "hash": "21014430972000465645485126323673776809"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_ilog2",
    "hash": "58555372516028283295386445826019805797"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_mul",
    "hash": "751572342939418522216744035501366439629"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_neg",
    "hash": "237760546249565042510892937396243991767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_multiple_of",
    "hash": "1750534748225578791915251197054651760007"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_next_power_of_two",
    "hash": "751942064355415163211329008961290417788"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_pow",
    "hash": "167865601219246458981733501173464807161"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem",
    "hash": "157715788117375694501896009296255214949"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_rem_euclid",
    "hash": "8060636706225267108521466761819472496"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shl",
    "hash": "41636628101940061579528933347269053208"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_shr",
    "hash": "663852533912399585412261871043703033960"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_signed_diff",
    "hash": "866395306857843635117763156951808364070"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub",
    "hash": "1584553559400196410311024283529435103530"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::checked_sub_signed",
    "hash": "841907910674182461010436324724487416076"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_ones",
    "hash": "95217192221562645913879790108884789243"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::count_zeros",
    "hash": "182471303643957549088784003134398059196"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_ceil",
    "hash": "9072844581565686269396879525309475185"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_euclid",
    "hash": "1835178804640563563417041233575550033059"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::div_floor",
    "hash": "94804036297558500928474687892428056219"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::exact_div",
    "hash": "1273158054840145061213037930618535575969"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be",
    "hash": "669726615094928865510336294534640820227"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_be_bytes",
    "hash": "1653668728884220624210296110649775700070"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le",
    "hash": "110079139087465645393298538451985541876"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_le_bytes",
    "hash": "1877281372928193092718491690985462893"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::from_ne_bytes",
    "hash": "1662627807705053174036367849005613441"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog",
    "hash": "177623026177723703887190192432732430716"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog10",
    "hash": "1223077329144996805913024621835736426485"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::ilog2",
    "hash": "209238577690393204510346192494932276197"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_multiple_of",
    "hash": "170697672404073513161341662771763778861"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::is_power_of_two",
    "hash": "351166224271623290911475343944799969055"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_highest_one",
    "hash": "14536502443814273952800609763938406316"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isolate_lowest_one",
    "hash": "133066902714161304716680201748590182414"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::isqrt",
    "hash": "6048645219431210098838178604968363152"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_ones",
    "hash": "22755651721836952401998515553024355985"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::leading_zeros",
    "hash": "575051619409279249614185477604672920727"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::max_value",
    "hash": "103903154119321695011670900771694258943"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::min_value",
    "hash": "19757229639164883983516816277527014704"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_multiple_of",
    "hash": "1714996596898951919110978225477300025946"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::next_power_of_two",
    "hash": "1571242950380985365714316194749660533258"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::one_less_than_next_power_of_two",
    "hash": "51625012471628537611373384007986719832"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add",
    "hash": "16598817811543363425786638821061324298"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_add_signed",
    "hash": "106266576479059384049707886921841186523"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div",
    "hash": "890813850058734630117683322897113337065"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_div_euclid",
    "hash": "1133037438722979947714422140601437999092"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_mul",
    "hash": "650438832491062098110558903144681030076"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_neg",
    "hash": "140988051985850303715295022134944753546"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_pow",
    "hash": "53316594142796486141297563267269539568"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem",
    "hash": "5015882351346004525608957675491399925"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_rem_euclid",
    "hash": "166439171132240547529819907574154413645"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shl",
    "hash": "979368404401386438016127198865877275084"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_shr",
    "hash": "706849783313715069811992856229372411445"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub",
    "hash": "75419111242309224364986772126678634243"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::overflowing_sub_signed",
    "hash": "644519324267936365312058449003649577248"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::pow",
    "hash": "126532226577645924819927728450417238585"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rem_euclid",
    "hash": "1836662216393140459816154624688894294563"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::reverse_bits",
    "hash": "66790847323768913896786698729617831576"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_left",
    "hash": "347389729721486037814303011928927149866"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::rotate_right",
    "hash": "1316340079227930685015753528129029481694"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add",
    "hash": "1383313036482661596214725661674136601865"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_add_signed",
    "hash": "151383869530420272303359726275928622930"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_div",
    "hash": "176070273329024087859488564302247169742"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_mul",
    "hash": "1494790813747743222812475759910827547516"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_pow",
    "hash": "1798849198213280565495782229510392463"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub",
    "hash": "673120527584207150815237638233850765168"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::saturating_sub_signed",
    "hash": "80531634538155566756514106689860158904"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add",
    "hash": "1302859502380969226517535156821223072448"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_add_signed",
    "hash": "1773801748162753590916296809288320434342"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div",
    "hash": "66852342525994360893543390557710598068"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_div_euclid",
    "hash": "90099200089911872927654971557022249704"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_mul",
    "hash": "1072835998654180601913863321489208464334"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_neg",
    "hash": "638985639564555248913837773097797770574"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_pow",
    "hash": "1165163535212986117412257559503095187709"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem",
    "hash": "1676872744527927348514637563779061940619"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_rem_euclid",
    "hash": "915969423210343011214177838188918214824"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shl",
    "hash": "179077932813873144947802181182108764653"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_shr",
    "hash": "145250632701341084889991213808877406409"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub",
    "hash": "53607760166983236165563050188079796753"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::strict_sub_signed",
    "hash": "78119472779411769609346329873925626968"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::swap_bytes",
    "hash": "121694682360246027837520651753473947425"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be",
    "hash": "339245896833307296611382536449559877300"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_be_bytes",
    "hash": "1535196568495689623113137084410071256490"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le",
    "hash": "1123372627997494900617328572795129065934"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_le_bytes",
    "hash": "615684200125970556511335964074246259558"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::to_ne_bytes",
    "hash": "149422881154051878903499995527338953915"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_ones",
    "hash": "22685937495048152463502331442691174388"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::trailing_zeros",
    "hash": "945303084159180541213830696539704968677"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shl",
    "hash": "904486057493958093311346368000074084669"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unbounded_shr",
    "hash": "454120060316844486718089467351155715341"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_add",
    "hash": "5640012882000287061709586299229962606"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor",
    "hash": "1521551628876485259016160091184390383971"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_exact_div",
    "hash": "1480723289508042938868320012948958069"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_mul",
    "hash": "410244845069389196017656878775376727865"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shl",
    "hash": "11731384516080086756772953774896163323"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_shr",
    "hash": "1067620292656514645613197004851239854576"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::unchecked_sub",
    "hash": "854895169366331701213265391775547366314"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::widening_mul",
    "hash": "5162621355820841267398193173431326827"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add",
    "hash": "1753062261541307374710126575317140217654"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_add_signed",
    "hash": "1265780258737376212515650224309330369831"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div",
    "hash": "1046805818491362107217564814558405305817"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_div_euclid",
    "hash": "23823063098216285848178070100567657102"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_mul",
    "hash": "54495154366233430493984762044402640841"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_neg",
    "hash": "72220086775725187809192328419536318672"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_next_power_of_two",
    "hash": "17096043421202078227776072705392415513"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_pow",
    "hash": "528200321436592266615724120452033538030"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem",
    "hash": "65616559695906106515504231178822650549"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_rem_euclid",
    "hash": "297254040474706751514874209809641626942"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shl",
    "hash": "11349689317425765706771076748978676668"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_shr",
    "hash": "276854008733467126314601601888161371321"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub",
    "hash": "6197665740812925901026786287807804545"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u16>::wrapping_sub_signed",
    "hash": "952375425787474568911005451842873712662"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::abs_diff",
    "hash": "750419899689159788212140950498210577608"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::bit_width",
    "hash": "759058461752368536816153125302520992116"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::borrowing_sub",
    "hash": "114161829579658655608870661192534299235"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_add",
    "hash": "140893298767115182661245896930896850194"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul",
    "hash": "131935830002640312025512874083819497473"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::carrying_mul_add",
    "hash": "1617647378527201344017758341557833750175"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::cast_signed",
    "hash": "502636969221479742813859307241520652127"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add",
    "hash": "14836028589862753729987578780011771211"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_add_signed",
    "hash": "159313976975079630115776829381034667121"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div",
    "hash": "9482555562346509631364079560783185161"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_div_euclid",
    "hash": "331537987506235486718234522531101733537"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_exact_div",
    "hash": "71649136021222628211052122109861172882"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog",
    "hash": "51583177078058962016032615388366434234"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog10",
    "hash": "104898296719525216173862082747791185844"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_ilog2",
    "hash": "11253822876620884719425793548732863551"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_mul",
    "hash": "937755367632839978111178707907496562696"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_neg",
    "hash": "84130354086930171817174160128554422046"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_multiple_of",
    "hash": "555632473639616473810297615222312560506"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_next_power_of_two",
    "hash": "54467102951790053241496823325092153350"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_pow",
    "hash": "1554914145645756508613769402546464878924"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem",
    "hash": "76928333915334083926068077170153518321"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_rem_euclid",
    "hash": "1539795798045371296012420728296227054088"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shl",
    "hash": "1431339717141088172812122637888792816388"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_shr",
    "hash": "49348047141938766111255707935624587600"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_signed_diff",
    "hash": "79858101271929284271067553819961007955"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub",
    "hash": "471819069918561393846829198071946492"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::checked_sub_signed",
    "hash": "1245256762898111861513320069917739317077"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_ones",
    "hash": "62572693426796600687886546469475797474"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::count_zeros",
    "hash": "1083955044699050669615959905031928932590"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_ceil",
    "hash": "5757772638425685686618593310384229940"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_euclid",
    "hash": "36287033199833379891700233995817660860"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::div_floor",
    "hash": "137815826397670280305671405100058512128"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::exact_div",
    "hash": "893104929182386935013304601429473505580"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be",
    "hash": "104878787984274937586429109080970309877"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_be_bytes",
    "hash": "124594063997734719654279882457854381024"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le",
    "hash": "162924459384650215752306512375462558181"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_le_bytes",
    "hash": "167529119329997310399059360046833157871"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::from_ne_bytes",
    "hash": "1053186287808939294415497443313351758988"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog",
    "hash": "119986796076944954745739759588678438687"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog10",
    "hash": "69140127771030991984664810268781588379"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::ilog2",
    "hash": "143066513950984162859564936920622786527"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_multiple_of",
    "hash": "1622384749278477822817482129290407295794"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::is_power_of_two",
    "hash": "1844107061565279764411896631544201655674"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_highest_one",
    "hash": "34406122232208395915896779586846372977"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isolate_lowest_one",
    "hash": "102931306934069287425960474353744729914"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::isqrt",
    "hash": "405060073678412872310849862445223892767"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_ones",
    "hash": "76818070728014016523266432515745562776"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::leading_zeros",
    "hash": "1171540258194055275115654288636237375542"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::max_value",
    "hash": "436727313323828057212755282716354075952"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::min_value",
    "hash": "711395147697355351512963243547438976678"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_multiple_of",
    "hash": "1196941565461547510911048582966656549962"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::next_power_of_two",
    "hash": "1160280961069932412212375011975863840894"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::one_less_than_next_power_of_two",
    "hash": "1765996676547652770818249358909010016128"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add",
    "hash": "68950635737651694726682484577787079934"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_add_signed",
    "hash": "12846666303288614218151729294683489609"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div",
    "hash": "1777721726095787649615885504590431805982"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_div_euclid",
    "hash": "1387846708790986222710731340090976010091"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_mul",
    "hash": "1326097926007255138012292623179198072469"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_neg",
    "hash": "452323543446160321212079285210325936"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_pow",
    "hash": "1539023687717670642913446163577374851732"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem",
    "hash": "1615117358351681967716110435137213764234"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_rem_euclid",
    "hash": "1432497431497162145910414335290642221989"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shl",
    "hash": "574447021375690160311489866514231628009"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_shr",
    "hash": "90528240955803519177209227043807392087"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub",
    "hash": "162505127437015178501993505543577502698"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::overflowing_sub_signed",
    "hash": "138984054303273074795391736016846463045"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::pow",
    "hash": "64937569320230748712133871497521431064"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rem_euclid",
    "hash": "1415245109291167984114521070588275558418"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::reverse_bits",
    "hash": "12124018865493995552328797402583534669"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_left",
    "hash": "1675384313829105302112879855591565108165"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::rotate_right",
    "hash": "89805325170889356758335681307822783763"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add",
    "hash": "50920009649098268673049913501560644662"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_add_signed",
    "hash": "83821459605437787517974397697029395625"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_div",
    "hash": "91805185975573869729322142152707672483"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_mul",
    "hash": "111782846488804513825929832807948317749"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_pow",
    "hash": "124264850050262931154272846348122707325"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub",
    "hash": "169967956980261737747938429619594871402"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::saturating_sub_signed",
    "hash": "1768915048979099289111447292274798911550"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add",
    "hash": "1587548867733611012910950767008395321715"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_add_signed",
    "hash": "933089904625340042816874623502855584753"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div",
    "hash": "155237845494799235465129442184244161234"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_div_euclid",
    "hash": "788691171899610210614822084999369004522"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_mul",
    "hash": "589243455614159751310045650089464378816"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_neg",
    "hash": "184462730749357256528697480296033908650"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_pow",
    "hash": "1578988225208847871915077434957088095926"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem",
    "hash": "54770117905416799069957311291564861143"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_rem_euclid",
    "hash": "1241541555220433376414331627901582552959"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shl",
    "hash": "38883059925354067377603188614574678104"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_shr",
    "hash": "321426417767193740611684882040519984526"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub",
    "hash": "74949149226634222166883172420681370552"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::strict_sub_signed",
    "hash": "107628862815419660656169408744170093276"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::swap_bytes",
    "hash": "11105784368014587929271885574501934436"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be",
    "hash": "74592124981840780653604274199771170867"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_be_bytes",
    "hash": "1754194438780713214312884645125799811143"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le",
    "hash": "775866494223248815017661103555727214130"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_le_bytes",
    "hash": "6872834047565845640392407377344425589"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::to_ne_bytes",
    "hash": "555024601057239772112284036207046716070"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_ones",
    "hash": "21831128842757895779355348091757896873"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::trailing_zeros",
    "hash": "20972427286974567918293951777961626379"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shl",
    "hash": "60580153894596315064991679180465099170"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unbounded_shr",
    "hash": "1652098472176320264414176780203524966050"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_add",
    "hash": "163207147592027458367524202387724197565"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor",
    "hash": "1807394686972957109110722503658977894480"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_exact_div",
    "hash": "39181260907853393153326928441121678878"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_mul",
    "hash": "955832887543014166713587224258909789637"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shl",
    "hash": "1028114075884828672610085353880245757567"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_shr",
    "hash": "178701612031943768441162079873437723714"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::unchecked_sub",
    "hash": "48301667835223229412124414566001062221"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::widening_mul",
    "hash": "3619696554235265267981900816983076089"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add",
    "hash": "10826175596494871723239759172559679827"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_add_signed",
    "hash": "164251616813934742621205375238645297429"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div",
    "hash": "16378015686020402848907334043544452470"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_div_euclid",
    "hash": "1383415817484483967515291997875127994966"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_mul",
    "hash": "15987779680532393818292627761464344950"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_neg",
    "hash": "22882989571086843615269441293554103811"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_next_power_of_two",
    "hash": "48028722755862220129856769422882654056"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_pow",
    "hash": "154115067276126997549912300526975941706"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem",
    "hash": "896893432244394485613550205677659618417"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_rem_euclid",
    "hash": "34150147964619313739133981561702198553"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shl",
    "hash": "469888056015547302515922240684927321934"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_shr",
    "hash": "16957536516027940656275595420952276476"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub",
    "hash": "110513348024619474212951383528292135837"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u32>::wrapping_sub_signed",
    "hash": "139841598275244723147255936302035051723"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::abs_diff",
    "hash": "133507267599985355971344092959229022796"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::bit_width",
    "hash": "56769273831840208699088645955984725591"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::borrowing_sub",
    "hash": "83332590908966229612285172669044162671"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_add",
    "hash": "237996009043614348613278975401689043367"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul",
    "hash": "1772693480565684713813484515659906842732"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::carrying_mul_add",
    "hash": "1086994736016473126716937399607271467153"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::cast_signed",
    "hash": "136022648035917886124100859912086000601"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add",
    "hash": "1117849702707286388212757047416730350709"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_add_signed",
    "hash": "1767991864294950327212857471317065051404"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div",
    "hash": "41417253434667252512290635176349536797"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_div_euclid",
    "hash": "1143414949608687517817373189781305688344"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_exact_div",
    "hash": "1414833246735145835815895955093264145040"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog",
    "hash": "30272828665354263376776635918289794411"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog10",
    "hash": "14009648634256645788947775003865951733"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_ilog2",
    "hash": "73167906491770615592079379328745554576"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_mul",
    "hash": "744055980276127864110428667592004982693"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_neg",
    "hash": "1696588733181262554214862404380578829725"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_multiple_of",
    "hash": "122977076039322617133435827804121869595"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_next_power_of_two",
    "hash": "158954596116495629955525088657264595709"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_pow",
    "hash": "116286109752314448796799513968190529601"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem",
    "hash": "169745248972409447743128669298518098221"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_rem_euclid",
    "hash": "49855269133806317546825315605521584932"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shl",
    "hash": "51940079074590737717056292248736369428"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_shr",
    "hash": "88538640778214012117484909379041894968"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_signed_diff",
    "hash": "58955417396776669933481563856121604463"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub",
    "hash": "145520853434083642243278416098474574304"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::checked_sub_signed",
    "hash": "350797033583318219115842439908725543419"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_ones",
    "hash": "60095214938875328207586567507239702357"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::count_zeros",
    "hash": "170253869742787764992472126703524831642"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_ceil",
    "hash": "54166242381964093354756043702390108859"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_euclid",
    "hash": "117699334046159251441419758492208901438"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::div_floor",
    "hash": "18768486572321601591881074991828839556"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::exact_div",
    "hash": "33329476195729153512047001196005011476"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be",
    "hash": "131617566442437222786601299540795199406"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_be_bytes",
    "hash": "1113646731989002017811859960457357600736"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le",
    "hash": "157571640221795760613157801753947964681"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_le_bytes",
    "hash": "320400028118640551512557548932552158528"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::from_ne_bytes",
    "hash": "35640805812201374075586379806987747913"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog",
    "hash": "70401227191567035715206439447894219415"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog10",
    "hash": "105516494938429690798985439043610001874"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::ilog2",
    "hash": "448942286841664870814308902551601731979"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_multiple_of",
    "hash": "688727546592482145714308578699138432074"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::is_power_of_two",
    "hash": "1427395369074857665714630013504932679391"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_highest_one",
    "hash": "7057760812595476322893579584906769384"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isolate_lowest_one",
    "hash": "945211677430544028818027880238302374692"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::isqrt",
    "hash": "116111145000761952711675027278461375468"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_ones",
    "hash": "68971989787185484714664239907034210454"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::leading_zeros",
    "hash": "64854678959196071383631292073228654272"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::max_value",
    "hash": "137887201036701262877824059144731829056"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::min_value",
    "hash": "687692978325399746102842831628427838"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_multiple_of",
    "hash": "1138752960594517352411114104666441631115"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::next_power_of_two",
    "hash": "499170225968027284616870797828234881822"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::one_less_than_next_power_of_two",
    "hash": "17408815325386541566644314890048835799"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add",
    "hash": "4050634362821374511564857309986915017"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_add_signed",
    "hash": "1269028153036074416216537261193213437386"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div",
    "hash": "1148382824401705320412141947870363498435"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_div_euclid",
    "hash": "630937942757288412016071639388732013556"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_mul",
    "hash": "127904316004135460343669902480779952771"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_neg",
    "hash": "155230774566354484815043385987420400395"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_pow",
    "hash": "1000552685242090233115522946018887104710"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem",
    "hash": "1575337903763541545617476919014885484903"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_rem_euclid",
    "hash": "84300444018629115578645233398023249828"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shl",
    "hash": "216824272909398949114246112845954509565"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_shr",
    "hash": "991382040056880696214361112311690178277"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub",
    "hash": "1586814766835311767814006658424054169058"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::overflowing_sub_signed",
    "hash": "100607592582223770073012204951773032796"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::pow",
    "hash": "1260309197400411175217478281088289780615"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rem_euclid",
    "hash": "775050549807520091510101889709908347680"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::reverse_bits",
    "hash": "598126107161184561314999530001958857842"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_left",
    "hash": "23906006188173563757716373626558092808"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::rotate_right",
    "hash": "63436217039870798012180698533085242130"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add",
    "hash": "1157764157240129845615096866878494173599"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_add_signed",
    "hash": "1486976854187154394711300598165883498629"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_div",
    "hash": "107641462761662240981641192786588224009"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_mul",
    "hash": "95340601882464588237162870363470348129"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_pow",
    "hash": "119624705306345037262862556141425949852"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub",
    "hash": "873674191618162271015144085663499543027"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::saturating_sub_signed",
    "hash": "3416004561802990777447943791890033769"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add",
    "hash": "217057829261164071815768553449372928543"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_add_signed",
    "hash": "14922678666008778323137216489952283853"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div",
    "hash": "108016670760087725987857648772840507989"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_div_euclid",
    "hash": "61863529727235914973211031656646503900"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_mul",
    "hash": "149730540987346306775334326449254903014"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_neg",
    "hash": "37970931613611024154517706445704485518"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_pow",
    "hash": "114680744317420474176159768771227114195"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem",
    "hash": "183634969161530090388417109166771441805"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_rem_euclid",
    "hash": "827900705357518277312280842811622976290"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shl",
    "hash": "91113841448041292052330345816444481289"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_shr",
    "hash": "92160627050044596315303523036691417624"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub",
    "hash": "796915372407977583817951905694340519942"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::strict_sub_signed",
    "hash": "246078231791903357212956020916684649785"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::swap_bytes",
    "hash": "49093707371342096113425255532447174097"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be",
    "hash": "556693617932620994312085264458218294192"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_be_bytes",
    "hash": "57951952318436060477341215543680499173"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le",
    "hash": "8632555374471368229130477103753470889"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_le_bytes",
    "hash": "6175307375394872290424572756959555687"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::to_ne_bytes",
    "hash": "123454794600465325455269760236804960088"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_ones",
    "hash": "1287428204115188083014127823730954343099"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::trailing_zeros",
    "hash": "134231185502018144196063187264391612185"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shl",
    "hash": "26868353022883386207663402505816284891"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unbounded_shr",
    "hash": "182718519628137829244734988746395491765"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_add",
    "hash": "151589375550339939686858061986315733374"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor",
    "hash": "5111430916082749917138823328609248415"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_exact_div",
    "hash": "161165040292950389092014580776877046060"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_mul",
    "hash": "134922938774460689246939093461756052693"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shl",
    "hash": "1455288163381695124114103562857689279526"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_shr",
    "hash": "127954675955970289558384440450508905183"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::unchecked_sub",
    "hash": "64140608800443639715360269495286037961"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::widening_mul",
    "hash": "1395858969081908730412292156218566770818"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add",
    "hash": "15101940947910745231113304682088010787"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_add_signed",
    "hash": "139551098516294088438632102690536848612"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div",
    "hash": "571748804141559501918006572761179162374"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_div_euclid",
    "hash": "99147492472259603455437033220866125634"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_mul",
    "hash": "662194221926241883713221083264103596258"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_neg",
    "hash": "6611449795496733848832280597817016744"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_next_power_of_two",
    "hash": "320192883710158116117386471066438966639"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_pow",
    "hash": "141164739205067592659305324492945588215"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem",
    "hash": "109121160005355197056249483966080281137"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_rem_euclid",
    "hash": "1649113315093012581917143865513621032829"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shl",
    "hash": "47799534173923338979978481534850445502"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_shr",
    "hash": "1119174443876267629017398739882885783058"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub",
    "hash": "10725819654976480007228278423626771381"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u64>::wrapping_sub_signed",
    "hash": "1653923870383497504415519529760399901034"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::abs_diff",
    "hash": "116257829072070163211134735143843488849"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::bit_width",
    "hash": "153754775778139735813146858266587881016"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::borrowing_sub",
    "hash": "67180817573376263773883997451506546595"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_add",
    "hash": "1577920848887388758711394797741436386277"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul",
    "hash": "2522549432410477918995252170099251047"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::carrying_mul_add",
    "hash": "316489832321644113017715422755675102881"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::cast_signed",
    "hash": "63962301878703834142536016113788362759"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add",
    "hash": "34172667693543367724625847927099621331"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_add_signed",
    "hash": "794751281612117102713593307687768318105"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div",
    "hash": "131630734304481421276304237775276831695"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_div_euclid",
    "hash": "1111505541966837313718129814176557127167"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_exact_div",
    "hash": "5528447638416367166597225160763286889"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog",
    "hash": "71810440941254118818877382208913180992"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog10",
    "hash": "225017289039769845614324324570681095896"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_ilog2",
    "hash": "1685940058228592171117924375566995165544"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_mul",
    "hash": "163574909971583273747746081678457856966"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_neg",
    "hash": "157301678958639084089587171778249898217"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_multiple_of",
    "hash": "865890462280113595415583885958344347530"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_next_power_of_two",
    "hash": "617971100397821506210940830757711064178"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_pow",
    "hash": "424326351008280682816125115152529641302"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem",
    "hash": "142145240605601136913509780923155044890"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_rem_euclid",
    "hash": "223514225799885699517756306496802591323"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shl",
    "hash": "394016606998980306917827737929998443391"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_shr",
    "hash": "844389479138676246010794761847755286019"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_signed_diff",
    "hash": "200458135911952392515896500652725241601"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub",
    "hash": "1538241170257866676014559702885987449161"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::checked_sub_signed",
    "hash": "460786922782871862412721858080979487671"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_ones",
    "hash": "159606739950306547711150244187437749024"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::count_zeros",
    "hash": "9288921165868079307478327040159185844"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_ceil",
    "hash": "126563719336337432372147004329439064009"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_euclid",
    "hash": "90239141759935706176587825914448648470"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::div_floor",
    "hash": "17999409917194031516699525277784457765"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::exact_div",
    "hash": "312619158872042197011305463047903972673"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be",
    "hash": "994548331429094181012442477489471265533"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_be_bytes",
    "hash": "836225134656478187316856885808713424043"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le",
    "hash": "122283128724752009896841675739942755641"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_le_bytes",
    "hash": "210702572001280092818369068685450091218"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::from_ne_bytes",
    "hash": "132622399964446394076321974520152918622"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog",
    "hash": "508585872724349626514227450593906364861"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog10",
    "hash": "1217115382502995050112667448092445022867"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::ilog2",
    "hash": "74205808131359599215905663232378764515"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_multiple_of",
    "hash": "95901748170823273089054665423110408099"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::is_power_of_two",
    "hash": "113117853877897795579382897801075494348"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_highest_one",
    "hash": "750802523553446917216867114992260394668"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isolate_lowest_one",
    "hash": "56956291877959736406553127457525440807"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::isqrt",
    "hash": "1654936098969287290916611751462768484896"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_ones",
    "hash": "23540248468083293009277335010277031196"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::leading_zeros",
    "hash": "11477983644653466857870889447808927307"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::max_value",
    "hash": "144288392834611046201931777840876512742"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::min_value",
    "hash": "136063714487754404394903206059702626768"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_multiple_of",
    "hash": "934719772078608524217628310181515704320"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::next_power_of_two",
    "hash": "77801623137097651754861013950676145793"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::one_less_than_next_power_of_two",
    "hash": "10718235925251664398432371219539859334"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add",
    "hash": "1756474112745710989412925349100198984871"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_add_signed",
    "hash": "164785212660281489108656385043142136651"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div",
    "hash": "1450629323636960587917774542105602440754"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_div_euclid",
    "hash": "292213311614909494516575071304431940622"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_mul",
    "hash": "130736193316342044769865508657720632023"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_neg",
    "hash": "1837033043808600011918353832954621799332"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_pow",
    "hash": "784841488313035436213914536853035078209"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem",
    "hash": "892983773126845301512169130641710109414"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_rem_euclid",
    "hash": "582962615064994681411985274701574801581"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shl",
    "hash": "1670981082212463862513958079523766404098"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_shr",
    "hash": "840487471375627481016332974133366637263"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub",
    "hash": "702785378685332026312097508615508213034"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::overflowing_sub_signed",
    "hash": "1233956789134675451410665349524065867367"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::pow",
    "hash": "35020916941553669771736104566811930492"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rem_euclid",
    "hash": "510849805278763464713671663378693488249"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::reverse_bits",
    "hash": "18904545565030096229026510474189130982"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_left",
    "hash": "152097273611595075382972745190631142480"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::rotate_right",
    "hash": "864984778537904100510931065665592651989"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add",
    "hash": "170099377740402969616361467355498765568"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_add_signed",
    "hash": "115034516177467586309067710603872321519"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_div",
    "hash": "95846906242942828657359324459647794958"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_mul",
    "hash": "78225697954814548875853604783099463566"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_pow",
    "hash": "51660617844064639964097768343342197918"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub",
    "hash": "153853234381688619701234060583498650458"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::saturating_sub_signed",
    "hash": "869553382074965496818264705554212837015"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add",
    "hash": "57713654987591150017902030396591009877"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_add_signed",
    "hash": "48490900142586982811615672275288172101"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div",
    "hash": "56171058979901427503849282235315895086"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_div_euclid",
    "hash": "350244904692229583818244365649883730991"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_mul",
    "hash": "745039161225687920413639000461944332877"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_neg",
    "hash": "58962307152895812712207821842286303780"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_pow",
    "hash": "1431426821530007328111478293466414099572"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem",
    "hash": "1771388324461921383816092247781978199269"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_rem_euclid",
    "hash": "108346509829206135335544717237298023554"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shl",
    "hash": "206023555697675166312172828656930070352"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_shr",
    "hash": "35765708363201831688549519892563718518"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub",
    "hash": "32407697211472048718565466925897667234"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::strict_sub_signed",
    "hash": "96043515090664454648455472542322624522"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::swap_bytes",
    "hash": "163672358610984412074950998877454532525"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be",
    "hash": "181261635557419815237156496194861011651"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_be_bytes",
    "hash": "123187201185395606077722040798386444920"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le",
    "hash": "85704365798705222858495379488177514140"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_le_bytes",
    "hash": "1081159887707979791610172275606431432"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::to_ne_bytes",
    "hash": "423745212941716271380653297399744794"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_ones",
    "hash": "87067971351076761876770769512413699497"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::trailing_zeros",
    "hash": "1428136050278513988717611590669066250849"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shl",
    "hash": "32791119192681468428405758243962478645"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unbounded_shr",
    "hash": "781569533716819662311222642898262128776"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_add",
    "hash": "122430910459215970352746696058140085715"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor",
    "hash": "78289083098032129749597521167763450714"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_exact_div",
    "hash": "35542204226022018044065275513247090577"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_mul",
    "hash": "83562849679691582323823244639765965236"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shl",
    "hash": "304864179788135859317835925451308675406"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_shr",
    "hash": "79222755477141090333538151527088981330"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::unchecked_sub",
    "hash": "42152727014430304027840746824601844214"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::widening_mul",
    "hash": "5808613090166045225174360899214519391"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add",
    "hash": "685448927916644732015829461252906090843"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_add_signed",
    "hash": "166485937907267392804219702551346275130"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div",
    "hash": "1304946619385699898817092108045940002059"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_div_euclid",
    "hash": "32817317331294635664170566584732864547"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_mul",
    "hash": "747431531972239294117469015077760786238"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_neg",
    "hash": "425147690744302339018057428490429018300"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_next_power_of_two",
    "hash": "1678458023032714603613368791870433038885"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_pow",
    "hash": "31329450877186983996804412490996781447"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem",
    "hash": "163244455442229143756151196928299762796"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_rem_euclid",
    "hash": "6308254285785232124491538767942547085"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shl",
    "hash": "1788465863228803626712414703206723029569"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_shr",
    "hash": "339712636620172062111372087698808626949"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub",
    "hash": "1417704198603023920111417478335799713782"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl u8>::wrapping_sub_signed",
    "hash": "90391004227394940556051046200387017740"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::abs_diff",
    "hash": "1053439931045595970815214834277298710764"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::bit_width",
    "hash": "145579159840091059571701218790713952789"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::borrowing_sub",
    "hash": "88273445991618867766970557812695856850"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_add",
    "hash": "18149596250086157918452449865978341386"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul",
    "hash": "28257778735640474848252440591274567424"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::carrying_mul_add",
    "hash": "272143324068881828013110396975318408445"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::cast_signed",
    "hash": "49219713377808074043635619694531737919"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add",
    "hash": "159283199037882798367053870095265771298"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_add_signed",
    "hash": "633523308501438810111527331861818767125"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div",
    "hash": "1432435159649688687617165421138146557249"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_div_euclid",
    "hash": "5079581630862920289243308151985334362"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_exact_div",
    "hash": "1584866403917077164618191602101267139322"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog",
    "hash": "17801616401799025016002311660589090"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog10",
    "hash": "1118038641090183672312319723340997454163"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_ilog2",
    "hash": "1798310246619505747913153280683328228513"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_mul",
    "hash": "1117948698139035671113972809354205772109"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_neg",
    "hash": "425787626697689870312900751893014759414"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_multiple_of",
    "hash": "24604247623058028582623320280147067336"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_next_power_of_two",
    "hash": "12083394630461227301778421182195205184"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_pow",
    "hash": "664400132488114375713457259323697464396"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem",
    "hash": "82789118935220147271980840748346536491"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_rem_euclid",
    "hash": "1180293482155837174695107328887104818"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shl",
    "hash": "163834099577720099939594072624650645175"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_shr",
    "hash": "2695868380441312092616077969925293173"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_signed_diff",
    "hash": "125433618613139717044880731119729405039"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub",
    "hash": "58932556950039336912619963505195394156"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::checked_sub_signed",
    "hash": "82560219695284874396483548492399328382"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_ones",
    "hash": "279394941473055255412769927683970635370"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::count_zeros",
    "hash": "78002901898564434784655579287705659696"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_ceil",
    "hash": "101843377202845234686078558912879362040"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_euclid",
    "hash": "496274493433775383015451466840352905366"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::div_floor",
    "hash": "1757200658165589897911246565800237881779"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::exact_div",
    "hash": "756923634143268524910001292539463952325"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be",
    "hash": "203944457083290158416001603232106775188"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_be_bytes",
    "hash": "122455949513610037327862123420480499726"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le",
    "hash": "739517999292503053612873396725933986381"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_le_bytes",
    "hash": "771109531133257582618364203112492438"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::from_ne_bytes",
    "hash": "1335994395593411762815220987536491058797"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog",
    "hash": "505162127426458226817571200927927328859"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog10",
    "hash": "1517575618409345960216814325943693698355"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::ilog2",
    "hash": "828884112791977799611920296734825101672"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_multiple_of",
    "hash": "102582995273033358583645175750139773799"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::is_power_of_two",
    "hash": "105741571622975749643582236335865476817"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_highest_one",
    "hash": "50524029721086900319453395415295966933"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isolate_lowest_one",
    "hash": "985757130332034762510562312450450771161"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::isqrt",
    "hash": "86495117538685134826511072825803195721"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_ones",
    "hash": "174713147435404412416041470462387982473"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::leading_zeros",
    "hash": "49218943867248737323956464504250871730"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::max_value",
    "hash": "52134738679299910892285884971705627478"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::min_value",
    "hash": "81542948015500020813685728013281015686"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_multiple_of",
    "hash": "122943675330569734013675815778398855117"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::next_power_of_two",
    "hash": "73485064493325634668396890224592711609"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::one_less_than_next_power_of_two",
    "hash": "408078062681343552412904880072056486763"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add",
    "hash": "54327994445463363664612867335580728881"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_add_signed",
    "hash": "1163217286764024596714085414470636807904"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div",
    "hash": "144565095603580912831137418975950251050"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_div_euclid",
    "hash": "8735653108844885705360810174379555"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_mul",
    "hash": "1484525657941848852614331633460860946912"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_neg",
    "hash": "633250052336979215112164897021869902168"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_pow",
    "hash": "14776972938714114028843083977415146996"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem",
    "hash": "117422082863367263205461953654592653409"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_rem_euclid",
    "hash": "1388675982183424138913441520820567558519"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shl",
    "hash": "1192327206065653831011096505798623442317"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_shr",
    "hash": "40098544628230616521516659564444527170"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub",
    "hash": "568359097267462811118369006762083942392"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::overflowing_sub_signed",
    "hash": "266576412223338768812778185023228203035"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::pow",
    "hash": "1714249936183273431012220504240395952447"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rem_euclid",
    "hash": "7253706490620413488695796996975947307"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::reverse_bits",
    "hash": "857923750644586105718343985139194289701"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_left",
    "hash": "30322391734649387008150506667746911203"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::rotate_right",
    "hash": "1183077362788301630012611271692131143216"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add",
    "hash": "13715928387283113226360963864220100906"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_add_signed",
    "hash": "12776419508056881541562145288849679857"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_div",
    "hash": "461078656411620400713260609016458107940"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_mul",
    "hash": "1456541327341652242417468241713059794826"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_pow",
    "hash": "1449749114029161153712412297639584621528"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub",
    "hash": "1359673296007884663118034724296089993296"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::saturating_sub_signed",
    "hash": "330029994365141003716701836819409183554"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add",
    "hash": "80341929749960369337009584543792540719"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_add_signed",
    "hash": "1842611094366609366814118332306078545429"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div",
    "hash": "190111436310574277817011288725480405269"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_div_euclid",
    "hash": "10689368641522578616764867805475164780"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_mul",
    "hash": "132247784733024865139961736278760705703"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_neg",
    "hash": "341801728531179102012623239546346454421"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_pow",
    "hash": "49525445741834176699746112664485120889"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem",
    "hash": "1156790194105427586012575613135584867818"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_rem_euclid",
    "hash": "824124720693135747510274949969755614965"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shl",
    "hash": "48309407768843017762896394023665088792"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_shr",
    "hash": "372679010043411508716517652842794075121"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub",
    "hash": "1309787984506714972115299129573365390450"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::strict_sub_signed",
    "hash": "738823799188574719112226376908939272115"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::swap_bytes",
    "hash": "101759617885830329813929030983894915657"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be",
    "hash": "152241750644196085307804462560735229704"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_be_bytes",
    "hash": "143167020017245006517957077258885029346"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le",
    "hash": "1313629061031733843814671371422086564838"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_le_bytes",
    "hash": "615020382640384389613841324363005391814"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::to_ne_bytes",
    "hash": "22400996404791960459286087857051408167"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_ones",
    "hash": "425720770951873600410789222923042943085"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::trailing_zeros",
    "hash": "477140904296876577617444672409084961526"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shl",
    "hash": "282448941880558734413090650347745994832"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unbounded_shr",
    "hash": "117640558889482649755911888522266105401"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_add",
    "hash": "35793558119556268465385327064289603803"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor",
    "hash": "55402252999544672462063845398861025174"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_exact_div",
    "hash": "8482233945767504615880566380976728453"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_mul",
    "hash": "1718002641697553455515995212421887164493"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shl",
    "hash": "177419149154397594575923477433966421548"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_shr",
    "hash": "1250679650079028056317937791944043655186"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::unchecked_sub",
    "hash": "102903943134444935667166390452596534817"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::widening_mul",
    "hash": "836839369778499257915586225360640281488"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add",
    "hash": "96753085122114696887478402109283237765"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_add_signed",
    "hash": "73811832576797188026250150773008765334"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div",
    "hash": "1407098749494042675513278056953180330837"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_div_euclid",
    "hash": "35539631307874804009439853727172002929"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_mul",
    "hash": "68265364781856347252075446722592635328"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_neg",
    "hash": "31280003563486374131004895318434695740"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_next_power_of_two",
    "hash": "1110564231861838018611046439169028111801"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_pow",
    "hash": "459327254190197193815949181453356485979"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem",
    "hash": "700174395566755126218023796039373200402"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_rem_euclid",
    "hash": "158719865352497477712466705185475687899"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shl",
    "hash": "46480344313288706583370702362025424574"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_shr",
    "hash": "184169235813474929038739741607460090874"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub",
    "hash": "1226785173799072623515463947664429957676"
  },
  {
    "file": "core/src/num/uint_macros.rs",
    "func": "num::<impl usize>::wrapping_sub_signed",
    "hash": "108381560612661504091547804184086961428"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Add>::add",
    "hash": "1448681918638766628616158119415977849201"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign",
    "hash": "183268943742820418264539754888960501777"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign",
    "hash": "1155230640071567534911900661849204473006"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Div>::div",
    "hash": "92194911245802314149679626998699923474"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign",
    "hash": "2139136111543615569843387758472155044"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign",
    "hash": "133110887851796805327464503073868048056"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul",
    "hash": "179028851493399704615767984057942122122"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign",
    "hash": "114015187139733193025632710770125881167"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign",
    "hash": "149549324562874625995092798541169433803"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg",
    "hash": "85692160442462728065826923117478641174"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem",
    "hash": "1261653487747272391912633783304677201881"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign",
    "hash": "1838208971923698663113838291610428632399"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign",
    "hash": "183665207790806877814033403810295627058"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub",
    "hash": "718089930765700965115274621096531830172"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign",
    "hash": "1142250659112977044510860289931847152063"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign",
    "hash": "1791339526165225159218053301737684923337"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand",
    "hash": "869335367462600310312119423181993152616"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign",
    "hash": "1133710335486163850615936614762792980346"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1656193516498862808013177115363128585616"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor",
    "hash": "151609232049332631888150281084594696736"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign",
    "hash": "1547297618438700928011655529467649887185"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "722268792041201314215879177143064670474"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor",
    "hash": "1105746904541827787814619929121214707718"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign",
    "hash": "95878637641052206848613196261958667837"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "803575956672574446311766127746764181454"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Not>::not",
    "hash": "58365203203818693977363021095384006414"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl",
    "hash": "402135285563817363611005315311392941600"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "9276637738952364832145926559032936726"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr",
    "hash": "50525602374203948189530554362729269760"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "22683461468581535042037279657988655659"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Add>::add",
    "hash": "678084144779935423117730806181103201294"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign",
    "hash": "204167015204461601515598922632786967787"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign",
    "hash": "115071000378738275875020849051303640859"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Div>::div",
    "hash": "39942433951597150012126759551529747764"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign",
    "hash": "1001328347931110202877966305417234521"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign",
    "hash": "139151272348478390633510532814476402431"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul",
    "hash": "778940532716305632012195932822450580194"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign",
    "hash": "1826606750710568372911196308154605292165"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign",
    "hash": "696986243021635829511909698654632086891"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg",
    "hash": "1633347798665098709414915704671854466341"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem",
    "hash": "1316346541219315299211092516114814282227"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign",
    "hash": "768793271008746994513214766015048355239"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign",
    "hash": "104764982837440220269537564141356123221"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub",
    "hash": "844910576383423794316581866196752933182"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign",
    "hash": "16731782863033513215850117074872249844"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign",
    "hash": "166650451595954181111200637959106246750"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand",
    "hash": "142047041060654184135380929387219460582"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign",
    "hash": "70466692535393059748622493455107287806"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "180181567492850236252756222169833921706"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor",
    "hash": "586046387573366463189999669151033403"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign",
    "hash": "162542792198837592766294947580779115452"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "58385319609023158181189229407971925242"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor",
    "hash": "1777973665068146188815199400557024480017"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign",
    "hash": "24958934801049836445755008670452064373"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "145886005126115661423507383086652591769"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Not>::not",
    "hash": "1682293805070802739913498857240959933587"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl",
    "hash": "171121807385508335006159049109999508499"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1532096008613978098514134687169592973166"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr",
    "hash": "676804924391345300410129059588061455514"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "17255560925857526913680700001448356154"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Add>::add",
    "hash": "73814881345992411035748647407276502962"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign",
    "hash": "1289611204319220180313455687504072610896"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign",
    "hash": "719928618116986210817950653566933212834"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Div>::div",
    "hash": "55163881471164307835621200121834213411"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign",
    "hash": "1241242843237981565118003611433261117942"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign",
    "hash": "56287961314038800412542237733075949760"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul",
    "hash": "1843246801710171904314675315849971142160"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign",
    "hash": "1679610195691078824416083021400260821321"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign",
    "hash": "1769706746593061585714724662023151991729"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg",
    "hash": "1785341930106801753410383653931046408572"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem",
    "hash": "124516181699202127138441781191858735829"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign",
    "hash": "55625985129028728804450474841476009519"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign",
    "hash": "118476470470312293997323345771174094929"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub",
    "hash": "152208138591833779808043086760121440174"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign",
    "hash": "751711829665461299311082478016641687985"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign",
    "hash": "181537879383904774911517537218104281897"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand",
    "hash": "1829966517755461597618018186343553965286"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign",
    "hash": "2434995223013809885459419150504692978"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "142277222810266871915774619945709298770"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor",
    "hash": "13384806480013909432777309944425063568"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign",
    "hash": "161861783305270560406622910535104219970"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "354778187967475284015822554407204386189"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor",
    "hash": "420521510606116736910673387033447729186"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign",
    "hash": "105967630234027431059643627677941472225"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "266414548769089242416548470837221974969"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Not>::not",
    "hash": "253077938036540966813100030960563893448"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl",
    "hash": "1617447041945812931111610195271255326520"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "49965330082379392499143917036663891638"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr",
    "hash": "1776703940014850283415008775911763412502"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "226978608218274421616156837765813541664"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Add>::add",
    "hash": "87899397988269797127699346433640006130"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign",
    "hash": "165951792366614159284282644499924489058"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign",
    "hash": "62263518398064743897060980677839348454"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Div>::div",
    "hash": "800878193842696122412218115971764339644"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign",
    "hash": "116816896956426730589504905910394552852"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign",
    "hash": "122246258148856281532694954752005879971"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul",
    "hash": "180321074678073952478329692305728359694"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign",
    "hash": "1557426033903918238218411081134722397365"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign",
    "hash": "3478913100981733248082468072985945704"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg",
    "hash": "1176269267345250288210167412689466431965"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem",
    "hash": "157887471137395473041693636936788669477"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign",
    "hash": "154221808967942500614599397162063391443"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign",
    "hash": "44960283884911322595830396613625567630"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub",
    "hash": "1841930874123744352416916201656227770145"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign",
    "hash": "784595912519834082714846540377635976687"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign",
    "hash": "31032413313151443946235938380209323123"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand",
    "hash": "123004622170715268718907049816132390114"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign",
    "hash": "46844893506555829148718340618513179357"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "148783128619234130510931407124462687134"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor",
    "hash": "39517679505794799411753591356678065019"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign",
    "hash": "138673860867226858868181047994538703923"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "178372750233580015107735549966194672173"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor",
    "hash": "1400365617761707533715237826543169303766"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign",
    "hash": "572233492669952496611934194303722388352"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1835416929341205444211824823859290589118"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Not>::not",
    "hash": "99843709845108658495281136922942202735"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl",
    "hash": "1018051778642700806318081662766198563060"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "8763123732655142912339373101944568785"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr",
    "hash": "1798705340633367413210787304214040177435"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "20311662906523482975647829276535777056"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Add>::add",
    "hash": "49659579921583807026266211077782085429"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign",
    "hash": "1447786533725079039815532473567105460987"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign",
    "hash": "155230165131038284245731858776469309566"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Div>::div",
    "hash": "30716170892830296352767497447255151782"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign",
    "hash": "1012675948530089769816447641240401900373"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign",
    "hash": "97802999916879918362220161768033310367"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul",
    "hash": "456662003659764709116803587748560899601"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign",
    "hash": "933289207939769392013725626113483860120"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign",
    "hash": "975025985018754911311282808064172820986"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg",
    "hash": "106204383110003732508413063068846517398"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem",
    "hash": "379941021453001227516641825176769540114"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign",
    "hash": "34676678713156557554950515814865382383"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign",
    "hash": "654097795020141358918373164440844543947"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub",
    "hash": "511129993886834948311578570664739258721"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign",
    "hash": "1429056843654923492016480699451338253526"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign",
    "hash": "81360566466937474788259720982818691021"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand",
    "hash": "482479020559394222910764552795792487928"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign",
    "hash": "1417576166375803373615715128471529900349"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "159307000430497303079633622393176262616"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor",
    "hash": "101852149321512427385759583814628591293"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign",
    "hash": "27202887963477977424236219431673428302"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1636941889203629992011224992031858445650"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor",
    "hash": "1206744359907474792811171664052856355335"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign",
    "hash": "105866012598225473081321581446699511882"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "859486502778672187411557158165301419249"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Not>::not",
    "hash": "1384493633668341651113182567336398164260"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl",
    "hash": "167254382324681376435961124371968304817"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "122357309356997445145513192026501183754"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr",
    "hash": "74108257287646205366852432464009582541"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "68678738033932591324788339234401001827"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Add>::add",
    "hash": "1743185316752678871810995413683660544319"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign",
    "hash": "340999948280736934717847949116302330521"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign",
    "hash": "98474496994019043101525580293423190899"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Div>::div",
    "hash": "106876020163466950941223120794368214884"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign",
    "hash": "123593116850323728101270832659121413377"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign",
    "hash": "143390467102070322884066128981152669338"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul",
    "hash": "134462449241725433251131154745383285266"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign",
    "hash": "1609575097784862562512203849674277663728"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign",
    "hash": "125163811285331061951429771287349051563"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg",
    "hash": "1375189037791584035813502920052150895021"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem",
    "hash": "1441457497476058049617258598026355170765"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign",
    "hash": "104477642144294328658369200232563831066"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign",
    "hash": "95927880531519750894250819754050580071"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub",
    "hash": "700112426921392913878239902880399661"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign",
    "hash": "1682915096976738659611050469658680526390"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign",
    "hash": "65149030592839883196832797233773890123"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand",
    "hash": "240043597798798372816865408035530332468"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign",
    "hash": "158253166164143731331578933411561094162"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1755571384516646928417548702787916032583"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor",
    "hash": "161934059629914542584359103765725091954"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign",
    "hash": "1532712375492933927014958641761655865293"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "356785477950029638718190596116978933434"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor",
    "hash": "38028809907486310654585126216838196762"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign",
    "hash": "692933836091644205510076825710240200602"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "55585047816104120799588436727593185517"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Not>::not",
    "hash": "226055724891124610014168596332996450870"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl",
    "hash": "418170775022567443615267501723955514566"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1046315290079525688315562140698445312700"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr",
    "hash": "36755352479928729048587003723238597712"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "173733561311677260688031004894571464453"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Add>::add",
    "hash": "1452659103853579266714543637766513950717"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign",
    "hash": "159873525283540282488485692937239264927"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign",
    "hash": "856178962906188383513229691795222731074"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Div>::div",
    "hash": "183098270245522337829933865833718533527"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign",
    "hash": "1519596767248922544011263189681686982801"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign",
    "hash": "7540482270829765633145490415335919576"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul",
    "hash": "453621557609098327818086883843155942979"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign",
    "hash": "624007275683365486910036571425036954804"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign",
    "hash": "28786971013167039067589113495104482972"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg",
    "hash": "23116687614638224085751821131044660943"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem",
    "hash": "657783505933917172010798998032661258134"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign",
    "hash": "289846115384906354316335345648872246605"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign",
    "hash": "530153427727501292414476160093069449073"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub",
    "hash": "1602908742469624637012781217234676981044"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign",
    "hash": "1437163006295216365212333353988891111903"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign",
    "hash": "561740276226744419817841149434821240901"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand",
    "hash": "31661896199574330961318351322601666775"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign",
    "hash": "142755048347416311439686309979050745153"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "1756783525343563146910668758691393418546"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor",
    "hash": "177649238771066141210118256800422370343"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign",
    "hash": "16653221580967252847225559035774030847"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "68725843080794245059765891606466497515"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor",
    "hash": "73122877248223943761614839971823199202"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign",
    "hash": "440908501099525362411790659295879527547"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "113960964471316746652950014450941079630"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Not>::not",
    "hash": "580515519654471913512743225002550858388"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl",
    "hash": "13489032571133042032756151475526269788"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1580840875542922616617254724079363453848"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr",
    "hash": "974331868550869453811822064048526689361"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "183171433222701105465354181410824241238"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Add>::add",
    "hash": "1326106312457464778916729818886652722895"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign",
    "hash": "615742329763895448917649783144400148052"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign",
    "hash": "298673574711957996514889798852694103155"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Div>::div",
    "hash": "140347795127520931344602051159963010306"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign",
    "hash": "47218115338772521726223719546664532339"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign",
    "hash": "9784048026054516355229877557041862488"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul",
    "hash": "128058958305391097458811189974558231471"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign",
    "hash": "23152229463776111832976696789884814400"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign",
    "hash": "89779005123633497249626987326543085620"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg",
    "hash": "158205812506812547557239653517957936"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem",
    "hash": "127575950129962062466944826453471182015"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign",
    "hash": "46314343644931179561284200282972453874"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign",
    "hash": "111685166243278789301168892915836283889"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub",
    "hash": "1010567919891466810510740991484508551051"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign",
    "hash": "1654098606681010262610118712433556696943"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign",
    "hash": "1487125016102828251416509695463529439770"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand",
    "hash": "112502209651923680307394866037412071904"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign",
    "hash": "15020931602640636228263931876022227100"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "99728606291070942266362040784996422819"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor",
    "hash": "1564605217377585084013361940808467448815"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign",
    "hash": "10662469137070382793726044226043591930"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "48240873539684373052602815246087245271"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor",
    "hash": "17946817253513404345376535537649620244"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign",
    "hash": "152425132145332339178721648369917614647"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "87894813716042490517579363028956518413"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Not>::not",
    "hash": "911811323674868371210154261065702546594"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl",
    "hash": "168757989281495732922366072376588230930"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "13608044519732912149041874239288996661"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr",
    "hash": "71737036603525441415759729796070287264"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "92656077402078845182983132504466122275"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Add>::add",
    "hash": "1150004033481230319510845705323130331772"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign",
    "hash": "26506179431351115297583146827695338504"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign",
    "hash": "88821945968984961304673037223733552248"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Div>::div",
    "hash": "20762894713041708258777161505193380091"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "403619947072011585911465700419584491662"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign",
    "hash": "1407334498949753212614827439818227371927"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul",
    "hash": "64818489435010840924897222950942217748"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "261546739151353636713024428907278167826"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign",
    "hash": "60554738637727554212552718086821897224"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg",
    "hash": "1559299456681408109911485766398411582321"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem",
    "hash": "176279872755950191016989111929967028314"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign",
    "hash": "206444661126777885010491540402472123864"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign",
    "hash": "921763581747633186715482010944612972704"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub",
    "hash": "128084495941952999914627329545810032815"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign",
    "hash": "1777884174978948861910214709473847311465"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign",
    "hash": "1685551066226171899017365346537044781849"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand",
    "hash": "1309881879178794346913493407349091607672"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign",
    "hash": "73585533355481165288005577379753708511"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "410484725694043643517327611187583667916"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor",
    "hash": "113032908288531441498876724458085548272"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign",
    "hash": "10918728339307604514675998046104016001"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "136504365852287151698985565407373591198"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor",
    "hash": "1140957858587435899363388217712339847"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign",
    "hash": "83414123514939229309652515252963684719"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "924323349962112994613035339297173596675"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Not>::not",
    "hash": "560153619748002290315509090744017611895"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl",
    "hash": "125937249440314914666214342092192445048"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "59847400999195898135978236351108514542"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr",
    "hash": "17736076057280219366357836454479526047"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "404706010658171194616213599119669199232"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Add>::add",
    "hash": "180946784232865533926380324855798129479"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign",
    "hash": "1208224367583175300683941062738709350"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign",
    "hash": "573085548216646698010945220431105841858"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Div>::div",
    "hash": "866406289005978993515741919869131581045"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign",
    "hash": "1575980429805527874711143029295090406633"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign",
    "hash": "1408475065748673621116547409841289036959"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul",
    "hash": "1220052969282822579310083657848960070977"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign",
    "hash": "616117979318925502928621019929616755"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign",
    "hash": "80993532992395286031303665227319667973"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg",
    "hash": "1780540093924351309714484768280136666002"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem",
    "hash": "91257423805921036246537757358389437142"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign",
    "hash": "25353128114245056289091337924374091183"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign",
    "hash": "69509050522462330459884577726311524673"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub",
    "hash": "124316748733557515413987167578158435047"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign",
    "hash": "8466757484495294761564955668612619460"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign",
    "hash": "1232839658469925897515796950008650739526"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand",
    "hash": "38869972321861929716728987926761988603"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign",
    "hash": "66733099174064075396091409125791162828"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "56061455522694863841907923143102271554"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor",
    "hash": "114349258005704692657734524047120491423"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign",
    "hash": "642263118035692389417066755102832954384"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "120007640599464185228268065251090886607"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor",
    "hash": "65833099173145440277191216985461939440"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign",
    "hash": "1686909161492582567913456485293404486866"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1839559202874966863911594932171900152404"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Not>::not",
    "hash": "1624153373084650390513284754984577527823"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl",
    "hash": "25097808056909515347621194683903738567"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1677266656539112790316826324723916903640"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr",
    "hash": "44300846614976491148468443244548820018"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "150104706140420052249041790675384245248"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Add>::add",
    "hash": "1607373805155618330416762675354847376075"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign",
    "hash": "8979972595121341541631117943284980144"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign",
    "hash": "272717922733630750210415812743059122624"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Div>::div",
    "hash": "79866447946060895411714639303865867004"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign",
    "hash": "1180182212207466316211072525447892709625"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign",
    "hash": "943964537684410848915525152671427854422"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul",
    "hash": "84678084205244758401142298822232968983"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign",
    "hash": "87239673915123946645195739326722532460"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign",
    "hash": "854950674243942398112941313503022903450"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg",
    "hash": "332671858433304959915284078100454853367"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem",
    "hash": "1180916401925998718111469907630414672511"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign",
    "hash": "1683293093263529141212253700126079196607"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign",
    "hash": "1496995460499428598217308896139847603955"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub",
    "hash": "71030865217664969435488515597167325868"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign",
    "hash": "1363394511387488139715096092227795887609"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign",
    "hash": "1431056914822437323910766292989401210930"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand",
    "hash": "110173469249631475203933572210133065213"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign",
    "hash": "23750619466498913138214398413353570621"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "145773205779756296851429319842351806911"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor",
    "hash": "15781034533303338609849794829514433951"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign",
    "hash": "64308238500961820777019615845054754827"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "602400385893132636718089645331025849351"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor",
    "hash": "135858592710567759137382447342571774444"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign",
    "hash": "24551033301775995961290913065348059433"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "159315277917109930411536678394422137694"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Not>::not",
    "hash": "1058873208789058599413921228677906512891"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl",
    "hash": "1720772337809443546916122647517717970990"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1643172203311795774111893603325553687467"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr",
    "hash": "95058083367278361356132369057709552473"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "840205733181014245713058663514798715245"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Add>::add",
    "hash": "6186196274260079558580389273914802463"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign",
    "hash": "1389541717246299402366112030879726146"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign",
    "hash": "69536639284961331688345568888307067007"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Div>::div",
    "hash": "37192726800503645611450043345469482277"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign",
    "hash": "7989249833976780278892883062931172103"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign",
    "hash": "166406758560575786325496228996520382889"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul",
    "hash": "54344605909821726507754108928313307693"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign",
    "hash": "58441890652020849375934295193023942177"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign",
    "hash": "90249360303183396597967727457534007373"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg",
    "hash": "607789019110946978537734245504250764"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem",
    "hash": "88266588692581633055465698577606272475"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign",
    "hash": "420314284951507012910057124858376132532"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign",
    "hash": "27196694795585476728349061263191928112"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub",
    "hash": "57354077809798521789985493477499619725"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign",
    "hash": "11335003426633360521158952882204230317"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign",
    "hash": "1473333397410143119514351871868836507093"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand",
    "hash": "5767949117353730326791219066169087153"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign",
    "hash": "1599885823511828184412637379576725448308"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "150403241885509448242737977890520958984"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor",
    "hash": "175967686854874855058930884265139312021"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign",
    "hash": "872880200648519686316519212688109493010"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "101256327610733513464946606113483609004"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor",
    "hash": "1332743196258269412116819418114918403527"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign",
    "hash": "73875012162330735133073204526666162960"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1220538728657989107314968838578819534712"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Not>::not",
    "hash": "497537583419023465613980213967597593823"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl",
    "hash": "1190616966118333738612932326100155579643"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "117861136573716931327689153421112023168"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr",
    "hash": "933921335922954335812727976361517273178"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "175988574120154317751427307342473859544"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::abs",
    "hash": "620219374818115296517202129780536060456"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_ones",
    "hash": "277964424026558868512247954053422015331"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::count_zeros",
    "hash": "4390536793568619181525795056147204988"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_be",
    "hash": "43152107346820725159399071423972521270"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::from_le",
    "hash": "1658619219122772233315605333781167816412"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_negative",
    "hash": "83384276116840586144831364758775127879"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::is_positive",
    "hash": "24952191121436779314209532146614066935"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::leading_zeros",
    "hash": "128565769272075361978653288042421156999"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::pow",
    "hash": "171526019604030767809383005000752948430"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::reverse_bits",
    "hash": "50080066023815578604155906658547395615"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_left",
    "hash": "40348000936731720765760251199478763625"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::rotate_right",
    "hash": "168237527702799319152812011032390668610"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::signum",
    "hash": "1663464676752607091913722763120988855815"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::swap_bytes",
    "hash": "167757278771118297639632428267074378"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_be",
    "hash": "1049216449360105145615094826632220527346"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::to_le",
    "hash": "1597110001217685376313164761247311525852"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i128>::trailing_zeros",
    "hash": "1692485786931824135512504754677267943954"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::abs",
    "hash": "1603731534419242026217643241837668705173"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_ones",
    "hash": "65223926291432523213495225327635059322"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::count_zeros",
    "hash": "693782095710307112816569855053561648954"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_be",
    "hash": "1200355913994813693310373269882733826977"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::from_le",
    "hash": "1701248341338163523915978501774484451612"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_negative",
    "hash": "7223353469283993040530633707482259657"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::is_positive",
    "hash": "166963613906458694152654920780352751730"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::leading_zeros",
    "hash": "47456422638594934807249224827368939223"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::pow",
    "hash": "1555919596714855493816293178338192925251"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::reverse_bits",
    "hash": "8297022101828101794580582474350671412"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_left",
    "hash": "243077938961313792114413457368227417338"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::rotate_right",
    "hash": "159868561101752955995340604875670900611"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::signum",
    "hash": "59758448228340193711853929828921995132"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::swap_bytes",
    "hash": "157512086132728756571294627879945277887"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_be",
    "hash": "160143426031557281352198838343175718407"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::to_le",
    "hash": "1320542733912908631011160172219508785360"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i16>::trailing_zeros",
    "hash": "70536096287422260931405515414388305382"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::abs",
    "hash": "611173676861633901112018064219578018065"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_ones",
    "hash": "1331665575729415368616826423512718850592"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::count_zeros",
    "hash": "1420814166819658474011576026307664350165"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_be",
    "hash": "41563434522230751521318288385945311470"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::from_le",
    "hash": "712353761653090658412524283711550188641"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_negative",
    "hash": "94422995116729973889610199406833824138"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::is_positive",
    "hash": "440738648279163379217723895194458290988"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::leading_zeros",
    "hash": "33139578710767612805964390441811041658"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::pow",
    "hash": "14407658809498391750140111686193823134"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::reverse_bits",
    "hash": "144807247891920249825487394591174593007"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_left",
    "hash": "7307392076714784471963715719478278347"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::rotate_right",
    "hash": "183380497837959735073715894059894405223"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::signum",
    "hash": "880670014338813234216342565490395630126"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::swap_bytes",
    "hash": "1493020816399947385016918896626676096396"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_be",
    "hash": "155859161328436471923773670859222759"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::to_le",
    "hash": "634029582973173423716448952365027195586"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i32>::trailing_zeros",
    "hash": "136788175164054517172321222742891196277"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::abs",
    "hash": "1223124936851145649213488100247214790594"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_ones",
    "hash": "71965267562807059954477573347565243569"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::count_zeros",
    "hash": "1302822298788326153510093682775489917688"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_be",
    "hash": "386198339686958108613938058339401034462"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::from_le",
    "hash": "14760307068397680336770315306955032688"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_negative",
    "hash": "114777701888067327472154620730414368003"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::is_positive",
    "hash": "74295599142554783016117230711111825315"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::leading_zeros",
    "hash": "451170739651057545417541897876932720990"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::pow",
    "hash": "214902901959562944813465618229436446588"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::reverse_bits",
    "hash": "14131638667603677766889248937009958809"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_left",
    "hash": "357206575884114487217831410379087249089"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::rotate_right",
    "hash": "352048785468018885812259349887070145355"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::signum",
    "hash": "59711467494187892702249684585617861318"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::swap_bytes",
    "hash": "148199334783445285654931399872265699213"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_be",
    "hash": "1107942086957635751113255970254268237635"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::to_le",
    "hash": "65690938730136367204228599615820498129"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i64>::trailing_zeros",
    "hash": "1111595376343260337412472915718831219526"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::abs",
    "hash": "1044466146257247924717797335033866627818"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_ones",
    "hash": "8445624371492527526696122189610185404"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::count_zeros",
    "hash": "1010274318927051584917870694978749181573"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_be",
    "hash": "142994070694556737886854049417321878913"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::from_le",
    "hash": "4941326885352662279688770236532478271"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_negative",
    "hash": "42852444734091932117459025580928727284"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::is_positive",
    "hash": "495395596370256843315253704344361060910"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::leading_zeros",
    "hash": "64753247535460564616819507217194144354"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::pow",
    "hash": "1670900768773266138613435389591791670931"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::reverse_bits",
    "hash": "4091761971302887742265189033977952786"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_left",
    "hash": "47350252825635139431298413635244289837"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::rotate_right",
    "hash": "1569750874490410516013285614614516848796"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::signum",
    "hash": "1363701573035309022010045483819254433262"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::swap_bytes",
    "hash": "2562864083132018036232372555083742615"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_be",
    "hash": "637227471741280467415828448584903240156"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::to_le",
    "hash": "6670483690504683468035623836629139755"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<i8>::trailing_zeros",
    "hash": "169808242303599754451323993970125943596"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::abs",
    "hash": "105350833798791102461814693391007155536"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_ones",
    "hash": "6411433445810473886158199931911579739"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::count_zeros",
    "hash": "74788775761043197826336255869455622663"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_be",
    "hash": "17889059867774300356284296536570011817"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::from_le",
    "hash": "31536864919070249028867955236795985429"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_negative",
    "hash": "1601589570282963974715862758120133902018"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::is_positive",
    "hash": "87877122709359201879692943522329386092"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::leading_zeros",
    "hash": "1159375735260816452416064874311610120182"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::pow",
    "hash": "31073229877784478572386105159251692268"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::reverse_bits",
    "hash": "1760995875761134363610779535363899660450"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_left",
    "hash": "1254650353405614723813885233972623376525"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::rotate_right",
    "hash": "127853753882571064316795397384130385984"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::signum",
    "hash": "669273355934685564610359090504628924078"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::swap_bytes",
    "hash": "89702193806844377544995058232642567332"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_be",
    "hash": "869426906416914995417028916677039423674"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::to_le",
    "hash": "810170947231301607110252734135069711017"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<isize>::trailing_zeros",
    "hash": "453906960722332500313905408764626189479"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_ones",
    "hash": "15655767215866054313030119313925565880"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::count_zeros",
    "hash": "292196399443770574612673099909529468031"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_be",
    "hash": "1752649890153481897715426380443178734284"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::from_le",
    "hash": "1613372576611119252414856706281207509735"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::is_power_of_two",
    "hash": "130849184287990549248919589318769615807"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::leading_zeros",
    "hash": "122170431897178127745428735744004247524"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::next_power_of_two",
    "hash": "35710731666984155503270972142622024733"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::pow",
    "hash": "1157171257406409915716105905326337689526"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::reverse_bits",
    "hash": "1186392464770219531318105054150431776758"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_left",
    "hash": "56547697265807887454791519627228203323"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::rotate_right",
    "hash": "389639571209540536315379627643086342552"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::swap_bytes",
    "hash": "42658735075816619933395258500485389851"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_be",
    "hash": "1002056238450677651913453841896143952890"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::to_le",
    "hash": "113562867048032564776624012981132406497"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u128>::trailing_zeros",
    "hash": "602907329792390164511284875497246449592"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_ones",
    "hash": "15298689385851615334154730949566927230"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::count_zeros",
    "hash": "1454177374978214972515634816396624925294"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_be",
    "hash": "55776037017067019414188939446413040647"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::from_le",
    "hash": "180012994521162608218202917094343090751"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::is_power_of_two",
    "hash": "150941234901347417654077955711309274178"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::leading_zeros",
    "hash": "301272803004101184916577899040401577866"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::next_power_of_two",
    "hash": "14036718932138303679584019516736613346"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::pow",
    "hash": "890171979158811661116440695146334216164"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::reverse_bits",
    "hash": "115082264110984065128636239067437162850"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_left",
    "hash": "535637238235021791310144750376686878007"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::rotate_right",
    "hash": "1666336920103464969816798016573095229974"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::swap_bytes",
    "hash": "359879153496939021914983804642897994938"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_be",
    "hash": "1571711515473625494316535032085936129729"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::to_le",
    "hash": "1388528024028597335013996380627947522180"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u16>::trailing_zeros",
    "hash": "1834261361851588260813635880122242260225"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_ones",
    "hash": "1689213505965497328911962644739547102393"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::count_zeros",
    "hash": "103981701114506473243807563002200612876"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_be",
    "hash": "3952594667250561003937815042194434305"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::from_le",
    "hash": "363266238014126475212545980810493569625"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::is_power_of_two",
    "hash": "600353974761771578711759831587147935854"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::leading_zeros",
    "hash": "64834278992670499808086035281932737383"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::next_power_of_two",
    "hash": "89412194208644923916666401116726382801"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::pow",
    "hash": "41771787604748667885948582516402382092"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::reverse_bits",
    "hash": "159852815425029403046661482877271815859"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_left",
    "hash": "281352896107334021712469071333469822308"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::rotate_right",
    "hash": "8772247694529162625308824337740662611"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::swap_bytes",
    "hash": "199317621525296391017166310662590943740"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_be",
    "hash": "74613715614085337455601582862951090663"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::to_le",
    "hash": "168252992178035301726099702798793126044"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u32>::trailing_zeros",
    "hash": "610240688405767874213557511445960963095"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_ones",
    "hash": "1794897883927853553212284820612206546769"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::count_zeros",
    "hash": "183096721063642052066623967334889235630"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_be",
    "hash": "1626678534741956986910917093401551347061"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::from_le",
    "hash": "87734729143904823966058517937093921811"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::is_power_of_two",
    "hash": "386957324017984593214955052939650247013"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::leading_zeros",
    "hash": "92432898261065746353967815859251696178"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::next_power_of_two",
    "hash": "181364235924150753832604473959217922450"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::pow",
    "hash": "121076538553525926241829800803728841310"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::reverse_bits",
    "hash": "142773868985530338186578823570249003474"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_left",
    "hash": "869831866409129555713013219244143256339"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::rotate_right",
    "hash": "74771279781676868626235679626675230697"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::swap_bytes",
    "hash": "173752169232802384064408293710457048838"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_be",
    "hash": "60233292001588436926001287915114687141"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::to_le",
    "hash": "6835901110011846522597038168037878436"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u64>::trailing_zeros",
    "hash": "99888712811641573804800213412429064241"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_ones",
    "hash": "992054149190374539312092985858908152764"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::count_zeros",
    "hash": "959743708501011793816917547580103752874"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_be",
    "hash": "82605035085966394107072909136781670190"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::from_le",
    "hash": "1699020089763661384816448478848430014766"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::is_power_of_two",
    "hash": "135098974285382635207727815973710121381"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::leading_zeros",
    "hash": "868631589764463718060611275162803576"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::next_power_of_two",
    "hash": "167311547422660884614489817739548873968"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::pow",
    "hash": "677653493280622693417696007191032755235"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::reverse_bits",
    "hash": "14393434973013281932987399883135854142"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_left",
    "hash": "106847468791549249052111693374866883027"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::rotate_right",
    "hash": "54276420116816795901257062972713805839"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::swap_bytes",
    "hash": "1194851909849341751812604875691863791065"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_be",
    "hash": "687072009014753025312918005519585917293"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::to_le",
    "hash": "1611464432883938824917065985686926697412"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<u8>::trailing_zeros",
    "hash": "1652605971661437754518215216433798116975"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_ones",
    "hash": "1423886423946825412311205179566904011252"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::count_zeros",
    "hash": "16401200449743569914008906249317616339"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_be",
    "hash": "450500468305820555217826055458451495650"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::from_le",
    "hash": "113424469800899223619803177493341754643"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::is_power_of_two",
    "hash": "24039297645874117648685521342538618458"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::leading_zeros",
    "hash": "781616072583847565812453388198157387735"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::next_power_of_two",
    "hash": "75727183359468545204862253093569395671"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::pow",
    "hash": "142192717953300594363346970776270835443"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::reverse_bits",
    "hash": "1016193620519731035811669829203218343263"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_left",
    "hash": "1177909319832253273910821790589769491778"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::rotate_right",
    "hash": "67961062050985910135378000799135409465"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::swap_bytes",
    "hash": "14133898182431499984155779476793989507"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_be",
    "hash": "32024010560216671244108173980320038360"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::to_le",
    "hash": "568016782599466457418231474510360455013"
  },
  {
    "file": "core/src/num/wrapping.rs",
    "func": "num::wrapping::Wrapping::<usize>::trailing_zeros",
    "hash": "92505678123535608916614866508443785158"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Add>::add",
    "hash": "1678264969357024927711836041336296777289"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::AddAssign>::add_assign",
    "hash": "153883768484755702799647193299750920155"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Div>::div",
    "hash": "78340582832028415436564842666415568458"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::DivAssign>::div_assign",
    "hash": "7936596877888011411566886055423019493"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Mul>::mul",
    "hash": "1216120846950695922013277795544269175698"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::MulAssign>::mul_assign",
    "hash": "11454160082596968641468581762030142074"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Neg>::neg",
    "hash": "1412012686580612452513230917617537454210"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Rem>::rem",
    "hash": "606143004062326357311140308084896271853"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::RemAssign>::rem_assign",
    "hash": "889416112273867647512686032338919750152"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::Sub>::sub",
    "hash": "118729448542030179973033965813234752272"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f128 as ops::arith::SubAssign>::sub_assign",
    "hash": "936698252096459530310032944320968514291"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Add>::add",
    "hash": "117027034199476052179962830066895035165"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::AddAssign>::add_assign",
    "hash": "985814918817550118417565310536839494207"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Div>::div",
    "hash": "12913126372133564286598638299569462987"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::DivAssign>::div_assign",
    "hash": "51922025517757938018582330348818219530"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Mul>::mul",
    "hash": "1686944070033508712313237537279582562310"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::MulAssign>::mul_assign",
    "hash": "14703766414725928492443365842329165198"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Neg>::neg",
    "hash": "121646908611874140524413928662647220589"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Rem>::rem",
    "hash": "8423534636122273757070094652548167160"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::RemAssign>::rem_assign",
    "hash": "473820699089829216716559238128813916198"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::Sub>::sub",
    "hash": "1293292379429557180518232295186093337834"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f16 as ops::arith::SubAssign>::sub_assign",
    "hash": "372881896641314542310405684363758897911"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Add>::add",
    "hash": "737187245590722299311733330148986643742"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::AddAssign>::add_assign",
    "hash": "39433683200484231285237012641980004248"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Div>::div",
    "hash": "54948645353198222056545139401568884881"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::DivAssign>::div_assign",
    "hash": "1661690747178425486114632864004210532547"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Mul>::mul",
    "hash": "1490687897480377787915587217280501832767"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::MulAssign>::mul_assign",
    "hash": "1020579256700436407615163822364231822767"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Neg>::neg",
    "hash": "8173108471305923188831405143460946467"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Rem>::rem",
    "hash": "109553965805409293198687944514791986851"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::RemAssign>::rem_assign",
    "hash": "41436931219193626502594635728115574487"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::Sub>::sub",
    "hash": "1358928158691613296112733367745202129549"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f32 as ops::arith::SubAssign>::sub_assign",
    "hash": "95866588351778875452030063924853783222"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Add>::add",
    "hash": "1466756203626082901812787869483734455809"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::AddAssign>::add_assign",
    "hash": "848179504263871941318347863005393069652"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Div>::div",
    "hash": "1651313636890762869017492570034900671199"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::DivAssign>::div_assign",
    "hash": "156443184024307128310972022217848517019"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Mul>::mul",
    "hash": "37196452232960957275834726983881379845"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::MulAssign>::mul_assign",
    "hash": "135372720669771267041680395289283013335"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Neg>::neg",
    "hash": "94917775837660010105103458926471988539"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Rem>::rem",
    "hash": "1207293414800769758211020069420092734328"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::RemAssign>::rem_assign",
    "hash": "97594274110799724572268041332890878368"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::Sub>::sub",
    "hash": "76895295874023286254370474327841238756"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<f64 as ops::arith::SubAssign>::sub_assign",
    "hash": "1133622152545893669414267530778515525837"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Add>::add",
    "hash": "81081345436441911511787820147821989617"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::AddAssign>::add_assign",
    "hash": "42724838397693041811720003157342995542"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Div>::div",
    "hash": "146235263903814806372135477350972607117"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::DivAssign>::div_assign",
    "hash": "20847388641762907411434271066789914019"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Mul>::mul",
    "hash": "325882811284785664014021012347652791676"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::MulAssign>::mul_assign",
    "hash": "73972501604365649745531602843083763829"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Neg>::neg",
    "hash": "175234622896211981605570121977548503585"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Rem>::rem",
    "hash": "83854614742353051829748266824258733405"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::RemAssign>::rem_assign",
    "hash": "146175093627086197246852390710009323811"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::Sub>::sub",
    "hash": "175374606197542171534928143358512746292"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i128 as ops::arith::SubAssign>::sub_assign",
    "hash": "143386577201626269031167460438565392051"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Add>::add",
    "hash": "109068966914419734066535868852253827593"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::AddAssign>::add_assign",
    "hash": "1196059228034147591418162131038928297383"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Div>::div",
    "hash": "1187786556275411742715824447716645801621"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::DivAssign>::div_assign",
    "hash": "164228012167557750591133930079935555081"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Mul>::mul",
    "hash": "1030912222517735742815943874676521778027"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::MulAssign>::mul_assign",
    "hash": "179828090583956900696002943134188882120"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Neg>::neg",
    "hash": "120942969721408292424478769160135580361"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Rem>::rem",
    "hash": "172150505579848275018526604286412010525"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::RemAssign>::rem_assign",
    "hash": "90467022941427458067744024298476248884"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::Sub>::sub",
    "hash": "159922198330248079016334489425729502799"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i16 as ops::arith::SubAssign>::sub_assign",
    "hash": "1796489002623445278114749698835331729815"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Add>::add",
    "hash": "77185369457249098464155481060812859142"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::AddAssign>::add_assign",
    "hash": "139926060617453547249890693933529731160"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Div>::div",
    "hash": "47427988810867112511701652535243996597"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::DivAssign>::div_assign",
    "hash": "251345762196745341715310538573754656102"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Mul>::mul",
    "hash": "5746620110076941890393924546172265193"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::MulAssign>::mul_assign",
    "hash": "800744263081440813014842426919989215777"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Neg>::neg",
    "hash": "1590738971985012068510086835313138783398"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Rem>::rem",
    "hash": "131618058140592502707936116147389527802"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::RemAssign>::rem_assign",
    "hash": "1590819175088097534312877980073892113380"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::Sub>::sub",
    "hash": "81242691978521507017045976097177296279"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i32 as ops::arith::SubAssign>::sub_assign",
    "hash": "49889421610186144031315209653351375752"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Add>::add",
    "hash": "14620532616904563291729286969461187246"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::AddAssign>::add_assign",
    "hash": "70141850491396280443049495997208662076"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Div>::div",
    "hash": "500326900068540222318372407201959608975"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::DivAssign>::div_assign",
    "hash": "143618594247548080628352109551500320134"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Mul>::mul",
    "hash": "619201222836156465511321174373788644708"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::MulAssign>::mul_assign",
    "hash": "13478585838161578578778240380928108868"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Neg>::neg",
    "hash": "49607340107363979017121361693537737273"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Rem>::rem",
    "hash": "128088602548457984945510225741661437383"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::RemAssign>::rem_assign",
    "hash": "14792114135378300507441082336909862393"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::Sub>::sub",
    "hash": "18665387412840549702283932246524533893"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i64 as ops::arith::SubAssign>::sub_assign",
    "hash": "177889291374313686605337138552777199420"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Add>::add",
    "hash": "164082576094428239807476047517251269369"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::AddAssign>::add_assign",
    "hash": "1688389175671156491315763530704625473775"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Div>::div",
    "hash": "194661670371145737110630950678161759384"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::DivAssign>::div_assign",
    "hash": "145045034671243202551670065134238740950"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Mul>::mul",
    "hash": "7784599862890416926218815310484658722"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::MulAssign>::mul_assign",
    "hash": "10466610105691184607565629189448238713"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Neg>::neg",
    "hash": "158198086017895889292121599651724582555"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Rem>::rem",
    "hash": "134063440561742409566196864405689127720"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::RemAssign>::rem_assign",
    "hash": "51949076510210518110669858569657434335"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::Sub>::sub",
    "hash": "222644032068352143918423038409686535361"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<i8 as ops::arith::SubAssign>::sub_assign",
    "hash": "819148946907705434512713872300477108370"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Add>::add",
    "hash": "20675063769361592983460863250219276478"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::AddAssign>::add_assign",
    "hash": "124696976076978134968769272407112690419"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Div>::div",
    "hash": "3365533673523388531739043807070141501"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::DivAssign>::div_assign",
    "hash": "12506007869113131164408262619073517484"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Mul>::mul",
    "hash": "1724617671844325995216610615622207020158"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::MulAssign>::mul_assign",
    "hash": "374703405915795400914302958496017565804"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Neg>::neg",
    "hash": "45854309465719257514649251416842205608"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Rem>::rem",
    "hash": "1085761026938620114311175436509494735147"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::RemAssign>::rem_assign",
    "hash": "1758727827592242408310288403871536369717"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::Sub>::sub",
    "hash": "786985696289387854410031762581636612419"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<isize as ops::arith::SubAssign>::sub_assign",
    "hash": "108559067992649614311102274249404957372"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Add>::add",
    "hash": "1197746941145723852115489424735114863271"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::AddAssign>::add_assign",
    "hash": "151926035067081991759278693152051698639"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Div>::div",
    "hash": "1295911721493324621618292748126865196982"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::DivAssign>::div_assign",
    "hash": "3922639408804788756022147895111153389"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Mul>::mul",
    "hash": "132486870619041523994976907011015339739"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::MulAssign>::mul_assign",
    "hash": "1187071829513987653614029781094178890104"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Rem>::rem",
    "hash": "168397008568142486316266217614214888701"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::RemAssign>::rem_assign",
    "hash": "1693250727852011893611482202983357957396"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::Sub>::sub",
    "hash": "1198798023554291761010255938228597867739"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u128 as ops::arith::SubAssign>::sub_assign",
    "hash": "46436299543765754714181056360459085179"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Add>::add",
    "hash": "52758699502306501110391420278485327271"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::AddAssign>::add_assign",
    "hash": "112917208546565797114768184328495918951"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Div>::div",
    "hash": "682743189982131318515232599483422101851"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::DivAssign>::div_assign",
    "hash": "89820732157403748945972852909558238132"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Mul>::mul",
    "hash": "853851867099870715812518287403549493437"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::MulAssign>::mul_assign",
    "hash": "541756836287169854514156491430489767507"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Rem>::rem",
    "hash": "174052668188947649510638586160461219281"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::RemAssign>::rem_assign",
    "hash": "1830588514809082222716616105999749431833"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::Sub>::sub",
    "hash": "1800224935369087051217563832395714733767"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u16 as ops::arith::SubAssign>::sub_assign",
    "hash": "1801687238166742434817636635188105674150"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Add>::add",
    "hash": "25837518710313335584708645013588549966"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::AddAssign>::add_assign",
    "hash": "145235157646124189707434230959305972605"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Div>::div",
    "hash": "106262635413053470508907305342630018167"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::DivAssign>::div_assign",
    "hash": "154115115354258425867106137903297804723"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Mul>::mul",
    "hash": "859781069528371082512787708600522179974"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::MulAssign>::mul_assign",
    "hash": "118960613854590611362511150045599945494"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Rem>::rem",
    "hash": "1583992668097486176316370890362107309735"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::RemAssign>::rem_assign",
    "hash": "52657161711909787416569643954868893041"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::Sub>::sub",
    "hash": "47305759493779978736248041290748286456"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u32 as ops::arith::SubAssign>::sub_assign",
    "hash": "14316869148473744066138916311821142931"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Add>::add",
    "hash": "55917943633276309241182462827743145352"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::AddAssign>::add_assign",
    "hash": "704840513522480098310145212182318700236"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Div>::div",
    "hash": "58711022303336625332441950900032083054"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::DivAssign>::div_assign",
    "hash": "676112166721812795810525693625349606511"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Mul>::mul",
    "hash": "163765905180608858861394751221464565661"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::MulAssign>::mul_assign",
    "hash": "27821909934143491188965609980388859053"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Rem>::rem",
    "hash": "8265898836761821487075610759989729955"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::RemAssign>::rem_assign",
    "hash": "653465777151719369414775580659204391987"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::Sub>::sub",
    "hash": "1661388589671921202315983970088931436982"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u64 as ops::arith::SubAssign>::sub_assign",
    "hash": "116459694597558320414394035028718290027"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Add>::add",
    "hash": "183281903053699309447362030051785620368"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::AddAssign>::add_assign",
    "hash": "22380792486404006764070081343836352547"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Div>::div",
    "hash": "55342735878793283837406535498154678068"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::DivAssign>::div_assign",
    "hash": "86401599724459608932493513211151664165"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Mul>::mul",
    "hash": "1599264222769131942313826965020943600085"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::MulAssign>::mul_assign",
    "hash": "1681032158368128028611796911417072959628"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Rem>::rem",
    "hash": "134695097660048879875019340095874932304"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::RemAssign>::rem_assign",
    "hash": "180405980985541486044254773117782374577"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::Sub>::sub",
    "hash": "23910229177182778409883149657293624872"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<u8 as ops::arith::SubAssign>::sub_assign",
    "hash": "451934673868751138614411092960282648798"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Add>::add",
    "hash": "912958904995502815714299667289179916790"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::AddAssign>::add_assign",
    "hash": "73874208844303192245229503337462407714"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Div>::div",
    "hash": "177018033298468110587646479752755890252"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::DivAssign>::div_assign",
    "hash": "1389889210548297579212905551010874390720"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Mul>::mul",
    "hash": "144781703402981315297740066978899353677"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::MulAssign>::mul_assign",
    "hash": "538764744073448569213477295258893589989"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Rem>::rem",
    "hash": "975473349168200567211175610989107973377"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::RemAssign>::rem_assign",
    "hash": "983678435106585578110052253228306686547"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::Sub>::sub",
    "hash": "1192454602215149431912291499327009417004"
  },
  {
    "file": "core/src/ops/arith.rs",
    "func": "<usize as ops::arith::SubAssign>::sub_assign",
    "hash": "31627206950894617213951789781124449801"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAnd>::bitand",
    "hash": "906921669928473923913206683227021972593"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "153829805236829914839178960437268966023"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOr>::bitor",
    "hash": "27816940990712048114302995306347295588"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "138851910302015242107816531466344398103"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXor>::bitxor",
    "hash": "142043602733480279068288645326614272695"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1043774850377407380713579980912842086751"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<bool as ops::bit::Not>::not",
    "hash": "1383908445520766755411339997951122397690"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAnd>::bitand",
    "hash": "21235728036307436246090510651164710426"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "148121705905874405579876840147940597635"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOr>::bitor",
    "hash": "1595212928731108870315177796930867434424"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "62349271312176019768614840283580687214"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXor>::bitxor",
    "hash": "356801541843263118217514043502547564328"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "699547233266109022416075481150793615101"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Not>::not",
    "hash": "43156063413975743719270635148801913756"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i16>>::shl",
    "hash": "95787205559945705185117436980849136704"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i32>>::shl",
    "hash": "1132737516790460176618026432741338629384"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i64>>::shl",
    "hash": "52140007731576324863952537566915213273"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<i8>>::shl",
    "hash": "1487683196504668093217662123194085505104"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<isize>>::shl",
    "hash": "101180373534390660638905396528612673033"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u128>>::shl",
    "hash": "1026065919037134448413676227740722471577"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u16>>::shl",
    "hash": "877118447071517320717460563802731811133"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u32>>::shl",
    "hash": "779282326962566312114721892605360124900"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u64>>::shl",
    "hash": "1765247622534172320011759260360339567112"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<u8>>::shl",
    "hash": "58232099467213167723592795222597260116"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl<usize>>::shl",
    "hash": "1441853276227729333110956941756025786069"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shl>::shl",
    "hash": "228921586736303312417460227546414381812"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1605588539948693985310358881939490782410"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "8630790650172794562177617852803201782"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "525956454310320155412069110021577864779"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1373087566193964701811602943942960753849"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "527251264095785204017290173917731615487"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "182668941051721532432933802412683231488"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "175102549545662868445283322506944317411"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "23701611250057590143220662716220526810"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "58763051763563111139305401945292603994"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "159877042718569792181321286404143545291"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1326259275340178091616472291930550527205"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "29565161260299370059991015881229789030"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i16>>::shr",
    "hash": "165696276708949870358005764668151903708"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i32>>::shr",
    "hash": "145878265363904977791989652586021193922"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i64>>::shr",
    "hash": "660051071196624843010102085095272744498"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<i8>>::shr",
    "hash": "114406807060156960853313481541173458242"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<isize>>::shr",
    "hash": "1768426416663601141016861258180295602458"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u128>>::shr",
    "hash": "144573238281175365654270337293749736834"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u16>>::shr",
    "hash": "1568248226790754477911914193857029560998"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u32>>::shr",
    "hash": "1628406499427042543510962463517014666945"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u64>>::shr",
    "hash": "46230063400405157372824134367815327184"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<u8>>::shr",
    "hash": "1694047573355305851915528455670978879017"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr<usize>>::shr",
    "hash": "126268337602716816872642600448034353893"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::Shr>::shr",
    "hash": "429557965836338850013344674745957419861"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "45894806828529842607588191790321889187"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "34612083417363642716305834145112728017"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1833901062561956944414602427707310010842"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "7643521812102838540826984222657256520"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "45077924237809898761688133049389367804"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "371832247178412383014832723623714015410"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "17114147143553370090270950405520159944"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "63707822957479021194122113707414720948"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "162924196595221983292159271226285250364"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "132786345555525011567579701269034727960"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1588289779507626094012614093074937861833"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "4168011932083369607732100406762846703"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAnd>::bitand",
    "hash": "18384934593158381429276537754481725753"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "83320749588422059843807923559150507381"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOr>::bitor",
    "hash": "721958225862755363416765825675427435553"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "697957357894306008912841472491794702871"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXor>::bitxor",
    "hash": "170763359741589495346552269155207525925"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "50064428475301691775053384610348204988"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Not>::not",
    "hash": "103143685575063265911548160577397077815"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i128>>::shl",
    "hash": "142834688970550386417088307367120866018"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i32>>::shl",
    "hash": "46686415213124696281692556631315384726"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i64>>::shl",
    "hash": "160777143156496683354692025394330177503"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<i8>>::shl",
    "hash": "13497757979392778959584917407963364637"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<isize>>::shl",
    "hash": "29515504500184860692086749015466415932"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u128>>::shl",
    "hash": "3496393860309566772967325093738724441"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u16>>::shl",
    "hash": "825291861148271102817122282868267102400"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u32>>::shl",
    "hash": "1605537433961174728115370448452232056430"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u64>>::shl",
    "hash": "64490828866157311467461844026263287029"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<u8>>::shl",
    "hash": "40762695894895974348376143333910899999"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl<usize>>::shl",
    "hash": "152664688724865134878882515195584321199"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shl>::shl",
    "hash": "17034153373329417047519569979899549093"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "7552845294720616005298102929040114462"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1134147634633583015114540046359909408803"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "196356510756626750213543923806842065047"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "98128717375178271815780474337641287093"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1487663823676149540715022258229805940862"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "3662921581425254178550898407270503739"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "6244919208893861227781057427245074304"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "23460986581125757392233984544364934585"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "627429201702617137916249901808044270780"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "781038700636729228313325400734336620285"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1751843067989220550812038013521099073130"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "833226654757356104918249339474224146731"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i128>>::shr",
    "hash": "181405824520105526294023438725776640967"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i32>>::shr",
    "hash": "98877895177247028483069959713520449855"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i64>>::shr",
    "hash": "269304453975523975011966758848823551540"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<i8>>::shr",
    "hash": "107020536013565172962134232152152697035"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<isize>>::shr",
    "hash": "1197933062545571973413481203803829917135"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u128>>::shr",
    "hash": "62960450928280196152926867880723020290"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u16>>::shr",
    "hash": "1365575753766069636016009839404485908829"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u32>>::shr",
    "hash": "159082678328579827312216175913355144189"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u64>>::shr",
    "hash": "153591338875855698928382014274668973254"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<u8>>::shr",
    "hash": "244172903127651508317963545273235495704"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr<usize>>::shr",
    "hash": "853259772833350151612270771807436379932"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::Shr>::shr",
    "hash": "1671215140302703738610735199176862916251"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "493766771090490927316806705682508854529"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "76500864670048385503445645359048547225"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "914745575956227961912488121262354418008"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "91490586572016269808263133941713140952"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1159394922697611695116283190239410659509"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "9495055948728719276030068959400332254"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1170773249443265410114906843425604092892"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1350833213422224038514338758340365777840"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1342572178959480054610761280522411443068"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "19819930893923128873245499588928673003"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1587086854325467155316369212687928237441"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "168941105219326622055377608199471232250"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAnd>::bitand",
    "hash": "1645046872314059000913274305337790978503"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "53704809455856171561720831266145744837"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOr>::bitor",
    "hash": "427652142305997806610373873673534396752"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "53663243141164450710137130662910782767"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXor>::bitxor",
    "hash": "1042387547752629898413392239238880846162"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "145181386992935534291044601032402248475"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Not>::not",
    "hash": "34584900926520587781979468715834872043"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i128>>::shl",
    "hash": "1821975307440623338813823671771111110499"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i16>>::shl",
    "hash": "1471573262725823858113432173937240705995"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i64>>::shl",
    "hash": "84086704209866337662375837809873846807"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<i8>>::shl",
    "hash": "27001431706711534476788141487711618391"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<isize>>::shl",
    "hash": "110640998882711557207297477679544078773"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u128>>::shl",
    "hash": "523067128762410905814407945449278754409"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u16>>::shl",
    "hash": "61785137512988445913292659393888258390"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u32>>::shl",
    "hash": "5757447566462625980517210630529724172"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u64>>::shl",
    "hash": "209244435855110295417629722272902776454"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<u8>>::shl",
    "hash": "56793193021431176659379345880310967578"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl<usize>>::shl",
    "hash": "127219517725845322601752514155417752669"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shl>::shl",
    "hash": "339073917090243950014380183406742352935"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "395642542311854066617787014201111354428"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "96131934602774035504583864215645477309"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "164476277679029097137119685977844673251"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "1691723362798068073514123660564103327022"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "136333271712364638033683644598884459513"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "448181847471591384512272338477122670275"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "113488868904745510762877635190696222604"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "527780335182788802215242817105864929115"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "477265898675743143317818640181749896044"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "1156008492176408071411780213216410245430"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "622022246251368937869881224605319166"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "69772407047062732195536441081043917421"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i128>>::shr",
    "hash": "89943239761477108177662213875606609196"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i16>>::shr",
    "hash": "255421629089989651214181811050627642573"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i64>>::shr",
    "hash": "240718379010902775114483342681792810603"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<i8>>::shr",
    "hash": "1174424596104105359711272775329126919666"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<isize>>::shr",
    "hash": "853712746465279532012070658201975744020"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u128>>::shr",
    "hash": "1191055223905377941712285354729455913013"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u16>>::shr",
    "hash": "177333949791419441268428903953923715355"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u32>>::shr",
    "hash": "133915886668971316337535410336497817124"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u64>>::shr",
    "hash": "105269737437565871912077368914295522094"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<u8>>::shr",
    "hash": "41604813008713368834401427556651338737"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr<usize>>::shr",
    "hash": "114135937043113403901497033654736242123"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::Shr>::shr",
    "hash": "167630198641295478987485170254175165563"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "1315021631671852415716072052481437371499"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "1400190205132424994017932617718882226152"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1557480253094778658015477514066551627349"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "13395544257841625709955953374631016749"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "227479142530716928113216220640774371286"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "102578677432934397407545284032163577002"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1039556618955804553717363628832905810788"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "144365741106437229147891421990244478046"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "82765521771431913676478057828566186389"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "671264821421999720317803424813476396064"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1008960306298541247512099817413186068084"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "59742573591141647468330812945250917574"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAnd>::bitand",
    "hash": "69886794951824368723313029027693158264"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "759691720297111184912256812368841350130"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOr>::bitor",
    "hash": "677900160743374459112420874961842789961"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "35276720588821456963348057723162677121"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXor>::bitxor",
    "hash": "35932030741010115716130532255851646841"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "120745289774147222319178348503731837977"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Not>::not",
    "hash": "135321212813301038557609744785414650753"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i128>>::shl",
    "hash": "91923713038213266355643983668660931507"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i16>>::shl",
    "hash": "1508913443811551751816883693718735945996"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i32>>::shl",
    "hash": "128616165962712296852952719377933474244"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<i8>>::shl",
    "hash": "33529569224612363818000240821094817071"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<isize>>::shl",
    "hash": "107221681845586757584667430323605427659"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u128>>::shl",
    "hash": "100346173265481134066384058244819744075"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u16>>::shl",
    "hash": "106752936963788272814846934901820389998"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u32>>::shl",
    "hash": "1644978093747894364114150853998474682559"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u64>>::shl",
    "hash": "789412708186771745917062146896705603253"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<u8>>::shl",
    "hash": "770142634228708177711528178809719839002"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl<usize>>::shl",
    "hash": "1355798345621415082111637110096439356813"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shl>::shl",
    "hash": "169241468483318732695028740134675091058"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "176716609162825967344291169738479813037"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "18308514989922710447372397763298239020"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "57234091721222527416678348773219277913"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "288862249595590448417575407384230010854"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "385561912076092486914754266611877942911"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "8438526860098540040962006961934080174"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "621643857830434737815192330125261022344"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "170455194166510752668506114151958928160"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "16785766998211899443329014221965428436"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "126910512767932693926610509511277511091"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "40433431991874630717884895377553550241"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "180950729329092821448644150537664534980"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i128>>::shr",
    "hash": "1466455382646380192322109950551061720"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i16>>::shr",
    "hash": "142663111850165591457386074950876393566"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i32>>::shr",
    "hash": "108650712489741825697877515668757133362"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<i8>>::shr",
    "hash": "1615725747417714502513479476972476099948"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<isize>>::shr",
    "hash": "485788401966471864816557758277425175148"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u128>>::shr",
    "hash": "1153823612410711185814717013936341119984"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u16>>::shr",
    "hash": "801963656662306138013428748462092456722"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u32>>::shr",
    "hash": "5575114529725399155025356708214242615"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u64>>::shr",
    "hash": "544058472982827046516616864427560859803"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<u8>>::shr",
    "hash": "1751419197635572677318125906829174576167"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr<usize>>::shr",
    "hash": "185509226224287630116560830961215996733"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::Shr>::shr",
    "hash": "604586316345383949414501265733513530211"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "154150811743064029425149370321944411625"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "1738291854007741861614878250523968681161"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "57327202444523824298070302061554210700"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "449289760717033023717421350860452873455"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "733175562760045521410796193992527913060"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "971062088004776639013896890291215102675"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "133578286406093475132538237745634275263"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1493601942861370273413549319048449656257"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "137287480846679361287240388457724228546"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "40273456600129056253083586085940829732"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "1466379795902021643613567583684067847416"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "767109109241329594510625005700945684647"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAnd>::bitand",
    "hash": "1136103646831438616011540060017991023511"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "50171344140645262869419377273552572074"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOr>::bitor",
    "hash": "21940479949761972038452715798090848483"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "356069893385529327311858868889687032019"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXor>::bitxor",
    "hash": "1129351755187962457616950589383304100797"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "121468265155707524944554945464237078319"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Not>::not",
    "hash": "253799217391731472412900924332762000040"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i128>>::shl",
    "hash": "29918167041140105513235589017547811928"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i16>>::shl",
    "hash": "118158062859405513058636521249587045677"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i32>>::shl",
    "hash": "125438533451938264458360145376170770043"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<i64>>::shl",
    "hash": "5609262182160880033405321711471262384"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<isize>>::shl",
    "hash": "98173903258803633877091527500624685212"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u128>>::shl",
    "hash": "1556656353026539780415867558245535080777"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u16>>::shl",
    "hash": "27543368378705467083980275358709766918"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u32>>::shl",
    "hash": "990258555939220010215409845608882144289"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u64>>::shl",
    "hash": "877287832312641420615374919579158235213"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<u8>>::shl",
    "hash": "116153282985915750787666193698241668291"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl<usize>>::shl",
    "hash": "140445668824331174633987370678653732430"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shl>::shl",
    "hash": "118774435701237133513279220865269683326"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "129320280742499792432570115157322614218"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1794745396336037672111263549373617745394"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "143822521839266699418920784892746270518"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "88422102346498608157855932343083834324"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "326461707868373449910237304811239819025"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "92238887575318472321558024691445039505"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "51087303685429290716839359189444612433"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1545667118344164820712227689999087168457"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "419796349533010536916501331205065005763"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "783702734218729297814383771385366558921"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "153433044445585382524659668797530228307"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "4868164695596114603244710035677500462"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i128>>::shr",
    "hash": "18780316351374095206532959947204224412"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i16>>::shr",
    "hash": "132648339554971378422470650784694614800"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i32>>::shr",
    "hash": "12871386117929471801855808920851378433"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<i64>>::shr",
    "hash": "1640357900799083134711365854959733678578"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<isize>>::shr",
    "hash": "96067997767251626522048163767831173160"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u128>>::shr",
    "hash": "13331847077374275588219223284988299783"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u16>>::shr",
    "hash": "125562032976380605349771178227225556004"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u32>>::shr",
    "hash": "691483398455621334216806180923662983259"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u64>>::shr",
    "hash": "51157468233219989417342907454552362954"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<u8>>::shr",
    "hash": "458481156261651920615927026877607185814"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr<usize>>::shr",
    "hash": "1485714646244395142310397896346543068898"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::Shr>::shr",
    "hash": "1179534377478442321614089127928018982174"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "86950008013441278411078049911820060875"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "1792623907488980791716195297906206248915"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "3226274435926490457949309096899921054"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "104139913185044708885818288113183934243"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "126966372616405863257808600036603711220"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "39334183305758196109457837065998529652"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "728715112371763425010985065570395838711"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "79264970776617795566898454870693516642"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1178636244003080594311895182075618035797"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "172821133596302280118720691272157864667"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "27190567316842859388975044661370394031"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<i8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "536140178566862942818183700674866825837"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAnd>::bitand",
    "hash": "97094633493241964284261741039331465482"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "41447873416437566813514239603712408886"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOr>::bitor",
    "hash": "42620048447012454378001007588315094487"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "95412624144022197408644036311571290628"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXor>::bitxor",
    "hash": "127978630011592548344777161052241799677"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "327274315281301438914520265111168529038"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Not>::not",
    "hash": "183770712992550069628853891426025378280"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i128>>::shl",
    "hash": "1290073099648134711717714538335805484286"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i16>>::shl",
    "hash": "1611350237430414535615525326608986677676"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i32>>::shl",
    "hash": "87868002268396307196691204577408953163"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i64>>::shl",
    "hash": "1701697194058885872915343913019084206531"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<i8>>::shl",
    "hash": "49452233173303826896004674417478314632"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u128>>::shl",
    "hash": "1193507079443607496812904755056626092831"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u16>>::shl",
    "hash": "536903269595617708714247148049442040760"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u32>>::shl",
    "hash": "178381077770080123899702432444118346206"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u64>>::shl",
    "hash": "166949246084108595972418799047074012387"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<u8>>::shl",
    "hash": "134186305170347040457763244414767360062"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl<usize>>::shl",
    "hash": "67999916102487000172064079419299790844"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shl>::shl",
    "hash": "1251259842973679994413667809332673216723"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "152050342718820400492040488148839564583"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "531271393929332591212541364032498120105"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "133506025432841166673494673082153835812"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "354801656468222264117209240039993938596"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "85783843935767386805200314590379729410"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "150203994297571291286158792322810117838"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "101751529309543416139193777322444929513"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "16185070296511537446605264339637319755"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "27665064413726685715057756047817540073"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "159330831888040877464887029179083063516"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1217632740539634759712114731154379822660"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShlAssign>::shl_assign",
    "hash": "2226622441407377484538411687210372045"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i128>>::shr",
    "hash": "120342386274294679252499339662780802414"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i16>>::shr",
    "hash": "77957895909664940139131524447977673337"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i32>>::shr",
    "hash": "1591994136049584782116723822847587501637"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i64>>::shr",
    "hash": "282377995966679926417073095214573654090"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<i8>>::shr",
    "hash": "93043380919189830567111127428120362114"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u128>>::shr",
    "hash": "1087649413465008926112981186650230732129"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u16>>::shr",
    "hash": "27802321311962542191816034517639237714"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u32>>::shr",
    "hash": "1254457176370460142914121520005934767081"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u64>>::shr",
    "hash": "116224835656855598556347300382545572570"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<u8>>::shr",
    "hash": "1458941106909166567813064834121485099999"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr<usize>>::shr",
    "hash": "7157926268348066866438193184741062313"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::Shr>::shr",
    "hash": "28373541123458325702377809025101176371"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "541650526026406498616625012878043668436"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "108089447273649878644994225382409858926"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "489376633768415458811764968582054503830"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "160346597412365604609750053435184932512"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1413569363363196947310129858942932366487"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "63703760700396232301676110548534234191"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "3655446996064570579364978192361462064"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "1253267254553413836918221096449650299790"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "138676462354037510854201123249893646158"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "612981765841916699916641396106277362909"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "577250798712242960311459563996408948436"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<isize as ops::bit::ShrAssign>::shr_assign",
    "hash": "343750160565752734610597265265485505518"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAnd>::bitand",
    "hash": "16935275302501844519336891487901923723"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "503131066897585887459954305273018547"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOr>::bitor",
    "hash": "1720278003505837889612336090193718738635"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "10464094461555283449626086680347486234"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXor>::bitxor",
    "hash": "94291314800373793621991836456452218160"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "47016072884327262503192843607024140074"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Not>::not",
    "hash": "306532846046326650516601673439496853391"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i128>>::shl",
    "hash": "598574432786058028710355800264164513443"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i16>>::shl",
    "hash": "93116813887439731727775713860732487439"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i32>>::shl",
    "hash": "61384563504248383339121063256491665441"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i64>>::shl",
    "hash": "66244267775632773186857500934021937999"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<i8>>::shl",
    "hash": "180018586827073743215705357471595989666"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<isize>>::shl",
    "hash": "152838181049855948327277574968239321461"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u16>>::shl",
    "hash": "111035374109451614526543959149931673495"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u32>>::shl",
    "hash": "95453584551204974813325710891627959828"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u64>>::shl",
    "hash": "45223926706320896286722661358388489881"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<u8>>::shl",
    "hash": "158760406915015758932115287357714746814"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl<usize>>::shl",
    "hash": "13263524038585895163042494840387818259"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shl>::shl",
    "hash": "464637318609123433914821339858421214464"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "93026577632447200324537673493965661285"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "26526203346678096098024456772273577800"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "116689142437874676815999660959237410832"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "83992527850467406643252032173785802099"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "3930114295287881033982865968648322844"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "72362259378738766251081400864925240967"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1527992347536134797211785191236292617512"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "7137982422056388216600189220218915991"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "5438966633474083035618344876718851084"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "180478334493900578914758570297041268299"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "21426307827303700084007494953517452587"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShlAssign>::shl_assign",
    "hash": "136833350417881420666892702957686996069"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i128>>::shr",
    "hash": "1271553290965325912015949246953633224236"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i16>>::shr",
    "hash": "600385163185842798915018950898264764220"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i32>>::shr",
    "hash": "147493269325935944838622951391523457805"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i64>>::shr",
    "hash": "24083118708996327604914893800076449849"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<i8>>::shr",
    "hash": "1409056020821277771790595216635643932"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<isize>>::shr",
    "hash": "4925158095276116089238184525899612071"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u16>>::shr",
    "hash": "48390621787657210084701217788812703378"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u32>>::shr",
    "hash": "164850717904524180717907582072228753852"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u64>>::shr",
    "hash": "1213559949009543487614468410744885452424"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<u8>>::shr",
    "hash": "48201327661858798328548617606152661377"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr<usize>>::shr",
    "hash": "30171606085848513136399574477795840385"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::Shr>::shr",
    "hash": "3405494379741343435495508655315948782"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "470687154084301291917917258871234966766"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "134290855052500832919909518464714593377"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "20091904758110833456674378952915482662"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "73799123861956224231426173466750539489"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "11941189918431798117487031873250316990"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "152293218688722326488292606251932926377"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "1011487303491447705511944349413027430673"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "628915863882990803014906614104427572745"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1284977665881293552113202024720039366905"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "39830822279098266074095657303565441548"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "40950023357030451057699060731542769412"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u128 as ops::bit::ShrAssign>::shr_assign",
    "hash": "96181997907171026317779011316133085302"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAnd>::bitand",
    "hash": "325479770233977881213950825085078916664"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "382256063096199630112284918794235073075"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOr>::bitor",
    "hash": "388401362632492967315959147222977013629"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "56195377393316775142039649160399671921"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXor>::bitxor",
    "hash": "128048464034453724112215409131803828371"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "110695359400891408414688309707834193526"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Not>::not",
    "hash": "1769267336194173786215557763131271975638"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i128>>::shl",
    "hash": "36678287104119518494943372916451171831"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i16>>::shl",
    "hash": "440658781001318542615169551411740638485"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i32>>::shl",
    "hash": "56363314086813356519179564779519403439"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i64>>::shl",
    "hash": "2512449786429290405609209740487252037"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<i8>>::shl",
    "hash": "1823508737857169837318391293822579913"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<isize>>::shl",
    "hash": "1833003758681536210516644317907768096896"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u128>>::shl",
    "hash": "1354688777397243645211641276490099057202"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u32>>::shl",
    "hash": "52060058445710634605067845486855716502"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u64>>::shl",
    "hash": "474267511600508336212927656773618781646"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<u8>>::shl",
    "hash": "38201834691201536671521648431287181868"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl<usize>>::shl",
    "hash": "1694355373298611627713817391530741980297"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shl>::shl",
    "hash": "1214713603305766379415348600084728583646"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "64914956517582799464481793982763266564"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1295314052106416692211501322278374308577"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "92895798301555951059856350489825112798"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "17868830880369543259201461451350605141"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "135294575907573333184764213607518295551"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "825335713526191516710489309596790564028"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "94184263229376777267433455851418509921"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1203228721512532420211053290701328509824"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "50512627637040836549618362695169847296"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "1258628239700639874310753691313686388052"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "1238248649875111355812409420290645308903"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShlAssign>::shl_assign",
    "hash": "436408190503554940711827643255813570591"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i128>>::shr",
    "hash": "528754407194410939211602280696789228703"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i16>>::shr",
    "hash": "147695051401653948551328171575439423172"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i32>>::shr",
    "hash": "1797327712958513178113656459401822906453"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i64>>::shr",
    "hash": "155736364303616813385564085872199337414"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<i8>>::shr",
    "hash": "75000672426428983823080968966013204300"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<isize>>::shr",
    "hash": "1156088937279615860912842188265372564477"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u128>>::shr",
    "hash": "92938026687061530249027452248899738847"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u32>>::shr",
    "hash": "2518322654138610486529448527200356724"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u64>>::shr",
    "hash": "1500068125504148132215504930171969187901"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<u8>>::shr",
    "hash": "1733301938113167054917792996517541202196"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr<usize>>::shr",
    "hash": "6990814321359580871885975668483326199"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::Shr>::shr",
    "hash": "147132398737558385553516468644697935490"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "27081141689869735362620658029662313345"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "146800564331577935577360649264457762328"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "715967223029514848821646177567065699"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1020701081078342034515238061430269283435"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "118812515764835220203404620998439741665"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1609251874534391922711015939134908914058"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "1537926177390593864813671762584223473556"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "336295568831555776415450561555649241758"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "1241924009367232334511323609216760482151"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "1638195268352940150816792426718969840884"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "149062167322653494454466950096785456374"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u16 as ops::bit::ShrAssign>::shr_assign",
    "hash": "182237101106554016984840562088079634120"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAnd>::bitand",
    "hash": "130782247391498634147499070895463276572"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "9986895385777552811070743177470227046"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOr>::bitor",
    "hash": "99373831605585947409593946707737651171"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "519239045920473703016012183968677721337"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXor>::bitxor",
    "hash": "1349921314849487026114061080783903239429"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "147009832892347024795303544309029560054"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Not>::not",
    "hash": "82715122748420463235817543813455312811"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i128>>::shl",
    "hash": "70309413743702551311198569468503823544"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i16>>::shl",
    "hash": "3509814440144857157820500209150274051"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i32>>::shl",
    "hash": "1435430552901544784411806184701474680877"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i64>>::shl",
    "hash": "165177069184532495601474905669063340536"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<i8>>::shl",
    "hash": "175535028229892136559034183559044618968"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<isize>>::shl",
    "hash": "1295739643469659270817247632240775022137"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u128>>::shl",
    "hash": "91449373623739862106899792994607270344"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u16>>::shl",
    "hash": "116191707886541419392869205154222265935"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u64>>::shl",
    "hash": "565916717905257163013718734882712372349"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<u8>>::shl",
    "hash": "1266609823636084079512205487389008823055"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl<usize>>::shl",
    "hash": "103740764201172552524597913310165572856"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shl>::shl",
    "hash": "113043117954007193897609568558735922105"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "85946015862011464923811149176075374311"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "422745224559667980717615452003398499728"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1469032834635212958110163065103098815842"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "168749848214407524413808092211565227495"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "163720669020761755753606748517684881868"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1450220120617324219711097434526200918023"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "62017699686822280129169965797952546900"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "73977707108676878682626553556154680098"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "10768839390512287879496154424882383233"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "22151538990984638729007375135052314424"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "77641488421737698491732188396780384768"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShlAssign>::shl_assign",
    "hash": "1261572502056373824616176421270046289675"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i128>>::shr",
    "hash": "796482092517871574812927008674502485785"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i16>>::shr",
    "hash": "145134842049271257396501958028912885646"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i32>>::shr",
    "hash": "109195881216129389939473588421017326077"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i64>>::shr",
    "hash": "40513718886041062477598947583095258947"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<i8>>::shr",
    "hash": "464293777726923393416209224515754787745"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<isize>>::shr",
    "hash": "823905086862142715613854222280918064616"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u128>>::shr",
    "hash": "122779388146515078555303908335733882998"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u16>>::shr",
    "hash": "58619779459692500213886991127938338464"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u64>>::shr",
    "hash": "121879788052400034422997944238143323786"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<u8>>::shr",
    "hash": "134117945695350231064244644889573103988"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr<usize>>::shr",
    "hash": "111259896858326436137577932984267833560"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::Shr>::shr",
    "hash": "646615818175370062714416888860782293671"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "76982204651809446795702328439601866130"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "11562423296694850703752111813323659407"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "1312131155499418191312050999772501991651"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "42235012098318305218413055460057115826"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "106373773168962560169695206079654366980"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "447041235002378254115396296095180848621"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "19042349031908700307335544069110922787"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "104720634751716348011635681044653485902"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "57937112397462256127326205600301730237"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "394322311517896535014448893346840371741"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "297909901306175427712454025581667001186"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u32 as ops::bit::ShrAssign>::shr_assign",
    "hash": "2958786934520854381614253949743755195"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAnd>::bitand",
    "hash": "50523354724030880831327875388189611113"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "750964505338457206212782365930206467602"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOr>::bitor",
    "hash": "26121129703093063263222623790233175481"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "35056082412082719901457215214449973503"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXor>::bitxor",
    "hash": "140058942813656881081455027097743616543"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "808375556047221187516890171496368514821"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Not>::not",
    "hash": "434893180110166846449328389933027175"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i128>>::shl",
    "hash": "1981870805054721885833466530984558845"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i16>>::shl",
    "hash": "92652705267307576454024059946551493130"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i32>>::shl",
    "hash": "1627676861037929962211250501584692699230"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i64>>::shl",
    "hash": "10461149713740648228444717880391372487"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<i8>>::shl",
    "hash": "469231530042483120612187032484969263092"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<isize>>::shl",
    "hash": "13301586826132934187775946664350548051"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u128>>::shl",
    "hash": "739804957534531201410297132128819391152"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u16>>::shl",
    "hash": "66887348436167162965081046020466720152"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u32>>::shl",
    "hash": "1606685684667770608115077204397271457881"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<u8>>::shl",
    "hash": "156133837147911734779642589068206186464"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl<usize>>::shl",
    "hash": "115640691826655416917898591171957796951"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shl>::shl",
    "hash": "98555000173888531047801915872304442830"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "1068119136609239859715620159468215663163"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "67110084127813386742962254227354354907"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "15947351342933957212443655937827443577"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "113565363846123183062784382433752810918"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "9363307399393253674676812066060543510"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "129416317655786519358165038187583953292"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "499383982804016327118420105676190995259"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "703024169724058837710599347308479835405"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "1188598174410972420116535041168262928464"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "36826564534108208271732879487217876564"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "555880579055366688815679361328518532967"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShlAssign>::shl_assign",
    "hash": "792452755592572738217590668833507078991"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i128>>::shr",
    "hash": "486763541170880776613662221349371635330"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i16>>::shr",
    "hash": "1843711406810439382717914387670578818464"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i32>>::shr",
    "hash": "1475757803749846942415727758869516028278"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i64>>::shr",
    "hash": "831048988182019695800858085554563194"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<i8>>::shr",
    "hash": "104607112724613743169658007287708314219"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<isize>>::shr",
    "hash": "1397349149436687231515071106006370333321"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u128>>::shr",
    "hash": "1623780648837478234514913108356494915392"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u16>>::shr",
    "hash": "140963540575923883436867343627671327052"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u32>>::shr",
    "hash": "1490552136042612163414710029597248229351"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<u8>>::shr",
    "hash": "832432416521516670210222468651143795929"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr<usize>>::shr",
    "hash": "66065398917665754347509490186762666447"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::Shr>::shr",
    "hash": "167499595360834864917588959244621798312"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "57639691600242234104520754568259198244"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "24644267490034573876815519213423014884"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "4084170625371858245797102360231925986"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "42829342264013359466021098568371630469"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "746121792751077106114169260820362017360"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "78278360322362368715900689554582256803"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "183319261320129007098589916423455025557"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "577702610832483476611246507545559769541"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "173770147942016359733793398123550619641"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "1237071363477604058717610312665149849580"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "8943276079635493708531487366934998422"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u64 as ops::bit::ShrAssign>::shr_assign",
    "hash": "963908799035908736014381042171330395912"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAnd>::bitand",
    "hash": "1286933054795033993512914339458757051475"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "510498434954839677117743852809523030606"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOr>::bitor",
    "hash": "1651101710801607405917544906620714957516"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "62148237174036097304552930054242848513"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXor>::bitxor",
    "hash": "123828456924657888813425162497820858317"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "1726334436627015666218137569323927809917"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Not>::not",
    "hash": "170819619438454851312218736113397145824"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i128>>::shl",
    "hash": "636612546855356237216640086403777624488"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i16>>::shl",
    "hash": "149768658272399887176392683947245055462"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i32>>::shl",
    "hash": "89114420532341896811035036514547685711"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i64>>::shl",
    "hash": "82705364692077726672559249734958981055"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<i8>>::shl",
    "hash": "848076847694366428112279151083956763757"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<isize>>::shl",
    "hash": "1719833184124879439312037601559597906420"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u128>>::shl",
    "hash": "1220478386617715344311512891498130054442"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u16>>::shl",
    "hash": "139581934023526688162928922522431659825"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u32>>::shl",
    "hash": "1034533340783525320717912341781571513157"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<u64>>::shl",
    "hash": "88951883499170449704826521232523059808"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl<usize>>::shl",
    "hash": "1662351512311564228118097138408599687801"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shl>::shl",
    "hash": "14660338752678152210568916532891257383"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "183206744143439586739768404772240938477"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1547933134244130017516441658736272477638"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "728418848907629219015576488003497119542"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "1839580150145720428510394519448976407809"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "73227141297501321118415342185339658350"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1256115288186568022611365338264591572323"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "652756948353597752514760885249390272642"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "1369850524834648066015168705468246154757"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "9120325279822434763633220300946855094"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "15091042491082212014811853064146295307"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign<usize>>::shl_assign",
    "hash": "141539892063482375706816677667454116323"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShlAssign>::shl_assign",
    "hash": "35805655096500316437034433652371211016"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i128>>::shr",
    "hash": "115930660697468186922814725044809502830"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i16>>::shr",
    "hash": "25856454924089059965257135200260473350"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i32>>::shr",
    "hash": "342048578828249058514425479686550567168"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i64>>::shr",
    "hash": "1361646219270369939817036366404434662102"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<i8>>::shr",
    "hash": "68114314411080690473106046861452245263"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<isize>>::shr",
    "hash": "1186911301253859578913138255545019165024"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u128>>::shr",
    "hash": "711395379235675105313967282647314532033"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u16>>::shr",
    "hash": "1098177734537090605814492688638738639399"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u32>>::shr",
    "hash": "1208580275129651669111655991973878128298"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<u64>>::shr",
    "hash": "126314052385554585168059410013962395940"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr<usize>>::shr",
    "hash": "1187154544450526486910062827840423508032"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::Shr>::shr",
    "hash": "1812721251099074038917165408002012101934"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "466644290568782342415441080691238150669"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "85220202365100059158355922417026932360"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "579243908808517158716942512737071120087"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1034283134898459894713875672307137210089"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "102723771449373071409740352310567896681"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1483355300008859088216679406696707773166"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "108842136695412065616172350604995348035"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "899712802574440913632766333547372635"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "95598565952833061774842713072525818994"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "106175355574715298591784172533806606223"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign<usize>>::shr_assign",
    "hash": "12339236035681628314450196052184044369"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<u8 as ops::bit::ShrAssign>::shr_assign",
    "hash": "1483153703667162016317613025211776057909"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAnd>::bitand",
    "hash": "692882548699462707712725744914872754101"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitAndAssign>::bitand_assign",
    "hash": "719320254410452634617508980872623149021"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOr>::bitor",
    "hash": "285857876783884618212172514895803733332"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitOrAssign>::bitor_assign",
    "hash": "1243560055943777007017631076289542509118"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXor>::bitxor",
    "hash": "689998913341310125911337917014656169246"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::BitXorAssign>::bitxor_assign",
    "hash": "31648843310122590419026020187239415807"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Not>::not",
    "hash": "115022533124896762724261316378673921376"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i128>>::shl",
    "hash": "179373407680719677534064278595057421550"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i16>>::shl",
    "hash": "167926389484709665754553399297309764701"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i32>>::shl",
    "hash": "56777380722681888613779364516026358679"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i64>>::shl",
    "hash": "21922613448980882958489881486844602031"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<i8>>::shl",
    "hash": "78667503552800270436134685308524556209"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<isize>>::shl",
    "hash": "69922267901633131359746969765666522581"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u128>>::shl",
    "hash": "134607221742467802449375054958438439173"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u16>>::shl",
    "hash": "1606783480844071049714717978377086765326"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u32>>::shl",
    "hash": "688638804656110901912014490398434579003"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u64>>::shl",
    "hash": "1625096599725267029951847578540716515"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl<u8>>::shl",
    "hash": "453127356214737287614515150665432422369"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shl>::shl",
    "hash": "76804560934537833043838151953935380216"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i128>>::shl_assign",
    "hash": "141041680372154899522725230181395368304"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i16>>::shl_assign",
    "hash": "1729658271872481142412720337622349007748"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i32>>::shl_assign",
    "hash": "1739431848917447804313244787217850414073"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i64>>::shl_assign",
    "hash": "827506762105741893416513167738276874182"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<i8>>::shl_assign",
    "hash": "6786770134258595677092907210440416696"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<isize>>::shl_assign",
    "hash": "1639985676325243172718131659887564191335"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u128>>::shl_assign",
    "hash": "1586767470628271224016523879677189403052"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u16>>::shl_assign",
    "hash": "819278848355962093813485493828785258023"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u32>>::shl_assign",
    "hash": "107325927844726174168818162529933296703"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u64>>::shl_assign",
    "hash": "724808536786992289413374032963761969558"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign<u8>>::shl_assign",
    "hash": "592839812993999187911219998223405182531"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShlAssign>::shl_assign",
    "hash": "1785873386100112869112207910017583442186"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i128>>::shr",
    "hash": "57504764899408755851123571316117874209"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i16>>::shr",
    "hash": "1330883766974252624512139543577980811171"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i32>>::shr",
    "hash": "982828042620993672013895943572863168679"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i64>>::shr",
    "hash": "83649159979158792231949223669256172644"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<i8>>::shr",
    "hash": "102174227597114602584311779807722894986"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<isize>>::shr",
    "hash": "128178296809281723833984481957079920967"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u128>>::shr",
    "hash": "1258013876670842472312213953409613336494"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u16>>::shr",
    "hash": "57209860562440533588578722927656567461"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u32>>::shr",
    "hash": "748614979904930480710213693044325163329"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u64>>::shr",
    "hash": "1018651737061660494375384422920403713"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr<u8>>::shr",
    "hash": "169696661720821729011532430470349712017"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::Shr>::shr",
    "hash": "935516193173104110910282708108044199240"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i128>>::shr_assign",
    "hash": "44229369023003097555775661559338863959"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i16>>::shr_assign",
    "hash": "165303686819117171853407126003834521498"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i32>>::shr_assign",
    "hash": "459312950644113361116022247712122959134"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i64>>::shr_assign",
    "hash": "1442502779396816964612221264274993117010"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<i8>>::shr_assign",
    "hash": "1729152792916332131911390748268069661863"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<isize>>::shr_assign",
    "hash": "1350876901086681801113262824911584267375"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u128>>::shr_assign",
    "hash": "180411849322566955978377587580553681120"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u16>>::shr_assign",
    "hash": "64473425145713951804287793015656695906"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u32>>::shr_assign",
    "hash": "508338588997125864810443365813673125986"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u64>>::shr_assign",
    "hash": "110376155344801230263296138960789857162"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign<u8>>::shr_assign",
    "hash": "18032631391544651933060033003383991272"
  },
  {
    "file": "core/src/ops/bit.rs",
    "func": "<usize as ops::bit::ShrAssign>::shr_assign",
    "hash": "42512723390817435731475543465904834568"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as clone::Clone>::clone",
    "hash": "18400546828195575794503699709479215337"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "125292126548435095769584643450594730444"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as cmp::PartialEq>::eq",
    "hash": "632211433407009542410877888331400407391"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by",
    "hash": "1795315037609030508818381576043136666524"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back",
    "hash": "176485331705498438526682540660733116177"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len",
    "hash": "190326012008036553110818298591983434539"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by",
    "hash": "139038524598149623356544091981109627859"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next",
    "hash": "1593529270248186326217649644276048844216"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint",
    "hash": "557425766768443361417112757298137656555"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::assume_range",
    "hash": "73871712140644949516200388382938902615"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::end",
    "hash": "426660444221673690915890253082845174214"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::len",
    "hash": "305374531381368603518383057774771282949"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::new_unchecked",
    "hash": "1662552607172802888615583771417078312307"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_back_unchecked",
    "hash": "716176989502281994310473219654186946008"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::next_unchecked",
    "hash": "100209505092657728802982473749929856478"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::start",
    "hash": "312782805013495487013101185366708248332"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_prefix",
    "hash": "682215344173399914313838655940327828582"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::take_suffix",
    "hash": "174795744676247664659930821608166811301"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::IndexRange::zero_to",
    "hash": "807459588385208510417001782946551009910"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_new_unchecked",
    "hash": "25692796406121856061839531096549135297",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_back_unchecked",
    "hash": "60013795915541202377811576316195948472",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ops/index_range.rs",
    "func": "ops::index_range::verify::proof_for_index_range_next_unchecked",
    "hash": "1535415495165094568217122670426781221746",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as clone::Clone>::clone",
    "hash": "145983043034066724635502993352067132060"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "86656692449785103504790642433352144919"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as cmp::PartialEq>::eq",
    "hash": "18064889873240727116716499142565713614"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "<ops::range::RangeFull as default::Default>::default",
    "hash": "800123809591295161710307561311041397295"
  },
  {
    "file": "core/src/ops/range.rs",
    "func": "ops::range::RangeInclusive::<usize>::into_slice_range",
    "hash": "99389162391440909506066512703736887266"
  },
  {
    "file": "core/src/option.rs",
    "func": "option::unwrap_failed",
    "hash": "90154399545981751929034700539601653658"
  },
  {
    "file": "core/src/option.rs",
    "func": "option::verify::verify_as_slice",
    "hash": "208554584412544684514404379225610297951",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_borrowed::do_panic",
    "hash": "211841670286707903015124865020844055983"
  },
  {
    "file": "core/src/panic.rs",
    "func": "cell::panic_already_mutably_borrowed::do_panic",
    "hash": "156601494207310077308156526069844688879"
  },
  {
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf16_raw::do_panic",
    "hash": "532158366903031931612534035652556725170"
  },
  {
    "file": "core/src/panic.rs",
    "func": "char::methods::encode_utf8_raw::do_panic",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f128::<impl f128>::clamp::do_panic",
    "hash": "36743441115557169628573335688081966697"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f16::<impl f16>::clamp::do_panic",
    "hash": "2199449860830875689329121301468330562"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f32::<impl f32>::clamp::do_panic",
    "hash": "64015401279617301766839285721542454"
  },
  {
    "file": "core/src/panic.rs",
    "func": "f64::<impl f64>::clamp::do_panic",
    "hash": "85578628858488998012405526306775546455"
  },
  {
    "file": "core/src/panic.rs",
    "func": "num::from_ascii_radix_panic::do_panic",
    "hash": "131465705270763057377739035732057472811"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic",
    "hash": "436403330095487644813404800323942490599"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_end_index_len_fail::do_panic",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_index_order_fail::do_panic",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/panic.rs",
    "func": "slice::index::slice_start_index_len_fail::do_panic",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/panic/location.rs",
    "func": "panic::location::Location::<'_>::caller",
    "hash": "841904668883726495316837415609641023349"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_bounds_check",
    "hash": "1735887206241428365915470887120785544653"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_cannot_unwind",
    "hash": "1808289359185136011613131632845219227335"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_add_overflow",
    "hash": "806680718566775123413328195851757307157"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed",
    "hash": "740666714638215805513896756337968059226"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_drop",
    "hash": "217999200183874216415605299851937085130"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_fn_resumed_panic",
    "hash": "22323644541084022508127770053692663049"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed",
    "hash": "153558675752219344668185631547010588204"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_drop",
    "hash": "852570159142142380814232920503515454955"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_async_gen_fn_resumed_panic",
    "hash": "85388914785468982587255532107609618088"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed",
    "hash": "1583262063258775575616345955774881454807"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_drop",
    "hash": "149423855402817088938093501682174917243"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_coroutine_resumed_panic",
    "hash": "877984469872685720616858293195329763349"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_by_zero",
    "hash": "30132774181053854124260496472306685902"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_div_overflow",
    "hash": "183724751205255601982522217350326424367"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none",
    "hash": "296914726497017798614590935897715803179"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_drop",
    "hash": "703075813512368563512944032294628166493"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_gen_fn_none_panic",
    "hash": "76260424719638600856724650427112962686"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_mul_overflow",
    "hash": "50174085862667250621763665453765081595"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_neg_overflow",
    "hash": "4783437457594172891742220455274381826"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_by_zero",
    "hash": "149005207456878196272665894254727453986"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_rem_overflow",
    "hash": "388424101695809814713053486003104160371"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shl_overflow",
    "hash": "10088204556330263033466640826550618788"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_shr_overflow",
    "hash": "97578127391936422841159120793366550548"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_const::panic_const_sub_overflow",
    "hash": "108243453396565426681526975099193595369"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_in_cleanup",
    "hash": "1661958925510226335515566458765842179227"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_invalid_enum_construction",
    "hash": "1508954173397798966118325686309101892930"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_misaligned_pointer_dereference",
    "hash": "19535067455979994205838383042673706911"
  },
  {
    "file": "core/src/panicking.rs",
    "func": "panicking::panic_null_pointer_dereference",
    "hash": "166741825040760012832281192209967231710"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<char as pat::RangePattern>::sub_one",
    "hash": "944722957669849946213740081953423014920"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i128 as pat::RangePattern>::sub_one",
    "hash": "164504975611011128491738868512107235399"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i16 as pat::RangePattern>::sub_one",
    "hash": "1178896846543573761315401922996073266538"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i32 as pat::RangePattern>::sub_one",
    "hash": "76754062109621691721670255076397697187"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i64 as pat::RangePattern>::sub_one",
    "hash": "146048058159408858281758188782050246699"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<i8 as pat::RangePattern>::sub_one",
    "hash": "1161575389317291175813668972788882152617"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<isize as pat::RangePattern>::sub_one",
    "hash": "64267641797562113035673410357279989678"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u128 as pat::RangePattern>::sub_one",
    "hash": "1578919266372438917917941064079636404505"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u16 as pat::RangePattern>::sub_one",
    "hash": "778448861925250857717468191299058960341"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u32 as pat::RangePattern>::sub_one",
    "hash": "1198344532607690482517687558599933663971"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u64 as pat::RangePattern>::sub_one",
    "hash": "150458921350976370214125564989478984861"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<u8 as pat::RangePattern>::sub_one",
    "hash": "1483734638010965722110693924978349343705"
  },
  {
    "file": "core/src/pat.rs",
    "func": "<usize as pat::RangePattern>::sub_one",
    "hash": "3770129731090568966334648067650281836"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as clone::Clone>::clone",
    "hash": "181686458700529369512403914266735713932"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "166817780742815199147435007978266384040"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::Ord>::cmp",
    "hash": "45690508701378920334195382767041520397"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialEq>::eq",
    "hash": "181781547401492927065969276925193083703"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp",
    "hash": "1030306782768834667614511627551610982629"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from",
    "hash": "34614796242026734975807657907387447190"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from",
    "hash": "142968524335672960166727333977043122107"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as default::Default>::default",
    "hash": "21636883498496389412566933836023318216"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::Alignment as ub_checks::Invariant>::is_safe",
    "hash": "102576343817218947784125386198920295975"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as clone::Clone>::clone",
    "hash": "106748046399893418579183733015148527245"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "245432680602325409113016248845238047231"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq",
    "hash": "24934898558293488234568272945133110966"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from",
    "hash": "103271895329084561314630265572675691737"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from",
    "hash": "1687074465042211938414968599344031994097"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_nonzero",
    "hash": "117289807451759479686051841781914570332"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::as_usize",
    "hash": "96976906222507875941165858861254841419"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::log2",
    "hash": "7903013669828535766223121048216407516"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::mask",
    "hash": "899898561269855905613074857325959880720"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::max",
    "hash": "65007802261508540012210392616145265221"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new",
    "hash": "940453719718109590416980285730603471182"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::Alignment::new_unchecked",
    "hash": "338477312139711713111988971512142583584"
  },
  {
    "file": "core/src/ptr/alignment.rs",
    "func": "ptr::alignment::_alignment_can_be_structurally_matched",
    "hash": "49137621040215897581805613400315521001"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i128",
    "hash": "145235113492031533769163653532417235820",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i16",
    "hash": "93149411814365588953211346677230823427",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i32",
    "hash": "102062768215993579511927530850377800935",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i64",
    "hash": "1024009644239279978217111797190940532733",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_i8",
    "hash": "1571687047783561847513609235582085786383",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_isize",
    "hash": "998542597372648478413624014472427510677",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i128",
    "hash": "135279538628601716002826238546950402335",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i16",
    "hash": "116965295622208334046790532247967723718",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i32",
    "hash": "85782347359236378361534973479937053629",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i64",
    "hash": "1110235091686736899512827273945326364177",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_i8",
    "hash": "113679336489674493722392533863709127106",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_isize",
    "hash": "372276073295887056516914103496153357389",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_1",
    "hash": "408019383040760676317590180498705663467",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_2",
    "hash": "92590970382639362252936350642475693018",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_3",
    "hash": "1404264867692538342613147994841169706161",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_tuple_4",
    "hash": "585891991597131393513035178834445986834",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u128",
    "hash": "1020558240155141089811955800904726176252",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u16",
    "hash": "1045962075356139013716627305329182545546",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u32",
    "hash": "1538279800054606515711964975317902362036",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u64",
    "hash": "711823678295274727110104813148533111437",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_u8",
    "hash": "87323831932631853605339572044533189633",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_slice_usize",
    "hash": "7779097465325174092165798803780886408",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_1",
    "hash": "107692843485125541128808533785592219470",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_2",
    "hash": "379428998154162795015904037503638672732",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_3",
    "hash": "26626533074155029101921688352283602919",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_tuple_4",
    "hash": "559339453112664633718104291855013960693",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u128",
    "hash": "69703495447253407612719534271464950382",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u16",
    "hash": "1333016451108547153318064268100074562863",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u32",
    "hash": "1157784816482447325411861008892478395111",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u64",
    "hash": "417167341917112132613539401223132833580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_u8",
    "hash": "52240187310752427224059378412373831565",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_unit",
    "hash": "90227470670264063123799777869999249753",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_add_usize",
    "hash": "1757463347705328849211232324515229154874",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_byte_offset_from_fixed_offset",
    "hash": "105643232229588173451568317575322985191",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128",
    "hash": "416044421746527759910144049581029639904",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i128_arr",
    "hash": "137624933939928148923284489142815517616",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16",
    "hash": "90542099895924448905767914157248529808",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i16_arr",
    "hash": "1449554772912459754616454011199996212486",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32",
    "hash": "1653800314964666867010882751452843902851",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i32_arr",
    "hash": "93666098279758688197382617505174990005",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64",
    "hash": "876698460731208435916605933454028937683",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i64_arr",
    "hash": "578548943932684619111566165207689218603",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8",
    "hash": "10883951269196198364083860613161896506",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_i8_arr",
    "hash": "1601863789431213107616291677601033896746",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize",
    "hash": "36232549032550829972153610150336749919",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_isize_arr",
    "hash": "155463405119773986862972681918442643757",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1",
    "hash": "1469943896498071101011423364753552378402",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_1_arr",
    "hash": "177908713906669843311828010917903062752",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2",
    "hash": "588924107097044210915899490798811897462",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_2_arr",
    "hash": "989772236415312349514538839315715587636",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3",
    "hash": "31045832546539746667738793217245719375",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_3_arr",
    "hash": "1301388188331779882651469362970317456",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4",
    "hash": "80609492151624437499908701683870159994",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_tuple_4_arr",
    "hash": "176507656359132463352960178563451650387",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128",
    "hash": "614131528854024913410069266958550472780",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u128_arr",
    "hash": "172274459403624731932212625715058747247",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16",
    "hash": "144529630942661687629793990405602393234",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u16_arr",
    "hash": "59121670475146065289564667007512397803",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32",
    "hash": "1706136624371389393911870372695749050440",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u32_arr",
    "hash": "76498761992596767151700725308012674874",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64",
    "hash": "1540294671902367649810989914269357510230",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u64_arr",
    "hash": "66676737478560120018913040927823025616",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8",
    "hash": "7587460582007742421907480171452381115",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_u8_arr",
    "hash": "169935698402298676618811822371217311",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_unit",
    "hash": "1746885794916172025514248005589568700518",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize",
    "hash": "81896595038299289081247989708632811578",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_from_usize_arr",
    "hash": "123988740707519764235571989267113620991",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i128",
    "hash": "18157537505073272287288884140106391943",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i16",
    "hash": "843085834560396666216401940094026432589",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i32",
    "hash": "180406571799036190298726266246876635815",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i64",
    "hash": "514123128517968130016925568331138881895",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_i8",
    "hash": "125784225600335343210246004032323940621",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_isize",
    "hash": "96054029856065925508527486921593834461",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i128",
    "hash": "166209552985809703376988810619850659318",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i16",
    "hash": "38977659582368849256405794921280819558",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i32",
    "hash": "1032580693885139976410776085154541104902",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i64",
    "hash": "14857211075470270946375994706706764903",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_i8",
    "hash": "253257624601099821516930720449512947285",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_isize",
    "hash": "167451860848959695338423433902569379376",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_1",
    "hash": "138862541663140750758052415431591407096",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_2",
    "hash": "685372705926222959317563543686502055821",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_3",
    "hash": "1181031762247778076615429022090558778435",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_tuple_4",
    "hash": "185101601630356225016715887843879425687",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u128",
    "hash": "1791882495105254011013476461449054226534",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u16",
    "hash": "1642926684086950747111141421389054449102",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u32",
    "hash": "230471874609068851512664874170614154966",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u64",
    "hash": "873238064999141064915139506755441231296",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_u8",
    "hash": "838550931945714835018306537974407915711",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_slice_usize",
    "hash": "173566669467490962332713707809441431429",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_1",
    "hash": "132680600783763949655982644890515056983",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_2",
    "hash": "522833869550234500013298593900638069444",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_3",
    "hash": "119086473850823392858417989157438686929",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_tuple_4",
    "hash": "131832245433062789828973137274643711474",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u128",
    "hash": "116593419327448166896842737576295126617",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u16",
    "hash": "1678349649111034083788906784454256628",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u32",
    "hash": "10113880971093412035194151007392627403",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u64",
    "hash": "182647724993277964538970675987427047607",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_u8",
    "hash": "316924932747422844812446229543326915877",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_unit",
    "hash": "182925212309363025298850597103880370375",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_offset_usize",
    "hash": "14613985941674930808674409921295475062",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i128",
    "hash": "119569565567613201708690376896632776890",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i16",
    "hash": "806050135801096842017642100897480843416",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i32",
    "hash": "177156202761393744561447675434322209319",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i64",
    "hash": "1487224499883905540217546602227888841225",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_i8",
    "hash": "733575710301050356418351731028333118949",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_isize",
    "hash": "2978264153195102273768205290682434751",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i128",
    "hash": "551177685572651758814049858997348994693",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i16",
    "hash": "181267199059892428335091354484839775106",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i32",
    "hash": "1581543458335484081810037853410188501200",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i64",
    "hash": "8327346653864610050316775623907854240",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_i8",
    "hash": "562233998134088784117348305650407635155",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_isize",
    "hash": "151613968972416908529898524203036742255",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_1",
    "hash": "3312475142446746289557908105702171853",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_2",
    "hash": "766263111403919723014736424276998942840",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_3",
    "hash": "69383348551580652715250078454096626207",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_tuple_4",
    "hash": "61258536502099003847980636802915470431",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u128",
    "hash": "299693271020097614711350521023545239991",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u16",
    "hash": "277761990461816253514179577426362286384",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u32",
    "hash": "555767578053526253010159074267674072183",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u64",
    "hash": "274192409265134245010641086378811225597",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_u8",
    "hash": "128659419002502921728076620143859178790",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_slice_usize",
    "hash": "130017832566588850292088066340181905179",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_1",
    "hash": "1540425963602163343411186748021074892759",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_2",
    "hash": "807258747367476265814122160201104947001",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_3",
    "hash": "2095784249245859417209191887211869080",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_tuple_4",
    "hash": "799267299157234715814282432566572221353",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u128",
    "hash": "154022865341000033319472496587490177472",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u16",
    "hash": "1294253303108970710712934273543803851009",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u32",
    "hash": "1219426070603478530913761234349549607410",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u64",
    "hash": "419595484549267407314596250890118665374",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_u8",
    "hash": "4745355506307423338562891729919096330",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_unit",
    "hash": "128778144319965928059433415853668535733",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/const_ptr.rs",
    "func": "ptr::const_ptr::verify::check_const_sub_usize",
    "hash": "97349722642291731907927051841847439353",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::mod_inv",
    "hash": "10280076113730517359836576566793155285"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#0}::{closure#1}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#2}::{closure#1}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::align_offset::{closure#3}::{closure#0}::mod_inv"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_4096",
    "hash": "27210167019335885145126709725503461580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_5",
    "hash": "118639409502828256631365001682399913376",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u128",
    "hash": "448658740373620053517009358012158424236",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u16",
    "hash": "14262417160000836994397441868687009562",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u32",
    "hash": "115198702321938779319658820017072441352",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u64",
    "hash": "62996711778246971314336706121145762885",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_u8",
    "hash": "18214484434072388762867970799719987843",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_align_offset_zst",
    "hash": "27293493752970312534739509639834365672",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mod.rs",
    "func": "ptr::verify::check_read_u128",
    "hash": "26332880786151667724091448456195402771",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i128",
    "hash": "4557417629544517510468947468342645709",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i16",
    "hash": "100620826109246729101600981916990656661",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i32",
    "hash": "3270382882408004879318582386184420743",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i64",
    "hash": "117170220586486793502267641331504102021",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_i8",
    "hash": "83226187471240798496905664252145643616",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_isize",
    "hash": "30821395866489813718718198270191640045",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i128",
    "hash": "150562769179431811292709811260392952322",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i16",
    "hash": "1594807699867353886010227572646877759800",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i32",
    "hash": "857313501188732790816857221238762872151",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i64",
    "hash": "163127889584919347862032311659464525373",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_i8",
    "hash": "616001697063745253010551563892034454165",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_isize",
    "hash": "160687690957348303115933494580613378866",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_1",
    "hash": "755692238008152528418310345532205522887",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_2",
    "hash": "153186839854085300591106410555348894462",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_3",
    "hash": "1026173969747708415713710167495074819359",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_tuple_4",
    "hash": "1813790085097434580914084833280171852465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u128",
    "hash": "173090605919868925138355377941563004512",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u16",
    "hash": "1668175921347629963912682547770842019911",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u32",
    "hash": "89149228105621314938460914637111777219",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u64",
    "hash": "7782634473408268202976544532536768220",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_u8",
    "hash": "1594644703883299929310175430810302098680",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_slice_usize",
    "hash": "42340421216048156978331466122380462709",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_1",
    "hash": "25797530236226909562775198246444208218",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_2",
    "hash": "63980516132737337814847806614878012008",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_3",
    "hash": "108531282524171649507417124778780663035",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_tuple_4",
    "hash": "123182498598349489808834153702592884537",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u128",
    "hash": "123297741246641402369451622339101654471",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u16",
    "hash": "89806119690232756584431117439070853266",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u32",
    "hash": "406126092537871200914844713495850458773",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_u64",
    "hash": "73460306187625142773312743410406768921",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_unit",
    "hash": "161557485942645430794071749047695529630",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_add_usize",
    "hash": "89094742753350935846303056423517251025",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_byte_offset_from_fixed_offset",
    "hash": "83903461274322282026697371365755170376",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128",
    "hash": "773780896760509154711252412570244462784",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i128_array",
    "hash": "26876503242508957756755548129736694301",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16",
    "hash": "76318749297341953278217122897504552767",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i16_array",
    "hash": "1242952804366996484517117435449522787331",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32",
    "hash": "530345250681038063311018367896956909",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i32_array",
    "hash": "110964481885035700838393726478449190183",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64",
    "hash": "40979476416382324963118812046599370872",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i64_array",
    "hash": "1451168149257362832316823635927911075647",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8",
    "hash": "81283180662439268738325606328799631962",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_i8_array",
    "hash": "1347907262483957264712763478783498857069",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize",
    "hash": "114167586286789914687689579530452039357",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_isize_array",
    "hash": "47322816568173832867817193318009951485",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1",
    "hash": "168466009306375353555510415008295717631",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_1_array",
    "hash": "15696076785216027429015155410432356629",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2",
    "hash": "6539229701095288282103520546001873909",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_2_array",
    "hash": "453066973943233132816768819598757959106",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3",
    "hash": "34301290291916215524426331106903878258",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_3_array",
    "hash": "1395466188284772153510037062860973719358",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4",
    "hash": "182560904609647787581525558408959579618",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_tuple_4_array",
    "hash": "76882170491933449721888051492970117394",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128",
    "hash": "80023248045655965363803701009543669172",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u128_array",
    "hash": "146275995025542414317551616213995588797",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16",
    "hash": "1015239120099954759212400164955058987046",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u16_array",
    "hash": "170650263673382857666901029617259742971",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32",
    "hash": "2387688487471864466107687546286128054",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u32_array",
    "hash": "103491279062568162826458461801955269579",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64",
    "hash": "91336536818566635012818994254250771209",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u64_array",
    "hash": "118212296908545767627797864503638383459",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8",
    "hash": "29291544561851612152677190199999333785",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_u8_array",
    "hash": "1642210904900624291315588106255970750242",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_unit",
    "hash": "937138538081775379910592330601517320431",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize",
    "hash": "3891762719306247351331145375905018428",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_from_usize_array",
    "hash": "53844521510600604678279963847341257592",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i128",
    "hash": "288742071691527215911633217074616567737",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i16",
    "hash": "65610680857006156858770382827342734370",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i32",
    "hash": "145580043948762839117203809672352174575",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i64",
    "hash": "148853011977284646213395525030994161878",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_i8",
    "hash": "9925850001616398734645670676712735444",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_isize",
    "hash": "24113186426695306261825516966027461615",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i128",
    "hash": "75567454805060769516249525981883059188",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i16",
    "hash": "914929871910758222612904472474427177689",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i32",
    "hash": "350049052093279295617583999156808305402",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i64",
    "hash": "588364820844564148018341405317179826835",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_i8",
    "hash": "3332122004144575044693703310570189155",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_isize",
    "hash": "42527660417204349772539965772286793458",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_1",
    "hash": "91544345040353138158672829346606346429",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_2",
    "hash": "961454809662624663814814244702879406218",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_3",
    "hash": "169709062643512428545655888930536299575",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_tuple_4",
    "hash": "585310889558806714115472924638089461661",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u128",
    "hash": "195734048378678640613024826496617807680",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u16",
    "hash": "295185749410167052114657829838774877025",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u32",
    "hash": "1435623896001233583617872339186363466941",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u64",
    "hash": "1731623683675366204010982818799227842052",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_u8",
    "hash": "3527337950741960221781282715256429481",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_slice_usize",
    "hash": "559298151195353951717260393914751128006",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_1",
    "hash": "1188022495071485445813660927040635935112",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_2",
    "hash": "4333116392693066175441577626069434536",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_3",
    "hash": "72234299130266151395037400008206897525",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_tuple_4",
    "hash": "66526125596666576638536103343720297307",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u128",
    "hash": "1505328161410448106416187567858606140217",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u16",
    "hash": "1428659166808638436015240901846342749975",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u32",
    "hash": "46626864538182209810632332886356771372",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_u64",
    "hash": "101757282754274523088038730941569368351",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_unit",
    "hash": "763615060759501551112005953031071864811",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_offset_usize",
    "hash": "67793903943863697011526074465570791307",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i128",
    "hash": "584689339665775183910613962500351410492",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i16",
    "hash": "1000912402083203480617859974887164245033",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i32",
    "hash": "452086227863031897814372080396076836340",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i64",
    "hash": "892623613323642938212908498669490863995",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_i8",
    "hash": "761477852696117533611782517472232306882",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_isize",
    "hash": "330461278269256263612491452150332321497",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i128",
    "hash": "449996818812901958711506993597699094134",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i16",
    "hash": "1507801620166030405715702815556653405853",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i32",
    "hash": "140364682187628479136446666294096079144",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i64",
    "hash": "972875843327523268015603378547790687521",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_i8",
    "hash": "505506503578911566710679150797822914443",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_isize",
    "hash": "628709371185447096914373796747638077392",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_1",
    "hash": "918004023056573251212903304153030177315",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_2",
    "hash": "1562814343583865483113969985210238864560",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_3",
    "hash": "345928263009716570910023581175206928853",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_tuple_4",
    "hash": "21952697036483546959931412171157884554",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u128",
    "hash": "850939510209468771716512021045927516376",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u16",
    "hash": "46774852574583655103279422479741831168",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u32",
    "hash": "699213602336376220415195421505525570970",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u64",
    "hash": "1607452388717829793014913363671074774804",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_u8",
    "hash": "1694916717424666849211098643473309352033",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_slice_usize",
    "hash": "167808961766570569569051481901778806354",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_1",
    "hash": "30185616460116690511061356571353208821",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_2",
    "hash": "673568202697677287116962642381225313722",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_3",
    "hash": "78356457856097445373548080155634347379",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_tuple_4",
    "hash": "1791876370562921297314425011287954031935",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u128",
    "hash": "19360275114498309548927064411677117518",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u16",
    "hash": "78954493372265233566490118033479203553",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u32",
    "hash": "2695202899606288669121473579456380629",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_u64",
    "hash": "154245890411283128301999041852121721508",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_unit",
    "hash": "115562559522698885865479256408963942560",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/mut_ptr.rs",
    "func": "ptr::mut_ptr::verify::check_mut_sub_usize",
    "hash": "126731436517226529975969618886617067936",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::SampleStruct as ptr::non_null::verify::SampleTrait>::get_value",
    "hash": "591699405320758359141447911141790709"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "<ptr::non_null::verify::non_null_check_drop_in_place::Droppable as ops::drop::Drop>::drop",
    "hash": "535564253438191020511470810827077210141"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_dangling_proof",
    "hash": "19580315731511462611427111561444119966",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_from_proof",
    "hash": "718950899406626742314460521141553378303",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_byte_offset_proof",
    "hash": "147241306014296172917034894170596055499",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_add",
    "hash": "929768253931099078710358187127104712771",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_addr",
    "hash": "1284429265419784193014047029637212125634",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset",
    "hash": "1394440968551181695512215172566946193105",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_align_offset_negative",
    "hash": "1660875737589152180816750785980825572527",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut",
    "hash": "1302573549640383234611748600698807526409",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_mut_ptr",
    "hash": "860102172792878139612110648672893132083",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_non_null_ptr",
    "hash": "364601960525576713614231104729735213401",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ptr",
    "hash": "228884487909090734616196140502333611304",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_ref",
    "hash": "229485612813956677716153182552738510903",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_mut",
    "hash": "158548000062124284179222076227275047684",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_ref",
    "hash": "121034839096752328397257845623037959028",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice",
    "hash": "853479113632653820311153922274344774277",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_as_uninit_slice_mut",
    "hash": "135569014276369718706956858119495892616",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_cast",
    "hash": "22835185561976375551839935535403573588",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from",
    "hash": "516229994440015351916270571746294107180",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_from_nonoverlapping",
    "hash": "104395973241011920208622265761878826550",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to",
    "hash": "38503424658719846414267385619519570966",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_copy_to_nonoverlapping",
    "hash": "1310539003969228076011119525851422999729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_drop_in_place",
    "hash": "446459122793140700816511229798190207597",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_from_raw_part_trait",
    "hash": "160166144989319441962761715810715300253",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_get_unchecked_mut",
    "hash": "24109468002237794723698613396286933749",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to",
    "hash": "95743372191351030714855320615922959392",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_aligned_to_no_power_two",
    "hash": "936413845632549194512727579820508812685",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_is_empty",
    "hash": "776253464394136389917999303816488003717",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_len",
    "hash": "14855259296561301454909441457919156482",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_map_addr",
    "hash": "103380205501965420657791069544098162507",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new",
    "hash": "210247400856742965710967858354845341213",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_new_unchecked",
    "hash": "49636573396195312426207295952078563775",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset",
    "hash": "1313842900766481330813651366278777065803",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_offset_from",
    "hash": "524372895946841043316111916128123444498",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read",
    "hash": "35541622236537248855412171769395941590",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_unaligned",
    "hash": "124846205958899198333724308375589354037",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_read_volatile",
    "hash": "856541966490854674312472322407938784743",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_replace",
    "hash": "1731400385513161146014856226266956992409",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_slice_from_raw_parts",
    "hash": "28901895442231758652935329339776208733",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub",
    "hash": "36734028523632524476389031087299143636",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_sub_ptr",
    "hash": "89178336539976684938274372972017639473",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_swap",
    "hash": "104304286378433051642113532197288594101",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_to_raw_parts",
    "hash": "171871155343145130886343483624276887877",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_with_addr",
    "hash": "1475951188348491086318021247731730253747",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i128",
    "hash": "115542572374731465967262520995924018554",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i16",
    "hash": "66182569593187304484105746499537348662",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i32",
    "hash": "977134891500769566714124656941924072465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i64",
    "hash": "170876092456103015634755377978317994814",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_i8",
    "hash": "887459977826263098612500622882862486837",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_isize",
    "hash": "32859566550129971607637440709715294680",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u128",
    "hash": "18114535091775603378149694792232707770",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u16",
    "hash": "445017825220502879110389854958019871535",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u32",
    "hash": "45609278727399416669971466134338762143",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u64",
    "hash": "776582435372157404312049634136839597526",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_u8",
    "hash": "94392543655891048824636610686255140035",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_unit",
    "hash": "1814365300049966644629416115995781972",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_bytes_usize",
    "hash": "588226709823164781011657278720889920265",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i128",
    "hash": "361290249453906132610775792015280739151",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i16",
    "hash": "167543664436834145999398370718505250483",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i32",
    "hash": "1827970198378820551813836598083093565772",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i64",
    "hash": "547713462610736643711749579042585454176",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_i8",
    "hash": "1544018423007116978012941413773036362676",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_isize",
    "hash": "66730448788830518341610694090418312470",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u128",
    "hash": "1329822243531676554113868674465775992681",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u16",
    "hash": "1112761363848329070215850799959432717924",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u32",
    "hash": "164875825055438444967764996010370105400",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u64",
    "hash": "28358474033489523504756983328532801303",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_u8",
    "hash": "329108203279284466216299758998938532210",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i128",
    "hash": "92966079227048769211950089065278192111",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i16",
    "hash": "67034090094807352584911796137225517515",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i32",
    "hash": "948766399127857871216724228055499298729",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i64",
    "hash": "331688617568153283690624698449671141",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_i8",
    "hash": "430707855134080505112486746678929463503",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_isize",
    "hash": "5013428731989863849570416696374378526",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u128",
    "hash": "7349980194334270508132705281789099489",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u16",
    "hash": "23725985545336527213896178203535888585",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u32",
    "hash": "1238560032033075428113067444432637031286",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u64",
    "hash": "7230186590572968881521272535117974093",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_u8",
    "hash": "21391648314330830945760252468680542551",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_unit",
    "hash": "704740024620118157317792007840077967617",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unaligned_usize",
    "hash": "15058911365811295984933492581631343002",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_unit",
    "hash": "181543696805761810077357776161872899674",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_usize",
    "hash": "1099789129212781151310434907583263567892",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i128",
    "hash": "1360369879655292596515679040034275521516",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i16",
    "hash": "1555627226113807369510584497769443059175",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i32",
    "hash": "117806058636493016764086494732708070197",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i64",
    "hash": "8654028496324699804940268344831202080",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_i8",
    "hash": "1297345249108374274216010858579752220870",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_isize",
    "hash": "54824202804087076857026192904864987113",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u128",
    "hash": "77096026513202166211242092913174120451",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u16",
    "hash": "136354179988547286798211335948920335555",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u32",
    "hash": "66702735995676244909111578098907853293",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u64",
    "hash": "325965956389656413914360187723981634034",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_u8",
    "hash": "25210220283900682647542934521327607612",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_unit",
    "hash": "63827491237382808848375555752814698382",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_check_write_volatile_usize",
    "hash": "99805985589233845925493065812751472073",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/non_null.rs",
    "func": "ptr::non_null::verify::non_null_slice_is_aligned_check",
    "hash": "522751539758387849312091618080453231294",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_mut",
    "hash": "1699681118078871079314703132051732935980",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_non_null_ptr",
    "hash": "229301470224787980410659930492741673683",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ptr",
    "hash": "6821793497932057207415900123400760120",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_as_ref",
    "hash": "114750178950041730659947277378078826651",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_cast",
    "hash": "157520228379664969189299439263399416423",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new",
    "hash": "830086096901661159014754174344665210066",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/ptr/unique.rs",
    "func": "ptr::unique::verify::check_new_unchecked",
    "hash": "26767756024895449688104340233493137377",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/range.rs",
    "func": "range::RangeInclusive::<usize>::into_slice_range",
    "hash": "61371796455300910816665044439415196949"
  },
  {
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape",
    "hash": "178950956150498367086304854107167795201"
  },
  {
    "file": "core/src/slice/ascii.rs",
    "func": "<slice::ascii::EscapeByte as clone::Clone>::clone",
    "hash": "12594747344879749910319906261892621873"
  },
  {
    "file": "core/src/slice/cmp.rs",
    "func": "slice::cmp::as_underlying",
    "hash": "1719159185141142232715107435196684859429"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range",
    "hash": "1694683727894822512415687546006135577302"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_range_unchecked",
    "hash": "226668690405311114416916600684719728393"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::into_slice_range",
    "hash": "116128245451755682845056786083170247375"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_len_fail",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_end_index_overflow_fail",
    "hash": "553184652678432063712515810568440288616"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_index_order_fail",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_len_fail",
    "hash": "48470017983968797905075352819545748555"
  },
  {
    "file": "core/src/slice/index.rs",
    "func": "slice::index::slice_start_index_overflow_fail",
    "hash": "1464562601954900368615847969324976540621"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_back_by",
    "hash": "31326181635016451752485617003564255930",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_advance_by",
    "hash": "625739899017304878910050769906838429809",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_ref",
    "hash": "112301007393587219385127620891370750966",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_as_slice",
    "hash": "1414207388079961880318141840627910935762",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_clone",
    "hash": "61787191823099954467707506962695930805",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_count",
    "hash": "135081726501793337467214824319065454551",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_default",
    "hash": "1366570203992003107712198110403078347289",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_is_empty",
    "hash": "157664164864682464998911526278333239425",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_len",
    "hash": "1020727771589426460316398552991634896952",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_new_iter",
    "hash": "1546583839359376758711446098890213089255",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next",
    "hash": "90099338482030748983719996931244882401",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back",
    "hash": "1161658359376303278315353040819711210188",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_next_back_unchecked",
    "hash": "1520139736818479597814458964244045242203",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth",
    "hash": "119565957762494054219664143665035390682",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_nth_back",
    "hash": "169577063285953703134770594020850479365",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_post_inc_start",
    "hash": "125025064675562994778137208150679767040",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_pre_dec_end",
    "hash": "1462449737876883956413310111118744902623",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_char::check_size_hint",
    "hash": "1497313268003903681110980663833554257425",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_back_by",
    "hash": "23615981529112143472426966896458684497",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_advance_by",
    "hash": "59128356202245950241707350566535203076",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_ref",
    "hash": "138496820042341534699207447352356934443",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_as_slice",
    "hash": "115527735412878973916457646214757009097",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_clone",
    "hash": "120563003377785334972807776607663407447",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_count",
    "hash": "97537075642132355396194570419304986762",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_default",
    "hash": "697429148461430380118146419478452179386",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_is_empty",
    "hash": "133728399762588686577296312334889850316",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_len",
    "hash": "284833790112422643510575822199564825781",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_new_iter",
    "hash": "280476601000005228714906337984763497601",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next",
    "hash": "12329789186426737926292039606048962018",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back",
    "hash": "1239653749633149300814923444348709196695",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_next_back_unchecked",
    "hash": "901802526398733499116122901689058875084",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth",
    "hash": "185760101207357902011042721096111143697",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_nth_back",
    "hash": "111784585233404867672030826883598339833",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_post_inc_start",
    "hash": "833576201320843363417118542484308349399",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_pre_dec_end",
    "hash": "1788283440994015895911412625690853820529",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_tup::check_size_hint",
    "hash": "1340916175524862131911193231661761298747",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_back_by",
    "hash": "5346741015558036296262505773308386885",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_advance_by",
    "hash": "1346186756875227506611185823876545050450",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_ref",
    "hash": "3333901849847797266880956499065486444",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_as_slice",
    "hash": "1035268027394497044413789936990703446168",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_clone",
    "hash": "1015165743106634078313886849730288853864",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_count",
    "hash": "93791911259812631988333767984889925807",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_default",
    "hash": "152152783252633371407441214086654349028",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_is_empty",
    "hash": "10832732860387577034862636344685143687",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_len",
    "hash": "720305601066705721316222379226009427026",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_new_iter",
    "hash": "1321730672295180523613504389652283866405",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next",
    "hash": "85779418545147084398579789356725178068",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back",
    "hash": "96962203423335284803017205434484725532",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_next_back_unchecked",
    "hash": "14282102714147401417674306409972680101",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth",
    "hash": "1690665873783817923716547920782131236169",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_nth_back",
    "hash": "95248452528854625435060088125621538649",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_post_inc_start",
    "hash": "847059745612369190517392367708710262145",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_pre_dec_end",
    "hash": "2169727768824578240568983152249743850",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_u8::check_size_hint",
    "hash": "113854937076736227099995477279462080917",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_back_by",
    "hash": "1035846032382230769110170820249748003446",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_advance_by",
    "hash": "7010035568744401806470599800757816284",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_ref",
    "hash": "70398067988784857212222764776277429794",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_as_slice",
    "hash": "93854128801224600522179665719359948128",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_clone",
    "hash": "500489831423509217110807218709957605343",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_count",
    "hash": "16719049634250566929770955245192018292",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_default",
    "hash": "170604363783774599214321116881885205199",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_is_empty",
    "hash": "592540393741553738510955110190666875860",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_len",
    "hash": "45950227713371766524071130134913181110",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_new_iter",
    "hash": "665377649867014322951196135021200626",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next",
    "hash": "1241472851289206190314769621582580176191",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back",
    "hash": "147173646954075806286412308984699441693",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_next_back_unchecked",
    "hash": "74940889212137375564148926636220149528",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth",
    "hash": "358775015680751847614575457927399581339",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_nth_back",
    "hash": "53427797666414751857863057033673170386",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_post_inc_start",
    "hash": "1266207059044340951116198335709768465273",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_pre_dec_end",
    "hash": "127166810674987977438679905804365661743",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/iter.rs",
    "func": "slice::iter::verify::verify_unit::check_size_hint",
    "hash": "794845165575509963353385955758226426",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/slice/memchr.rs",
    "func": "slice::memchr::contains_zero_byte",
    "hash": "843525423055920542813956294488463632559"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "826610219091811073612920021704822226571"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1635860869188313269815855745192377285554"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "94905130876870715755463547154210567107"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1596464762747004340915048613123793447706"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "87041879726202054463751687315129140789"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "20876900339063167165683847514350746477"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "1786815042460921365512963089797345610065"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "1180409281686072865515765200256783430978"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as clone::Clone>::clone",
    "hash": "687652243699563999013585617093832956165"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "31727406133085851491081813667714249557"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<slice::GetDisjointMutError as cmp::PartialEq>::eq",
    "hash": "139482714906156802075183272775046749563"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_in_bounds",
    "hash": "1529719483624371570616651111382964223277"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "<usize as slice::GetDisjointMutIndex>::is_overlapping",
    "hash": "90537981296589237982329854918274423464"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::align_to_offsets::gcd",
    "hash": "105529888766907594486492837192683480337"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::<impl [T]>::copy_from_slice::len_mismatch_fail",
    "hash": "19519394778380023531703788696070725632"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_bool",
    "hash": "432969582736816795314065618014906053387",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_char",
    "hash": "803518448679496431113936357980300821076",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u128",
    "hash": "21881049151460163752677892569036682959",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u16",
    "hash": "119754141079529558003677765433199411817",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u32",
    "hash": "31388345746143424649288044520246692592",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u64",
    "hash": "72517937813949342818189125162443387036",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_u8",
    "hash": "137398152921459532810358513043663082824",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_bool::align_to_unit",
    "hash": "64301520768594357164896510124675578788",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_bool",
    "hash": "743234225066847831011929492951858204922",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_char",
    "hash": "913944894203955718014576008160032697926",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u128",
    "hash": "1749582300122338289016268538455411832085",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u16",
    "hash": "136339488784629359468669363655903330301",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u32",
    "hash": "1230438128626236982516863915476603823535",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u64",
    "hash": "56638065334216739217864924550882183050",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_u8",
    "hash": "728697724752080366514618162617521378141",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_char::align_to_unit",
    "hash": "1159166067226630831310019038860876068060",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_bool",
    "hash": "145084099594877094306762658522214068329",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_char",
    "hash": "1075440958982346613413080459568005010177",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u128",
    "hash": "159075569888825941315844648499452365996",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u16",
    "hash": "1596534284269018690811638082847889793171",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u32",
    "hash": "21037676157958428414037543178539224872",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u64",
    "hash": "115742078357693070933340016667915137488",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_u8",
    "hash": "35544100379276481981730592884430873335",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u128::align_to_unit",
    "hash": "1832870363399809328164949201783047093",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_bool",
    "hash": "82115745317881152447331308455546632328",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_char",
    "hash": "99623298373675687631992175556022591400",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u128",
    "hash": "1717016375765889556713248129670716888178",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u16",
    "hash": "49484346033290402199452925144663309987",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u32",
    "hash": "884029174896295235415014555986256881648",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u64",
    "hash": "105321556043435158153975396196515141092",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_u8",
    "hash": "8589491013402888873623253705894869418",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u16::align_to_unit",
    "hash": "171099687193323427202129170455385433092",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_bool",
    "hash": "1476132700665503532816486125418492720619",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_char",
    "hash": "19970393798774175773930836954134678443",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u128",
    "hash": "889875179944752771313042701316160988359",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u16",
    "hash": "168165444705458592416903067676407950938",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u32",
    "hash": "1339757070395039391018067527322603976028",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u64",
    "hash": "1591177950543492643817641818170242584700",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_u8",
    "hash": "692508970982550761415380284618849802343",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u32::align_to_unit",
    "hash": "1225160257261148908711677337857491710693",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_bool",
    "hash": "60965241606643813452867197778859130009",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_char",
    "hash": "1291580778025281131617069391245448316541",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u128",
    "hash": "79076599745939696475288883781914284799",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u16",
    "hash": "1373690243571260469911341360197072508984",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u32",
    "hash": "77634881670407830342623861607116512554",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u64",
    "hash": "1278515442508727951015477254809104516212",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_u8",
    "hash": "2587013803613821875929888766698813942",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u64::align_to_unit",
    "hash": "1076127539105529243710744449318669757108",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_bool",
    "hash": "156170044060403974922703661852619752089",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_char",
    "hash": "1476548687586608291111839192980372012842",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u128",
    "hash": "15699009502306438769731521348195656464",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u16",
    "hash": "98290120214164934115567541503955536206",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u32",
    "hash": "19446029188200218889582639343169525316",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u64",
    "hash": "56038222615754789854313005851696087142",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_u8",
    "hash": "6118790946612732203258437868118292162",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_u8::align_to_unit",
    "hash": "871259980861197027111072091617356420608",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_bool",
    "hash": "72350620589489576707441423379892551389",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_char",
    "hash": "42961606595917168334562516355937838621",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u128",
    "hash": "120340886411882262008147815016216447758",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u16",
    "hash": "98634379130809592622358666636892814641",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u32",
    "hash": "394232067384539101713580995921821841708",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u64",
    "hash": "952553146222254726710605300471931817379",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_u8",
    "hash": "44203656726390832823667269911450361366",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_from_unit::align_to_unit",
    "hash": "138617363344756954819776225931485516779",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_bool",
    "hash": "788024759116589502514077943427659290023",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_char",
    "hash": "57139057783463885951315283134617861998",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u128",
    "hash": "57491510534837698018986300129935040958",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u16",
    "hash": "67649642054781444749866711961946575631",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u32",
    "hash": "12155350353534461847366952273348816824",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u64",
    "hash": "59868977628039389561629871510504133184",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_u8",
    "hash": "1436494605278079424210642068150874865519",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_bool::align_to_mut_unit",
    "hash": "6621786386858506399985910360336128580",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_bool",
    "hash": "790721233995305149710518758895186162290",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_char",
    "hash": "102770947700002818934210672206395528690",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u128",
    "hash": "773960585214488413810691984234745482700",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u16",
    "hash": "129398129718567937011380990135604623113",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u32",
    "hash": "1754191756242920006217966355313840956641",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u64",
    "hash": "404024622839159410013673125661084622718",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_u8",
    "hash": "1407059624411113149510867867770561035335",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_char::align_to_mut_unit",
    "hash": "1266123009083874761618124436408337244940",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_bool",
    "hash": "67764000268171047016170230780199425753",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_char",
    "hash": "181172497086034025798512716263560544008",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u128",
    "hash": "571096433234253259514175253688248716538",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u16",
    "hash": "17696718478648215977490184213270551295",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u32",
    "hash": "148318360968887269384370345983698614503",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u64",
    "hash": "139506558068739965018188253869511063123",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_u8",
    "hash": "1248809683445469752513579669362087936739",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u128::align_to_mut_unit",
    "hash": "140832980407451710937234420448166308094",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_bool",
    "hash": "123854597953846520859732389734502292465",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_char",
    "hash": "1485340453687589843396767807611739121",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u128",
    "hash": "117260791221700026952449010461378549363",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u16",
    "hash": "907916673431472640215148202224674622887",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u32",
    "hash": "50841836463671476433755220167533298003",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u64",
    "hash": "1073932267819999016615080971834656337563",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_u8",
    "hash": "162587406823159542103225105986502232818",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u16::align_to_mut_unit",
    "hash": "76235064028305455644672081669099237667",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_bool",
    "hash": "1020584836479376327016502716827643388872",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_char",
    "hash": "1564609170012239169115015346364607273582",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u128",
    "hash": "9720462416915814732456835218947448674",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u16",
    "hash": "147497361978800376967209898978477354806",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u32",
    "hash": "138456404321144164783732345126444430077",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u64",
    "hash": "94696228601730337672275024433635807782",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_u8",
    "hash": "1548132878798461019014650888533458913799",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u32::align_to_mut_unit",
    "hash": "183388736298370305931469062237351092433",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_bool",
    "hash": "226601298870367320317131957699393132339",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_char",
    "hash": "767355038440977619417307535729973792816",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u128",
    "hash": "667744591764198420412787183579994159694",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u16",
    "hash": "3640673984158542524170470153459067024",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u32",
    "hash": "9224333835741045305066198187381792163",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u64",
    "hash": "66441211104846624231835166518225172206",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_u8",
    "hash": "622650269634829028812838155186091350950",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u64::align_to_mut_unit",
    "hash": "37218623691997849116580759793060249705",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_bool",
    "hash": "208091528246397001815399185834659329415",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_char",
    "hash": "786456419671020648915044019449952502076",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u128",
    "hash": "176289965692726101644582859286852016202",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u16",
    "hash": "118413369262325440859480658833936760217",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u32",
    "hash": "1187386714691827106413730134150156887707",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u64",
    "hash": "128679931601325026111962314786220902533",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_u8",
    "hash": "169918764648354975369776854544141436159",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_u8::align_to_mut_unit",
    "hash": "46478671451280314711680521897101500679",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_bool",
    "hash": "944426121215921147518306875593277623223",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_char",
    "hash": "67169863342088480036304118039830610500",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u128",
    "hash": "143504749851960042432165458491858764763",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u16",
    "hash": "14541298260865924753517198812893857327",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u32",
    "hash": "1316775951713115055812652138621059276793",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u64",
    "hash": "1560497344443014910016742953159897787492",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_u8",
    "hash": "152855817857588312859277770426372250467",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/mod.rs",
    "func": "slice::verify::align_to_mut_from_unit::align_to_mut_unit",
    "hash": "1756576121790579011712429101171903363956",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/slice/rotate.rs",
    "func": "slice::rotate::const_min",
    "hash": "109762422826292596208835821473067171312"
  },
  {
    "file": "core/src/slice/sort/shared/smallsort.rs",
    "func": "slice::sort::shared::smallsort::panic_on_ord_violation",
    "hash": "20864404773103763994288951545195620080"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone",
    "hash": "50707934406672101386754877161806847820"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::len",
    "hash": "1651179775329259522113314208337660321277"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_sorted",
    "hash": "1017991774535437084916062623589978810664"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::new_unsorted",
    "hash": "829392050603196067516820881974522986068"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::DriftsortRun::sorted",
    "hash": "80396092051270889894190922500965024334"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_depth",
    "hash": "177342768810036299006093171263368931860"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::merge_tree_scale_factor",
    "hash": "74159074352473659393028031499534942560"
  },
  {
    "file": "core/src/slice/sort/stable/drift.rs",
    "func": "slice::sort::stable::drift::sqrt_approx",
    "hash": "153787844435280568988613196589684305689"
  },
  {
    "file": "core/src/str/count.rs",
    "func": "str::count::contains_non_continuation_byte",
    "hash": "87921322259985553812333634501742816676"
  },
  {
    "file": "core/src/str/count.rs",
    "func": "str::count::sum_bytes_in_usize",
    "hash": "173449527252920421021568543557858434985"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as clone::Clone>::clone",
    "hash": "1296931504813717080514326101942530570573"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "7501130517508451573280016226395359294"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as cmp::PartialEq>::eq",
    "hash": "156234168536563454779762898279562746630"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::ParseBoolError as error::Error>::description",
    "hash": "548837607251356901412668604911231462634"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as clone::Clone>::clone",
    "hash": "1314895160135049780416477254240475908536"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "14323634890838866055953187328881343335"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as cmp::PartialEq>::eq",
    "hash": "84902219571442913917528900216525645818"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "<str::error::Utf8Error as error::Error>::description",
    "hash": "131387868646871320592129602443765250803"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::error_len",
    "hash": "530628292873980432216473858208517001482"
  },
  {
    "file": "core/src/str/error.rs",
    "func": "str::error::Utf8Error::valid_up_to",
    "hash": "103116992250090339972781234719595819570"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::BytesIsNotEmpty as clone::Clone>::clone",
    "hash": "100308473768163725318237118287816300179"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDebugContinue as clone::Clone>::clone",
    "hash": "3463340834013751257671694192759724031"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeDefault as clone::Clone>::clone",
    "hash": "152485161169158423985763848318383805228"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::CharEscapeUnicode as clone::Clone>::clone",
    "hash": "133116732257817399838444266896101787238"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::IsAsciiWhitespace as clone::Clone>::clone",
    "hash": "100256246459068344982895863704396216997"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::IsNotEmpty as clone::Clone>::clone",
    "hash": "944942546955513638116640629233707005790"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::IsWhitespace as clone::Clone>::clone",
    "hash": "1005832972765124559215934342816328906084"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::LinesMap as clone::Clone>::clone",
    "hash": "166308016448541049454153295736985675211"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "<str::UnsafeBytesToStr as clone::Clone>::clone",
    "hash": "310052549621640182417429298946838842200"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &mut str>::default",
    "hash": "236587872465056178915145405547238338110"
  },
  {
    "file": "core/src/str/mod.rs",
    "func": "str::<impl default::Default for &str>::default",
    "hash": "109728572021665448201809134312606723391"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<char as str::pattern::Pattern>::as_utf8_pattern",
    "hash": "1379016533706268986011304858043157544042"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::EmptyNeedle as clone::Clone>::clone",
    "hash": "46193724960776866056737621218194325490"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching",
    "hash": "146507627476814107677104441925797118965"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "1772952725560717790113998343690175182842"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "10689862468822940221927397400941920163"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching",
    "hash": "1206730974527364627516341888692559949819"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting",
    "hash": "294887974428220338713064789742687613384"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject",
    "hash": "4409820085065835207846628885485317057"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as clone::Clone>::clone",
    "hash": "81139936129627676379400892797848452378"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "1272597954143631777711747043957816760513"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::SearchStep as cmp::PartialEq>::eq",
    "hash": "19533397983861932317685469414886463034"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::StrSearcherImpl as clone::Clone>::clone",
    "hash": "1370526709208590959216452063849953944965"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "<str::pattern::TwoWaySearcher as clone::Clone>::clone",
    "hash": "135638917379999888296618730557196393063"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::TwoWaySearcher::byteset_contains",
    "hash": "632586763026986584910358085677244274300"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq"
  },
  {
    "file": "core/src/str/pattern.rs",
    "func": "str::pattern::verify::check_small_slice_eq_empty"
  },
  {
    "file": "core/src/str/traits.rs",
    "func": "str::traits::str_index_overflow_fail",
    "hash": "1472730426276209549715770316783411152615"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::contains_nonascii",
    "hash": "53703104570138002865479014552427780648"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_acc_cont_byte",
    "hash": "802603331907130014710293248879007229107"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_char_width",
    "hash": "177654207720279896464631270099131912070"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_first_byte",
    "hash": "1793199026846464691616255721034512928348"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::utf8_is_cont_byte",
    "hash": "121973516639670562835557836045994389718"
  },
  {
    "file": "core/src/str/validations.rs",
    "func": "str::validations::verify::check_run_utf8_validation",
    "hash": "146796236393939842125336298478226697600",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as convert::From<bool>>::from",
    "hash": "133727958641795827369327317842918704195"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicBool as default::Default>::default",
    "hash": "147403074830542987317599500900059701672"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as convert::From<i16>>::from",
    "hash": "750697645700944348615196861642156165304"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI16 as default::Default>::default",
    "hash": "36636811203853516545276320112131440527"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as convert::From<i32>>::from",
    "hash": "438566695741440630517021400666157121589"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI32 as default::Default>::default",
    "hash": "1578542605014917352214719306251901548457"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as convert::From<i64>>::from",
    "hash": "1530340053088445573916680464741312108768"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI64 as default::Default>::default",
    "hash": "900200723858907585716723867425676025417"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as convert::From<i8>>::from",
    "hash": "1432232291031633950615532970132720735232"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicI8 as default::Default>::default",
    "hash": "121955603558524330216984635154094791467"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as convert::From<isize>>::from",
    "hash": "13761497265421204401402828937876468151"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicIsize as default::Default>::default",
    "hash": "178100108110177210551942608981086068886"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as convert::From<u16>>::from",
    "hash": "483772801167778384510458329689186103690"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU16 as default::Default>::default",
    "hash": "107629916359929002902192033894487729692"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as convert::From<u32>>::from",
    "hash": "54386759220096413361102528952442374632"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU32 as default::Default>::default",
    "hash": "1581216459346638818913461669331891875803"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as convert::From<u64>>::from",
    "hash": "133845830403330599111716036196329625654"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU64 as default::Default>::default",
    "hash": "6705198300741334014071666438295438451"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as convert::From<u8>>::from",
    "hash": "151103211034697911214764264007126903796"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicU8 as default::Default>::default",
    "hash": "9413122067428323286659604113126946061"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as convert::From<usize>>::from",
    "hash": "110645430734720238983520293518753166995"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::AtomicUsize as default::Default>::default",
    "hash": "2434434068301216275608203915016892496"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as clone::Clone>::clone",
    "hash": "1705508454047069531910860723069837186178"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "54076399725154858716784885735735835533"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "<sync::atomic::Ordering as cmp::PartialEq>::eq",
    "hash": "1225614168422162137914335376860858161211"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::as_ptr",
    "hash": "87550167540576883156931151692369470709"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_and_swap",
    "hash": "988996236352421911517661563627984069772"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange",
    "hash": "504542928466208908112653817916825211386"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::compare_exchange_weak",
    "hash": "11608282039902136457266699074055363342"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_and",
    "hash": "524112105466557799716440009554380414882"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_nand",
    "hash": "179623127188799151384175229115048906752"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_not",
    "hash": "1699412142506077944817636873922349696480"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_or",
    "hash": "912705269004690912214649287213265810678"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::fetch_xor",
    "hash": "173584067962017039111506522057886968342"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::from_mut",
    "hash": "1104376838313049160317051170314090710182"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::get_mut",
    "hash": "435946268691416541410327111490242693748"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::into_inner",
    "hash": "393980648114416973211660228324683221654"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::load",
    "hash": "1460425760573688266015044144642711949532"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::new",
    "hash": "176472351097346664287390932246848185987"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::store",
    "hash": "14945314362700878226747598803378878564"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicBool::swap",
    "hash": "82048590037364966271649601052720406680"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::as_ptr",
    "hash": "99631291126255057087703690026778092318"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_and_swap",
    "hash": "1510847535714187642215234711219781736129"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange",
    "hash": "1351107058851585813812353089317555978511"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::compare_exchange_weak",
    "hash": "140353297986850189393851613107735878685"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_add",
    "hash": "188504255949823062715878342499641952671"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_and",
    "hash": "89001812841653115187633827545519210337"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_max",
    "hash": "48126883004688841197533706214665986308"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_min",
    "hash": "1506524736095400134911530123544947166396"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_nand",
    "hash": "49501841144255966723717750904953891143"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_or",
    "hash": "750663776858290619418253811754901508458"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_sub",
    "hash": "62116937473209448433849280425944588584"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::fetch_xor",
    "hash": "142349571635946452896273824723972650550"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::from_mut",
    "hash": "65879931165813673235983103883124130176"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::get_mut",
    "hash": "613883475598081797916616690028704488994"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::into_inner",
    "hash": "1610392427540564275811657084756726297410"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::load",
    "hash": "984226919779542956314739352057676297097"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::new",
    "hash": "17402041786497396395825842423126454240"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::store",
    "hash": "15707923953512080102952691947885265945"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI16::swap",
    "hash": "108900769251842515242553862528719554895"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::as_ptr",
    "hash": "163518913250982068371225394107036132668"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_and_swap",
    "hash": "134863565619550249699347751726375067707"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange",
    "hash": "124489509236083339215234435532129062116"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::compare_exchange_weak",
    "hash": "742390778226048914413719164786329302216"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_add",
    "hash": "103802568975509998952129871222279211926"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_and",
    "hash": "1494089098382544494510848427287034706820"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_max",
    "hash": "92834912998231631401714864291421385678"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_min",
    "hash": "1468577483288576804711977763348062996653"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_nand",
    "hash": "50488524993301436015470263255237370899"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_or",
    "hash": "319906796852169091811695472476916380896"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_sub",
    "hash": "162748394069007903794149401568957974047"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::fetch_xor",
    "hash": "119751243608554197064893881846868823307"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::from_mut",
    "hash": "79405625840326935792672972286363891800"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::get_mut",
    "hash": "50573179551556930202100758575019056713"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::into_inner",
    "hash": "13526168263361730808051358411724409111"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::load",
    "hash": "87530866697806310578064545942971073799"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::new",
    "hash": "37432932700937005491259833708662502213"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::store",
    "hash": "115048798357276971016460666126987587953"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI32::swap",
    "hash": "23451212014445124514497654691482000770"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::as_ptr",
    "hash": "8369631822251078815269773531768925458"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_and_swap",
    "hash": "10063241143873353257897313108872592538"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange",
    "hash": "75988036789704568458129110844879033161"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::compare_exchange_weak",
    "hash": "4598211798689365325822268456893922358"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_add",
    "hash": "437501195190708583513833032314652508953"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_and",
    "hash": "132614197201733406463013464945573307139"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_max",
    "hash": "138608503363810416474078407129824687552"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_min",
    "hash": "77229598948502422527929875349563859711"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_nand",
    "hash": "21693227491103697077317124323172602631"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_or",
    "hash": "3217469646074529490861212228586392463"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_sub",
    "hash": "1719754748489988611418002619360820744757"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::fetch_xor",
    "hash": "114676324369746467682057884682676597579"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::from_mut",
    "hash": "170221378425452520172118392256996739063"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::get_mut",
    "hash": "60848104948027198054871558053379969082"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::into_inner",
    "hash": "1182771942267281096518072294568440272309"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::load",
    "hash": "1547374323575288100210355720748593307679"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::new",
    "hash": "182173560710118512412969981536965615251"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::store",
    "hash": "936082941517257250816918720403134664842"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI64::swap",
    "hash": "253509412769939255115001876507218348633"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::as_ptr",
    "hash": "321411451614164109317016415721461911223"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_and_swap",
    "hash": "61161621296853748056436703136702130094"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange",
    "hash": "269609992574054047613341738598844219886"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::compare_exchange_weak",
    "hash": "1353317985803978506016985694839198917741"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_add",
    "hash": "163161492840921975898003845285269022293"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_and",
    "hash": "85769988985895388151293111696357135356"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_max",
    "hash": "1599998115403762025511131929517325044545"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_min",
    "hash": "8073067609267873134733563050875342024"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_nand",
    "hash": "18745638245758596694213084657051571823"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_or",
    "hash": "103823331292138848641961114535872060557"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_sub",
    "hash": "157981794343268853638962079657013517497"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::fetch_xor",
    "hash": "16979156979369623114424475538333864629"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::from_mut",
    "hash": "23215223125371876635516598299884284430"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::get_mut",
    "hash": "46335985374002052661962914057810259180"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::into_inner",
    "hash": "76411944718618175148736917572642817618"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::load",
    "hash": "804565461404644058213798729686631684544"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::new",
    "hash": "621606817981140583513319075029775233331"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::store",
    "hash": "136179892110194136609918490352901989896"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicI8::swap",
    "hash": "141232286700831845814929165864752884524"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::as_ptr",
    "hash": "133476740567508637169055500189499184088"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_and_swap",
    "hash": "12393720724880925448887281771069646211"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange",
    "hash": "268930916710909863518283681137803142356"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::compare_exchange_weak",
    "hash": "966979176876807617715139285773541434855"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_add",
    "hash": "135586918220472311724873740909100033368"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_and",
    "hash": "764657027447770936113167221491059280624"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_max",
    "hash": "152041854288919661124741987128226801121"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_min",
    "hash": "103922518760285522109153441152864780818"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_nand",
    "hash": "22591962030644336471866303245521049158"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_or",
    "hash": "6805731403767598428997183546253266083"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_sub",
    "hash": "88621926740189331357180316265659997568"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::fetch_xor",
    "hash": "28647673665117987214439171159029064625"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::from_mut",
    "hash": "26114612047763456411053087145016150261"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::get_mut",
    "hash": "115392483113934780727064256274010378389"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::into_inner",
    "hash": "140264727769906908169820011740690770973"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::load",
    "hash": "656532441182901953312385673039862042480"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::new",
    "hash": "1011385513030548110015404824765428771489"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::store",
    "hash": "96646565776553151509324718243368134123"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicIsize::swap",
    "hash": "141696475666199274617911848784861539697"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::as_ptr",
    "hash": "178763143597990961055371773020991039150"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_and_swap",
    "hash": "867860467614983880518378589433866209315"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange",
    "hash": "124842201806411845387445527138564932562"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::compare_exchange_weak",
    "hash": "1026560464862572456111768660054324174565"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_add",
    "hash": "1146242860144168504814909774397740568396"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_and",
    "hash": "163578894272507969378859729314022308594"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_max",
    "hash": "53214103357828600211225821156843417907"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_min",
    "hash": "1303361498996150564910010296343281784983"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_nand",
    "hash": "97403714822316892961591075153459344964"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_or",
    "hash": "19945804340575811673431234374699789757"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_sub",
    "hash": "522892615794158709010841673815029665581"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::fetch_xor",
    "hash": "116561110097907039961840754740163648616"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::from_mut",
    "hash": "126585377754301784943676979712702222645"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::get_mut",
    "hash": "819850584376387958910282984156869838893"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::into_inner",
    "hash": "52935318376041444809741171619513351473"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::load",
    "hash": "1244976802204583704211988923973539510696"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::new",
    "hash": "773758846862166337118020542479343390"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::store",
    "hash": "69069713966799780312446500272706669066"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU16::swap",
    "hash": "134686786511080481510250589605979487166"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::as_ptr",
    "hash": "18852899344226671092220250784364746781"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_and_swap",
    "hash": "1399108751658984969912867577270014329864"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange",
    "hash": "120469930276790828037968302593164099427"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::compare_exchange_weak",
    "hash": "1672260847459570886010137522038414088919"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_add",
    "hash": "69824807701671227169380356598426628005"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_and",
    "hash": "23418820682007796515159860763808031490"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_max",
    "hash": "132097423166786144037320531115142841955"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_min",
    "hash": "610170925116565012914062546036222683186"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_nand",
    "hash": "117542711123616413014477227784941464661"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_or",
    "hash": "1131262992806587085010912288176423563256"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_sub",
    "hash": "814322768114584489018116764756492095725"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::fetch_xor",
    "hash": "105988129524568253349154884450309697822"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::from_mut",
    "hash": "171360163305073303758377677425708173924"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::get_mut",
    "hash": "847371280248446487276124452175560007"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::into_inner",
    "hash": "43496300705677229010894038099392381368"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::load",
    "hash": "118308619878433810195460497858521773850"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::new",
    "hash": "366366961830258394417006095678917351849"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::store",
    "hash": "124433479361423398749907199460425693721"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU32::swap",
    "hash": "137772911343248812152285463701038435938"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::as_ptr",
    "hash": "1142658651163801054213834698955306500131"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_and_swap",
    "hash": "150309294778307996631856353677507243836"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange",
    "hash": "95137447147471906759747465440743771251"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::compare_exchange_weak",
    "hash": "82852287277242929729338646808421517954"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_add",
    "hash": "547130955360039368710672414771206004341"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_and",
    "hash": "1326136304102599084910992034048718017647"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_max",
    "hash": "21944924693457880543030015440238499744"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_min",
    "hash": "1385188291447941145817896228513794037169"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_nand",
    "hash": "148853104982030535359176779518030259231"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_or",
    "hash": "1497278698553837756417066649514313816711"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_sub",
    "hash": "293376474846180519110581587374381443978"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::fetch_xor",
    "hash": "347525558423109338915340462301502069696"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::from_mut",
    "hash": "105219830948181594410754143630667730163"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::get_mut",
    "hash": "1629668634262878140116699374097631046424"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::into_inner",
    "hash": "794653168522905145313412800971810148366"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::load",
    "hash": "1166334880022187240712998712106355944863"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::new",
    "hash": "412949671820904511714475169146203378887"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::store",
    "hash": "170856499441490186436897448983972851343"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU64::swap",
    "hash": "1240638636591096026615583108758339435654"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::as_ptr",
    "hash": "1150182604252205411915562735888213207132"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_and_swap",
    "hash": "438848500410205080213747782759304186063"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange",
    "hash": "155550189338870510188875734461664399332"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::compare_exchange_weak",
    "hash": "144466627730732763008626418470521361621"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_add",
    "hash": "951911369978624494489049873010778397"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_and",
    "hash": "175616266000048117391687974869080220137"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_max",
    "hash": "167474420320318613715977754881480581637"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_min",
    "hash": "121704053121191477105659535157797628043"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_nand",
    "hash": "105637957305130740305148919144679664289"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_or",
    "hash": "160506158021561372989926698140897260917"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_sub",
    "hash": "1549088988576187710011871575850087485385"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::fetch_xor",
    "hash": "184036036318713496775727342657369744337"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::from_mut",
    "hash": "82139668711738684815779389087806405818"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::get_mut",
    "hash": "928758753790575174116266542472998420414"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::into_inner",
    "hash": "1359955648635514732213092797790781669730"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::load",
    "hash": "1326036702193383983618005858878913638361"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::new",
    "hash": "256888919843643203217128298632362178504"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::store",
    "hash": "32513961776619461295491409827249863894"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicU8::swap",
    "hash": "32005492693124491186086873097053888099"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::as_ptr",
    "hash": "1184282857023409276218075488028624722695"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_and_swap",
    "hash": "2814675009788529855912078165775160058"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange",
    "hash": "1395392078262753742012597234616013665634"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::compare_exchange_weak",
    "hash": "651242150175250465812950243925717518320"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_add",
    "hash": "1663906997469755843515387740906220274139"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_and",
    "hash": "115390769673793872015811341365900750912"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_max",
    "hash": "1254256472363018915615693274858104464782"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_min",
    "hash": "123394850960569901681749022893693983292"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_nand",
    "hash": "4207023240629835588152077861459976460"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_or",
    "hash": "1035648597425047857410698548158949706188"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_sub",
    "hash": "83249528044572717001483177029467869782"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::fetch_xor",
    "hash": "82620117469472464931979509874795470637"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::from_mut",
    "hash": "2189790021816902893257466426384439844"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::get_mut",
    "hash": "103337513558093068571065721216253412045"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::into_inner",
    "hash": "793922104266903764815946211300028547569"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::load",
    "hash": "1442333350672410176314026706823244936071"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::new",
    "hash": "942126879302493005711463295655280887554"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::store",
    "hash": "66572399986863883807314524755824691233"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::AtomicUsize::swap",
    "hash": "134845793314719254877587068006441605293"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::compiler_fence",
    "hash": "149675874943175027873451600886288933075"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::fence",
    "hash": "963809654786753114715194647462183043889"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::spin_loop_hint",
    "hash": "162117396284993085507313773753415640650"
  },
  {
    "file": "core/src/sync/atomic.rs",
    "func": "sync::atomic::strongest_failure_ordering",
    "hash": "127437039186453598491454874528845978322"
  },
  {
    "file": "core/src/task/wake.rs",
    "func": "task::wake::LocalWaker::noop",
    "hash": "83212483377858907418245992167718785426"
  },
  {
    "file": "core/src/task/wake.rs",
    "func": "task::wake::Waker::noop",
    "hash": "115707108535867954382885648439953730238"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as clone::Clone>::clone",
    "hash": "260250463249080931510387534648122763455"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "658047396379807107012598126589515287813"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::Ord>::cmp",
    "hash": "1795283785655267510912248450007986116083"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialEq>::eq",
    "hash": "101142496335640466139094525623803252007"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as cmp::PartialOrd>::partial_cmp",
    "hash": "1800699186117517398717844042459640460196"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as default::Default>::default",
    "hash": "557122647834986581116727094892827644844"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Add>::add",
    "hash": "49828844490016350457598982079628066206"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::AddAssign>::add_assign",
    "hash": "175375189457478422741672443468277844490"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Div<u32>>::div",
    "hash": "1327669128218965522313166203632729683912"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::DivAssign<u32>>::div_assign",
    "hash": "1592265573454656314017935473443128388600"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Mul<u32>>::mul",
    "hash": "425474648218002056912568880386731503783"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::MulAssign<u32>>::mul_assign",
    "hash": "177485827153440825112964235026628163656"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::Sub>::sub",
    "hash": "202123959157268228715155202509185047063"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ops::arith::SubAssign>::sub_assign",
    "hash": "252653003027250561115846158855793414162"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::Duration as ub_checks::Invariant>::is_safe",
    "hash": "946271010161677623315713999675790637931"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as clone::Clone>::clone",
    "hash": "98978971872620248064693277195131215"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "162091668236278055019373219083533686046"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsError as cmp::PartialEq>::eq",
    "hash": "106791292464507119668182257069962628505"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as clone::Clone>::clone",
    "hash": "1216019695968521358013763653534571424149"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq",
    "hash": "824087987792548368018414436886737473109"
  },
  {
    "file": "core/src/time.rs",
    "func": "<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq",
    "hash": "986141135784453580110870407251717269821"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::<impl ops::arith::Mul<time::Duration> for u32>::mul",
    "hash": "757808530382252240316834938434107821041"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::<impl ub_checks::Invariant for num::niche_types::Nanoseconds>::is_safe",
    "hash": "321912650623667225611100632708386927794"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::abs_diff",
    "hash": "121652600532492363512491693959519308617"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_micros",
    "hash": "175159500756393734143904952488686682819"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis",
    "hash": "13130008589041435344330317288224984029"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f32",
    "hash": "608014019497275759218156085669130563160"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_millis_f64",
    "hash": "86137532379185972257899021653863815250"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_nanos",
    "hash": "1842497136768927196715587234399657119915"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs",
    "hash": "164013609412936400421351274039559151049"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f32",
    "hash": "1815322809258777092014157363571698624974"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::as_secs_f64",
    "hash": "1544749605513081003415118082371080686047"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_add",
    "hash": "1227626370481521066813437513750290064345"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_div",
    "hash": "134179524341399180814748359264852179941"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_mul",
    "hash": "113021099354043843477313174723018677883"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::checked_sub",
    "hash": "422547909368692397811212839236496621065"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f32",
    "hash": "161139872312500559914386358820875574444"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_duration_f64",
    "hash": "120128923167877664895821778301882314488"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f32",
    "hash": "157345929395480247976266598100542370752"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::div_f64",
    "hash": "1292178878216959717211751308893715486528"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_days",
    "hash": "5522782513325353447723675230247051980"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_hours",
    "hash": "972367720126323005014629020636690655804"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_micros",
    "hash": "1449660587771235029245938359709239381"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_millis",
    "hash": "903719629566909921410697519013020294567"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_mins",
    "hash": "51420729950190799622508382677353591213"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_nanos",
    "hash": "23763301377993787312913178973521456806"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs",
    "hash": "96158565650678676051374109365203622923"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f32",
    "hash": "98432072960463793105227376961735834385"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_secs_f64",
    "hash": "1032017942768000937811010795638122188322"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::from_weeks",
    "hash": "70154910395512242614634847618630897024"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::is_zero",
    "hash": "867570393267357295810243073482324923665"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f32",
    "hash": "1022361635290792683751826982284208269"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::mul_f64",
    "hash": "68116648386915687006294260939169617277"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::new",
    "hash": "1439067351174830144817227963902307863201"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_add",
    "hash": "56085251876618388712898455090291977438"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_mul",
    "hash": "7051226527669273757772925068736067347"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::saturating_sub",
    "hash": "148541735816222897456154426385828937412"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_micros",
    "hash": "1612520567736805914113249528345563691832"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_millis",
    "hash": "1125195962614514316116992415134808337733"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::subsec_nanos",
    "hash": "147632748082239898472932841394545936073"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f32",
    "hash": "8925490824719099959724424230054320625"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::Duration::try_from_secs_f64",
    "hash": "10628368749341961907041410120160256108"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::TryFromFloatSecsError::description",
    "hash": "123730407831483502476946950179046200112"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros",
    "hash": "15962624635022361235772832178179688548",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_micros_panics",
    "hash": "887838233754920904010652397419011623897",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis",
    "hash": "408532501995068371812993666802596688578",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_millis_panics",
    "hash": "791741026804751673117546657205178438784",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos",
    "hash": "64643787950888819962148690214696290526",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_nanos_panics",
    "hash": "11971609788533381336994534305083355014",
    "proof_kind": "Standard"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs",
    "hash": "614657775618101045610608560101694398077",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_as_secs_panics",
    "hash": "73242788427200743753490214951285180956",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add",
    "hash": "56783488233831722710555519472909430049",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_add_panics",
    "hash": "1576082442740848212710308753680906310355",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div",
    "hash": "150629155561946088897199542603942099330",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_div_panics",
    "hash": "2481918112493062493124218793209914511",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul",
    "hash": "69866569120233035406526917772880775004",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_mul_panics",
    "hash": "138115634706978842134370584820811285243",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub",
    "hash": "760794701893925441511073643118781536752",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_checked_sub_panics",
    "hash": "557813804284547940613986647092164301732",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new",
    "hash": "82900147020264530312378741846174049471",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_new_panics",
    "hash": "1878075179784897750754516216403026240",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros",
    "hash": "50021812696007392548919362288308456295",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_micros_panics",
    "hash": "95571298159356792788871519774489555629",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis",
    "hash": "106892895751986118846734370292794699855",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_millis_panics",
    "hash": "62351626842649531711212547088692466267",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos",
    "hash": "33376407708185762161400210755907969740",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::duration_subsec_nanos_panics",
    "hash": "163071996080642997846458775771456853346",
    "proof_kind": "Contract"
  },
  {
    "file": "core/src/time.rs",
    "func": "time::duration_verify::safe_duration",
    "hash": "422293588760017581014487121710096578362"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<() as ub_checks::Invariant>::is_safe",
    "hash": "122098284079772621989544276078978807392"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<bool as ub_checks::Invariant>::is_safe",
    "hash": "289957608767801840751175630755829628"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<char as ub_checks::Invariant>::is_safe",
    "hash": "167830479955394516802773609040563578586"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<f128 as ub_checks::Invariant>::is_safe",
    "hash": "177237670228098026265739640470464881168"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<f16 as ub_checks::Invariant>::is_safe",
    "hash": "169662755612369690817887079037682363216"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<f32 as ub_checks::Invariant>::is_safe",
    "hash": "156617127381863245862834732741998816654"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<f64 as ub_checks::Invariant>::is_safe",
    "hash": "1593222393825554245414280027144478059258"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<i128 as ub_checks::Invariant>::is_safe",
    "hash": "3777293394228704312371751095189042958"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<i16 as ub_checks::Invariant>::is_safe",
    "hash": "1082895394796924653912027135843982502101"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<i32 as ub_checks::Invariant>::is_safe",
    "hash": "10654995483874175579920558691051265772"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<i64 as ub_checks::Invariant>::is_safe",
    "hash": "143056686326518208173666057264557908666"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<i8 as ub_checks::Invariant>::is_safe",
    "hash": "1684539321138874394611586162128602934335"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<isize as ub_checks::Invariant>::is_safe",
    "hash": "132077043673679593594390639163371007652"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "87905215503079520955941831883612079868"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "949577173055195931617693703270529612693"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "113814366055626271438047374284421353461"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "109562649191060178038182565159088266799"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<u128 as ub_checks::Invariant>::is_safe",
    "hash": "1685317961382549331315563621039438119204"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<u16 as ub_checks::Invariant>::is_safe",
    "hash": "532251697416855737712970610421291589293"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<u32 as ub_checks::Invariant>::is_safe",
    "hash": "1478017904558453242513557654328535708976"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<u64 as ub_checks::Invariant>::is_safe",
    "hash": "458943044355303009710281133974144533472"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<u8 as ub_checks::Invariant>::is_safe",
    "hash": "466720285576674664216447348725971615634"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check",
    "hash": "138774632689772549819578629668035245923"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check",
    "hash": "331526003538137488213486206162083846398"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "<usize as ub_checks::Invariant>::is_safe",
    "hash": "84826886787266228348694848816763565448"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::precondition_check",
    "hash": "779259699443231594013765145752413104506"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#0}::{closure#1}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#2}::{closure#3}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "alloc::layout::Layout::from_size_align_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check",
    "hash": "20545676461242032347398227782422443799"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::precondition_check",
    "hash": "1044304849541095728612862393851975316974"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::convert::from_u32_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "char::methods::<impl char>::as_ascii_unchecked::precondition_check",
    "hash": "18044099291603718290848494158800216184"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::precondition_check",
    "hash": "90175179397242369455372712796954544135"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::assert_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::precondition_check",
    "hash": "550150895960312460312176584159342455723"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "hint::unreachable_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::precondition_check",
    "hash": "181671986742182253971208121879276699524"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_exact_div::precondition_check",
    "hash": "75293163165650522632103593805071982716"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::precondition_check",
    "hash": "887100573789362673417791527546668928869"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::precondition_check",
    "hash": "89133691393758795615687797618866661138"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::precondition_check",
    "hash": "968594779571845637311904376382296343553"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::precondition_check",
    "hash": "1836461264242469185713668103107983026823"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::precondition_check",
    "hash": "502551347159427126611206473032586907540"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::precondition_check",
    "hash": "74279115759194452643813271052779209656"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_exact_div::precondition_check",
    "hash": "76420699417956658051266065089361475255"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::precondition_check",
    "hash": "399193621071904233114494494918966437223"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::precondition_check",
    "hash": "21230969180364829183390144276315156582"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::precondition_check",
    "hash": "149605818358654123523762391657872517461"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::precondition_check",
    "hash": "13468722443475891828363332869907307440"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::precondition_check",
    "hash": "38926026614230588218196029549731938194"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::precondition_check",
    "hash": "177850530371622448817974704132829740605"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_exact_div::precondition_check",
    "hash": "153822682179010720758208519771297013583"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::precondition_check",
    "hash": "1380661941792586335713467555438381402183"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::precondition_check",
    "hash": "122394258821505609843824286891904923443"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::precondition_check",
    "hash": "25097536491321569864082549968921108274"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::precondition_check",
    "hash": "2382064603761186879440871693405674207"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::precondition_check",
    "hash": "8162950592358554526387359136735555146"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::precondition_check",
    "hash": "80789676719777989186160147589601042916"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_exact_div::precondition_check",
    "hash": "179635978299071327976832227178617033372"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::precondition_check",
    "hash": "748223354646209062216080756235235867485"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::precondition_check",
    "hash": "1679293934906917486716535895443979176533"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::precondition_check",
    "hash": "114279446610348581416965480759310661395"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::precondition_check",
    "hash": "1738447319699650711213981448761320224548"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::precondition_check",
    "hash": "1451588822492802601610784547173327982686"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::precondition_check",
    "hash": "133308496212069525256051440426007164511"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_exact_div::precondition_check",
    "hash": "155083259733558916363434318430994801874"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::precondition_check",
    "hash": "229397104751645721513623596117148190751"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::precondition_check",
    "hash": "133117731405030637056539511649385945760"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::precondition_check",
    "hash": "472639379251230047616147498513396207648"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::precondition_check",
    "hash": "1299273743167497413512479903156629772832"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::precondition_check",
    "hash": "1672342487764768213410183768952031454798"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl i8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::precondition_check",
    "hash": "161744654784700502214353991661269474476"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_exact_div::precondition_check",
    "hash": "358110948317941854518378493545185035640"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::precondition_check",
    "hash": "842574298640543779616020303431668205067"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::precondition_check",
    "hash": "1441153991478230030910193236815896099261"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_neg::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::precondition_check",
    "hash": "11023221767881654071674312263020988102"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::precondition_check",
    "hash": "37465060302571752961094941345089089691"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::precondition_check",
    "hash": "156447637167475391532389006417387252767"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl isize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::precondition_check",
    "hash": "38018327556057585365670735453269759978"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::precondition_check",
    "hash": "118147054745257644001827219840814584290"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_exact_div::precondition_check",
    "hash": "355703278490966327817138920979898101822"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::precondition_check",
    "hash": "233647432766321787318287900797236046985"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::precondition_check",
    "hash": "109365931580385388717256814898893171195"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::precondition_check",
    "hash": "346833795137129221013431874600810568274"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::precondition_check",
    "hash": "1496231326680197760218020413061578644034"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u128>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::precondition_check",
    "hash": "90329156699904804204144159522087746037"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::precondition_check",
    "hash": "154484574953228716610772913034892589076"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_exact_div::precondition_check",
    "hash": "21622454857152098156606435035063184454"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::precondition_check",
    "hash": "348967054513872533817366549170758704"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::precondition_check",
    "hash": "101184609948572689445507489914206434495"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::precondition_check",
    "hash": "1649543184077183592314810991149784655871"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::precondition_check",
    "hash": "166341570885829130104233231810117274443"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u16>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::precondition_check",
    "hash": "165881779224859162497935151897397295818"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::precondition_check",
    "hash": "3160937120018741835292927420439008537"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_exact_div::precondition_check",
    "hash": "46413554052585794951369178551278189722"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::precondition_check",
    "hash": "143844583624349435438773167072394973322"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::precondition_check",
    "hash": "145140153436036911539002830353936778518"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::precondition_check",
    "hash": "165712745011122350614895658093158355772"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::precondition_check",
    "hash": "71475324781875461058969346155242588192"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u32>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::precondition_check",
    "hash": "94926141746271831835214634593450319898"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::precondition_check",
    "hash": "314978919754567548911431667279860662742"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_exact_div::precondition_check",
    "hash": "42010025521309830327983855929410691138"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::precondition_check",
    "hash": "174758340021986361067383065047054750299"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::precondition_check",
    "hash": "1731008937182382162317730761428389961355"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::precondition_check",
    "hash": "459705393291143829014011110676230469579"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::precondition_check",
    "hash": "476114977587575467212818870325829402760"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u64>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::as_ascii_unchecked::precondition_check",
    "hash": "485737725267403566817460193271767271533"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::precondition_check",
    "hash": "158972516296249260389617562269119241246"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::precondition_check",
    "hash": "97452641046978690079846027489005397012"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_exact_div::precondition_check",
    "hash": "379041922467081147716700971281550203712"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::precondition_check",
    "hash": "128634977916236049086191802616035952445"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::precondition_check",
    "hash": "984941067772541304615375175694917108748"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::precondition_check",
    "hash": "92958017583619282792229895071861556603"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::precondition_check",
    "hash": "107014327488630519985718537735345166411"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl u8>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::precondition_check",
    "hash": "14091269043160267130855997364635281461"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_add::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::precondition_check",
    "hash": "545497788770854129511971740053666606932"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_disjoint_bitor::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_exact_div::precondition_check",
    "hash": "78679749819976221587866160450859800689"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::precondition_check",
    "hash": "21335504308453886706535473586678212756"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_mul::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::precondition_check",
    "hash": "939442695767417691512610988495222828388"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shl::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::precondition_check",
    "hash": "1280556024642461254212361347024645113720"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_shr::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::precondition_check",
    "hash": "61736658503814130047092566643023378858"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::<impl usize>::unchecked_sub::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check",
    "hash": "962045741537776018613762800291523164529"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#0}::{closure#1}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#2}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::from_mut_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::precondition_check",
    "hash": "1218790289670026660418434748374709001141"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "num::nonzero::NonZero::<T>::new_unchecked::{closure#3}::{closure#1}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::precondition_check",
    "hash": "117719538577286380918646907500680855210"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#0}::{closure#1}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#2}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ops::index_range::IndexRange::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::precondition_check",
    "hash": "63481509848801978663572023657359685619"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#0}::{closure#1}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#2}::{closure#2}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ptr::alignment::Alignment::new_unchecked::{closure#3}::{closure#0}::precondition_check"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked::precondition_check",
    "hash": "1777611543714182170710823195506419279485"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check",
    "hash": "1276481682042495452416715290564260176181"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_mut_unchecked::precondition_check",
    "hash": "188477357021356532517716614779858660745"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::split_at_unchecked::precondition_check",
    "hash": "180126912453652104473132457509626900161"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "slice::<impl [T]>::swap_unchecked::precondition_check",
    "hash": "814630926930692395113620400226148314716"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "1473335491240830543017777776437787647078"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "660858227431972227914649257014475699106"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check",
    "hash": "127199659559777400810316453468540309982"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check",
    "hash": "14197556671385915019919262288159279952"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::check_language_ub",
    "hash": "399232661239117480517401994520839366833"
  },
  {
    "file": "core/src/ub_checks.rs",
    "func": "ub_checks::is_valid_allocation_size",
    "hash": "1366691609966069760614771012231218686545"
  },
  {
    "file": "core/src/unicode/printable.rs",
    "func": "unicode::printable::is_printable",
    "hash": "1442904183975871705318316572858186982837"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::new",
    "hash": "1288142076102493782718240229744494666263"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::prefix_sum",
    "hash": "1696811055327457487716691781965262582152"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::ShortOffsetRunHeader::start_index",
    "hash": "620230244182981955916602356246593208579"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::alphabetic::lookup",
    "hash": "8815720792526009733404984872030652764"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::case_ignorable::lookup",
    "hash": "119416214201097578133034272043726473155"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cased::lookup",
    "hash": "1688723879046870900512370964839385179004"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::cc::lookup",
    "hash": "1637662805275266553212857105245759297447"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_lower",
    "hash": "376554054109447936511558391956888567865"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::conversions::to_upper",
    "hash": "39519504991333706317690806545685079889"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup",
    "hash": "118978515653922331965731340694361055501"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::grapheme_extend::lookup_slow",
    "hash": "59156946480919380926078947705362960476"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::lowercase::lookup",
    "hash": "116459691359810833738491615606940605068"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::n::lookup",
    "hash": "38580711738961098368854182462616675491"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::uppercase::lookup",
    "hash": "42196234455289781127993231980060656381"
  },
  {
    "file": "core/src/unicode/unicode_data.rs",
    "func": "unicode::unicode_data::white_space::lookup",
    "hash": "126826448514586998445582748734874648534"
  },
  {
    "file": "core/src/unit.rs",
    "func": "<() as unit::IsUnit>::is_unit",
    "hash": "157038680174297679531621426849005497820"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks.rs",
    "func": "core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/masks/full_masks.rs",
    "func": "<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits"
  },
  {
    "file": "portable-simd/crates/core_simd/src/swizzle_dyn.rs",
    "func": "core_simd::swizzle_dyn::avx2_pshufb"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/to_bytes.rs",
    "func": "<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from"
  },
  {
    "file": "portable-simd/crates/core_simd/src/vendor.rs",
    "func": "core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from"
  },
  {
    "file": "proc_macro/src/bridge/arena.rs",
    "func": "bridge::arena::Arena::new"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "<bridge::buffer::Buffer as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/buffer.rs",
    "func": "bridge::buffer::Buffer::new"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::FreeFunctions as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::Span as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "<bridge::client::TokenStream as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::FreeFunctions::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::byte_range"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::call_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::column"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::debug"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::def_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::end"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::join"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::line"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::local_file"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::mixed_site"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::parent"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::resolved_at"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::save_span"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::source_text"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::start"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::Span::subspan"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::clone"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::drop"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::from_token_tree"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::into_trees"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::TokenStream::to_string"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::is_available"
  },
  {
    "file": "proc_macro/src/bridge/client.rs",
    "func": "bridge::client::maybe_install_panic_hook"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::finish"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize"
  },
  {
    "file": "proc_macro/src/bridge/fxhash.rs",
    "func": "bridge::fxhash::FxHasher::add_to_hash"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<() as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Delimiter as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<Spacing as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bool as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<bridge::LitKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<char as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<diagnostic::Level as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<u8 as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Mark>::mark"
  },
  {
    "file": "proc_macro/src/bridge/mod.rs",
    "func": "<usize as bridge::Unmark>::unmark"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop"
  },
  {
    "file": "proc_macro/src/bridge/server.rs",
    "func": "bridge::server::RunningSameThreadGuard::new"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "<bridge::symbol::Symbol as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/bridge/symbol.rs",
    "func": "bridge::symbol::Symbol::invalidate_all"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<Span as diagnostic::MultiSpan>::into_spans"
  },
  {
    "file": "proc_macro/src/diagnostic.rs",
    "func": "<diagnostic::Level as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/escape.rs",
    "func": "<escape::EscapeOptions as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<ConversionErrorKind as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Delimiter as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Group as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Ident as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Literal as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Punct as std::cmp::PartialEq<char>>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Spacing as std::cmp::PartialEq>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<Span as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::convert::From<TokenTree>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenStream as std::default::Default>::default"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::clone::Clone>::clone"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Group>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Ident>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Literal>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<TokenTree as std::convert::From<Punct>>::from"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "<impl std::cmp::PartialEq<Punct> for char>::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatStreamsHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "ConcatTreesHelper::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::delimiter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_close"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::span_open"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Group::stream"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Ident::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::byte_str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::character"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::cstr_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::f64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::i8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::isize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::str_value"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u128_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u16_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u32_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u64_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::u8_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_suffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::usize_unsuffixed"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Literal::with_stringify_parts::get_hashes_str"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::as_char"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::spacing"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Punct::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::byte_range"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::call_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::column"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::def_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::end"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::eq"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::join"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::line"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::local_file"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::located_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::mixed_site"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::parent"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::recover_proc_macro_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::resolved_at"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::save_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::source_text"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "Span::start"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::expand_expr"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::is_empty"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenStream::new"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::set_span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "TokenTree::span"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "is_available"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter"
  },
  {
    "file": "proc_macro/src/lib.rs",
    "func": "tree_to_bridge_tree"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr<quote::ThereIsNoIteratorInRepetition>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::HasIterator as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr<quote::HasIterator>>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "<quote::ThereIsNoIteratorInRepetition as std::ops::BitOr>::bitor"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::collect_meta_vars"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote"
  },
  {
    "file": "proc_macro/src/quote.rs",
    "func": "quote::quote_span"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Group as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Ident as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Literal as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<Punct as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenStream as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::into_token_stream"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<TokenTree as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<bool as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<char as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<f64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<i8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<isize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u128 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u16 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u32 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u64 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<u8 as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "proc_macro/src/to_tokens.rs",
    "func": "<usize as to_tokens::ToTokens>::to_tokens"
  },
  {
    "file": "src/lib.rs",
    "func": "dummy"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::allocate_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::deallocate"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::grow_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::alloc::Allocator>::shrink"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "<alloc::System as core::default::Default>::default"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::alloc_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::System::grow_impl"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::_::__rg_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::__default_lib_allocator::__rdl_alloc_zeroed"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::default_alloc_error_hook"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::rust_oom"
  },
  {
    "file": "std/src/alloc.rs",
    "func": "alloc::take_alloc_error_hook"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<char as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::eq_ignore_ascii_case"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::is_ascii"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::make_ascii_uppercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_lowercase"
  },
  {
    "file": "std/src/ascii.rs",
    "func": "<u8 as ascii::AsciiExt>::to_ascii_uppercase"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "<backtrace::BacktraceStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::create"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::disabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::enabled"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::Backtrace::force_capture"
  },
  {
    "file": "std/src/backtrace.rs",
    "func": "backtrace::_assert_send_sync"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::assert_covariance"
  },
  {
    "file": "std/src/collections/hash/map.rs",
    "func": "collections::hash::map::map_try_reserve_error"
  },
  {
    "file": "std/src/collections/hash/set.rs",
    "func": "collections::hash::set::assert_covariance"
  },
  {
    "file": "std/src/env.rs",
    "func": "<env::JoinPathsError as core::error::Error>::description"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::args_os"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::current_exe"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::home_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::temp_dir"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars"
  },
  {
    "file": "std/src/env.rs",
    "func": "env::vars_os"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<&ffi::os_str::OsStr as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "<ffi::os_str::OsString as core::default::Default>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::<impl core::default::Default for alloc_crate::boxed::Box<ffi::os_str::OsStr>>::default"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::new"
  },
  {
    "file": "std/src/ffi/os_str.rs",
    "func": "ffi::os_str::OsString::with_capacity"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<&fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::DirBuilder as sys_common::AsInnerMut<sys::fs::unix::DirBuilder>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::seek"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Seek>::stream_position"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::flush"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::AsInner<sys::fs::unix::File>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::FromInner<sys::fs::unix::File>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::File as sys_common::IntoInner<sys::fs::unix::File>>::into_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileTimes as sys_common::AsInnerMut<sys::fs::unix::FileTimes>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::FileType as sys_common::AsInner<sys::fs::unix::FileType>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::AsInner<sys::fs::unix::FileAttr>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Metadata as sys_common::FromInner<sys::fs::unix::FileAttr>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInner<sys::fs::unix::OpenOptions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::OpenOptions as sys_common::AsInnerMut<sys::fs::unix::OpenOptions>>::as_inner_mut"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::AsInner<sys::fs::unix::FilePermissions>>::as_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "<fs::Permissions as sys_common::FromInner<sys::fs::unix::FilePermissions>>::from_inner"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::DirBuilder::recursive"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::metadata"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::options"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::set_times"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_all"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::sync_data"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_clone"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::try_lock_shared"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::File::unlock"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileTimes::set_modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::FileType::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::accessed"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::created"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::file_type"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_dir"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_file"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::is_symlink"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::len"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::modified"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Metadata::permissions"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::append"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::create_new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::new"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::read"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::truncate"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::OpenOptions::write"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::Permissions::set_readonly"
  },
  {
    "file": "std/src/fs.rs",
    "func": "fs::buffer_capacity_required"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::DefaultHasher as core::hash::Hasher>::finish"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::default::Default>::default"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "<hash::random::RandomState as core::hash::BuildHasher>::build_hasher"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::DefaultHasher::new"
  },
  {
    "file": "std/src/hash/random.rs",
    "func": "hash::random::RandomState::new"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::try_with_capacity"
  },
  {
    "file": "std/src/io/buffered/bufreader/buffer.rs",
    "func": "io::buffered::bufreader::buffer::Buffer::with_capacity"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<alloc_crate::collections::TryReserveError>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::Error as core::convert::From<io::error::ErrorKind>>::from"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "<io::error::ErrorKind as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::from_raw_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::Error::last_os_error"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::ErrorKind::as_str"
  },
  {
    "file": "std/src/io/error.rs",
    "func": "io::error::_assert_error_is_sync_send"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_os"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::Repr::new_simple"
  },
  {
    "file": "std/src/io/error/repr_bitpacked.rs",
    "func": "io::error::repr_bitpacked::kind_from_prim"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/io/mod.rs",
    "func": "<io::SeekFrom as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<&io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeReader as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::flush"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "<io::pipe::PipeWriter as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeReader::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::PipeWriter::try_clone"
  },
  {
    "file": "std/src/io/pipe.rs",
    "func": "io::pipe::pipe"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<&io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<fs::File as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::Stderr as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StderrRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdinRaw as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::flush"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "<io::stdio::StdoutRaw as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::Stderr::lock"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::cleanup"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stderr_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdin_raw"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout"
  },
  {
    "file": "std/src/io/stdio.rs",
    "func": "io::stdio::stdout_raw"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<&io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::consume"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::fill_buf"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::has_data_left"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::BufRead>::skip_until"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::seek"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_len"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Seek>::stream_position"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Empty as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::lower_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Repeat as io::SizeHint>::upper_bound"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as core::default::Default>::default"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::flush"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "<io::util::Sink as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::empty"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::repeat"
  },
  {
    "file": "std/src/io/util.rs",
    "func": "io::util::sink"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/net/mod.rs",
    "func": "<net::Shutdown as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddr as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV4 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/socket_addr.rs",
    "func": "<core::net::SocketAddrV6 as net::socket_addr::ToSocketAddrs>::to_socket_addrs"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<&net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::IntoIncoming as core::iter::Iterator>::next"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::AsInner<sys::net::connection::socket::TcpListener>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::FromInner<sys::net::connection::socket::TcpListener>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpListener as sys_common::IntoInner<sys::net::connection::socket::TcpListener>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::flush"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::AsInner<sys::net::connection::socket::TcpStream>>::as_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::FromInner<sys::net::connection::socket::TcpStream>>::from_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "<net::tcp::TcpStream as sys_common::IntoInner<sys::net::connection::socket::TcpStream>>::into_inner"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::accept"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::into_incoming"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpListener::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::local_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::peer_addr"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_linger"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::shutdown"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::take_error"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::try_clone"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::ttl"
  },
  {
    "file": "std/src/net/tcp.rs",
    "func": "net::tcp::TcpStream::write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::AsInner<sys::net::connection::socket::UdpSocket>>::as_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::FromInner<sys::net::connection::socket::UdpSocket>>::from_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "<net::udp::UdpSocket as sys_common::IntoInner<sys::net::connection::socket::UdpSocket>>::into_inner"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::local_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::take_error"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::try_clone"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::ttl"
  },
  {
    "file": "std/src/net/udp.rs",
    "func": "net::udp::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::acosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::asinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atan2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::atanh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cbrt"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::cosh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::erfc"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::exp_m1"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::hypot"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_1p"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::ln_gamma"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log10"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::log2"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::powf"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sin_cos"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::sinh"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tan"
  },
  {
    "file": "std/src/num/f128.rs",
    "func": "f128::<impl f128>::tanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::acosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::asinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atan2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::atanh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::cosh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::erfc"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::exp_m1"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::hypot"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_1p"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::ln_gamma"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log10"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::log2"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::powf"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sin_cos"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::sinh"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tan"
  },
  {
    "file": "std/src/num/f16.rs",
    "func": "f16::<impl f16>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::abs_sub"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::acosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::asinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atan2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::atanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cbrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ceil"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::cosh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::div_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::erfc"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::exp_m1"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::floor"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::fract"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::hypot"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_1p"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::ln_gamma"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log10"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::log2"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::mul_add"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powf"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::powi"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::rem_euclid"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::round_ties_even"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sin_cos"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sinh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::sqrt"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tan"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::tanh"
  },
  {
    "file": "std/src/num/f32.rs",
    "func": "f32::<impl f32>::trunc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::abs_sub"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::acosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::asinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atan2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::atanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cbrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ceil"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::cosh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::div_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::erfc"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::exp_m1"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::floor"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::fract"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::hypot"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_1p"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::ln_gamma"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log10"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::log2"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::mul_add"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powf"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::powi"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::rem_euclid"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::round_ties_even"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sin_cos"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sinh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::sqrt"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tan"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::tanh"
  },
  {
    "file": "std/src/num/f64.rs",
    "func": "f64::<impl f64>::trunc"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpListener>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::tcp::TcpStream>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::AsRawFd for net::udp::UdpSocket>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpListener>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::tcp::TcpStream>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::FromRawFd for net::udp::UdpSocket>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpListener>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::tcp::TcpStream>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/net.rs",
    "func": "os::fd::net::<impl os::fd::raw::IntoRawFd for net::udp::UdpSocket>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<fs::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeReader as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::pipe::PipeWriter as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<io::stdio::Stderr as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::tcp::TcpStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<net::udp::UdpSocket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpListener>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::tcp::TcpStream>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::convert::From<net::udp::UdpSocket>>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as io::stdio::IsTerminal>::is_terminal"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "<os::fd::owned::OwnedFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for fs::File>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeReader>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for io::pipe::PipeWriter>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpListener>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::tcp::TcpStream>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::<impl core::convert::From<os::fd::owned::OwnedFd> for net::udp::UdpSocket>::from"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::BorrowedFd::<'_>::borrow_raw"
  },
  {
    "file": "std/src/os/fd/owned.rs",
    "func": "os::fd::owned::OwnedFd::try_clone"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<fs::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<i32 as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeReader as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::pipe::PipeWriter as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/fd/raw.rs",
    "func": "<io::stdio::Stderr as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::as_raw_stat"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_atime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blksize"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_blocks"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ctime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_dev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_gid"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_ino"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mode"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_mtime_nsec"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_nlink"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_rdev"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_size"
  },
  {
    "file": "std/src/os/linux/fs.rs",
    "func": "<fs::Metadata as os::linux::fs::MetadataExt>::st_uid"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::AsInner<sys::pal::unix::linux::pidfd::PidFd>>::as_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::FromInner<sys::pal::unix::linux::pidfd::PidFd>>::from_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "<os::linux::process::PidFd as sys_common::IntoInner<sys::pal::unix::linux::pidfd::PidFd>>::into_inner"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::<impl core::convert::From<os::linux::process::PidFd> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::kill"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::try_wait"
  },
  {
    "file": "std/src/os/linux/process.rs",
    "func": "os::linux::process::PidFd::wait"
  },
  {
    "file": "std/src/os/linux/raw.rs",
    "func": "<os::linux::raw::arch::stat as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/socket.rs",
    "func": "<os::unix::net::stream::UnixStream as os::net::linux_ext::socket::UnixSocketExt>::set_passcred"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::quickack"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_deferaccept"
  },
  {
    "file": "std/src/os/net/linux_ext/tcp.rs",
    "func": "<net::tcp::TcpStream as os::net::linux_ext::tcp::TcpStreamExt>::set_quickack"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::DirBuilder as os::unix::fs::DirBuilderExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_block_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_char_device"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_fifo"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::FileType as os::unix::fs::FileTypeExt>::is_socket"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::atime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blksize"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::blocks"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ctime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::dev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::gid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::ino"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::mtime_nsec"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::nlink"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::rdev"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::size"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Metadata as os::unix::fs::MetadataExt>::uid"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::custom_flags"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::OpenOptions as os::unix::fs::OpenOptionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::from_mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::mode"
  },
  {
    "file": "std/src/os/unix/fs.rs",
    "func": "<fs::Permissions as os::unix::fs::PermissionsExt>::set_mode"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "<os::unix::net::addr::SocketAddr as os::net::linux_ext::addr::SocketAddrExt>::as_abstract_name"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::address"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::as_pathname"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::from_parts"
  },
  {
    "file": "std/src/os/unix/net/addr.rs",
    "func": "os::unix::net::addr::SocketAddr::is_unnamed"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "<os::unix::net::ancillary::SocketCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::AncillaryData::<'_>::try_from_cmsghdr"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::get_uid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::new"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_gid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_pid"
  },
  {
    "file": "std/src/os/unix/net/ancillary.rs",
    "func": "os::unix::net::ancillary::SocketCred::set_uid"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "<os::unix::net::datagram::UnixDatagram as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::<impl core::convert::From<os::unix::net::datagram::UnixDatagram> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::local_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::pair"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_mark"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::shutdown"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::take_error"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::try_clone"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::unbound"
  },
  {
    "file": "std/src/os/unix/net/datagram.rs",
    "func": "os::unix::net::datagram::UnixDatagram::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<&os::unix::net::listener::UnixListener as core::iter::IntoIterator>::into_iter"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "<os::unix::net::listener::UnixListener as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::<impl core::convert::From<os::unix::net::listener::UnixListener> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::accept"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::bind_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::incoming"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::local_addr"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::take_error"
  },
  {
    "file": "std/src/os/unix/net/listener.rs",
    "func": "os::unix::net::listener::UnixListener::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<&os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as core::convert::From<os::fd::owned::OwnedFd>>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::flush"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "<os::unix::net::stream::UnixStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::<impl core::convert::From<os::unix::net::stream::UnixStream> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::connect_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::local_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::pair"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_addr"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::peer_cred"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_mark"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_nonblocking"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_read_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::set_write_timeout"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::shutdown"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::take_error"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::try_clone"
  },
  {
    "file": "std/src/os/unix/net/stream.rs",
    "func": "os::unix::net::stream::UnixStream::write_timeout"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "<os::unix::net::ucred::UCred as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/os/unix/net/ucred.rs",
    "func": "os::unix::net::ucred::impl_linux::peer_cred"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::Child as os::unix::process::ChildExt>::send_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatus as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::continued"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::core_dumped"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::from_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::into_raw"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "<process::ExitStatusError as os::unix::process::ExitStatusExt>::stopped_signal"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStderr>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdin>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::ChildStdout>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<os::fd::owned::OwnedFd> for process::Stdio>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStderr> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdin> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl core::convert::From<process::ChildStdout> for os::fd::owned::OwnedFd>::from"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStderr>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdin>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::owned::AsFd for process::ChildStdout>::as_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStderr>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdin>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::AsRawFd for process::ChildStdout>::as_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::FromRawFd for process::Stdio>::from_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStderr>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdin>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::<impl os::fd::raw::IntoRawFd for process::ChildStdout>::into_raw_fd"
  },
  {
    "file": "std/src/os/unix/process.rs",
    "func": "os::unix::process::parent_id"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "<panic::BacktraceStyle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::as_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::from_u8"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::BacktraceStyle::full"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::always_abort"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::get_backtrace_style"
  },
  {
    "file": "std/src/panic.rs",
    "func": "panic::set_backtrace_style"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "<panicking::Hook as core::default::Default>::default"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_drop_panic"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::__rust_foreign_exception"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::count_is_zero"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::decrease"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::finished_panic_hook"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::get_count"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::increase"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::is_zero_slow_path"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panic_count::set_always_abort"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::panicking"
  },
  {
    "file": "std/src/panicking.rs",
    "func": "panicking::take_hook"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::NormalizeError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::PathBuf as core::default::Default>::default"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::State as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/path.rs",
    "func": "<path::StripPrefixError as core::error::Error>::description"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::new"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::PathBuf::with_capacity"
  },
  {
    "file": "std/src/path.rs",
    "func": "path::is_separator"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<&process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<() as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::AsInner<sys::process::unix::unix::Process>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Child as sys_common::IntoInner<sys::process::unix::unix::Process>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStderr as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::flush"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdin as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::AsInner<sys::pal::unix::pipe::AnonPipe>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::FromInner<sys::pal::unix::pipe::AnonPipe>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ChildStdout as sys_common::IntoInner<sys::pal::unix::pipe::AnonPipe>>::into_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as process::Termination>::report"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::AsInner<sys::process::unix::common::ExitCode>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitCode as sys_common::FromInner<sys::process::unix::common::ExitCode>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::convert::From<process::ExitStatusError>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::AsInner<sys::process::unix::unix::ExitStatus>>::as_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatus as sys_common::FromInner<sys::process::unix::unix::ExitStatus>>::from_inner"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<fs::File>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeReader>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::pipe::PipeWriter>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStderr>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdin>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "<process::Stdio as core::convert::From<process::ChildStdout>>::from"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::id"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::kill"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::try_wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Child::wait_with_output"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::exit_process"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitCode::to_i32"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatus::success"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::code_nonzero"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::ExitStatusError::into_status"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::inherit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::null"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::Stdio::piped"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::abort"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::exit"
  },
  {
    "file": "std/src/process.rs",
    "func": "process::id"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/random.rs",
    "func": "<random::DefaultRandomSource as core::default::Default>::default"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::__rust_abort"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::cleanup"
  },
  {
    "file": "std/src/rt.rs",
    "func": "rt::thread_cleanup"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::new"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::Barrier::wait"
  },
  {
    "file": "std/src/sync/barrier.rs",
    "func": "sync::barrier::BarrierWaitResult::is_leader"
  },
  {
    "file": "std/src/sync/lazy_lock.rs",
    "func": "sync::lazy_lock::panic_poisoned"
  },
  {
    "file": "std/src/sync/mpmc/array.rs",
    "func": "<sync::mpmc::array::ArrayToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/context.rs",
    "func": "sync::mpmc::context::Context::new"
  },
  {
    "file": "std/src/sync/mpmc/list.rs",
    "func": "<sync::mpmc::list::ListToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Operation as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::From<usize>>::from"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Selected as core::convert::Into<usize>>::into"
  },
  {
    "file": "std/src/sync/mpmc/select.rs",
    "func": "<sync::mpmc::select::Token as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::new"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_heavy"
  },
  {
    "file": "std/src/sync/mpmc/utils.rs",
    "func": "sync::mpmc::utils::Backoff::spin_light"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::SyncWaker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::Waker::new"
  },
  {
    "file": "std/src/sync/mpmc/waker.rs",
    "func": "sync::mpmc::waker::current_thread_id"
  },
  {
    "file": "std/src/sync/mpmc/zero.rs",
    "func": "<sync::mpmc::zero::ZeroToken as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::RecvTimeoutError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::convert::From<sync::mpsc::RecvError>>::from"
  },
  {
    "file": "std/src/sync/mpsc.rs",
    "func": "<sync::mpsc::TryRecvError as core::error::Error>::description"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "<sync::poison::Guard as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::borrow"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::clear"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::done"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::get"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::guard"
  },
  {
    "file": "std/src/sync/poison.rs",
    "func": "sync::poison::Flag::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::Condvar as core::default::Default>::default"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "<sync::poison::condvar::WaitTimeoutResult as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::new"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_all"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::Condvar::notify_one"
  },
  {
    "file": "std/src/sync/poison/condvar.rs",
    "func": "sync::poison::condvar::WaitTimeoutResult::timed_out"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::is_completed"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::new"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::set_state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::state"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::Once::wait_force"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sync/poison/once.rs",
    "func": "sync::poison::once::OnceState::poison"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::contains"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::new"
  },
  {
    "file": "std/src/sync/reentrant_lock.rs",
    "func": "sync::reentrant_lock::Tid::set"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::<impl core::alloc::GlobalAlloc for alloc::System>::alloc_zeroed"
  },
  {
    "file": "std/src/sys/alloc/unix.rs",
    "func": "sys::alloc::unix::aligned_malloc"
  },
  {
    "file": "std/src/sys/anonymous_pipe/unix.rs",
    "func": "sys::anonymous_pipe::unix::pipe"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::args"
  },
  {
    "file": "std/src/sys/args/unix.rs",
    "func": "sys::args::unix::imp::argc_argv"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::lock::<'_>"
  },
  {
    "file": "std/src/sys/backtrace.rs",
    "func": "sys::backtrace::set_image_base"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::env_read_lock"
  },
  {
    "file": "std/src/sys/env/unix.rs",
    "func": "sys::env::unix::environ"
  },
  {
    "file": "std/src/sys/exit_guard.rs",
    "func": "sys::exit_guard::unique_thread_exit"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<&sys::fd::unix::FileDesc as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::AsInner<os::fd::owned::OwnedFd>>::as_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::FromInner<os::fd::owned::OwnedFd>>::from_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "<sys::fd::unix::FileDesc as sys_common::IntoInner<os::fd::owned::OwnedFd>>::into_inner"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::duplicate"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_read_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::is_write_vectored"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_cloexec"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::set_nonblocking"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::FileDesc::try_clone"
  },
  {
    "file": "std/src/sys/fd/unix.rs",
    "func": "sys::fd::unix::max_iov"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as core::fmt::Debug>::fmt::get_path"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::AsInnerMut<sys::fd::unix::FileDesc>>::as_inner_mut"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::File as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileAttr as sys_common::AsInner<libc::stat64>>::as_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FilePermissions as sys_common::FromInner<u32>>::from_inner"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileTimes as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::FileType as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::Mode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::OpenOptions as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::StatxExtraFields as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::DirBuilder::set_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::datasync::os_datasync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::duplicate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::file_attr"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::flush"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::fsync::os_fsync"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_read_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::is_write_vectored"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::seek"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_permissions"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::set_times"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::tell"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::try_lock_shared"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::File::unlock"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::created"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::file_type"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::from_stat64"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::perm"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileAttr::size"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FilePermissions::set_readonly"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_accessed"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileTimes::set_modified"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_dir"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_file"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::is_symlink"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::FileType::masked"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::append"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::create_new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::custom_flags"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_access_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::get_creation_mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::mode"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::new"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::read"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::truncate"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::OpenOptions::write"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::debug_assert_fd_is_open"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::fchown"
  },
  {
    "file": "std/src/sys/fs/unix.rs",
    "func": "sys::fs::unix::remove_dir_impl::fdreaddir"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpListener as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::AsInner<sys::net::connection::socket::unix::Socket>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::TcpStream as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "<sys::net::connection::socket::UdpSocket as sys_common::FromInner<sys::net::connection::socket::unix::Socket>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::accept"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_only_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpListener::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::TcpStream::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::into_socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::join_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::leave_multicast_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::peer_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_broadcast"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_loop_v6"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_multicast_ttl_v4"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_read_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::set_write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::socket_addr"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::ttl"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::UdpSocket::write_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v4_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::ip_v6_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v4_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_from_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::socket_addr_v6_to_c"
  },
  {
    "file": "std/src/sys/net/connection/socket.rs",
    "func": "sys::net::connection::socket::to_ipv6mr_interface"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "<sys::net::connection::socket::unix::Socket as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::as_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::connect_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::duplicate"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_read_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::is_write_vectored"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_pair"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::new_raw"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_deferaccept"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_linger"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_mark"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nodelay"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_nonblocking"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_passcred"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_quickack"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::set_timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::shutdown"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::take_error"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::Socket::timeout"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::cvt_gai"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::init"
  },
  {
    "file": "std/src/sys/net/connection/socket/unix.rs",
    "func": "sys::net::connection::socket::unix::on_resolver_failure"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Buf::with_capacity"
  },
  {
    "file": "std/src/sys/os_str/bytes.rs",
    "func": "sys::os_str::bytes::Slice::empty_box"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wait"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake"
  },
  {
    "file": "std/src/sys/pal/unix/futex.rs",
    "func": "sys::pal::unix::futex::futex_wake_all"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<&os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<fs::File as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeReader as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<io::pipe::PipeWriter as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<net::tcp::TcpStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<os::unix::net::stream::UnixStream as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStderr as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdin as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<process::ChildStdout as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyRead>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::fs::unix::cfm::CachedFileMetadata as sys::pal::unix::kernel_copy::CopyWrite>::properties"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::FdHandle as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "<sys::pal::unix::kernel_copy::SpliceMode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::copy_file_range_candidate"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::maybe_fifo"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::FdMeta::potential_sendfile_source"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::copy_regular_files::probe_copy_file_range_support"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::safe_kernel_copy"
  },
  {
    "file": "std/src/sys/pal/unix/kernel_copy.rs",
    "func": "sys::pal::unix::kernel_copy::sendfile_splice"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::AsInner<sys::fd::unix::FileDesc>>::as_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "<sys::pal::unix::linux::pidfd::PidFd as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::kill"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::send_signal"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::try_wait"
  },
  {
    "file": "std/src/sys/pal/unix/linux/pidfd.rs",
    "func": "sys::pal::unix::linux::pidfd::PidFd::wait"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i16 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i32 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i64 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<i8 as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "<isize as sys::pal::unix::IsMinusOne>::is_minus_one"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::abort_internal"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::cvt_nz"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::decode_error_kind"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::reset_sigpipe"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::init::sanitize_standard_fds"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::is_interrupted"
  },
  {
    "file": "std/src/sys/pal/unix/mod.rs",
    "func": "sys::pal::unix::on_broken_pipe_flag_used"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "<sys::pal::unix::os::JoinPathsError as core::error::Error>::description"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::current_exe"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::error_string"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::exit"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getcwd"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getpid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::getppid"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::glibc_version"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::home_dir::fallback"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::page_size"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::set_errno"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::split_paths::is_separator"
  },
  {
    "file": "std/src/sys/pal/unix/os.rs",
    "func": "sys::pal::unix::os::temp_dir"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::owned::AsFd>::as_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::AsRawFd>::as_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::FromRawFd>::from_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as os::fd::raw::IntoRawFd>::into_raw_fd"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::FromInner<sys::fd::unix::FileDesc>>::from_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "<sys::pal::unix::pipe::AnonPipe as sys_common::IntoInner<sys::fd::unix::FileDesc>>::into_inner"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::as_file_desc"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_read_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::is_write_vectored"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::AnonPipe::try_clone"
  },
  {
    "file": "std/src/sys/pal/unix/pipe.rs",
    "func": "sys::pal::unix::pipe::anon_pipe"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::Handler::null"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::cleanup"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::current_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::get_stack_start"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::init"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_bsds"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_default"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_freebsd"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::install_main_guard_linux_musl"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::sigstack_size"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow.rs",
    "func": "sys::pal::unix::stack_overflow::imp::stack_start_aligned"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "<sys::pal::unix::stack_overflow::thread_info::UnlockOnDrop as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::delete_current_info"
  },
  {
    "file": "std/src/sys/pal/unix/stack_overflow/thread_info.rs",
    "func": "sys::pal::unix::stack_overflow::thread_info::spin_lock_in_setup"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::Thread as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "<sys::pal::unix::thread::cgroups::Cgroup as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::into_id"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::join"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::sleep_until"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::Thread::yield_now"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::available_parallelism"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::cgroups::quota"
  },
  {
    "file": "std/src/sys/pal/unix/thread.rs",
    "func": "sys::pal::unix::thread::current_os_id"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "<sys::pal::unix::time::Timespec as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::checked_sub_instant"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::into_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Instant::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::SystemTime::sub_time"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_add_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::checked_sub_duration"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::new_unchecked"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::now"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::sub_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::to_timespec"
  },
  {
    "file": "std/src/sys/pal/unix/time.rs",
    "func": "sys::pal::unix::time::Timespec::zero"
  },
  {
    "file": "std/src/sys/pal/unix/weak.rs",
    "func": "sys::pal::unix::thread::current_os_id::gettid"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_sep_byte"
  },
  {
    "file": "std/src/sys/path/unix.rs",
    "func": "sys::path::unix::is_verbatim_sep"
  },
  {
    "file": "std/src/sys/personality/dwarf/eh.rs",
    "func": "sys::personality::dwarf::eh::round_up"
  },
  {
    "file": "std/src/sys/process/env.rs",
    "func": "<sys::process::env::CommandEnv as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ExitCode as core::convert::From<u8>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::ProgramKind as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<io::stdio::Stderr>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fd::unix::FileDesc>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::fs::unix::File>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "<sys::process::unix::common::Stdio as core::convert::From<sys::pal::unix::pipe::AnonPipe>>::from"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ChildStdio::fd"
  },
  {
    "file": "std/src/sys/process/unix/common.rs",
    "func": "sys::process::unix::common::ExitCode::as_i32"
  },
  {
    "file": "std/src/sys/process/unix/common/cstring_array.rs",
    "func": "sys::process::unix::common::cstring_array::CStringArray::with_capacity"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::convert::From<i32>>::from"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatus as core::default::Default>::default"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "<sys::process::unix::unix::ExitStatusError as core::convert::Into<sys::process::unix::unix::ExitStatus>>::into"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::<impl sys::process::unix::common::Command>::posix_spawn::get_posix_spawn_addchdir"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::continued"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::core_dumped"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exit_ok"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::exited"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::from_waitid_siginfo"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::into_raw"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatus::stopped_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::ExitStatusError::code"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::id"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::kill"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::new"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::send_signal"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::try_wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::Process::wait"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::into_pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::linux_child_ext::<impl os::linux::process::ChildExt for process::Child>::pidfd"
  },
  {
    "file": "std/src/sys/process/unix/unix.rs",
    "func": "sys::process::unix::unix::signal_string"
  },
  {
    "file": "std/src/sys/random/linux.rs",
    "func": "sys::random::linux::hashmap_random_keys"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stderr as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdin as io::Read>::is_read_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::flush"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "<sys::stdio::unix::Stdout as io::Write>::is_write_vectored"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stderr::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdin::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::Stdout::new"
  },
  {
    "file": "std/src/sys/stdio/unix.rs",
    "func": "sys::stdio::unix::panic_output"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::new"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_all"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::notify_one"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_optional_timeout"
  },
  {
    "file": "std/src/sys/sync/condvar/futex.rs",
    "func": "sys::sync::condvar::futex::Condvar::wait_timeout"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::lock_contended"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::new"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::spin"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::try_lock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::unlock"
  },
  {
    "file": "std/src/sys/sync/mutex/futex.rs",
    "func": "sys::sync::mutex::futex::Mutex::wake"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::is_completed"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::new"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::set_state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::state"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::Once::wait"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::is_poisoned"
  },
  {
    "file": "std/src/sys/sync/once/futex.rs",
    "func": "sys::sync::once::futex::OnceState::poison"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::downgrade"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::new"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::read_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::spin_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_read"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::try_write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::wake_writer_or_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_contended"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::RwLock::write_unlock"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_reached_max_readers"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_readers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::has_writers_waiting"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_read_lockable_after_wakeup"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_unlocked"
  },
  {
    "file": "std/src/sys/sync/rwlock/futex.rs",
    "func": "sys::sync::rwlock::futex::is_write_locked"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::park_timeout"
  },
  {
    "file": "std/src/sys/sync/thread_parking/futex.rs",
    "func": "sys::sync::thread_parking::futex::Parker::unpark"
  },
  {
    "file": "std/src/sys/thread_local/destructors/list.rs",
    "func": "sys::thread_local::destructors::list::run"
  },
  {
    "file": "std/src/sys/thread_local/guard/key.rs",
    "func": "sys::thread_local::guard::key::enable"
  },
  {
    "file": "std/src/sys/thread_local/key/unix.rs",
    "func": "sys::thread_local::key::unix::destroy"
  },
  {
    "file": "std/src/sys/thread_local/mod.rs",
    "func": "<sys::thread_local::abort_on_dtor_unwind::DtorUnwindGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/sys/thread_local/native/eager.rs",
    "func": "<sys::thread_local::native::eager::State as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "hash::random::RandomState::new::KEYS::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sync::mpmc::context::Context::with::CONTEXT::__init"
  },
  {
    "file": "std/src/sys/thread_local/native/mod.rs",
    "func": "sys::thread_local::native::LocalPointer::__new"
  },
  {
    "file": "std/src/sys_common/mod.rs",
    "func": "sys_common::mul_div_u64"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "<sys_common::wtf8::CodePoint as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_char"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::from_u32_unchecked"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_char"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_char_lossy"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_lead_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_trail_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::CodePoint::to_u32"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8::empty_box"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::new"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::Wtf8Buf::with_capacity"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate"
  },
  {
    "file": "std/src/sys_common/wtf8.rs",
    "func": "sys_common::wtf8::decode_surrogate_pair"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_or_unnamed"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::current_os_id"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::drop_current"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::get_or_init"
  },
  {
    "file": "std/src/thread/current.rs",
    "func": "thread::current::id::set"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "<thread::local::AccessError as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/local.rs",
    "func": "thread::local::panic_access_error"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::PanicGuard as core::ops::Drop>::drop"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "<thread::ThreadId as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::Builder::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::as_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::from_u64"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::ThreadId::new::exhausted"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::_assert_sync_and_send"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::available_parallelism"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::get"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::main_thread::set"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::panicking"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::park_timeout_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_ms"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::sleep_until"
  },
  {
    "file": "std/src/thread/mod.rs",
    "func": "thread::yield_now"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::ChildSpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/thread/spawnhook.rs",
    "func": "<thread::spawnhook::SpawnHooks as core::default::Default>::default"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::Sub>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::Instant as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::Ord>::cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Add<core::time::Duration>>::add"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::AddAssign<core::time::Duration>>::add_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::Sub<core::time::Duration>>::sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as core::ops::SubAssign<core::time::Duration>>::sub_assign"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::FromInner<sys::pal::unix::time::SystemTime>>::from_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTime as sys_common::IntoInner<sys::pal::unix::time::SystemTime>>::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::clone::Clone>::clone"
  },
  {
    "file": "std/src/time.rs",
    "func": "<time::SystemTimeError as core::error::Error>::description"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::into_inner"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::Instant::saturating_duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_add"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::checked_sub"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::duration_since"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::elapsed"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTime::now"
  },
  {
    "file": "std/src/time.rs",
    "func": "time::SystemTimeError::duration"
  },
  {
    "file": "std_detect/src/detect/bit.rs",
    "func": "detect::bit::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::cmp::PartialEq>::eq"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "<detect::cache::Initializer as core::default::Default>::default"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Cache::uninitialized"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::set"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::Initializer::unset"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::detect_and_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::do_initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::initialize"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::set_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::test_bit"
  },
  {
    "file": "std_detect/src/detect/cache.rs",
    "func": "detect::cache::unset_bit"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "<detect::arch::x86::Feature as core::clone::Clone>::clone"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::Feature::to_str"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::adx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::aes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_avx512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_complex"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_fp8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_int8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tf32"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_tile"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::amx_transpose"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bf16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bitalg"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512bw"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512cd"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512dq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512er"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512f"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512fp16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512ifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512pf"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vbmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vp2intersect"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avx512vpopcntdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxifma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxneconvert"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint16"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::avxvnniint8"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::bmi2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::cmpxchg16b"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ermsb"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::f16c"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fma"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::fxsr"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::gfni"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::kl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::lzcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::mmx"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movbe"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::movrs"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::pclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::popcnt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdrand"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rdseed"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::rtm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sha512"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sm4"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_1"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4_2"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::sse4a"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::ssse3"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tbm"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::tsc"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vaes"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::vpclmulqdq"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::widekl"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xop"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsave"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsavec"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaveopt"
  },
  {
    "file": "std_detect/src/detect/macros.rs",
    "func": "detect::arch::x86::__is_feature_detected::xsaves"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::check_for"
  },
  {
    "file": "std_detect/src/detect/mod.rs",
    "func": "detect::features"
  },
  {
    "file": "std_detect/src/detect/os/x86.rs",
    "func": "detect::os::detect_features"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m128i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m256i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512bh::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512d::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512h::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::as_mut_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/macros.rs",
    "func": "core_arch::x86::__m512i::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8 as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::f64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::i8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::bool_to_internal"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::m8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u16x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u32x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x1::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u64x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x16::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x2::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x32::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x4::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x64::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::as_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::extract"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::from_array"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::new"
  },
  {
    "file": "stdarch/crates/core_arch/src/simd.rs",
    "func": "core_arch::simd::u8x8::splat"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_lzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/abm.rs",
    "func": "core_arch::x86::abm::_popcnt32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarry_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_addcarryx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/adx.rs",
    "func": "core_arch::x86::adx::_subborrow_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdec_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesdeclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesenclast_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/aes.rs",
    "func": "core_arch::x86::aes::_mm_aesimc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd256_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castpd_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps256_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castps_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_castsi256_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtsi256_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_setzero_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testnzc_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_testz_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_undefined_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroall"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zeroupper"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextpd128_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextps128_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm256_zextsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_broadcast_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testnzc_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx.rs",
    "func": "core_arch::x86::avx::_mm_testz_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_and_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_andnot_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_or_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_permutevar8x32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm256_xor_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastsi128_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx2.rs",
    "func": "core_arch::x86::avx2::_mm_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtness_sbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_cvtsbh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bf16.rs",
    "func": "core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm256_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm512_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bitalg.rs",
    "func": "core_arch::x86::avx512bitalg::_mm_popcnt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtmask32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_cvtu32_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kadd_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kand_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kandn_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_knot_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kortestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestc_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_ktestz_mask64_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxnor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_kxor_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm256_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bslli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_bsrli_epi128::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_kunpackw"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm512_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_blend_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mov_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movepi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_movm_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutex2var_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_permutexvar_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_and_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_reduce_or_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_sllv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srav_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_srlv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_test_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi16_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512bw.rs",
    "func": "core_arch::x86::avx512bw::_mm_testn_epi8_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmb_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_broadcastmw_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_conflict_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512cd.rs",
    "func": "core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtmask8_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_cvtu32_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kadd_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kand_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kandn_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_knot_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kortestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestc_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_ktestz_mask8_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxnor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_kxor_mask8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm256_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm512_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mask_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_maskz_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movepi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_movm_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512dq.rs",
    "func": "core_arch::x86::avx512dq::_mm_mullo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtmask16_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_cvtu32_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kand_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kandn_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_knot_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestc_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kortestz_mask16_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxnor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_kxor_mask16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm256_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_and_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_andnot_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd512_pd256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castpd_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps512_ps256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castps_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_castsi512_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtsi512_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_int2mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kand"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kandn"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kmov"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_knot"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kortestz"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kunpackb"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxnor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_kxor"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask2int"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_abs_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_mullox_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_or_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_permutexvar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_reduce_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr4_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_setzero_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_xor_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd128_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextpd256_pd512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps128_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextps256_ps512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi128_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm512_zextsi256_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvti32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttsd_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvttss_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtu32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask2_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask3_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_blend_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_mask_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_abs_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_and_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_andnot_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_broadcastss_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_compress_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvttps_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_expand_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_getexp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mov_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutevar_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_set1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sllv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_srlv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_maskz_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_max_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_min_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_or_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_permutex2var_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rcp14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rolv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rorv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_rsqrt14_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_scalef_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_sra_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_srav_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_test_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi32_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_testn_epi64_mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512f.rs",
    "func": "core_arch::x86::avx512f::_mm_xor_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph256_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castph_si256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_castsi256_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm256_zextph128_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph512_ph256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castph_si512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_castsi512_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph128_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm512_zextph256_ph512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_abs_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castph_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_castsi128_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_comineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvti32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi128_si16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtsi16_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_i32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvttsh_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtu32_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_blend_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mask_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_add_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_conj_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_div_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fmul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_getexp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_maskz_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_max_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_min_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_move_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_pch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sch"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_mul_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutex2var_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_permutexvar_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rcp_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_add_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_max_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_min_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_reduce_mul_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_rsqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_scalef_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set1_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_set_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setr_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_setzero_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sqrt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_sub_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomieq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomige_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomigt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomile_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomilt_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_ucomineq_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512fp16.rs",
    "func": "core_arch::x86::avx512fp16::_mm_undefined_ph"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512ifma.rs",
    "func": "core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutex2var_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi.rs",
    "func": "core_arch::x86::avx512vbmi::_mm_permutexvar_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shldv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vbmi2.rs",
    "func": "core_arch::x86::avx512vbmi2::_mm_shrdv_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpbuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwsuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuud_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_dpwuuds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vnni.rs",
    "func": "core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avx512vpopcntdq.rs",
    "func": "core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/avxneconvert.rs",
    "func": "core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_andn_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr2_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_bextr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_blsr_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_mm_tzcnt_32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi1.rs",
    "func": "core_arch::x86::bmi1::_tzcnt_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_bzhi_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_mulx_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pdep_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bmi2.rs",
    "func": "core_arch::x86::bmi2::_pext_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/bswap.rs",
    "func": "core_arch::x86::bswap::_bswap"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__cpuid_count"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/cpuid.rs",
    "func": "core_arch::x86::cpuid::__get_cpuid_max"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__readeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/eflags.rs",
    "func": "core_arch::x86::eflags::__writeeflags"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm256_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/f16c.rs",
    "func": "core_arch::x86::f16c::_mm_cvtph_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm256_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmaddsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fmsubadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmadd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/fma.rs",
    "func": "core_arch::x86::fma::_mm_fnmsub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/gfni.rs",
    "func": "core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/kl.rs",
    "func": "core_arch::x86::kl::_mm_loadiwkey"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "<core_arch::x86::bf16 as clone::Clone>::clone"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x16>::as_m256h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x32>::as_m512h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f16x8>::as_m128h"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x16>::as_m512"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x4>::as_m128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f32x8>::as_m256"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x2>::as_m128d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x4>::as_m256d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::f64x8>::as_m512d"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::i8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x16>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x32>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u16x8>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x16>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x4>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256bh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u32x8>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x2>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x4>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u64x8>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x16>::as_m128i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x32>::as_m256i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::<impl core_arch::simd::u8x64>::as_m512i"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128::as_f32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128bh::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128d::as_f64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128h::as_f16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_i8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u16x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u32x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u64x2"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m128i::as_u8x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256::as_f32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256bh::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256d::as_f64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256h::as_f16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_i8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u16x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u32x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u64x4"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m256i::as_u8x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512::as_f32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512bh::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512d::as_f64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512h::as_f16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_i8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u16x32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u32x16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u64x8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::__m512i::as_u8x64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::from_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/mod.rs",
    "func": "core_arch::x86::bf16::to_bits"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdrand32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed16_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdrand.rs",
    "func": "core_arch::x86::rdrand::_rdseed32_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rdtsc.rs",
    "func": "core_arch::x86::rdtsc::_rdtsc"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xabort_code"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xbegin"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xend"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/rtm.rs",
    "func": "core_arch::x86::rtm::_xtest"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg1_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512msg2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sha512rnds2_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm256_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha1nexte_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg1_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256msg2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sha256rnds2_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm3msg2_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4key4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sha.rs",
    "func": "core_arch::x86::sha::_mm_sm4rnds4_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_GET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_MASK"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_EXCEPTION_STATE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SET_ROUNDING_MODE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_SHUFFLE"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_MM_TRANSPOSE4_PS"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_add_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_and_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_andnot_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpeq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpgt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmple_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmplt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpneq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnge_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpngt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnle_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpnlt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cmpunord_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_comineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_si2ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtsi32_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_f32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvtt_ss2si"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_cvttss_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_div_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_getcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_max_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_min_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_move_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movehl_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movelh_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_movemask_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_mul_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_or_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rcp_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_rsqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set1_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ps1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_set_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setcsr"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setr_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_setzero_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sqrt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_sub_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomieq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomige_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomigt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomile_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomilt_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_ucomineq_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_undefined_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpackhi_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_unpacklo_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse.rs",
    "func": "core_arch::x86::sse::_mm_xor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_add_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_adds_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_and_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_andnot_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_avg_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castpd_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castps_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_castsi128_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpeq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpgt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmple_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmplt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpneq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnge_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpngt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnle_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpnlt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cmpunord_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_comineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtepi32_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtpd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtps_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_f64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsd_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi128_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtsi32_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvtss_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttpd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttps_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_cvttsd_si32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_div_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_lfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_madd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_max_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mfence"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_min_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_move_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_movemask_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mul_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mulhi_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_mullo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_or_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_packus_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_pause"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sad_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set1_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_pd1"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_set_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setr_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_setzero_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sll_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_slli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sqrt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sra_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srl_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_srli_si128_impl::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_sub_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_subs_epu8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomieq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomige_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomigt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomile_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomilt_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_ucomineq_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_undefined_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpackhi_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_unpacklo_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse2.rs",
    "func": "core_arch::x86::sse2::_mm_xor_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_addsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hadd_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_hsub_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movedup_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_movehdup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse3.rs",
    "func": "core_arch::x86::sse3::_mm_moveldup_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_blendv_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_ceil_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cmpeq_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepi8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu16_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu32_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_cvtepu8_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_pd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ps"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_floor_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_max_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_min_epu32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_minpos_epu16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mul_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_mullo_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_packus_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_ones"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_all_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_test_mix_ones_zeros"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testnzc_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse41.rs",
    "func": "core_arch::x86::sse41::_mm_testz_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_cmpgt_epi64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse42.rs",
    "func": "core_arch::x86::sse42::_mm_crc32_u8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_extract_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/sse4a.rs",
    "func": "core_arch::x86::sse4a::_mm_insert_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_abs_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_alignr_epi8::mask"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadd_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hadds_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsub_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_hsubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_maddubs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_mulhrs_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_shuffle_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi16"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/ssse3.rs",
    "func": "core_arch::x86::ssse3::_mm_sign_epi8"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blci_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blcs_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsfill_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_blsic_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_t1mskc_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/tbm.rs",
    "func": "core_arch::x86::tbm::_tzmsk_u32"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm256_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdec_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesdeclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenc_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/vaes.rs",
    "func": "core_arch::x86::vaes::_mm512_aesenclast_epi128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xgetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86/xsave.rs",
    "func": "core_arch::x86::xsave::_xsetbv"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_lzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/abm.rs",
    "func": "core_arch::x86_64::abm::_popcnt64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarry_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_addcarryx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/adx.rs",
    "func": "core_arch::x86_64::adx::_subborrow_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/amx.rs",
    "func": "core_arch::x86_64::amx::_tile_release"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtmask64_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512bw.rs",
    "func": "core_arch::x86_64::avx512bw::_cvtu64_mask64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvti64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttsd_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvttss_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512f.rs",
    "func": "core_arch::x86_64::avx512f::_mm_cvtu64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvti64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_i64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvttsh_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/avx512fp16.rs",
    "func": "core_arch::x86_64::avx512fp16::_mm_cvtu64_sh"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_andn_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr2_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_bextr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_blsr_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_mm_tzcnt_64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi.rs",
    "func": "core_arch::x86_64::bmi::_tzcnt_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_bzhi_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_mulx_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pdep_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bmi2.rs",
    "func": "core_arch::x86_64::bmi2::_pext_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/bswap.rs",
    "func": "core_arch::x86_64::bswap::_bswap64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdrand64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/rdrand.rs",
    "func": "core_arch::x86_64::rdrand::_rdseed64_step"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtsi64_ss"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvtss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse.rs",
    "func": "core_arch::x86_64::sse::_mm_cvttss_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi128_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_sd"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvtsi64x_si128"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse2.rs",
    "func": "core_arch::x86_64::sse2::_mm_cvttsd_si64x"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/sse42.rs",
    "func": "core_arch::x86_64::sse42::_mm_crc32_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blci_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcmsk_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blcs_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsfill_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_blsic_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_t1mskc_u64"
  },
  {
    "file": "stdarch/crates/core_arch/src/x86_64/tbm.rs",
    "func": "core_arch::x86_64::tbm::_tzmsk_u64"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::clone::Clone>::clone"
  },
  {
    "file": "unwind/src/libunwind.rs",
    "func": "<libunwind::_Unwind_Reason_Code as rustc_std_workspace_core::cmp::PartialEq>::eq"
  }
]